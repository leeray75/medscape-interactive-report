{"version":3,"sources":["webpack:///webpack/bootstrap 718accb9422c147473f2","webpack:///./node_modules/plotly.js/src/lib/index.js","webpack:///./node_modules/plotly.js/node_modules/d3/d3.js","webpack:///./node_modules/plotly.js/src/registry.js","webpack:///./node_modules/plotly.js/src/components/color/index.js","webpack:///./node_modules/fast-isnumeric/index.js","webpack:///./node_modules/plotly.js/src/components/drawing/index.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/axes.js","webpack:///./node_modules/plotly.js/src/plotly.js","webpack:///./node_modules/plotly.js/src/plots/plots.js","webpack:///./node_modules/plotly.js/src/constants/numerical.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/constants.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/axis_ids.js","webpack:///./node_modules/plotly.js/src/lib/extend.js","webpack:///./node_modules/plotly.js/src/plots/font_attributes.js","webpack:///./node_modules/plotly.js/src/lib/svg_text_utils.js","webpack:///./node_modules/plotly.js/src/constants/alignment.js","webpack:///./node_modules/plotly.js/src/traces/scatter/subtypes.js","webpack:///./node_modules/tinycolor2/tinycolor.js","webpack:///./node_modules/plotly.js/src/components/dragelement/index.js","webpack:///./node_modules/plotly.js/src/components/color/attributes.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/layout_attributes.js","webpack:///./node_modules/plotly.js/src/components/errorbars/index.js","webpack:///./node_modules/plotly.js/src/components/fx/index.js","webpack:///./node_modules/plotly.js/src/components/colorscale/scales.js","webpack:///./node_modules/plotly.js/src/plot_api/edit_types.js","webpack:///./node_modules/plotly.js/src/components/colorscale/has_colorscale.js","webpack:///./node_modules/plotly.js/src/constants/xmlns_namespaces.js","webpack:///./node_modules/plotly.js/src/lib/setcursor.js","webpack:///./node_modules/plotly.js/src/plots/array_container_defaults.js","webpack:///./node_modules/plotly.js/src/lib/loggers.js","webpack:///./node_modules/plotly.js/src/lib/is_plain_object.js","webpack:///./node_modules/plotly.js/src/plots/layout_attributes.js","webpack:///./node_modules/plotly.js/src/constants/interactions.js","webpack:///./node_modules/plotly.js/src/traces/scatter/attributes.js","webpack:///./node_modules/plotly.js/src/components/fx/constants.js","webpack:///./node_modules/plotly.js/lib/core.js","webpack:///./node_modules/plotly.js/src/plot_api/plot_config.js","webpack:///./node_modules/plotly.js/src/plot_api/plot_schema.js","webpack:///./node_modules/plotly.js/src/plots/attributes.js","webpack:///./node_modules/plotly.js/src/lib/nested_property.js","webpack:///./node_modules/plotly.js/src/components/errorbars/attributes.js","webpack:///./node_modules/plotly.js/src/components/colorbar/attributes.js","webpack:///./node_modules/plotly.js/src/components/colorscale/defaults.js","webpack:///./node_modules/plotly.js/src/components/legend/anchor_utils.js","webpack:///./node_modules/plotly.js/src/components/annotations/attributes.js","webpack:///./node_modules/plotly.js/src/components/sliders/constants.js","webpack:///./node_modules/plotly.js/src/lib/noop.js","webpack:///./node_modules/plotly.js/src/components/fx/attributes.js","webpack:///./node_modules/plotly.js/src/lib/is_array.js","webpack:///./node_modules/plotly.js/src/lib/mod.js","webpack:///./node_modules/plotly.js/src/lib/to_log_range.js","webpack:///./node_modules/plotly.js/src/lib/throttle.js","webpack:///./node_modules/plotly.js/src/plots/animation_attributes.js","webpack:///./node_modules/plotly.js/src/components/drawing/attributes.js","webpack:///./node_modules/plotly.js/src/components/colorscale/is_valid_scale.js","webpack:///./node_modules/plotly.js/src/components/colorscale/flip_scale.js","webpack:///./node_modules/plotly.js/src/components/colorscale/calc.js","webpack:///./node_modules/plotly.js/src/traces/scatter/constants.js","webpack:///./node_modules/plotly.js/src/components/errorbars/defaults.js","webpack:///./node_modules/plotly.js/src/components/titles/index.js","webpack:///./node_modules/plotly.js/build/ploticon.js","webpack:///./node_modules/plotly.js/src/snapshot/download.js","webpack:///./node_modules/plotly.js/src/snapshot/helpers.js","webpack:///./node_modules/plotly.js/src/snapshot/tosvg.js","webpack:///./node_modules/plotly.js/src/snapshot/svgtoimg.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/plotly.js/src/lib/events.js","webpack:///./node_modules/plotly.js/src/components/fx/helpers.js","webpack:///./node_modules/plotly.js/src/components/fx/layout_attributes.js","webpack:///./node_modules/plotly.js/src/components/fx/hover.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/index.js","webpack:///./node_modules/plotly.js/src/components/legend/helpers.js","webpack:///./node_modules/plotly.js/src/components/annotations/draw.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/include_components.js","webpack:///./node_modules/plotly.js/src/components/annotations3d/attributes.js","webpack:///./node_modules/plotly.js/src/components/shapes/helpers.js","webpack:///./node_modules/plotly.js/src/components/updatemenus/constants.js","webpack:///./node_modules/plotly.js/src/components/rangeslider/attributes.js","webpack:///./node_modules/plotly.js/src/components/rangeselector/attributes.js","webpack:///./node_modules/plotly.js/src/traces/bar/attributes.js","webpack:///./node_modules/plotly.js/src/lib/push_unique.js","webpack:///./node_modules/plotly.js/src/plot_api/container_array_match.js","webpack:///./node_modules/plotly.js/src/components/colorscale/get_scale.js","webpack:///./node_modules/plotly.js/src/components/colorscale/default_scale.js","webpack:///./node_modules/plotly.js/src/components/colorscale/is_valid_scale_array.js","webpack:///./node_modules/plotly.js/src/lib/regex.js","webpack:///./node_modules/plotly.js/src/lib/angles.js","webpack:///./node_modules/plotly.js/src/lib/search.js","webpack:///./node_modules/plotly.js/src/lib/matrix.js","webpack:///./node_modules/plotly.js/src/lib/get_graph_div.js","webpack:///./node_modules/plotly.js/src/plots/frame_attributes.js","webpack:///./node_modules/plotly.js/src/components/colorscale/color_attributes.js","webpack:///./node_modules/plotly.js/src/components/colorscale/attributes.js","webpack:///./node_modules/plotly.js/src/components/colorscale/index.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/tick_value_defaults.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/tick_mark_defaults.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/tick_label_defaults.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/set_convert.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/axis_autotype.js","webpack:///./node_modules/plotly.js/src/components/modebar/index.js","webpack:///./node_modules/plotly.js/src/plot_api/to_image.js","webpack:///./node_modules/has-hover/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/plotly.js/src/lib/queue.js","webpack:///./node_modules/plotly.js/src/plots/polar/legacy/micropolar.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/graph_interact.js","webpack:///./node_modules/plotly.js/src/components/fx/hoverlabel_defaults.js","webpack:///./node_modules/plotly.js/src/lib/polygon.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/scale_zoom.js","webpack:///./node_modules/plotly.js/src/traces/scatter/xy_defaults.js","webpack:///./node_modules/plotly.js/src/traces/scatter/arrays_to_calcdata.js","webpack:///./node_modules/plotly.js/src/traces/scatter/calc_selection.js","webpack:///./node_modules/plotly.js/src/traces/scatter/colorbar.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/axis_defaults.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/position_defaults.js","webpack:///./node_modules/plotly.js/src/traces/scatter/fill_hover_text.js","webpack:///./node_modules/plotly.js/src/components/legend/attributes.js","webpack:///./node_modules/plotly.js/src/components/legend/style.js","webpack:///./node_modules/plotly.js/src/components/annotations/arrow_paths.js","webpack:///./node_modules/plotly.js/src/components/annotations/common_defaults.js","webpack:///./node_modules/plotly.js/src/components/shapes/constants.js","webpack:///./node_modules/plotly.js/src/components/shapes/attributes.js","webpack:///./node_modules/plotly.js/src/components/images/attributes.js","webpack:///./node_modules/plotly.js/src/components/updatemenus/attributes.js","webpack:///./node_modules/plotly.js/src/plots/pad_attributes.js","webpack:///./node_modules/plotly.js/src/components/sliders/attributes.js","webpack:///./node_modules/plotly.js/src/components/rangeslider/constants.js","webpack:///./node_modules/plotly.js/src/components/rangeselector/button_attributes.js","webpack:///./node_modules/plotly.js/src/components/rangeselector/constants.js","webpack:///./node_modules/plotly.js/src/snapshot/cloneplot.js","webpack:///./node_modules/plotly.js/src/traces/bar/layout_attributes.js","webpack:///./node_modules/plotly.js/src/traces/bar/arrays_to_calcdata.js","webpack:///./src/js/charts/responsive-chart.js","webpack:///./src/js/charts/trace-data.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./src/js/index.js","webpack:///./src/js/charts/bar/index.js","webpack:///./node_modules/plotly.js/src/core.js","webpack:///./node_modules/plotly.js/src/lib/keyed_container.js","webpack:///./node_modules/plotly.js/src/lib/relative_attr.js","webpack:///./node_modules/plotly.js/src/lib/relink_private.js","webpack:///./node_modules/plotly.js/src/lib/ensure_array.js","webpack:///./node_modules/plotly.js/src/lib/coerce.js","webpack:///./node_modules/plotly.js/src/lib/dates.js","webpack:///./node_modules/plotly.js/src/lib/stats.js","webpack:///./node_modules/plotly.js/src/lib/geometry2d.js","webpack:///./node_modules/plotly.js/src/lib/localize.js","webpack:///./node_modules/plotly.js/src/lib/notifier.js","webpack:///./node_modules/plotly.js/src/lib/filter_unique.js","webpack:///./node_modules/plotly.js/src/lib/filter_visible.js","webpack:///./node_modules/plotly.js/src/lib/clean_number.js","webpack:///./node_modules/plotly.js/src/lib/identity.js","webpack:///./node_modules/plotly.js/src/plots/polar/legacy/area_attributes.js","webpack:///./node_modules/plotly.js/src/components/colorbar/has_colorbar.js","webpack:///./node_modules/plotly.js/src/components/colorbar/defaults.js","webpack:///./node_modules/plotly.js/src/components/colorscale/extract_scale.js","webpack:///./node_modules/plotly.js/src/components/colorscale/make_color_scale_func.js","webpack:///./node_modules/plotly.js/src/constants/string_mappings.js","webpack:///./node_modules/plotly.js/src/traces/scatter/make_bubble_size_func.js","webpack:///./node_modules/plotly.js/src/components/drawing/symbol_defs.js","webpack:///./node_modules/plotly.js/src/plots/polar/legacy/axis_attributes.js","webpack:///./node_modules/plotly.js/src/components/errorbars/calc.js","webpack:///./node_modules/plotly.js/src/components/errorbars/compute_error.js","webpack:///./node_modules/plotly.js/src/components/errorbars/plot.js","webpack:///./node_modules/plotly.js/src/components/errorbars/style.js","webpack:///./node_modules/plotly.js/src/plots/command.js","webpack:///./node_modules/plotly.js/src/components/modebar/manage.js","webpack:///./node_modules/plotly.js/src/components/modebar/modebar.js","webpack:///./node_modules/plotly.js/src/components/modebar/buttons.js","webpack:///./node_modules/plotly.js/src/snapshot/filesaver.js","webpack:///./node_modules/plotly.js/src/plot_api/plot_api.js","webpack:///./node_modules/is-browser/client.js","webpack:///./node_modules/plotly.js/src/plots/polar/legacy/index.js","webpack:///./node_modules/plotly.js/src/plots/polar/legacy/micropolar_manager.js","webpack:///./node_modules/plotly.js/src/plots/polar/legacy/undo_manager.js","webpack:///./node_modules/mouse-event-offset/index.js","webpack:///./node_modules/plotly.js/src/components/dragelement/align.js","webpack:///./node_modules/plotly.js/src/components/dragelement/cursor.js","webpack:///./node_modules/plotly.js/src/components/dragelement/unhover.js","webpack:///./node_modules/plotly.js/src/components/fx/layout_global_defaults.js","webpack:///./node_modules/plotly.js/src/components/fx/defaults.js","webpack:///./node_modules/plotly.js/src/components/fx/layout_defaults.js","webpack:///./node_modules/plotly.js/src/components/fx/calc.js","webpack:///./node_modules/plotly.js/src/lib/override_cursor.js","webpack:///./node_modules/plotly.js/src/components/fx/click.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/dragbox.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/select.js","webpack:///./node_modules/polybooljs/index.js","webpack:///./node_modules/polybooljs/lib/build-log.js","webpack:///./node_modules/polybooljs/lib/epsilon.js","webpack:///./node_modules/polybooljs/lib/intersecter.js","webpack:///./node_modules/polybooljs/lib/linked-list.js","webpack:///./node_modules/polybooljs/lib/segment-chainer.js","webpack:///./node_modules/polybooljs/lib/segment-selector.js","webpack:///./node_modules/polybooljs/lib/geojson.js","webpack:///./node_modules/plotly.js/src/plot_api/manage_arrays.js","webpack:///./node_modules/plotly.js/src/plot_api/helpers.js","webpack:///./node_modules/gl-mat4/fromQuat.js","webpack:///./node_modules/plotly.js/src/plot_api/subroutines.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/constraints.js","webpack:///./node_modules/es6-promise/dist/es6-promise.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/plotly.js/build/plotcss.js","webpack:///./node_modules/plotly.js/src/fonts/mathjax_config.js","webpack:///./node_modules/plotly.js/src/plot_api/set_plot_config.js","webpack:///./node_modules/plotly.js/src/plot_api/register.js","webpack:///./node_modules/plotly.js/src/plot_api/validate.js","webpack:///./node_modules/plotly.js/src/traces/scatter/index.js","webpack:///./node_modules/plotly.js/src/traces/scatter/defaults.js","webpack:///./node_modules/plotly.js/src/traces/scatter/marker_defaults.js","webpack:///./node_modules/plotly.js/src/traces/scatter/line_defaults.js","webpack:///./node_modules/plotly.js/src/traces/scatter/line_shape_defaults.js","webpack:///./node_modules/plotly.js/src/traces/scatter/text_defaults.js","webpack:///./node_modules/plotly.js/src/traces/scatter/fillcolor_defaults.js","webpack:///./node_modules/plotly.js/src/traces/scatter/clean_data.js","webpack:///./node_modules/plotly.js/src/traces/scatter/calc.js","webpack:///./node_modules/plotly.js/src/traces/scatter/colorscale_calc.js","webpack:///./node_modules/plotly.js/src/traces/scatter/plot.js","webpack:///./node_modules/plotly.js/src/traces/scatter/line_points.js","webpack:///./node_modules/plotly.js/src/traces/scatter/link_traces.js","webpack:///./node_modules/plotly.js/src/components/colorbar/draw.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/category_order_defaults.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/line_grid_defaults.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/ordered_categories.js","webpack:///./node_modules/plotly.js/src/components/colorbar/constants.js","webpack:///./node_modules/plotly.js/src/traces/scatter/style.js","webpack:///./node_modules/plotly.js/src/traces/scatter/hover.js","webpack:///./node_modules/plotly.js/src/traces/scatter/get_trace_color.js","webpack:///./node_modules/plotly.js/src/traces/scatter/select.js","webpack:///./node_modules/plotly.js/src/plots/get_data.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/attributes.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/layout_defaults.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/type_defaults.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/constraint_defaults.js","webpack:///./node_modules/plotly.js/src/plots/cartesian/transition_axes.js","webpack:///./node_modules/plotly.js/src/components/legend/index.js","webpack:///./node_modules/plotly.js/src/components/legend/defaults.js","webpack:///./node_modules/plotly.js/src/components/legend/draw.js","webpack:///./node_modules/plotly.js/src/components/legend/handle_click.js","webpack:///./node_modules/plotly.js/src/components/legend/constants.js","webpack:///./node_modules/plotly.js/src/components/legend/get_legend_data.js","webpack:///./node_modules/plotly.js/src/traces/pie/style_one.js","webpack:///./node_modules/plotly.js/src/traces/pie/helpers.js","webpack:///./node_modules/plotly.js/src/components/annotations/index.js","webpack:///./node_modules/plotly.js/src/components/annotations/draw_arrow_head.js","webpack:///./node_modules/plotly.js/src/components/annotations/click.js","webpack:///./node_modules/plotly.js/src/components/annotations/defaults.js","webpack:///./node_modules/plotly.js/src/components/annotations/annotation_defaults.js","webpack:///./node_modules/plotly.js/src/components/annotations/calc_autorange.js","webpack:///./node_modules/plotly.js/src/components/annotations/convert_coords.js","webpack:///./node_modules/plotly.js/src/components/annotations3d/index.js","webpack:///./node_modules/plotly.js/src/components/annotations3d/defaults.js","webpack:///./node_modules/plotly.js/src/components/annotations3d/convert.js","webpack:///./node_modules/plotly.js/src/components/annotations3d/draw.js","webpack:///./node_modules/plotly.js/src/plots/gl3d/project.js","webpack:///./node_modules/plotly.js/src/components/shapes/index.js","webpack:///./node_modules/plotly.js/src/components/shapes/draw.js","webpack:///./node_modules/plotly.js/src/components/shapes/defaults.js","webpack:///./node_modules/plotly.js/src/components/shapes/shape_defaults.js","webpack:///./node_modules/plotly.js/src/components/shapes/calc_autorange.js","webpack:///./node_modules/plotly.js/src/components/images/index.js","webpack:///./node_modules/plotly.js/src/components/images/defaults.js","webpack:///./node_modules/plotly.js/src/components/images/draw.js","webpack:///./node_modules/plotly.js/src/components/images/convert_coords.js","webpack:///./node_modules/plotly.js/src/components/updatemenus/index.js","webpack:///./node_modules/plotly.js/src/components/updatemenus/defaults.js","webpack:///./node_modules/plotly.js/src/components/updatemenus/draw.js","webpack:///./node_modules/plotly.js/src/components/updatemenus/scrollbox.js","webpack:///./node_modules/plotly.js/src/components/sliders/index.js","webpack:///./node_modules/plotly.js/src/components/sliders/defaults.js","webpack:///./node_modules/plotly.js/src/components/sliders/draw.js","webpack:///./node_modules/plotly.js/src/components/rangeslider/index.js","webpack:///./node_modules/plotly.js/src/components/rangeslider/defaults.js","webpack:///./node_modules/plotly.js/src/components/rangeslider/calc_autorange.js","webpack:///./node_modules/plotly.js/src/components/rangeslider/draw.js","webpack:///./node_modules/plotly.js/src/components/rangeselector/index.js","webpack:///./node_modules/plotly.js/src/components/rangeselector/defaults.js","webpack:///./node_modules/plotly.js/src/components/rangeselector/draw.js","webpack:///./node_modules/plotly.js/src/components/rangeselector/get_update_object.js","webpack:///./node_modules/plotly.js/src/locale-en.js","webpack:///./node_modules/plotly.js/src/locale-en-us.js","webpack:///./node_modules/plotly.js/src/snapshot/index.js","webpack:///./node_modules/plotly.js/src/snapshot/toimage.js","webpack:///./node_modules/plotly.js/lib/bar.js","webpack:///./node_modules/plotly.js/src/traces/bar/index.js","webpack:///./node_modules/plotly.js/src/traces/bar/defaults.js","webpack:///./node_modules/plotly.js/src/traces/bar/style_defaults.js","webpack:///./node_modules/plotly.js/src/traces/bar/layout_defaults.js","webpack:///./node_modules/plotly.js/src/traces/bar/calc.js","webpack:///./node_modules/plotly.js/src/traces/bar/set_positions.js","webpack:///./node_modules/plotly.js/src/traces/bar/sieve.js","webpack:///./node_modules/plotly.js/src/traces/bar/plot.js","webpack:///./node_modules/plotly.js/src/traces/bar/style.js","webpack:///./node_modules/plotly.js/src/traces/bar/hover.js","webpack:///./node_modules/plotly.js/src/traces/bar/select.js","webpack:///./src/js/charts/bar/horizontal.js","webpack:///./src/js/charts/bar/scss/horizontal.scss?7e9e","webpack:///./src/js/charts/bar/scss/horizontal.scss","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/js/charts/bar/vertical.js","webpack:///./src/js/charts/bar/scss/vertical.scss?368e","webpack:///./src/js/charts/bar/scss/vertical.scss"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","d3","isNumeric","numConstants","FP_SAFE","BADNUM","lib","nestedProperty","keyedContainer","relativeAttr","isPlainObject","isArray","mod","toLogRange","relinkPrivateKeys","ensureArray","coerceModule","valObjectMeta","coerce","coerce2","coerceFont","coerceHoverinfo","coerceSelectionMarkerOpacity","validate","datesModule","dateTime2ms","isDateTime","ms2DateTime","ms2DateTimeLocal","cleanDate","isJSDate","formatDate","incrementMonth","dateTick0","dfltRange","findExactDates","MIN_MS","MAX_MS","searchModule","findBin","sorterAsc","sorterDes","distinctVals","roundUp","statsModule","aggNums","len","mean","variance","stdev","interp","matrixModule","init2dArray","transposeRagged","dot","translationMatrix","rotationMatrix","rotationXYMatrix","apply2DTransform","apply2DTransform2","anglesModule","deg2rad","rad2deg","wrap360","wrap180","geom2dModule","segmentsIntersect","segmentDistance","getTextLocation","clearLocationCache","getVisibleSegment","findPointOnPath","extendModule","extendFlat","extendDeep","extendDeepAll","extendDeepNoArrays","loggersModule","log","warn","error","regexModule","counterRegex","counter","throttleModule","throttle","throttleDone","done","clearThrottle","clear","getGraphDiv","_","notifier","filterUnique","filterVisible","pushUnique","cleanNumber","ensureNumber","v","Number","noop","identity","swapAttrs","cont","attrList","part1","part2","length","attr","xp","replace","yp","temp","set","pauseEvent","e","stopPropagation","preventDefault","cancelBubble","raiseToTop","elem","parentNode","appendChild","cancelTransition","selection","transition","duration","constrain","v0","v1","Math","max","min","bBoxIntersect","a","b","pad","left","right","top","bottom","simpleMap","array","func","x1","x2","out","Array","randstr","existing","bits","base","undefined","digits","pow","res","Infinity","rem","floor","random","toString","parsed","parseInt","indexOf","OptionControl","opt","optname","self","optionList","_newoption","optObj","push","smooth","arrayIn","FWHM","round","j","k","alen","alen2","wlen","w","arrayOut","cos","PI","syncOrAsync","sequence","arg","finalStep","ret","continueAsync","fni","splice","then","promiseError","stripTrailingSlash","str","substr","noneOrAll","containerIn","containerOut","val","hasAny","hasAll","mergeArray","traceAttr","cd","cdAttr","imax","fillArray","fn","castOption","trace","ptNumber","astr","extractOption","calcPt","calcKey","traceKey","traceVal","tagSelected","calcTrace","ptNumber2cdIndex","ptIndex2ptNumber","selectedpoints","indexToPoints","_indexToPoints","pts","isCdIndexValid","ptIndex","cdIndex","selected","getTargetArray","transformOpts","target","minExtend","obj1","obj2","objOut","keys","charAt","slice","titleCase","toUpperCase","containsAny","fragments","isPlotDiv","el","el3","select","node","HTMLElement","size","classed","removeElement","elParent","removeChild","addStyleRule","selector","styleString","styleSheet","style","document","createElement","createTextNode","head","sheet","insertRule","addRule","isIE","window","navigator","msSaveBlob","isD3Selection","obj","objectFromPath","path","value","tmpObj","split","key","parts","match","dottedPropertyRegex","indexedPropertyRegex","expandObjectPaths","data","prop","datum","idx","dest","trailingPath","numSeparate","separators","separatethousands","Error","String","thousandsRe","decimalSep","thouSep","x","test","TEMPLATE_STRING_REGEX","SIMPLE_PROPERTY_REGEX","templateString","string","getterCache","dummy","subplotSort","numA","numB","charA","charCodeAt","charB","isNumA","isNumB","eventListenerOptionsSupported","supported","opts","addEventListener","removeEventListener","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","version","d3_arraySlice","d3_array","list","d3_document","this","d3_documentElement","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","Date","now","setProperty","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","lo","hi","arguments","mid","ascending","descending","f","extent","sum","quantile","values","H","h","median","numbers","sort","deviation","apply","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","t","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","map","entries","merge","arrays","merged","abs","d3_class","ctor","properties","d3_Map","create","range","start","stop","step","d3_range_integerScale","forEach","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","source","method","d3_vendorSymbol","d3_vendorPrefixes","prefixName","has","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","order","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","event","z","on","listener","concat","d3_eventPreventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","requote","d3_requote_re","d3_subclass","__proto__","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","d3_selection_selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","svg","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","d3_selection_dataNode","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","prefix","getAttributeNS","each","contains","getComputedStyle","getPropertyValue","text","textContent","html","innerHTML","append","insert","before","insertBefore","bind","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","update","enter","exit","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","$","d3_selection_onFilter","upgroup","j0","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","scrollX","scrollY","ctm","position","margin","padding","border","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","id","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","d3_sinh","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","g","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","q","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","r","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","typedResponse","parse","formatRow","formatValue","join","parseRows","Function","JSON","stringify","eol","EOL","EOF","rows","N","I","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","formatPrefix","precision","d3_format_re","d3_format_types","fromCharCode","X","toPrecision","toExponential","toFixed","d3_format_typeDefault","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","offset","dt","times","utc","d3_time_interval_utc","year","day","years","days","dayOfYear","interval","week","sunday","weeks","weekOfYear","sundayOfYear","d3_time_formatPads","-","0","d3_time_numberRe","d3_time_percentRe","d3_time_formatPad","fill","width","sign","d3_time_formatRe","names","d3_time_formatLookup","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberSunday","U","d3_time_parseWeekNumberMonday","W","d3_time_parseFullYear","d3_time_parseYear","d3_time_parseZone","Z","d3_time_parseMonthNumber","d3_time_parseDay","d3_time_parseDayOfYear","d3_time_parseHour24","d3_time_parseMinutes","M","d3_time_parseSeconds","d3_time_parseMilliseconds","L","d3_time_zone","zs","zh","zm","d3_time_parseLiteralPercent","d3_time_formatMulti","formats","locale","numberFormat","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","specifier","align","zfill","comma","suffix","integer","exponent","zcomma","fullSuffix","negative","unit","after","lastIndexOf","d3_locale_numberFormat","timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","d3_time_formats","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_periodLookup","d3_time_dayRe","d3_time_dayLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","mondayOfYear","Y","%","d3_locale_timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","lines","rejoin","d3_geo_clipAntimeridian","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","clipExtent","output","valid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBufferCircle","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v00","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","context","projectStream","contextStream","cacheStream","pointRadius","pointCircle","pointLineStart","lineEndPolygon","moveTo","lineTo","closePath","transform","methods","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiCreateBeach","site","beach","d3_geom_voronoiRedBlackNode","edge","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","sx","sy","children","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","ease","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","pie","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","tops","bottoms","default","silhouette","wiggle","s2","s3","o0","expand","zero","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","sticky","mode","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","Loggers","ExtendModule","basePlotAttributes","baseLayoutAttributes","findArrayRegexps","_module","layoutAttributes","arrayAttrRegexps","_arrayAttrRegexps","layoutArrayRegexes","mergeComponentAttrsToTrace","componentName","traceType","componentSchema","componentsRegistry","schema","traces","traceAttrs","attributes","mergeComponentAttrsToTransform","transformType","transforms","transformAttrs","transformsRegistry","mergeComponentAttrsToSubplot","subplotName","subplots","subplotModule","subplotsRegistry","subplotAttrs","subplotAttr","componentLayoutAttrs","getTraceType","allCategories","allTypes","layoutArrayContainers","traceLayoutAttributes","localeRegistry","register","thisType","categoriesIn","meta","categoryObj","categories","registerSubplot","plotType","registerComponent","_isLinkedToArray","registerTransform","getModule","traceIs","category","dflt","getTransformIndices","indices","hasTransform","getComponentMethod","registerLocale","baseLocale","newDict","dictionary","newFormat","hasDict","hasFormat","locales","localeObj","baseLocaleObj","tinycolor","colorAttrs","defaults","defaultLine","lightLine","cleanOne","valTrim","rgba","rgbStr","tinyRGB","tc","toRgb","cstr","opacity","getAlpha","addOpacity","op","combine","front","fc","toRgbString","bcflat","fcflat","contrast","lightAmount","darkAmount","isDark","lighten","darken","stroke","stroke-opacity","fill-opacity","el0","original","allBlankCharCodes","Registry","Color","Colorscale","Lib","svgTextUtils","xmlnsNamespaces","LINE_SPACING","DESELECTDIM","subTypes","makeBubbleSizeFn","drawing","font","family","setPosition","setSize","setRect","translatePoint","sel","xa","ya","c2p","nodeName","translatePoints","hideOutsideRangePoint","xcalendar","ycalendar","isPtWithinRange","hideOutsideRangePoints","traceGroups","subplot","_hasClipOnAxisFalse","xaxis","yaxis","crispRound","gd","lineWidth","_context","staticPlot","singleLineStyle","lw","ld","lw1","dash","dashLine","lineGroupStyle","dashStyle","stroke-dasharray","stroke-width","dlw","singleFillStyle","fillcolor","fillGroupStyle","shape","SYMBOLDEFS","symbolNames","symbolFuncs","symbolNeedLines","symbolNoDot","symbolNoFill","symbolList","symDef","needLine","noDot","noFill","MAXSYMBOL","DOTPATH","makePointPath","symbolNumber","vbase","HORZGRADIENT","VERTGRADIENT","gradient","gradientID","color1","color2","_fullLayout","_defs","tc1","tc2","stop-color","stop-opacity","initGradients","gradientsGroup","singlePointStyle","markerScale","lineScale","marker","markerLine","sizeFn","ms","isBubble","mrc","mx","om","mo","fillColor","lineColor","perPointGradient","so","outlierwidth","outliercolor","mlw","mlcc","mlc","mcc","mc","markerGradient","gradientType","mgt","gradientColor","mgc","_uid","uid","pointStyle","tryColorscale","selectedPointStyle","selectedAttrs","unselectedAttrs","unselected","selectedMarker","unselectedMarker","smo","usmo","smoIsDefined","usmoIsDefined","mo2","pt","dmo","dmoIsDefined","smc","usmc","mc2","sms","usms","smsIsDefined","usmsIsDefined","mrc2","scl","colorscale","colorArray","makeColorScaleFunc","extractScale","cmin","cmax","TEXTOFFSETSIGN","middle","textPointPosition","textPosition","fontSize","markerRadius","numLines","lineCount","extracTextFontSize","ts","textfont","textPointStyle","pos","tp","textposition","tf","convertToTspans","selectedTextStyle","stc","CatmullRomExp","makeTangent","prevpt","thispt","nextpt","smoothness","d1x","d1y","d2x","d2y","d1a","d2a","numx","numy","denom1","denom2","smoothopen","smoothclosed","pLast","STEPPATH","hv","vh","hvh","vhv","STEPLINEAR","onestep","makeTester","tester","svgAttrs","height","z-index","testref","savedBBoxes","savedBBoxesCount","nodeHash","inputText","bBox","inTester","hash","testNode","innerNode","innerBB","cloneNode","positionText","testRect","refRect","setClipUrl","localId","href","getTranslate","element","setTranslate","getScale","setScale","setPointGroupScale","TEXT_POINT_LAST_TRANSLATION_RE","setTextPointsScale","xScale","yScale","existingTransform","Titles","Drawing","constants","ONEAVGYEAR","ONEAVGMONTH","ONEDAY","ONEHOUR","ONEMIN","ONESEC","MINUS_SIGN","MID_SHIFT","axes","setConvert","autoType","axisIds","id2name","cleanId","listIds","getFromId","getFromTrace","coerceRef","extraOption","axLetter","axlist","_subplots","refAttr","attrDef","valType","coercePosition","axRef","cleanPos","fraction2r","cleanPosition","getDataConversions","targetArray","d2cTarget","_categories","d2c","c2d","toNum","getDataToCoordFunc","counterLetter","minDtick","newDiff","newFirst","allow","_minDtick","_forceTick0","getAutoRange","newRange","minmin","_min","maxmax","_max","minpt","maxpt","minbest","maxbest","dp","dv","mbest","axReverse","rng","r2l","autorange","_length","rangemode","l2r","doAutoRange","hasDeps","_r","_rl","axIn","_input","saveRangeInitial","overwrite","axList","hasOneAxisChanged","isNew","_rangeInitial","hasChanged","saveShowSpikeInitial","allSpikesEnabled","_showSpikeInitial","showspikes","_showspikes","_cartesianSpikesEnabled","options","_m","dmin","dmax","ppadiplus","ppadiminus","includeThis","vmin","vmax","extrappad","padded","tozero","_inputDomain","ppadplus","getPad","ppadminus","ppad","vpadplus","vpad","vpadminus","addItem","item","c2l","goodNumber","autoBin","nbins","is2d","calendar","size0","dummyAx","dataMin","dataMax","_count","distinctData","msexp","minDiff","minSize","c2r","autoTicks","binEnd","bincount","binStart","tickIncrement","tickFirst","dtick","edgecount","midcount","intcount","blankCount","nearEdge","dataCount","binshift","autoShiftNumericBins","stats","exactDays","numMonths","exactYears","exactMonths","nextBinStart","autoShiftMonthBins","calcTicks","tickmode","minPx","nt","nticks","tickfont","_id","_name","tick0","autoTickRound","vali","vals","tickvals","ticktext","ticksOut","r0expanded","r1expanded","tickMin","tickMax","tickVal2l","d2l_noadd","d2l","tickText","tickTextObj","arrayTicks","_tmin","axrev","endtick","xPrevious","maxTicks","_tmax","_prevDateHead","_inCalcTicks","roundBase10","roundBase24","roundBase60","roundDays","roundLog1","roundLog2","roundAngles","roundDTick","roughDTick","roundingSet","_tickexponent","_tickround","tick0ms","tick0str","tick0len","tick1len","r2d","maxend","rangeexp","isSIFormat","exponentformat","beyondSI","fontColor","getBase","roughX2","olddtick","axSign","tType","dtSigned","tickset","frac","sRound","tmin","dtNum","mult","newDTick","cnt","hover","hideexp","arrayMode","extraPrecision","isHidden","showAttr","first_or_last","last","showexponent","tr","fmt","hoverformat","getTickFormat","headStr","dateStr","_dateFormat","splitIndex","tickformat","numFormat","firstChar","formatLog","tt","formatCategory","thetaunit","num","almostEq","findPrecision","gcd","findGCD","num2frac","isNeg","formatAngle","formatLinear","tickprefix","showtickprefix","ticksuffix","showticksuffix","hoverLabelText","val2","logOffScale","SIPREFIXES","exponentFormat","fmtoverride","tickRound","_numFormat","signedExponent","_separators","mergeAxisGroups","intoSet","fromSet","swapAxisGroup","xIds","yIds","xFullAxes","yFullAxes","allAxKeys","noSwapAttrs","numericTypes","keyi","xVal","yVal","allEqual","coerceLinearX","coerceLinearY","xVali","yVali","swapAxisAttrs","_dfltTitle","annotations","ann","xref","yref","dfltTitle","np","tickstop","convertFn","leftDtick","rightDtick","convertToMs","compareLogTicks","leftPriority","rightPriority","isProperLogStop","isLeftDtickNull","isRightDtickNull","isDtickInRangeLeft","isDtickInRangeRight","tickformatstops","dtickrange","getSubplots","subplotObj","allSubplots","gl2d","findSubplotsWithAxis","aParts","bParts","axMatch","subplotsWithAxis","sp","makeClipPaths","fullLayout","fullWidth","_offset","fullHeight","xaList","yaList","clipList","axClips","_clips","doTicks","axid","skipTitle","independent","_paper","plotinfo","_plots","xaxislayer","yaxislayer","gridlayer","zerolinelayer","_infolayer","axDone","sides","transfn","tickpathfn","datafn","mirror","tcls","gcls","zcls","linewidth","labelStandoff","ticklen","labelShift","gridWidth","gridwidth","zeroLineWidth","zerolinewidth","tickWidth","tickwidth","_counterangle","caRad","showticklabels","showline","_transfn","l2p","axside","side","ticksign","_tickFilter","valsClipped","clipEnds","drawTicks","_axislayer","_pos","_counteraxis","drawGrid","_gridlayer","_zerolinelayer","drawLabels","_has","finishedGrids","counterAxis","mainCounterID","_mainAxis","mainSubplot","_mainSubplot","mainPlotinfo","tickSubplots","mainSign","tickpath","_mainLinePosition","_anchorAxis","_mainMirrorPosition","_linepositions","linepositions","tickPathSide","sidei","tsign","tickcolor","labelx","labely","labelanchor","labelpos0","flipit","tickLabels","drawAxTitle","calcBoundingBox","tickangle","_labelShift","_labelStandoff","_pad","_labelx","_labely","_labelanchor","maxFontSize","autoangle","labelsReady","positionLabels","anchor","thisLabel","mathjaxGroup","text-anchor","mjShift","gdBB","_boundingBox","gs","_size","fullRange","_counterSpan","extendRange","newPromise","_promises","_lastangle","Promise","all","lbbArray","avoidSelection","avoid","titlefont","translation","offsetLeft","offsetTop","titleStandoff","rangeslider","thickness","draw","propContainer","propName","placeholder","traceHasBarsOrFill","orientation","counteraxis","gridcontainer","zlcontainer","gridvals","gridpath","_gridpath","grid","showgrid","zeroline","gridcolor","hasBarsOrFill","_fullData","showZl","zl","idSort","zerolinecolor","swap","axGroups","groupsi","groupj","group0","makeAxisGroups","defaultConfig","Plots","Axes","ModeBar","Plotly","PlotSchema","axisIDs","plots","animationAttrs","frameAttrs","fontAttrs","fontWeight","collectableSubplotTypes","ErrorBars","commandModule","remapTransformedArrays","cd0","newTrace","oldTrace","arrayAttrs","_arrayAttrs","transformedArrayHash","executeAPICommand","computeAPICommandBindings","manageCommandObserver","hasSimpleAPICommandBindings","redrawText","resolve","calcdata","previousPromises","reject","display","_redrawTimer","oldchanged","autoplay","autosize","addLinks","showLink","showSources","linkContainer","font-family","font-size","pointer-events","attrs","getComputedTextLength","toolspan","spacespan","sourcespan","xlink:xlink:href","class","font-weight","linkText","sendData","sendDataToCloud","pathname","query","search","xlink:xlink:show","positionPlayWithData","emit","baseUrl","PLOTLYENV","BASE_URL","hiddenformDiv","hiddenform","action","graphJson","submit","supplyDefaults","oldFullLayout","newFullLayout","newLayout","oldFullData","newFullData","newData","_transitionData","createTransitionData","plot","colorbar","annotation","_traceWord","formatObj","formatDone","includeFormat","formatFinished","formatKeys","formatKey","formatj","en","getD3FormatObj","_initialAutoSizeIsDone","oldWidth","oldHeight","supplyLayoutGlobalDefaults","missingWidthOrHeight","autosizable","plotAutoSize","sanitizeMargins","_d3locale","getFormatter","_dataLength","_modules","_basePlotModules","subplotType","emptySubplotLists","_globalTransforms","globalTransforms","supplyDataDefaults","_hasPlotType","cleanData","supplyLayoutModuleDefaults","_hasCartesian","_hasGeo","_hasGL3D","_hasGL2D","_hasTernary","_hasPie","cleanPlot","linkSubplots","doAutoMargin","_hasCalcTransform","applyTransforms","fullTrace","fullData","dataOut","transformIndex","initCategories","_initialCategories","_categoriesMap","_frames","_frameHash","_counter","_interruptCallbacks","basePlotModules","modulei","hasPaper","hasInfoLayer","hadGl","hasGl","_glcontainer","_glcanvas","oldLoop","oldUid","_zoomlayer","oldSubplots","newSubplots","newSubplotList","mockGd","ids","oldSubplot","layer","xlines","ylines","cliponaxis","mainAx","overlaying","isX","anchorAx","mainSubplotID","nextBestMainSubplotID","anchorID","yIndex","idPart","counterPart","counterAx","clearExpandedTraceDefaultColors","_colorAttrs","crawl","attrName","level","dataIn","colorCnt","pushModule","basePlotModule","_transformModules","carpetIndex","carpetDependents","supplyTraceDefaults","_expandedIndex","expandedTraces","expandedTrace","fullExpandedTrace","_fullInput","_expandedInput","carpet","carpetAxis","_carpet","supplyAnimationDefaults","optsOut","frame","supplyAnimationFrameDefaults","supplyAnimationTransitionDefaults","supplyFrameDefaults","frameIn","frameOut","traceIn","colorIndex","traceInIndex","colorway","traceOut","defaultColor","subplotId","attri","selectPoints","supplyTransformDefaults","transformModules","transformList","transformOut","transformIn","isFirstStage","doLaterStages","layoutIn","layoutOut","globalFont","newWidth","newHeight","frameMargins","fillFrame","innerWidth","innerHeight","overflow","reservedMargins","margins","marginName","resultingMargin","calculateReservedMargins","_boundingBoxMargins","reservedWidth","reservedHeight","factor","_container","computedStyle","minWidth","minHeight","widthHasChanged","heightHasChanged","_initialAutoSize","transitionData","component","Cartesian","includeBasePlot","finalizeSubplots","supplyLayoutDefaults","purge","_geocontainer","_modeBar","destroy","_animationRaf","cancelAnimationFrame","framework","fid","undoqueue","undonum","firstscatter","_hmlumcount","_hmpixcount","_transitioning","_transitioningWithDuration","_dragging","_dragged","_hoverdata","_snapshotInProgress","_editing","_replotPending","_mouseDownTime","_legendMouseDownTime","removeAllListeners","styleModules","correction","plotWidth","plotHeight","autoMargin","_pushmargin","autoexpand","_replotting","oldmargins","ml","mr","mt","mb","pm","k1","pushleft","pushbottom","fl","pl","pb","k2","fr","pr","newl","newr","ft","newb","newt","dataonly","useDefaults","frames","stripObj","src","fit","isPolar","getConfig","modifyFrames","operations","_hash","oldName","newName","computeFrame","frameName","traceIndices","traceIndex","destIndex","frameLookup","framePtr","frameStack","frameNameStack","baseframe","extendLayout","extendTrace","recomputeFrameHash","extendObjectWithContainers","containerPaths","containerProp","containerVal","destProp","srcContainer","destContainer","expandedObj","containerObj","srcObj","dataArrayContainers","destTrace","srcTrace","destLayout","srcLayout","frameOpts","transitionOpts","traceIdx","dataLength","transitionedTraces","aborted","animatable","thisUpdate","ai","seq","executeCallbacks","layoutUpdate","axisAttrRe","doCalcdata","calc","rehover","traceTransitionOpts","numCallbacks","numCompleted","makeCallback","flushCallbacks","hasAxisTransition","transitionAxes","transitionStarting","oldCalcdata","_numBoxes","_numViolins","_violinScaleGroupStats","_piecolormap","_piecolorway","_piedefaultcolorcount","findArrayAttributes","polarIds","radialaxis","angularaxis","hasCalcTransform","calcTransform","enabled","_rehover","generalUpdatePerTraceModule","subplotCalcData","subplotLayout","traceHashOld","traceHash","calcTraces","moduleNameOld","fakeCalcTrace","moduleName","moduleCalcData","MAX_VALUE","EPOCHJD","ALMOST_EQUAL","idRegex","attrRegex","xAxisMatch","yAxisMatch","AX_ID_PATTERN","AX_NAME_PATTERN","SUBPLOT_PATTERN","MINDRAG","MINSELECT","MINZOOM","DRAGGERSIZE","BENDPX","REDRAWDELAY","SELECTDELAY","SELECTID","DFLTRANGEX","DFLTRANGEY","traceLayerClasses","layerValue2layerClass","above traces","below traces","axNum","name2id","only2d","idList","idi","sceneIds3D","gl3d","scene","zaxis","subplotLists","id2","letter1","letter2","_extend","inputs","isDeep","keepAllKeys","noArrayCopies","copyIsArray","clone","primitivesLoopSplice","editType","colorEditType","role","noBlank","strict","description","arrayOk","stringMappings","getSize","_selection","_dimension","FIND_TEX","_callback","tex","MathJax","svgClass","data-unformatted","data-math","config","_texString","_config","randomID","tmpDiv","visibility","LT_MATCH","GT_MATCH","Hub","Queue","glyphDefs","svgBBox","texToSVG","_svgEl","_glyphDefs","_svgBBox","newSvg","showText","firstChild","preserveAspectRatio","newSvgW","newSvgH","newX","containerNode","_str","regExp","sub","replaceFromMapObject","ENTITY_TO_UNICODE","NEWLINES","currentNode","hasLink","nodeStack","currentLine","newLine","lineNode","oldNodeStack","enterNode","nodeSpec","nodeAttrs","popup","onclick","newNode","addTextNode","ZERO_WIDTH_SPACE","resetter","RESET_DY","SHIFT_DY","exitNode","BR_TAG","SPLIT_TAGS","parti","ONE_TAG","tagType","tagStyle","TAG_STYLES","extra","css","getQuotedMatch","STYLEMATCH","COLORMATCH","HREFMATCH","dummyAnchor","PROTOCOLS","protocol","encodeURI","TARGETMATCH","POPUPMATCH","buildSVGText","sup","em","STRIP_TAGS","entityToUnicode","alignHTMLWith","_base","thisRect","getTop","getLeft","alignH","horizontalAlign","alignV","verticalAlign","bRect","cRect","plainText","setOrGet","thisX","thisY","makeEditable","_delegate","delegate","handlerElement","handleClick","div","cStyle","fontFamily","background-color","box-sizing","contenteditable","mathjaxClass","edit","editDiv","activeElement","blur","which","selectElementContents","_el","selectNodeContents","getSelection","removeAllRanges","addRange","focus","immediate","FROM_BL","FROM_TL","OPPOSITE_SIDE","hasLines","hasMarkers","hasText","trimLeft","trimRight","tinyCounter","mathRound","mathMin","mathMax","mathRandom","ok","named","matchers","hsla","hsv","hsva","hex8","parseIntFromHex","convertHexToDecimal","hex6","hex4","hex3","stringInputToObject","isValidCSSUnit","bound01","convertToPercentage","hsvToRgb","hue2rgb","hslToRgb","boundAlpha","inputToRGB","_originalInput","_g","_b","_a","_roundA","_format","_gradientType","_ok","_tc_id","rgbToHsl","rgbToHsv","rgbToHex","allow3Char","hex","pad2","rgbaToArgbHex","convertDecimalToHex","desaturate","amount","toHsl","clamp01","saturate","greyscale","brighten","spin","hue","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","monochromatic","toHsv","modification","getBrightness","isLight","isValid","getOriginalInput","getFormat","getLuminance","RsRGB","GsRGB","BsRGB","setAlpha","toHsvString","toHslString","toHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","_applyModification","_applyCombination","fromRatio","newColor","equals","mix","rgb1","rgb2","readability","isReadable","wcag2","wcag2Parms","parms","validateWCAG2Parms","mostReadable","baseColor","colorList","includeFallbackColors","bestColor","bestScore","burntsienna","flipped","flip","isOnePointZero","processPercent","isPercentage","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","mouseOffset","hasHover","interactConstants","dragElement","getCursor","unhover","wrapped","unhoverRaw","supportsPassive","coverSlip","cover","className","zIndex","pointerOffset","init","startX","startY","newMouseDownTime","cursor","dragCover","initialEvent","initialTarget","rightClick","numClicks","DBLCLICKDELAY","pointerEvents","onmousedown","onStart","_ontouchstart","passive","ontouchstart","clampFn","minDrag","buttons","ctrlKey","prepFn","onMove","onDone","dxdy","moveFn","doneFn","clickFn","e2","MouseEvent","createEvent","initMouseEvent","bubbles","cancelable","screenX","screenY","metaKey","button","dispatchEvent","finishDrag","borderLine","lightFraction","title","impliedEdits","range[0]","range[1]","items","^autorange","fixedrange","scaleanchor","scaleratio","constraintoward","spikecolor","spikethickness","spikedash","spikemode","flags","spikesnap","linecolor","categoryorder","categoryarray","_deprecated","autotick","errorBars","calcFromTrace","calcdataMock","hoverInfo","calcPoint","hoverPoint","error_y","yerr","yh","symmetric","yerrneg","error_x","xerr","xh","xerrneg","helpers","moduleType","getDistanceFunction","getClosest","inbox","quadrature","appendArrayPointValue","castHoverOption","castHoverinfo","hoverinfo","loneHover","loneUnhover","containerOrSelection","Greys","YlGnBu","Greens","YlOrRd","Bluered","RdBu","Reds","Blues","Picnic","Rainbow","Portland","Jet","Hot","Blackbody","Earth","Electric","Viridis","Cividis","traceOpts","extras","layoutOpts","traceEditTypeFlags","layoutEditTypeFlags","falseObj","overrideAll","editTypeOverride","overrideContainers","overrideOne","traceFlags","layoutFlags","editTypeParts","isValidScale","containerStr","isArrayWithOneNumber","showscale","xmlns:xlink","csr","cls","parentObjIn","parentObjOut","previousContOut","contIn","contOut","itemIn","itemOut","itemOpts","itemIsNotPlainObject","handleItemDefaults","_index","loggers","logging","messages","console","process","versions","getPrototypeOf","paper_bgcolor","plot_bgcolor","hidesources","showlegend","SHOW_PLACEHOLDER","HIDE_PLACEHOLDER","colorAttributes","errorBarAttrs","colorbarAttrs","hovertext","PTS_LINESONLY","hoveron","smoothing","simplify","connectgaps","maxdisplayed","sizeref","sizemin","sizemode","MAXDIST","YANGLE","HOVERARROWSIZE","HOVERTEXTPAD","HOVERFONTSIZE","HOVERFONT","HOVERMINTIME","HOVERID","editable","edits","annotationPosition","annotationTail","annotationText","axisTitleText","colorbarPosition","colorbarTitleText","legendPosition","legendText","shapePosition","titleText","queueLength","scrollZoom","doubleClick","showTips","showAxisDragHandles","showAxisRangeEntryBoxes","displayModeBar","modeBarButtonsToRemove","modeBarButtonsToAdd","modeBarButtons","displaylogo","plotGlPixelRatio","setBackground","topojsonURL","mapboxAccessToken","baseAttributes","frameAttributes","animationAttributes","polarAreaAttrs","polarAxisAttrs","editTypes","IS_SUBPLOT_OBJ","IS_LINKED_TO_ARRAY","UNDERSCORE_ATTRS","recurseIntoValObject","valObject","isIndex","newValObject","formatAttributes","makeSrcAttr","isValObject","mergeValTypeAndRole","itemName","formatArrayContainers","handleBasePlotModule","insertAttrs","baseAttrs","newAttrs","DEPRECATED","getTraceAttributes","getTransformAttributes","defs","valObjects","metaKeys","assignPolarLayoutAttrs","xkey","getLayoutAttributes","animation","specifiedLevel","attrString","fullAttrString","arrayAttributes","toAttrString","getTraceValObject","moduleAttrs","tNum","getLayoutValObject","layoutAttrOverrides","baseOverrides","baseLayoutAttrOverrides","layoutHeadAttr","fxAttrs","legendgroup","customdata","hoverlabel","maxpoints","containerArrayMatch","propStr","indexed","propParts","badContainer","npSet","npGet","curPart","allSame","curCont","INFO_PATTERNS","ARGS_PATTERN","isDeletable","propPart","containerLevels","toDelete","setArrayAll","checkNewContainer","joinPropStr","remainingKeys","pruneContainers","newPart","toAdd","containerArray","innerParts","arrayVal","allSet","thisVal","thisPropStr","deleteThis","firstPart","nextPart","arrayminus","valueminus","traceref","tracerefminus","copy_ystyle","copy_zstyle","axesAttrs","thicknessmode","lenmode","xanchor","xpad","yanchor","ypad","outlinecolor","outlinewidth","bordercolor","borderwidth","bgcolor","titleside","hasColorbar","colorbarDefaults","flipScale","autoColorscaleDftl","cLetter","minIn","maxIn","sclIn","showScaleDftl","sclOut","isRightAnchor","isCenterAnchor","isBottomAnchor","isMiddleAnchor","ARROWPATHS","cartesianConstants","textangle","valign","borderpad","showarrow","arrowcolor","arrowhead","startarrowhead","arrowside","arrowsize","startarrowsize","arrowwidth","standoff","startstandoff","axref","ayref","xshift","yshift","clicktoshow","xclick","yclick","captureevents","ref","containerClassName","groupClassName","inputAreaClass","railRectClass","railTouchRectClass","gripRectClass","tickRectClass","inputProxyClass","labelsClass","labelGroupClass","labelClass","currentValueClass","railHeight","menuIndexAttrName","autoMarginIdRoot","textPadX","arrowOffsetX","railRadius","railWidth","railBorder","railBorderWidth","railBorderColor","railBgColor","railInset","stepInset","gripRadius","gripWidth","gripHeight","gripBorder","gripBorderWidth","gripBorderColor","gripBgColor","gripBgActiveColor","labelPadding","labelOffset","tickColor","tickOffset","tickLength","minorTickOffset","minorTickColor","minorTickLength","currentValuePadding","currentValueInset","namelength","ArrayBuffer","isView","newVal","timerCache","_clearTimeout","cache","minInterval","previousOnDone","fromcurrent","easing","scales","isValidScaleArray","si","sclNew","inputContainer","autoAttr","minAttr","maxAttr","auto","autocolorscale","reversescale","minTolerance","toleranceGrowth","maxScreensAway","objName","copyAttr","numStripRE","titleClass","editAttr","containerGroup","isplaceholder","txt","elShouldExist","titleLayout","titleEl","drawTitle","scootTitle","transformVal","titleElIn","titleGroup","backside","shiftSign","titlebb","paperbb","maxshift","maxShift","avoidbb","shiftTemplate","restyle","undo","ascent","descent","home","camera-retro","zoombox","pan","zoom_plus","zoom_minus","autoscale","tooltip_basic","tooltip_compare","plotlylogo","z-axis","3d_rotate","camera","movie","question","disk","lasso","selectbox","spikeline","toImage","fileSaver","promise","filename","catch","getDelay","getRedrawFunc","DOUBLEQUOTE_REGEX","DUMMY_REGEX","toppaper","_toppaper","toSVG","topGroups","topGroup","_draggers","ff","XMLSerializer","serializeToString","hiddenDiv","replaced","htmlEntityDecode","EventEmitter","ev","emitter","Image","ieSvgError","canvas","ctx","getContext","img","encodeURIComponent","imgData","drawImage","toDataURL","errorMsg","_events","_maxListeners","isFunction","isObject","isUndefined","defaultMaxListeners","setMaxListeners","TypeError","er","handler","addListener","newListener","warned","once","fired","removeListener","listenerCount","evlistener","Events","plotObj","_ev","internalEv","_internalEv","_internalOn","_internalOnce","_removeInternalListener","_removeAllInternalListeners","jQuery","trigger","triggerHandler","jQueryHandlerValue","nodeEventHandlerValue","handlers","lastHandler","getSubplot","flat","p2c","axArray","dxy","distfn","pointData","newDistance","makeEventData","pointNumber","curveNumber","pointIndices","pointIndex","eventData","zLabelVal","getPointKey","pointVal","getPointData","appendArrayMultiPointValues","pointNumbers","keyVal","pointKeyMap","locations","labels","marker.colors","dragmode","hovermode","hoverdistance","spikedistance","overrideCursor","YA_RADIANS","YFACTOR","YSHIFTX","YSHIFTY","createHoverText","hoverData","traceHoverinfo","rotateLabels","bgColor","outerContainer","commonLabelOpts","commonAttr","t00","outerContainerBB","outerTop","outerWidth","outerHeight","showCommonLabel","commonLabel","label","lpath","ltext","tbb","topsign","leftsign","hoverLabels","traceColor","contrastColor","borderColor","nameOverride","nameLength","extraText","zLabel","xLabel","yLabel","tx2","tx2width","anchorStartOK","anchorEndOK","htx","hty","txTotalWidth","ty0","txwidth","idealAlign","alignHoverText","del","horzSign","alignShift","txx","tx2x","offsetX","offsetY","cleanPoint","getVal","posref","xLabelVal","yLabelVal","xeText","yeText","infomode","createSpikelines","closestPoints","evt","showY","hLinePoint","showX","vLinePoint","hLinePointX","hLinePointY","pointerX","pointerY","xBase","xEndSpike","dfltHLineColor","yMode","yThickness","yColor","yBB","xEdge","vLinePointX","vLinePointY","yBase","yEndSpike","dfltVLineColor","xMode","xThickness","xColor","xBB","yEdge","spikesChanged","oldspikepoints","_spikepoints","noHoverEvent","overlayedSubplots","overlays","xaArray","yaArray","spId","_subplot","xvalArray","yvalArray","itemnum","curvenum","subploti","xval","yval","closedataPreviousLength","searchData","spikePoints","xpx","ypx","hasUserCalledHover","dbb","hoverPoints","newPoints","_hoverlayer","newPoint","newPointNum","tmpPoint","closestVPoints","closestVPt","fillClosestPoint","closestHPoints","closestHPt","selectClosestPoint","pointsData","pointsDistances","rad","kink","spikelineOpts","_paperdiv","newspikepoints","tmpHPointData","tmpHPoint","tmpVPointData","tmpVPoint","oldhoverdata","newhoverdata","labelOpts","donepositioning","topOverlap","bottomOverlap","pti","sumdp","nummoves","pointgroups","pmin","pmax","constrainGroup","grp","minPt","maxPt","deleteCount","g0","g1","hoverPt","hoverAvoidOverlaps","tagName","hasClickToShow","oldPt","newPt","hoverChanged","xaxes","yaxes","xvals","yvals","_hover","hoverItem","container3","outerContainer3","fullOpts","hoverLabel","getModuleCalcData","plotOne","cdSubplot","makeOnCompleteCallback","cdModule","makeSubplotLayer","plotgroup","xLayer","yLayer","mainplot","mainplotinfo","mainplotgroup","xId","yId","joinLayer","overlinesBelow","overaxesBelow","overplot","overlinesAbove","overaxesAbove","backLayer","shapelayer","imagelayer","purgeSubplotLayers","layers","overlayIdsToRemove","clipId","subplotIds","overlayInfo","dataVal","idRoot","xList","yList","spSVG","spAll","allX","allY","ki","regl","pcd","subplotInfo","hadScatter","hasScatter","oldPlots","oldModules","newModules","_scene","oldSubplotList","oldAxIDs","newAxIDs","hadCartesian","hasCartesian","_cartesianlayer","drawFramework","subplotData","xa2","ya2","makeSubplotData","subplotLayers","draglayer","rangePlot","imageRoot","_glimages","imageData","xlink:href","legendGetsTrace","isGrouped","legendLayout","traceorder","isVertical","isReversed","Fx","setCursor","drawArrowHead","drawOne","drawRaw","annbase","annClipID","annPosPx","annGroup","annTextGroup","editTextPosition","textEvents","annTextGroupInner","fullAnnotation","hoverOptions","hoverFont","bBoxRef","borderfull","annTextBG","isSizeConstrained","annTextClip","_topclips","annText","textLayout","_text","drawGraphicalElements","anchor3","hasMathjax","anntextBB","textWidth","textHeight","annWidth","annHeight","shiftFraction","_w","_h","annotationIsOffscreen","letters","basePx","textPadShift","alignPosition","autoAlignFraction","textShift","tailRef","dimAngle","annSizeFromWidth","annSizeFromHeight","annSize","overallShift","posPx","posFraction","r2fraction","r2p","arrowLength","tail","maxPx","shiftPlus","shiftMinus","xShift","yShift","texty","textx","baseTextTransform","drawArrow","headX","headY","tailX","tailY","textX","textY","applyTransform","applyTransform2","xLeft","xRight","yTop","yBottom","strokewidth","arrowColor","arrowSide","arrowGroup","arrow","arrowDragHeadX","arrowDragHeadY","annx0","anny0","arrowDrag","annxy0","xcenter","ycenter","p2r","notesBox","selectedObj","widthFraction","_xsize","_xshift","heightFraction","_ysize","_yshift","containerArrayName","cartesianList","hasCartesianOrGL2D","itemi","hasXref","hasYref","newAxis","annAtts","rangeToShapePosition","shapePositionToRange","d2r","decodeDate","convertToPx","encodeDate","convertToDate","getDataToPixel","dataToPixel","getPixelToData","pixelToData","headerGroupClassName","headerClassName","headerArrowClassName","dropdownButtonGroupClassName","dropdownButtonClassName","buttonClassName","itemRectClassName","itemTextClassName","blankHeaderOpts","arrowPadX","textOffsetX","textOffsetY","gapButtonHeader","gapButton","activeColor","hoverColor","arrowSymbol","up","down","buttonAttrs","activecolor","scatterAttrs","textFontAttrs","scatterMarkerAttrs","insidetextfont","outsidetextfont","constraintext","bardir","itemStr","arrayStr","rootContainers","regexpContainers","rootPart","defaultScale","parseScale","highestVal","openEnded","deg","lessThan","lessOrEqual","greaterThan","greaterOrEqual","linelow","binSize","valsIn","errDiff","v2","low","high","dlow","dhigh","rounded","rowLength","colLength","maxlen","zlen","yTranspose","xy","at","xys","gdElement","getElementById","colorScaleAttributes","palettes","autoColorDflt","contextHead","cauto","zauto","zmax","zmin","handleDefaults","hasColorscale","axType","tickmodeDefault","dtickDflt","dtickNum","tick0Dflt","tickLen","outerTicks","showAttrDflt","showAttrs","every","getShowAttrDflt","tickSuffixDflt","dfltFontColor","tickformatIn","tickformatOut","valueIn","valueOut","valuesIn","valuesOut","tickformatstopsDefaults","noHover","fromLog","clipMult","toLog","dt2ms","ms2dt","getCategoryName","getCategoryIndex","p2l","l2c","r2c","l2d","d2p","p2d","curLength","rl0","rl1","cleanRange","rangeAttr","linCenter","inc","usePrivateRange","ax2","makeCalcdata","cal","isValidRange","coord","dcnt","ncnt","moreDates","curvenums","curvecats","linearOK","manage","svgToImg","imageDataOnly","IMAGE_URL_PREFIX","isImpliedOrValid","clonedGd","layoutImage","configImage","redrawFunc","wait","convert","urlToImageData","isBrowser","global","matchMedia","eval","undoFunc","undoArgs","redoFunc","redoArgs","queueObj","queueIndex","undoQueue","inSequence","beginSequence","calls","redo","startSequence","stopSequence","plotDo","copyArgArray","Axis","radialScale","angularScale","inputConfig","liveConfig","render","axisConfig","_data","dataOriginal","util","cloneJson","defaultColorRange","strokeColor","strokeDash","strokeSize","isStacked","dataWithGroupId","groupId","dataYStack","stacked","prevArray","yStack","sumArrays","chartCenter","arrayLast","flattenArray","radialAxis","DATAEXTENT","angularDataMerged","isOrdinal","deduplicate","hasOnlyLineOrDotPlot","needsEndSpacing","angularDomain","angularAxis","angularDomainStep","angularDomainWithPadding","tickCount","ticksCount","ticksStep","angularTicksStep","minorTicks","angularAxisRange","endPadding","doc","DOMParser","parseFromString","importNode","legendContainer","chartGroup","lineStyle","fontStyle","text-shadow","outlineColor","showLegend","elements","datumClone","dotType","visibleInLegend","Legend","legendConfig","reverseOrder","legend","legendBBox","getBBox","centeringOffset","titleBBox","gridLinesVisible","gridCircles","backgroundCircle","backgroundColor","currentAngle","ticksSuffix","tickOrientation","angularAxisEnter","ticksText","labelsVisible","rewriteTicks","rightmostTickEndX","getCTM","hasGeometry","geometryContainer","geometryConfigs","geometryConfig","dB","iB","geometryConfigsGrouped2","finalGeometryConfig","angularValue","radialValue","guides","tooltipContainer","angularTooltip","tooltipPanel","radialTooltip","geometryTooltip","hasTick","angularGuideLine","mouseAngle","getMousePos","angleWithOriginOffset","convertToCartesian","angularGuideCircle","hide","data-opacity","data-fill","textData","data-stroke","show","_x","xClone","getLiveConfig","getinputConfig","AREA","LINE","DOT","BAR","_override","_objA","_objB","_rndSnd","dataFromEquation2","_equation","_step","dataFromEquation","_val","arr","fillArrays","_obj","_valueNames","validateKeys","objHasKeys","arrayEqual","thetaRadians","_value","_digits","_referenceElement","mousePos","mouseX","mouseY","duplicatesCount","uniques","dups","duplicates","translator","sourceBranch","targetBranch","targetBranchCopy","previousValue","currentValue","PolyChart","dashArray","solid","isStack","domainMin","generator","bar","pI","dataConfig","stackTop","barWidth","stackedData","dotSize","polarCoordinates","getPolarCoordinates","lineInterpolation","lineData","dotVisible","markStyle","lineSelection","angularRange","triangleAngle","geometryLayer","geometryType","getColorScale","colorScale","BarChart","AreaChart","DotPlot","LinePlot","flattenData","colors","lineHeight","isContinuous","svgEnter","dataNumbered","dataScale","colorBandWidth","legendElement","_type","squareSize","symbolType","legendAxis","textColor","tooltipEl","tooltipTextEl","backgroundEl","tooltipEnter","boxStyle","backGroundW","backGroundH","adapter","plotly","_inputConfig","outputConfig","barmode","makeDragBox","maindrag","onmousemove","_hoversubplot","_lasthover","onmouseout","hoverLayer","ptsIn","multitester","xmin","xmax","ymin","ymax","rectFirstEdgeTest","isRect","degenerate","lastPt","omitFirstEdge","xmini","ycross","crossings","testers","subtract","yes","isBent","isSegmentBent","tolerance","partParallel","startPt","segmentSquared","segmentLen","unitPerp","ptsFiltered","doneRawIndex","doneFilteredIndex","addPt","prevFilterLen","iLast","filtered","centerFraction","rangeLinear","handleCalendarDefaults","drawColorbar","cbId","sclFunc","noNumericCheck","filllevels","handleTickValueDefaults","handleTickMarkDefaults","handleTickLabelDefaults","handleCategoryOrderDefaults","handleLineGridDefaults","orderedCategories","letter","cheateronly","dfltColor","showGrid","counterAxes","overlayableAxes","tracegroupgap","stylePie","barpath","showFill","showLine","contours","showlines","coloring","dMod","tMod","showMarkers","showLines","boundVal","attrIn","arrayToValFn","valIn","valToBound","pickFirst","dEdit","tEdit","ptgroup","backoff","noRotate","annIn","annOut","borderOpacity","borderWidth","showArrow","hoverText","globalHoverLabel","hoverBG","hoverBorder","segmentRE","paramRE","paramIsX","drawn","V","Q","2","4","T","paramIsY","1","3","5","numParams","annAttrs","scatterLineAttrs","sizex","sizey","sizing","padAttrs","buttonsAttrs","freeLength","execute","showactive","stepsAttrs","currentvalue","activebgcolor","minorticklen","bgClassName","rangePlotClassName","maskMinClassName","maskMaxClassName","slideBoxClassName","grabberMinClassName","grabAreaMinClassName","handleMinClassName","grabberMaxClassName","grabAreaMaxClassName","handleMaxClassName","maskColor","slideBoxFill","slideBoxCursor","grabAreaFill","grabAreaCursor","grabAreaWidth","handleWidth","handleRadius","handleStrokeWidth","extraPad","stepmode","yPad","minButtonWidth","cloneLayoutOverride","tileClass","override","graphObj","keyName","oldData","oldLayout","sceneIds","axesImageOverride","showaxeslabels","linetickenable","plotTile","td","defaultLayout","barnorm","bargap","bargroupgap","__WEBPACK_IMPORTED_MODULE_0_npm_plotly_js_lib_core___default","[object Object]","containerEl","gd3","WIDTH_IN_PERCENT_OF_PARENT","margin-left","HEIGHT_IN_PERCENT_OF_PARENT","margin-top","initEventListeners","chartProps","assign","chartData","useSourceMap","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","memo","stylesInDom","isOldIE","atob","getElement","styleTarget","HTMLIFrameElement","contentDocument","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","addStyle","listToStyles","newStyles","media","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","removeStyleElement","createStyleElement","addAttrs","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","cssText","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","Boolean","cssNode","fetch","verticalEl","horizontalEl","vChart","__WEBPACK_IMPORTED_MODULE_0__charts_bar__","hChart","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_3__vertical__","__WEBPACK_IMPORTED_MODULE_1_npm_plotly_js_lib_bar___default","polyfill","newPlot","extendTraces","prependTraces","addTraces","deleteTraces","moveTraces","setPlotConfig","downloadImage","addFrames","deleteFrames","animate","Icons","Snapshot","baseObj","valueName","changeTypes","indexLookup","isSimpleValueProp","changeType","newValue","rename","constructUpdate","ASCEND","SIMPLEATTR","baseAttr","toContainer","fromContainer","fromVal","toVal","baseTraceAttrs","getColorscale","colorscaleNames","data_array","requiredOpts","otherOpts","coerceFunction","propOut","enumerated","coerceNumber","validateFunction","boolean","okToCoerce","colorlist","subplotid","flaglist","vParts","vi","any","info_array","vOut","attribute","propIn","dfltObj","valObj","smoDflt","usmoDflt","valObjectDef","failed","propMock","utcFormat","DATETIME_REGEXP","DATETIME_REGEXP_CN","YFIRST","isWorldCalendar","calendars","lpad","isWorld","isChinese","cDate","calInstance","isIntercalary","newDate","toMonthIndex","toJD","NINETYDAYS","THREEHOURS","FIVEMIN","includeTime","msec10","msecTenths","msRounded","dateJD","timeMs","fromJD","fracMatch","MAXSECONDS","formatTime","timePart","timeStr","secStr","yearFormatWorld","formatter","modDateFormat","monthFormatWorld","dayFormatWorld","yearMonthDayFormatWorld","THREEDAYS","dMonth","locationCache","workingPath","workingTextWidth","x4","y4","det","perpDistance2","xab","yab","l2_ab","xac","yac","fc_ab","xbc","ybc","crossProduct","x12","y12","x34","y34","l2_12","l2_34","dist2","totalPathLen","positionOnPath","getPointAtLength","pCenter","pt0","ptTotal","pMin","pTotal","getTotalLength","pMax","getDistToPlot","distToPlot","total","isClosed","diff","pathLength","iterationLimit","mul","dict","NOTEDATA","displayLength","notifierContainer","thisText","note","killNote","thisIndex","seen","baseFilter","calcDataFilter","filterFn","JUNK","colorbarOut","colorbarIn","colorArray2rbga","colorObj","specs","_range","_sclFunc","returnArray","mu","#956","amp","#28","lt","#60","gt","#62","nbsp","#160","#215","plusmn","#177","#176","sizeRef","sizeMin","baseFn","baseSize","rs","rd","rc2","rt","triangle-left","triangle-right","triangle-ne","r2","triangle-se","triangle-sw","triangle-nw","pentagon","hexagon","hexagon2","octagon","star","hexagram","star-triangle-up","aPart","star-triangle-down","star-square","star-diamond","diamond-tall","diamond-wide","hourglass","bowtie","circle-cross","circle-x","square-cross","square-x","diamond-cross","diamond-x","cross-thin","x-thin","asterisk","y-up","y-down","y-left","y-right","line-ew","line-ns","line-ne","line-nw","domainAttr","mergeAttrs","axisName","nonCommonAttrs","commonAttrs","tickorientation","endpadding","makeComputeError","calcOneAxis","computeError","calcCoord","errors","shoe","hat","makeComputeErrorValue","dataPt","computeErrorValue","computeErrorValueMinus","hasAnimation","keyFunc","xObj","yObj","sparse","errorbars","layerClipId","errorbar","coords","noYS","noXS","errorCoords","vis","yw","yerror","xw","xerror","bindingValueHasChanged","binding","computeLayoutBindings","bindings","aobj","computeDataBindings","thisTraces","nAttr","tmp","thisPath","commandList","onchange","_commandObserver","lookupTable","check","disable","enable","checkEvents","bindingsByValue","refBinding","command","apiMethod","allArgs","computeAnimateBindings","scatterSubTypes","createModeBar","appendButtonsToGroups","modeBar","buttonGroups","customButtons","buttonGroup","fillCustomButton","buttonsToRemove","buttonsToAdd","hasGL3D","hasGeo","hasPie","hasGL2D","hasTernary","hasMapbox","hasPolar","addGroup","newGroup","allAxesFixed","areAllAxesFixed","dragModeGroup","selectable","boxpoints","isSelectable","getButtonGroups","graphInfo","proto","needsNewButtons","hasButtons","needsNewLogo","hasLogo","removeAllButtons","updateButtons","getLogo","updateActiveButton","_this","buttonElements","buttonsNames","createGroup","buttonConfig","buttonName","createButton","currentTarget","toggle","createIcon","icon","thisIcon","iconHeight","svgNS","buttonClicked","dataAttrClicked","thisval","dataAttr","isToggleButton","button3","currentButtons","_privateplot","handleCartesian","axName","mag","rangeInitial","rangeNow","rangeNew","_isHoriz","handleDrag3d","handleCamera3d","sceneId","cameraInitial","handleHover3d","_previousVal","spikeAttrs","currentSpikes","axisSpikes","allaxes.showspikes","sceneLayout","sceneSpikes","spikeAttr","handleGeo","geoIds","geoLayout","newScale","resetView","toggleHover","onHoverVal","newHover","aObj","viewInitial","viewKeys","zoom2d","pan2d","select2d","lasso2d","zoomIn2d","zoomOut2d","autoScale2d","resetScale2d","hoverClosestCartesian","hoverCompareCartesian","zoom3d","pan3d","orbitRotation","tableRotation","resetCameraDefault3d","resetCameraLastSave3d","hoverClosest3d","zoomInGeo","zoomOutGeo","resetGeo","hoverClosestGeo","hoverClosestGl2d","hoverClosestPie","resetViews","toggleSpikelines","setSpikelineVisibility","resetViewMapbox","saveLink","canUseSaveLink","isSafari","download","encoded","decodeURIComponent","Polar","initInteractions","manageArrays","subroutines","axisConstraints","enforceAxisConstraints","enforce","cleanAxisConstraints","opaqueSetBackground","positivifyIndices","maxIndex","parentLength","positiveIndices","assertIndexArray","arrayName","checkMoveTracesArgs","currentIndices","newIndices","spliceTraces","maxPoints","lengthenArray","spliceArray","maxPointsIsObject","assertExtendTracesArgs","maxp","updateProps","getExtendProperties","remainder","undoUpdate","undoPoints","undefinedToNull","_restyle","redoit","undoit","flagAxForDelete","addToAxlist","autorangeAttr","doextra","extraparam","hasParent","contFull","param","oldVal","impliedKey","thicknorm","lennorm","labelsTo","valuesTo","_pielayer","defaultOrientation","swapXYData","clearAxisTypes","manageArrayContainers","autorangeOn","axListForDelete","axisLoop","axId","axAttr","calcIfAutorange","clearCalc","fullReplot","_relayout","arrayEdits","axisAttr","newkey","refAutorange","rangesAltered","recordAlteredAxis","pleafPlus","plen","pend","pleaf","ptrunk","parentIn","parentFull","vOld","axFull","fullProp","newType","obji","objToAutorange","updateValObject","checkForAutorange","isAddVal","isRemoveVal","objEdits","applyContainerArrayChanges","constraints","_axisConstraintGroups","groupAxId","_constraintShrinkable","layoutReplot","makePlotFramework","otherUids","_topdefs","_bgLayer","layerBelow","_imageLowerLayer","_shapeLowerLayer","_polarlayer","_ternarylayer","_geolayer","layerAbove","_imageUpperLayer","_shapeUpperLayer","_menulayer","plot3dPixelRatio","setPlotContext","graphWasEmpty","cleanLayout","plotContainer","paperDiv","manager","fillLayout","setUndoPoint","polarPlotSVG","placeholderText","setContenteditable","plotPolar","recalc","marginPushers","doAutoRangeAndConstraints","pick","layoutStyles","setPositionsArray","setPositions","rangesliderContainers","isVisible","layerSubplot","_shapeSubplotLayers","plotDone","checkAddTracesArgs","deletedTrace","movingTraceMap","newIndex","_traces","clearPromiseQueue","coerceTraceIndices","doTraceStyle","colorbars","doColorBars","doLegend","layoutstyle","doTicksRelayout","modebar","doModeBar","doCamera","traceUpdate","restyleSpecs","restyleFlags","relayoutSpecs","relayoutFlags","frameOrGroupNameOrFrameList","animationOpts","trans","_frameQueue","getTransitionOpts","getFrameOpts","callbackOnNthTime","_frameWaitingCnt","nextFrame","_currentFrame","onComplete","newFrame","stringName","_lastFrameAt","_timeToNext","beginAnimationLoop","_runningTransitions","doFrame","requestAnimationFrame","configCounter","setTransitionConfig","frameList","allFrames","isFrameArray","frameOrName","onInterrupt","discardExistingFrames","currentFrame","filteredFrameList","computedFrame","queueFrames","numericNameWarningCount","bigIndex","insertions","ops","revops","frameCount","micropolar","UndoManager","_gd","previousConfigClone","convertedInput","undoManager","getLiveScales","_configClone","_previousConfigClone","configClone","paper","dflts","undoCommands","isExecuting","setCallback","callbackFunc","hasUndo","hasRedo","getCommands","getPreviousCommand","getIndex","rootPosition","srcElement","vc","cursorset","hoverConstants","handleHoverLabelDefaults","hovermodeDflt","isHoriz","paste","makeCoerceHoverInfo","fillFn","STASHATTR","savedCursor","classes","annotationsDone","emitClick","stopImmediatePropagation","prepSelect","scaleZoom","SHOWZOOMOUTTIP","makeDragger","dragClass","dragger3","makeRectDragger","dragger","isDirectionActive","activeVal","zoomAxRanges","r0Fraction","r1Fraction","updates","linkedAxes","axi","axRangeLinear0","axRangeLinearSpan","linkedR0Fraction","dragAxList","pix","dZoom","makeZoombox","zoomlayer","lum","path0","makeCorners","clearSelect","updateZoombox","zb","corners","box","dimmed","transitionZoombox","removeZoombox","showDoubleClickNotifier","isSelectOrLasso","xyCorners","clen","attachWheelEventHandler","wheelEventName","onwheel","_onwheel","onmousewheel","ew","pw","ph","xActive","yActive","isSubplotConstrained","xaLinked","yaLinked","isMainDrag","singleEnd","recomputeAxisLists","xa0","ya0","nsew","constraintGroups","xIDs","yIDs","subplotXa","subplotYa","xLinkID","yLinkID","xLinks","yLinks","calcLinks","allFixedRanges","zoomMode","dragOptions","dragModeNow","zoomMove","zoomDone","dragBBox","zoomPrep","plotDrag","dragTail","doubleClickConfig","attrStr","initialText","dig","initialVal","getEndText","hAlign","vAlign","noZoom","xCorners","yCorners","scrollViewBox","redrawTimer","updateSubplots","ticksAndAnnotations","dxySign","dxyFraction","movedAx","newLinearizedEnd","otherEnd","newEnd","activeAxIds","pushActiveAxIds","redrawObjs","objArray","shortCircuit","shapes","images","viewBox","xScaleFactor2","yScaleFactor2","clipDx","clipDy","plotinfos","xScaleFactor","yScaleFactor","editX","editY","getLinkedScaleFactor","scaleAndGetShift","scaleFactor","getShift","editX2","editY2","xaRange","yaRange","plotDx","plotDy","_enablescrollzoom","pc","scrollHeight","clientHeight","scrollWidth","clientWidth","gbb","xfrac","yfrac","zoomWheelOneAxis","axRange","polybool","filteredPolygon","polygonTester","multipolygonTester","getAxId","updateSelectedState","searchTraces","searchInfo","fillSelectionItem","filterPoly","testPoly","mergedPolygons","currentPolygon","zoomLayer","xAxisIds","yAxisIds","allAxes","outlines","fillRangeItems","throttleID","axValue","dataPts","lassoPoints","difference","regions","inverted","union","mergePolygons","ppts","thisSelection","traceSelection","traceSelections","PolyBool","BuildLog","Epsilon","Intersecter","SegmentChainer","SegmentSelector","GeoJSON","buildLog","epsilon","operate","poly1","poly2","seg1","seg2","seg3","addRegion","calculate","segments1","segments2","combined","inverted1","inverted2","selectUnion","selectIntersect","selectDifference","selectDifferenceRev","differenceRev","selectXor","xor","polygonFromGeoJSON","geojson","toPolygon","polygonToGeoJSON","fromPolygon","my","nextSegmentId","curVert","segmentId","checkIntersection","segmentChop","seg","statusRemove","segmentUpdate","segmentNew","primary","segmentRemove","tempStatus","above","rewind","vert","segs","chainStart","chainRemoveHead","chainRemoveTail","chainNew","pt1","pt2","chainMatch","chainClose","chainAddHead","chainAddTail","chainConnect","index1","index2","chainReverse","chainJoin","eps","pointAboveOrOnLine","Ax","Ay","Bx","By","Cx","pointBetween","d_py_ly","d_rx_lx","d_px_lx","d_ry_ly","pointsSameX","pointsSameY","pointsSame","pointsCompare","pointsCollinear","pt3","linesIntersect","adx","ady","bdx","bdy","axb","alongA","alongB","pointInsideRegion","region","last_x","last_y","curr_x","curr_y","LinkedList","selfIntersection","segmentCopy","myFill","otherFill","event_root","eventAdd","other_pt","here","p1_isStart","p1_1","p1_2","p2_isStart","p2_1","p2_2","comp","eventCompare","isStart","eventAddSegment","ev_start","eventAddSegmentStart","ev_end","eventAddSegmentEnd","eventDivide","eventUpdateEnd","primaryPolyInverted","secondaryPolyInverted","status_root","statusFindSurrounding","findTransition","ev1","ev2","a2","b2","a1_equ_b1","a2_equ_b2","a1_between","a2_between","isEmpty","getHead","surrounding","checkBothIntersections","eve","st","exists","prev","chains","first_match","matches_head","matches_pt1","second_match","next_match","chain","setMatch","addToHead","grow","grow2","oppo","oppo2","reverseF","reverseChain","appendChain","chain1","chain2","tail2","head2","GeoPoly","ls","reg","regionInsideRegion","roots","addChild","forceWinding","clockwise","geopolys","addExterior","getInterior","componentType","supplyComponentDefaults","replotLater","replot","fullVal","componentNum","objKeys","objVal","adding","componentNums","componentArrayIn","componentArray","componentArrayFull","deletes","firstIndexChange","indicesToDraw","m4FromQuat","AxisIds","cleanAxRef","cleanTextPosition","posY","posX","emptyContainer","outer","innerStr","xaxis1","yaxis1","scene1","axisAttrRegex","sceneAttrRegex","isdate","islog","cameraposition","mat","eye","annotationsLen","shapesLen","existingData","suids","uids","tracei","newUid","ybins","xbins","yeColor","reversescl","dims","highlightColor","highlightcolor","highlightWidth","highlightwidth","filtersrc","valuecalendar","prevStyles","styleKeys","errorY","copyYstyle","hoverInfoParts","pLength","pLastIsNumber","contPath","ATTR_TAIL_RE","getParent","attrParent","axLetters","sceneName","typeAttr","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","alignmentConstants","shouldShowLinesOrTicks","shouldShowLineThisSide","_lw","sideIndex","findCounterAxisLineWidth","lsInner","hasSVGCartesian","getLinePosition","lwHalf","subplotSelection","lowerBackgroundIDs","lowerDomains","xDomain","yDomain","plotgroupBgData","domains","existingX","existingY","overlappingDomain","plotgroupBg","pgNode","lowerBackgrounds","plotClipId","plotClip","xLinesXLeft","xLinesXRight","xLinesYBottom","xLinesYTop","leftYLineWidth","rightYLineWidth","yLinesYBottom","yLinesYTop","yLinesXLeft","yLinesXRight","connectYBottom","connectYTop","extraSubplot","xPath","mainPath","xLinePath","yPath","yLinePath","pathFn","pathFnFree","drawMainTitle","cdi","arraysToCalcdata","cdi0","_opts","updateFx","setCamera","updateDomain","inputDomain","axisID","normScale","minScale","maxScale","matchScale","normScales","hasAnyDomainConstraint","_inputRange","domainShrunk","rangeShrunk","rangeCenter","rangeMin","rangeMax","halfRange","outerMin","outerMax","isConstrained","factory","vertxNext","customSchedulerFn","asap","scheduleFlush","browserWindow","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","MessageChannel","useSetTimeout","globalSetTimeout","channel","iterations","observer","onFulfillment","onRejection","_arguments","constructor","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","_resolve","nextTick","observe","characterData","port1","onmessage","port2","postMessage","vertx","runOnLoop","runOnContext","attemptVertx","PENDING","FULFILLED","REJECTED","GET_THEN_ERROR","ErrorObject","getThen","handleMaybeThenable","maybeThenable","then$$","thenable","fulfill","_reject","reason","handleOwnThenable","sealed","fulfillmentHandler","rejectionHandler","tryThen","_label","handleForeignThenable","publishRejection","_onerror","publish","_subscribers","subscribers","settled","TRY_CATCH_ERROR","hasCallback","succeeded","tryCatch","Enumerator","Constructor","_instanceConstructor","_remaining","_enumerate","resolver","needsResolver","initializePromise","needsNew","promiseToString","cast","_eachEntry","resolve$$","_then","_settledAt","_willSettleAt","state","enumerator","race","_setScheduler","scheduleFn","_setAsap","asapFn","_asap","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","Item","browser","env","argv","prependListener","prependOnceListener","cwd","chdir","dir","umask","rules","X,X div","X input,X button","X input:focus,X button:focus","X a","X a:hover","X .crisp","X .user-select-none","X svg","X svg a","X svg a:hover","X .main-svg","X .main-svg .draglayer","X .cursor-default","X .cursor-pointer","X .cursor-crosshair","X .cursor-move","X .cursor-col-resize","X .cursor-row-resize","X .cursor-ns-resize","X .cursor-ew-resize","X .cursor-sw-resize","X .cursor-s-resize","X .cursor-se-resize","X .cursor-w-resize","X .cursor-e-resize","X .cursor-nw-resize","X .cursor-n-resize","X .cursor-ne-resize","X .modebar","X .modebar--hover","X:hover .modebar--hover","X .modebar-group","X .modebar-group:first-child","X .modebar-btn","X .modebar-btn svg","X .modebar-btn path","X .modebar-btn.active path,X .modebar-btn:hover path","X .modebar-btn.modebar-btn--logo","X .modebar-btn.modebar-btn--logo path","X [data-title]:before,X [data-title]:after","X [data-title]:hover:before,X [data-title]:hover:after","X [data-title]:before","X [data-title]:after","X .select-outline","X .select-outline-1","X .select-outline-2","Y p","Y .notifier-note","Y .notifier-close","Y .notifier-close:hover","fullSelector","Config","messageStyle","skipStartupTypeset","displayAlign","tex2jax","inlineMath","Configured","configObj","registerTraceModule","newModule","registerTransformModule","registerComponentModule","dfltConfig","objIn","valOut","nestedSchema","getNestedSchema","isInfoArray","isColorscale","isInSchema","_p","_nestedSchema","indexList","errorList","traceSchema","transformsIn","transformsOut","transformSchema","traceLayoutAttr","fillLayoutSchema","code2msgFunc","inBase","unused","dynamic","invisible","convertPathToAttributeString","msg","splitKey","keyMinusId","_isSubplotObj","idMatch","Scatter","subtypes","handleXYDefaults","handleMarkerDefaults","handleLineDefaults","handleLineShapeDefaults","handleTextDefaults","handleFillColorDefaults","errorBarsSupplyDefaults","defaultMode","dfltHoverOn","colorscaleDefaults","noSelect","noLine","markerColor","noDash","inheritColorFromMarker","markerLineColor","filli","tracej","calcColorscale","calcSelection","calcMarkerSize","serieslen","markerTrans","xOptions","yOptions","linePoints","linkTraces","cdscatter","cdscatterAll","xr","yr","mnum","tnum","cdj","selectMarkers","hasTransition","ownFillEl3","tonext","ownFillDir","node3","prevRevpath","prevPolygons","prevtrace","_prevtrace","_prevRevpath","_nextFill","_polygons","thispath","thisrevpath","pathfn","revpathbase","revpathfn","lastSegment","thisPolygons","fullpath","revpath","makeUpdate","_ownFill","connectGaps","baseTolerance","isEnter","lineJoin","clearFill","_prevPolygons","pointSelection","makePoints","hasClipOnAxisFalse","visFilter","getKeyFunc","hideFilter","markerFilter","textFilter","_needsCull","scatterlayer","isFullReplot","_nexttrace","loc","createFills","clusterStartPt","clusterEndPt","clusterHighPt","clusterLowPt","thisPt","clusterHighFirst","clusterUnitVector","thisVector","clusterRefDist","clusterHighVal","clusterLowVal","clusterMinDeviation","clusterMaxDeviation","thisDeviation","getPt","intoCenter","getTolerance","xFrac","yFrac","ptDist","lastXEdge","lastYEdge","lastFarPt","edgePt","getEdgeIntersections","xEdge0","xEdge1","yEdge0","yEdge1","onlyConstrainedPoint","sameEdge","getABAEdgeIntersections","dim","limit0","limit1","ptInt1","ptInt2","midShift","updateEdge","xSame","ySame","xSame2","ySame2","updateEdgesForReentry","intersections","ptCount","ptInt","handleAxisDefaults","handleAxisPositionDefaults","axisLayoutAttrs","cn","zrange","linelevels","linecolormap","fillcolormap","levels","zr0","zr1","originalPlotHeight","originalPlotWidth","thickPx","thickFrac","lenPx","lenFrac","xpadFrac","yExtraPx","ypadFrac","xLeftFrac","yBottomFrac","yBottomPx","yTopPx","cbAxisIn","cbAxisOut","axisOptions","titlex","titley","autoNtick","dtFactor","dtexp","cbbg","cbfills","cblines","cbaxis","crisp","cbtitleunshift","cbtitle","cboutline","titleCont","titleHeight","xf","yf","cbDone","titleTrans","mathJaxNode","lineSize","jsPlaceholder","nlines","fills","cbfill","colorString","opaqueColor","cbline","titleWidth","outerwidth","outerheight","xoffset","colorbar.x","colorbar.y","getTrace","titleOpts","dfltTitleOpts","otherClass","idNum","orderDefault","isValidArray","colorMix","gridColor","blend","noZeroLine","zeroLineColor","flattenUniqueSort","axisLetter","sortFunction","tracePoints","insertionIndex","categoryArray","traceLines","stylePoints","txs","getTraceColor","fillHoverText","minRad","dxRaw","dyRaw","xc","yc","xCross","polygonsIn","yAvg","getSubplotCalcData","calcData","typeOrModule","getSubplotData","subplotX","subplotY","spmatch","basePlotLayoutAttributes","handleTypeDefaults","handleConstraintDefaults","handlePositionDefaults","xaCheater","xaNonCheater","noGrids","xaName","yaName","_cheater","xNames","yNames","axNames","axLayoutIn","axLayoutOut","getCounterAxes","getOverlayableAxes","axName2","defaultOptions","positioningOptions","rangeSliderDefaults","rangeSelectorDefaults","anchoredAxis","allAxisIds","getBoxPosLetter","isBoxWithoutPositionCoords","posLetter","isBox","isCandlestick","getFirstNonEmptyTrace","calAttr","boxPositions","setAutoType","thisID","constraintOpts","idj","axj","linkableAxes","thisGroup","linkableAxesNoLoops","getConstraintOpts","groupi","keyj","thisGroupIndex","thisGroupKeys","baseScale","updateConstraintGroups","axisRegex","raf","computeUpdates","updatedAxisIds","affectedSubplots","plotName","toX","toY","fromX","fromY","computeAffectedSubplots","updateLayoutObjs","unsetSubplotTransform","updateSubplot","xUpdate","yUpdate","fracDx","fracDy","easeFn","transitionInterrupt","tInterp","transitionComplete","defaultX","defaultY","defaultXAnchor","defaultYAnchor","visibleTraces","defaultOrder","getLegendData","anchorUtils","drawTexts","legendItem","isPie","mathjaxNode","mathjaxBB","textLines","textNode","computeTextDimensions","origText","fullInput","groupbyIndices","kcont","_group","setupTraceToggle","traceToggle","_clickTimeout","computeLegendDimensions","extraWidth","_lgroupsLength","groupXOffsets","textWidths","legendItemArray","groupWidth","groupHeight","oneRowLegend","rowHeight","maxTraceHeight","maxTraceWidth","fullTracesWidth","traceGap","traceWidth","expandMargin","legendData","hiddenSlices","hiddenlabels","clipPath","shape-rendering","scrollBox","scrollBar","firstRender","lxMax","lyMax","expandHorizontalMargin","legendWidth","legendWidthMax","legendHeight","legendHeightMax","scrollBarY","scrollBoxY","scrollBarYMax","scrollBarHeight","scrollBarMargin","scrollBoxYMax","scrollBarWidth","scrollHandler","newY","legend.x","legend.y","clickedTrace","SHOWISOLATETIP","attrUpdate","attrIndices","carrs","carrIdx","thisLabelIndex","hasLegendgroup","traceIndicesInGroup","nextVisibility","setVisibility","isInGroup","otherState","isIsolated","updateKeys","insertUpdate","attrIndex","valueArray","lastGroupbyIndex","curState","scrollBarColor","lgroupToTraces","lgroups","hasOneNonBlankGroup","slicesShown","lgroupi","addOneItem","legendGroup","uniqueGroup","lgroup","labelj","ltraces","lgroupsLength","formatPiePercent","vRounded","formatPieValue","getFirstFilled","drawModule","clickModule","calcAutorange","onClick","convertCoords","ends","startRot","endRot","headStyle","startHeadStyle","startScale","doStart","doEnd","backOff","startBackOff","hideLine","backOffX","backOffY","startBackOffX","startbackOffY","pathlen","start0","dstart","end0","dend","drawhead","arrowHeadStyle","rot","arrowScale","getToggleSets","anni","showMode","pointj","onSet","offSet","explicitOffSet","hoverLen","clickData2r","_xclick","_yclick","explicitOff","sets","toggleSets","handleArrayContainerDefaults","handleAnnotationDefaults","handleAnnotationCommonDefaults","clickToShow","arrowPosDflt","gdMock","arrowPosAttr","aaxRef","aDflt","xClick","yClick","annAutorange","headPlus","headMinus","startHeadPlus","startHeadMinus","headSize","startHeadSize","_xpadplus","_xpadminus","_ypadplus","_ypadminus","annotationList","annotationAxes","doExtra","attrPrefix","currentVal","GL3D","zref","sceneLayoutIn","sceneLayoutOut","mockAnnAxes","fullSceneLayout","pdata","_xa","_ya","anns","glplot","cameraParams","graphDiv","xformMatrix","model","optionsIn","drawShape","shapeLayer","data-index","fill-rule","getPathString","clipAxes","shapePath","shapeOptions","astrX0","astrY0","astrX1","astrY1","astrN","astrS","astrW","astrE","optN","optS","optW","optE","pathIn","astrPath","x2p","y2p","p2x","p2y","dragMode","MINWIDTH","MINHEIGHT","updateDragMode","moveShape","resizeShape","moveX","moveY","movePath","newN","newS","newW","newE","setupDragElement","x2r","y2r","paramNumber","segmentType","xParams","yParams","nParams","paramString","convertPath","rightPt","handleShapeDefaults","shapeIn","shapeOut","shapeType","pos2r","r2pos","attr0","attr1","in0","in1","shapeBounds","paramsToUse","convertVal","drawnParam","params","shapeList","imageDefaults","imageIn","imageOut","imageDataAbove","imageDataSubplot","imageDataBelow","anchors","setImage","thisImage","imagePromise","errorHandler","dataURL","applyAttributes","xOffset","yOffset","xPos","yPos","imagesBelow","imagesAbove","imagesOnSubplot","image","currentPos","currentSize","newPos","newSize","menuDefaults","menuIn","menuOut","buttonIn","buttonOut","buttonsIn","buttonsOut","buttonsDefaults","ScrollBox","keyFunction","menuOpts","isActive","gButton","setActive","buttonOpts","gHeader","buttonIndex","isSilentUpdate","drawButtons","drawHeader","headerOpts","posOpts","xPad","positionOverrides","headerWidth","headerHeight","drawItem","setItemPosition","styleOnMouseOver","styleOnMouseOut","buttonData","isFolded","klass","openHeight","openWidth","scrollBoxPosition","defaultPrevented","menu","styleButtons","translateX","translateY","heights","widths","hbar","vbar","drawScrollBox","hasHBar","hasVBar","hideScrollBox","drawItemRect","drawItemText","data-notex","findDimensions","width1","height1","totalWidth","totalHeight","fakeButtons","tWidth","wEff","tHeight","tLines","hEff","paddedWidth","paddedHeight","graphSize","overrideOpts","finalHeight","spanOffset","menuData","contOpts","makeMenuData","menus","pushMargins","clearPushMargins","headerGroups","scrollBoxId","_gButton","barLength","barRadius","barPad","barColor","boxL","boxR","boxT","boxB","isDown","isLeft","isUp","boxW","boxH","_box","needsHorizontalScrollBar","hbarW","hbarH","hbarL","hbarT","_hbarXMin","_hbarTranslateMax","needsVerticalScrollBar","vbarW","vbarH","vbarL","vbarT","_vbarYMin","_vbarTranslateMax","clipL","clipR","clipT","clipB","_clipRect","onBoxDrag","_onBoxDrag","_onBoxWheel","onBarDrag","_onBarDrag","translateXMax","translateYMax","stepAttrs","sliderDefaults","sliderIn","sliderOut","stepsDefaults","sliderOpts","sliderLabels","maxLabelWidth","labelHeight","stepOpts","drawLabel","inputAreaWidth","outerLength","lenPad","inputAreaStart","inputAreaLength","availableSpacePerLabel","computedSpacePerLabel","labelStride","currentValueMaxWidth","currentValueHeight","currentValueTotalHeight","currentValueMaxLines","dummyGroup","curValPrefix","drawCurrentValue","curValSize","sliderGroup","valueOverride","textAnchor","drawGrip","grip","attachGripEvents","drawLabelGroup","labelItems","labelSteps","normalizedValueToPosition","fraction","handleInput","normalizedPosition","doTransition","quantizedPosition","doCallback","previousActive","setGripPosition","slider","interaction","_nextMethod","_nextMethodRaf","$gd","getSliderOpts","positionToNormalizedValue","isMajor","_invokingCommand","drawTouchRect","drawRail","computedLength","sliderData","makeSliderData","sliders","sliderGroups","gSlider","nsteps","computeLabelSteps","drawSlider","axOut","outRange","drawBg","rangeSlider","axisOpts","borderCorrect","offsetShift","_offsetShift","_width","_height","addClipPath","_clipId","drawRangePlot","rangePlots","isMainPlot","oppAxisOpts","oppAxisName","mockFigure","filterRangePlotCalcData","drawMasks","maskMin","maskMax","drawSlideBox","slideBox","drawGrabbers","grabberMin","grabberMax","handleFixAttrs","handleDynamicAttrs","handleMin","handleMax","grabAreaFixAttrs","grabAreaMin","grabAreaMax","rangeSliderData","makeRangeSliderData","rangeSliders","oppDomain","tickHeight","range0","range1","dist","minVal","maxVal","mouseMove","pixelMin","pixelMax","delta","_pixelMin","_pixelMax","setDataRange","mouseUp","hw2","clampHandle","setPixelRange","rangeselector","selectorIn","selectorOut","posDflt","anchoredList","getPosDflt","getUpdateObject","selectorKeyFunc","drawButtonRect","selectorLayout","isHovered","getFillColor","drawButtonText","selectors","makeSelectorData","axisLayout","reposition","buttonLayout","xrange","currentRange","base2","getXRange","Click to enter Colorscale title","clonePlot","Bar","handleStyleDefaults","hasBoth","hasInside","hasOutside","textFont","hasBars","shouldBeGapless","gappedAnyway","usedSubplots","colorscaleCalc","sa","scalendar","hasB","hasBase","Sieve","setGroupPositions","excluded","included","setGroupPositionsInOverlayMode","sieve","calcTrace0","positions","distinctPositions","overlap","nTraces","barGroupWidth","barWidthPlusGap","offsetFromCenter","barwidth","poffset","bargroupwidth","bardelta","binWidth","setBarCenterAndWidth","updatePositionAxis","setOffsetAndWidthInGroupMode","sieveBars","normalizeBars","setBaseAndTop","setGroupPositionsInGroupMode","relative","setOffsetAndWidth","sLetter","getAxisLetter","sRange","barBase","put","barTop","expandRange","stackBars","isOutmostBar","_outmost","setGroupPositionsInStackOrRelativeMode","dontMergeOverlappingData","newPoffset","initialPoffset","initialBarwidth","newBarwidth","pLetter","poffsetIsArray","barwidthIsArray","calcBar","allowMinDtick","distinctPositions0","calcBarOffset","calcBarWidth","sTop","sTiny","sMin","sMax","maybeExpand","fullTraces","calcTracesHorizontal","calcTracesVertical","separateNegativeValues","getLabel","oldValue","attributeText","attributeTextPosition","attributeTextFont","attributeInsideTextFont","attributeOutsideTextFont","TEXTPAD","getTransform","targetX","targetY","transformScale","getFontValue","attributeDefinition","attributeValue","defaultValue","familyValue","getValue","sizeValue","colorValue","coerceString","isOutOfBounds","coerceColor","arrayOrScalar","cdbar","bartraces","ct","fixpx","roundWithLine","appendTextNode","textSelection","getText","coerceEnumerated","getTextPosition","textBB","constrained","getTextFont","insideTextFont","getInsideTextFont","outsideTextFont","getOutsideTextFont","inStackOrRelativeMode","barHeight","textHasSize","fitsInside","fitsInsideIfRotated","fitsInsideIfShrunk","textpad","targetWidth","targetHeight","getTransformToMoveOutsideBar","getTransformToMoveInsideBar","appendBarText","barcount","posVal","sizeVal","sizeLetter","isClosest","thisBarMinPos","thisBarMaxPos","minPos","maxPos","positionFn","__WEBPACK_IMPORTED_MODULE_1_app_charts_responsive_chart__","super","plotlyData","traceData","__WEBPACK_IMPORTED_MODULE_2_app_charts_trace_data__","dummyEl","maxLabel","drawChart","hmr","locals","host","currentDir","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1"],"mappings":"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CAsoE,QAAA,aAIA1uE,QAAA,sCACA87D,KAAA,IACAwpC,KAAA,OACAF,SAAA,OACAK,aACA,sBACA,0DACA,yDACA,yBACAv/E,KAAA,MAEA6qD,WACArC,QAAA,aACA1uE,SAAA,iBACA87D,MAAA,EACAwpC,KAAA,QACAF,SAAA,OACA6T,cAAuBC,gBAAA1mH,EAAA2mH,gBAAA3mH,GACvBizG,aACA,sDACA,0CACA,iCACA,+DACAv/E,KAAA,MAEA+qD,WACAvC,QAAA,aACA1uE,QAAA,iCACA87D,KAAA,SACAwpC,KAAA,QACAF,SAAA,OACAK,aACA,gEACA,qBACA,wCACA,+BACA,+CACA,iCACAv/E,KAAA,MAEA3jB,OACAmsE,QAAA,aACA42B,KAAA,OACA8T,QACa1qC,QAAA,MAAA02B,SAAA,OAAA6T,cAAiDI,cAAA,KACjD3qC,QAAA,MAAA02B,SAAA,OAAA6T,cAAiDI,cAAA,KAE9DjU,SAAA,OACA6T,cAAuBloC,WAAA,GACvB00B,aACA,+BACA,kEACA,sDACA,8BACA,2DACA,4DACA,6CACA,0DACA,2DACA,6CACAv/E,KAAA,MAEAozF,YACA5qC,QAAA,UACA5S,MAAA,EACAwpC,KAAA,OACAF,SAAA,OACAK,aACA,oDACA,mCACAv/E,KAAA,MAIAqzF,aACA7qC,QAAA,aACA1uE,QACAitE,EAAAy1B,QAAA9mG,EAAA5I,WACAi6E,EAAAy1B,QAAA/zF,EAAA3b,YAEAsyG,KAAA,OACAF,SAAA,OACAK,aACA,qEACA,4DACA,iEACA,sEACA,kDACA,6EACA,kFACA,iDACA,+EACA,wDACA,yFACA,wEACA,8CACAv/E,KAAA,MAEAszF,YACA9qC,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,OACAF,SAAA,OACAK,aACA,gFACA,4EACA,8EACA,+EACA,iEACAv/E,KAAA,MAEAn1B,WACA29E,QAAA,aACA1uE,QAAA,kBACA87D,KAAA,QACAwpC,KAAA,OACAF,SAAA,OACAK,aACA,+EACA,yEACA,uEACAv/E,KAAA,MAGAuzF,iBACA/qC,QAAA,aACA1uE,QAAA,iDACAslG,KAAA,OACAF,SAAA,OACAK,aACA,+EACA,+EACA,8EACA,mFACAv/E,KAAA,MAGAiwD,UACAzH,QAAA,aACA1uE,QAAA,yBACAslG,KAAA,OACAF,SAAA,QACA6T,cAAuBviC,WAAAlkF,EAAA0iF,WAAA1iF,GACvBizG,aACA,oCACA,sDACA,2DACA,sDACA,uEACA,+DACA,mCACA,6DACAv/E,KAAA,MAEAowD,QACA5H,QAAA,UACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,QACAK,aACA,iEACA,gEACA,kCACA,sDACAv/E,KAAA,MAEAwwD,OACAhI,QAAA,MACA42B,KAAA,QACAF,SAAA,QACA6T,cAAuB9iC,SAAA,UACvBsvB,aACA,qDACA,oBACA,gFACA,+DACA,0DACA,4EACA,iFACA,gFACAv/E,KAAA,MAEAgvD,OACAxG,QAAA,MACA42B,KAAA,QACAF,SAAA,QACA6T,cAAuB9iC,SAAA,UACvBsvB,aACA,iEACA,oFACA,6EACA,mCACA,8DACA,0DACA,+FACA,4EACA,2DACA,wFACA,gGACA,wCACA,gFACA,6DACA,6BACA,kFACA,kCACA,kGACA,oDACAv/E,KAAA,MAEA4wD,UACApI,QAAA,aACA02B,SAAA,QACAK,aACA,sDACA,sDACA,yBACAv/E,KAAA,MAEA6wD,UACArI,QAAA,aACA02B,SAAA,QACAK,aACA,gEACA,sDACA,yBACAv/E,KAAA,MAEAiiC,OACAumB,QAAA,aACA1uE,QAAA,uBACAslG,KAAA,QACAF,SAAA,QACAK,aACA,6CACA,yCACA,iEACA,mBACAv/E,KAAA,MAEAo8D,QACA5T,QAAA,aACA1uE,SAAA,+BACA87D,MAAA,EACAwpC,KAAA,QACAF,SAAA,oBACAK,aACA,4DACA,0CACA,0CACA,qDACA,oCACA,iEACA,mDACA,gCACAv/E,KAAA,MAEA08D,SACAlU,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,QACAK,YAAA,iCAEAtiB,WACAzU,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,QACAK,YAAA,gCAEA9f,WACAjX,QAAA,QACA5S,KAAAgB,EAAAE,YACAsoC,KAAA,QACAF,SAAA,QACAK,YAAA,wBAEAniB,gBACA5U,QAAA,UACA5S,MAAA,EACAwpC,KAAA,QACAF,SAAA,QACAK,YAAA,wDAEAtzB,YACAzD,QAAA,UACA5S,MAAA,EACAwpC,KAAA,QACAF,SAAA,UACAK,aACA,4EACA,yDACAv/E,KAAA,MAEAwzF,YACAhrC,QAAA,QACA5S,KAAA,KACAwpC,KAAA,QACAF,SAAA,OACAK,YAAA,iEAEAkU,gBACAjrC,QAAA,SACA5S,KAAA,EACAwpC,KAAA,QACAF,SAAA,OACAK,YAAA,4CAEAmU,UAAAnsH,KAA4Bi0E,GAAS5F,KAAA,OAAAspC,SAAA,SACrCyU,WACAnrC,QAAA,WACAorC,OAAA,4BACAxU,KAAA,QACAxpC,KAAA,SACAspC,SAAA,OACAK,aACA,iDACA,sEACA,wBAEA,kEACA,uBAEA,oEACA,cACAv/E,KAAA,MAEA6zF,WACArrC,QAAA,aACA1uE,QAAA,iBACA87D,KAAA,OACAwpC,KAAA,QACAF,SAAA,OACAK,YAAA,uFAEAlvB,SAAAyU,GACAoa,SAAA,QACAK,YAAA,wBAEArf,WACA1X,QAAA,QACA5S,KAAA,OACAwpC,KAAA,QACAF,SAAA,QACAK,aACA,oEACA,0DACA,eACAv/E,KAAA,MAEAu2D,YACA/N,QAAA,SACA5S,KAAA,GACAwpC,KAAA,QACAF,SAAA,QACAK,YAAA,6BAEA/oB,gBACAhO,QAAA,aACA1uE,QAAA,6BACA87D,KAAA,MACAwpC,KAAA,QACAF,SAAA,QACAK,aACA,yDACA,8DACA,4DACA,wCACAv/E,KAAA,MAEAy2D,YACAjO,QAAA,SACA5S,KAAA,GACAwpC,KAAA,QACAF,SAAA,QACAK,YAAA,6BAEA7oB,gBACAlO,QAAA,aACA1uE,QAAA,6BACA87D,KAAA,MACAwpC,KAAA,QACAF,SAAA,QACAK,YAAA,mDAEAzqB,cACAtM,QAAA,aACA1uE,QAAA,6BACA87D,KAAA,MACAwpC,KAAA,QACAF,SAAA,QACAK,aACA,gEACA,4DACA,0DACA,mCACAv/E,KAAA,MAEAqzD,gBACA7K,QAAA,aACA1uE,QAAA,iCACA87D,KAAA,IACAwpC,KAAA,QACAF,SAAA,QACAK,aACA,uDACA,kDACA,0CACA,gBACA,gBACA,iDACA,eACA,eACAv/E,KAAA,MAEA5qB,mBACAozE,QAAA,UACA5S,MAAA,EACAwpC,KAAA,QACAF,SAAA,QACAK,aACA,kDACAv/E,KAAA,MAEAu1D,YACA/M,QAAA,SACA5S,KAAA,GACAwpC,KAAA,QACAF,SAAA,QACAK,aACA,yEACA,+DACA,sEACA,qBACA,2EACA,yEACA,wEACA,8CACAv/E,KAAA,MAEA65D,iBACAtkB,iBAAA,iBAEAukB,YACAtR,QAAA,aACA42B,KAAA,OACA8T,QACiB1qC,QAAA,MAAA02B,SAAA,UACA12B,QAAA,MAAA02B,SAAA,UAEjBA,SAAA,QACAK,aACA,0DACA,+DACA,oCACAv/E,KAAA,MAEA7rB,OACAq0E,QAAA,SACA5S,KAAA,GACAwpC,KAAA,QACAF,SAAA,QACAK,aACA,2EACAv/E,KAAA,MAEAk/E,SAAA,SAEAjqB,aACAzM,QAAA,SACA5S,KAAA,GACAwpC,KAAA,QACAF,SAAA,OACAK,aACA,yEACA,+DACA,sEACA,qBACA,2EACA,yEACA,wEACA,8CACAv/E,KAAA,MAGAq9D,UACA7U,QAAA,UACA5S,MAAA,EACAwpC,KAAA,QACAF,SAAA,cACAK,aACA,iEACAv/E,KAAA,MAEA8zF,WACAtrC,QAAA,QACA5S,KAAAgB,EAAAE,YACAsoC,KAAA,QACAF,SAAA,cACAK,YAAA,6BAEA/iB,WACAhU,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,oBACAK,YAAA,4CAEAlc,UACA7a,QAAA,UACA42B,KAAA,QACAF,SAAA,QACAK,aACA,kDACA,2DACAv/E,KAAA,MAEAujE,WACA/a,QAAA,QACA5S,KAAAgB,EAAAG,UACAqoC,KAAA,QACAF,SAAA,QACAK,YAAA,qCAEA1iB,WACArU,QAAA,SACAt9E,IAAA,EACA0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,EACAwpC,KAAA,OACAF,SAAA,OACAK,aACA,8BACA,2BACAv/E,KAAA,MAEAvX,GACA+/D,QAAA,aACA02B,SAAA,sBACAK,YAAA,2BAEA/xF,IACAg7D,QAAA,MACA5S,KAAA,EACAwpC,KAAA,OACAF,SAAA,sBACAK,aACA,oBACA,0CACA,gBACA,4DACAv/E,KAAA,MAEAzV,IACAi+D,QAAA,SACA5S,KAAA,EACAwpC,KAAA,OACAF,SAAA,OACAK,aACA,8BACA,2BACAv/E,KAAA,MAEAzb,MACAikE,QAAA,SACA42B,KAAA,OACAxpC,KAAA,GACA4pC,SAAA,EACAN,SAAA,OACAK,aACA,sDACA,mDACA,uBACA,8DACA,kCACA,0EACA,oDACAv/E,KAAA,MAEAg6F,WACAxxC,QAAA,SACA42B,KAAA,OACAxpC,KAAA,GACA4pC,SAAA,EACAN,SAAA,QACAK,aACA,4DACA,mDACA,uBACA,8DACA,kCACA,6DACAv/E,KAAA,MAEAogC,MACAooB,QAAA,WACAorC,OAAA,0BACAsD,QAAA,QACA9X,KAAA,OACAF,SAAA,OACAK,aACA,sDACA,kEACA,4DACA,mBACA,0BAAAx4B,EAAAkzC,cAAA,WACA,4DACAj6F,KAAA,MAEAk6F,SACA1xC,QAAA,WACAorC,OAAA,kBACAxU,KAAA,OACAF,SAAA,QACAK,aACA,+DACA,oDACA,+DACA,mEACAv/E,KAAA,MAEAkV,MACAxjB,OACA82D,QAAA,QACA42B,KAAA,QACAF,SAAA,QACAK,YAAA,wBAEAn4E,OACAohD,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,QACAK,YAAA,gCAEArjC,OACAsM,QAAA,aACA1uE,QAAA,yCACA87D,KAAA,SACAwpC,KAAA,QACAF,SAAA,OACAK,aACA,6BACA,gEACA,mEACAv/E,KAAA,MAEAm6F,WACA3xC,QAAA,SACAt9E,IAAA,EACAD,IAAA,IACA2qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,OACAK,aACA,mDACA,gCACA,qEACAv/E,KAAA,MAEAw7C,KAAAj0E,KAA2Bi0E,GAAS0jC,SAAA,UACpCkb,UACA5xC,QAAA,UACA5S,MAAA,EACAwpC,KAAA,OACAF,SAAA,OACAK,aACA,2EACA,0EACA,+CACAv/E,KAAA,MAEAk/E,SAAA,QAGAmb,aACA7xC,QAAA,UACA5S,MAAA,EACAwpC,KAAA,OACAF,SAAA,OACAK,aACA,iCACA,iCACA,8CACAv/E,KAAA,MAEA6tE,YACArlB,QAAA,UACA5S,MAAA,EACAwpC,KAAA,OACAF,SAAA,OACAK,aACA,mDACA,sCACA,mEACA,uEACAv/E,KAAA,MAGAmH,MACAqhD,QAAA,aACA1uE,QAAA,kEACA87D,KAAA,OACAwpC,KAAA,QACAF,SAAA,OACAK,aACA,4CACA,sCACA,4DACA,6DACA,mEACA,gEACA,iEACA,aACA,gEACA,oDACA,gEACA,sEACA,kEACA,iDACAv/E,KAAA,MAEAg8C,WACAwM,QAAA,QACA42B,KAAA,QACAF,SAAA,QACAK,aACA,uBACA,4DACA,+DACAv/E,KAAA,MAEAo+C,OAAA72E,GACA86B,QACAmmD,QAAA,aACA1uE,OAAAgtE,EAAArK,WACA7G,KAAA,SACA4pC,SAAA,EACAJ,KAAA,QACAF,SAAA,QACAK,aACA,+BACA,kEACA,iEACA,oDACA,mCACAv/E,KAAA,MAEAw3C,SACAgR,QAAA,SACAt9E,IAAA,EACAD,IAAA,EACAu0G,SAAA,EACAJ,KAAA,QACAF,SAAA,QACAK,YAAA,4BAEA7sG,MACA81E,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACA4pC,SAAA,EACAJ,KAAA,QACAF,SAAA,kBACAK,YAAA,iCAEA+a,cACA9xC,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,OACAK,aACA,4DACA,gCACAv/E,KAAA,MAEAu6F,SACA/xC,QAAA,SACA5S,KAAA,EACAwpC,KAAA,QACAF,SAAA,OACAK,aACA,mEACA,+DACA,qDACAv/E,KAAA,MAEAw6F,SACAhyC,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,OACAK,aACA,mEACA,gEACAv/E,KAAA,MAEAy6F,UACAjyC,QAAA,aACA1uE,QAAA,mBACA87D,KAAA,WACAwpC,KAAA,OACAF,SAAA,OACAK,aACA,mEACA,0DACA,cACAv/E,KAAA,MAGAi4F,WACAzvC,QAAA,UACA42B,KAAA,OACAxpC,MAAA,EACAspC,SAAA,OACAK,aACA,oEACA,sDACAv/E,KAAA,MAEAkpE,SAAA6wB,EAEA7kF,KAAA3tC,GACA6/B,OACAohD,QAAA,SACAt9E,IAAA,EACAs0G,SAAA,EACAJ,KAAA,QACAF,SAAA,QACAK,YAAA,mEAEAL,SAAA,QAEA2a,EAAA,gBAEAx8C,UACAn9D,MACAsoE,QAAA,aACA1uE,QAAA,yCACA0lG,SAAA,EACA5pC,KAAA,OACAwpC,KAAA,QACAF,SAAA,OACAK,aACA,sDACAv/E,KAAA,MAEAtO,OACA82D,QAAA,QACAg3B,SAAA,EACAJ,KAAA,QACAF,SAAA,OACAK,aACA,6CACA,yDACA,+BACAv/E,KAAA,MAEAk/E,SAAA,QAEAA,SAAA,QAEA2a,EAAA,WAEAxoH,UACA+sE,QACA5G,SACAgR,QAAA,SACAt9E,IAAA,EACAD,IAAA,EACAm0G,KAAA,QACAF,SAAA,QACAK,YAAA,+CAEA7tF,OACA82D,QAAA,QACA42B,KAAA,QACAF,SAAA,QACAK,YAAA,6CAEA7sG,MACA81E,QAAA,SACAt9E,IAAA,EACAk0G,KAAA,QACAF,SAAA,QACAK,YAAA,4CAEAL,SAAA,SAEA18B,UACA9wD,OACA82D,QAAA,QACA42B,KAAA,QACAF,SAAA,QACAK,YAAA,gDAEAL,SAAA,SAEAA,SAAA,SAEA9+B,YACAhC,QACA5G,SACAgR,QAAA,SACAt9E,IAAA,EACAD,IAAA,EACAm0G,KAAA,QACAF,SAAA,QACAK,YAAA,uFAEA7tF,OACA82D,QAAA,QACA42B,KAAA,QACAF,SAAA,QACAK,YAAA,qFAEA7sG,MACA81E,QAAA,SACAt9E,IAAA,EACAk0G,KAAA,QACAF,SAAA,QACAK,YAAA,oFAEAL,SAAA,SAEA18B,UACA9wD,OACA82D,QAAA,QACA42B,KAAA,QACAF,SAAA,QACAK,YAAA,wFAEAL,SAAA,SAEAA,SAAA,SAGAt8B,cACA4F,QAAA,aACA1uE,QACA,oCACA,6CACA,8CAEA87D,KAAA,gBACA4pC,SAAA,EACAJ,KAAA,QACAF,SAAA,OACAK,aACA,4CACA,2CACAv/E,KAAA,MAEAwiD,SAAAsiB,GACAoa,SAAA,OACAC,cAAA,QACAK,SAAA,EACAD,YAAA,wBAGAhtF,GACAi2D,QAAA,aACA02B,SAAA,OACAK,aACA,+BACA,8CACA,gCACAv/E,KAAA,KAEAhlB,GACAwtE,QAAA,aACA02B,SAAA,OACAK,aACA,+BACA,8CACA,iCACAv/E,KAAA,KAGAy0F,QAAAqF,EACAhF,QAAAgF,iCCreAv4H,EAAAD,SAEAo5H,QAAA,GAGAC,OAAA,GAKAC,eAAA,EAEAC,aAAA,EAEAC,cAAA,GACAC,UAAA,oBAGAC,aAAA,GAGAC,QAAA,wCCrBA15H,EAAAD,QAAAF,EAAA,mCCQAG,EAAAD,SAGA65E,YAAA,EAMA+/C,UAAA,EACAC,OAMAC,oBAAA,EAEAC,gBAAA,EACAC,gBAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,mBAAA,EACAC,gBAAA,EAEAC,YAAA,EACAC,eAAA,EAEAC,WAAA,GAOA1xB,aAAA,EAGA2xB,YAAA,EAGAjqB,WAAA,EAGAD,aAAA,EAGAmqB,YAAA,EAGAC,YAAA,iBAGAC,UAAA,EAGAC,qBAAA,EAMAC,yBAAA,EAGA11B,UAAA,EAGAe,UAAA,EAGAD,SAAA,aAGAb,aAAA,EAGA01B,eAAA,QAMAC,0BAMAC,uBAQAC,gBAAA,EAGAC,aAAA,EAGAC,iBAAA,EAQAC,cAAA,cAGAC,YAAA,uBAOAC,kBAAA,KASA3D,QAAA,EAMAnuB,oBAMA5hE,OAAA,QAuBAstC,0CC5KA,IAAAsC,EAAA13E,EAAA,GACA63E,EAAA73E,EAAA,GAEAy7H,EAAAz7H,EAAA,IACAuxE,EAAAvxE,EAAA,IACA07H,EAAA17H,EAAA,IACA27H,EAAA37H,EAAA,IAGA47H,EAAA57H,EAAA,KACA67H,EAAA77H,EAAA,KAEA87H,EAAA97H,EAAA,IAEAmG,EAAA0xE,EAAA1xE,WACAE,EAAAwxE,EAAAxxE,cAEA01H,EAAA,gBACAC,EAAA,mBAGAC,GAAAF,EAAAC,EAFA,oBACA,eAwVA,SAAAE,EAAAC,EAAAhpH,EAAA/S,GACA,IAAA+7H,EAAA,SAEA,GAAAA,EAAAhoD,iBAEA,GAAAioD,EAAAjpH,EAAA/S,aACA,GAAAA,EAAA+S,EAAA9K,OAAA,SAKA,KAASjI,EAAA+S,EAAA9K,OAAkBjI,IAAA,CAC3B,IAAAi8H,EAAAF,EAAAhpH,EAAA/S,IACA,IAAAy3E,EAAAz1E,cAAAi6H,GACA,MAEA,GAHAF,EAAAE,EAGAj8H,IAAA+S,EAAA9K,OAAA,QAEA,GAAA8zH,EAAAhoD,kBAEA,IAAAioD,EAAAjpH,IADA/S,IACA,cAEA,kBAAA+7H,EAAA/0C,QAAA,CAEA,IAAA76B,EAAAp5C,IADA/S,GAEA,IAAAg8H,EAAA7vE,OAAA4vE,EAAArK,MAAAzpH,OAAA,SACA8zH,IAAArK,MAAAvlE,IAIA,OAAA4vE,EAGA,SAAAC,EAAAjuH,GACA,OAAAA,IAAAvE,KAAA6C,MAAA0B,OAAA,EA2IA,SAAAmuH,EAAA32B,GAIA,OAGA,SAAAA,GAEA,SAAA42B,EAAA/uB,GACA,OACApmB,QAAA,SACA42B,KAAA,OACAG,aACA,4CACA3Q,EAAA,KACA5uE,KAAA,KACAk/E,SAAA,QAuBA59G,EAAAqtG,MAAA5H,EAnBA,SAAAr9F,EAAAklG,EAAA7H,GACAzlG,EAAAs8H,YAAAl0H,GACA,eAAAA,EAAA8+E,SAEA9+E,EAAA01G,KAAA,OAEArY,EAAA6H,EAAA,OAAA+uB,EAAA/uB,KAEA,IAAAllG,EAAA81G,UAEAzY,EAAA6H,EAAA,OAAA+uB,EAAA/uB,IAGA31B,EAAAz1E,cAAAkG,KAEAA,EAAA01G,KAAA,YAnCAye,CAAA92B,GA0CA,SAAAA,GAgBAzlG,EAAAqtG,MAAA5H,EAdA,SAAAr9F,EAAAklG,EAAA7H,GACA,IAAAr9F,EAAA,OAEA,IAAAo0H,EAAAp0H,EAAA0zH,GAEA,IAAAU,EAAA,cAEAp0H,EAAA0zH,GAEAr2B,EAAA6H,IAA2BskB,UAC3BnsB,EAAA6H,GAAAskB,MAAA4K,GAAAp0H,EACAq9F,EAAA6H,GAAAwQ,KAAA,WAtDA2e,CAAAh3B,GAEAA,EAqEA,SAAAi3B,EAAAlrD,EAAAD,EAAAziE,GACA,IAAA2oF,EAAA9f,EAAA51E,eAAAyvE,EAAA1iE,GACA22F,EAAAt/F,KAAgCorE,EAAAC,kBAEhCi0B,EAAAo2B,IAAA,EACApkC,EAAAhvF,IAAAg9F,GAGA,SAAAk3B,EAAAC,EAAAC,EAAA/tH,GACA,IAAA2oF,EAAA9f,EAAA51E,eAAA66H,EAAA9tH,GAEA2oF,EAAAhvF,IAAAtC,EAAAsxF,EAAAz2F,UAAuC67H,IAtlBvC78H,EAAA67H,iBACA77H,EAAA87H,qBACA97H,EAAA88H,WALA,cAMA98H,EAAA+7H,mBAaA/7H,EAAAgB,IAAA,WACA,IAAAkxE,KAEAsF,EAAApE,SAAAl1D,OAAA,QAAA9C,QAAA,SAAAwD,GACAszD,EAAAtzD,GAsWA,SAAAA,GACA,IAAA2yD,EAAAo8B,EAEA,SAAA/uF,GACA2yD,GAAmBa,WAAAspD,GACnB/tB,OAGAp8B,EAAAiG,EAAAp3E,QAAAwe,GAAA2yD,QACAo8B,EAAAp8B,EAAAo8B,gBAGA,IAAAv7B,GAGAxzD,KAAA,MAGAzY,EAAAisE,EAAAmpD,GAGAp1H,EAAAisE,EAAAb,EAAAa,YAGAu7B,EAAAv7B,YACAjsE,EAAAisE,EAAAu7B,EAAAv7B,YAIAA,EAAAxzD,OAEA,IAAAlU,GACAipE,KAAApC,EAAAoC,SACAvB,WAAAgqD,EAAAhqD,IAIA,GAAAb,EAAAC,iBAAA,CACA,IAAAA,KAEArrE,EAAAqrE,EAAAD,EAAAC,kBACA9mE,EAAA8mE,iBAAA4qD,EAAA5qD,GAGA,OAAA9mE,EAlZAqyH,CAAAn+G,KAGA,IAkeA6mF,EAleAlzB,KAMA,OAJA3xE,OAAA2P,KAAAinE,EAAA/E,oBAAAr3D,QAAA,SAAAwD,GACA2zD,EAAA3zD,GA0cA,SAAAA,GACA,IAAA2yD,EAAAiG,EAAA/E,mBAAA7zD,GACAwzD,EAAAjsE,KAAqCorE,EAAAa,YAarC,OAVAxxE,OAAA2P,KAAAinE,EAAAxF,oBAAA52D,QAAA,SAAA3O,GACA,IAAA8kE,EAAAiG,EAAAxF,mBAAAvlE,GAEA8kE,EAAAU,QAAAV,EAAAU,OAAAM,YAAAhB,EAAAU,OAAAM,WAAA3zD,IACAhe,OAAA2P,KAAAghE,EAAAU,OAAAM,WAAA3zD,IAAAxD,QAAA,SAAA1T,GACAi1H,EAAAvqD,EAAAb,EAAAU,OAAAM,WAAA3zD,GAAAlX,WAMA0qE,WAAAgqD,EAAAhqD,IA1dA4qD,CAAAp+G,MAIAq+G,MACAC,WAAAvlD,EAAAl1E,cACA06H,SAAApB,EAAA79G,QAAA,iDACA0/F,UACA1rC,OAAA0pD,EAAA1pD,OACApe,OAAA8nE,EAAA9nE,QAEA29D,cACAxT,aACA,2DACA,2DACA,wDACA,6DACA,2DACA,4DACA,0DACA,yDACA,oEACA,8DACA,6DACA,iEACA,mEACA,uDACAv/E,KAAA,OAIAwzC,SACApe,OA+WA,WACA,IACA9gD,EAAAu+D,EADAC,KAOA,IAAAx+D,KAHA7M,EAAAqrE,EAAAH,GAGAmG,EAAA1E,iBAGA,IAFAvB,EAAAiG,EAAA1E,iBAAA9/D,IAEAw+D,iBAEA,iBAAAD,EAAA9wE,KACAi8H,EAAAlrD,EAAAD,EAAA,SACAmrD,EAAAlrD,EAAAD,EAAA,aAEA,CACA,IAAAziE,EAAA,YAAAyiE,EAAAnpE,KAAAmpE,EAAA9wE,KAAA8wE,EAAAnpE,KAEAs0H,EAAAlrD,EAAAD,EAAAziE,GAQA,IAAAkE,KAHAw+D,EA8HA,SAAAA,GAQA,OAPAvrE,EAAAurE,GACAuoC,WAAA4hB,EAAA5hB,WACAC,YAAA2hB,EAAA3hB,cAGA/zG,EAAAurE,EAAAmqD,EAAA7nE,QAEA0d,EAtIA4rD,CAAA5rD,GAGAgG,EAAAxF,mBAAA,CAEA,IAAAC,GADAV,EAAAiG,EAAAxF,mBAAAh/D,IACAi/D,OAYA,GAAAA,MAAAW,UAAAX,EAAAne,QAAA,CACA,IAAA8e,EAAAX,EAAAW,SACA,GAAAA,KAAA2G,QAAA3G,EAAA4G,MACA,QAAA6jD,KAAAzqD,EAAA2G,aAAA/H,EAAAgI,MAAA6jD,QAIA9rD,EAAAC,kBACAmrD,EAAAnrD,EAAAD,EAAAC,iBAAAD,EAAA9wE,MAIA,OACA+wE,iBAAA4qD,EAAA5qD,IAtaA8rD,GAEA/qD,aAEAgjC,QA2bA9P,GACA8P,OAAA59B,EAAAxxE,iBAAoCq1H,IAGpCY,EAAA32B,GAEAA,EAAA8P,QAhcAgoB,UAAAnB,EAAAX,KA+BAz7H,EAAAqtG,MAAA,SAAA5H,EAAAjjF,EAAAg7G,EAAAC,GACA,IAAAlwB,EAAAiwB,GAAA,EACAC,KAAA,GAEA78H,OAAA2P,KAAAk1F,GAAArqF,QAAA,SAAAkyF,GACA,IAAAllG,EAAAq9F,EAAA6H,GAEA,QAAAyuB,EAAApwH,QAAA2hG,GAAA,CAEA,IAAAowB,GAAAD,IAAA,QAAAnwB,EACA9qF,EAAApa,EAAAklG,EAAA7H,EAAA8H,EAAAmwB,GAEA19H,EAAAs8H,YAAAl0H,IAEAuvE,EAAAz1E,cAAAkG,IAAA,iBAAAklG,GACAttG,EAAAqtG,MAAAjlG,EAAAoa,EAAA+qF,EAAA,EAAAmwB,OAYA19H,EAAAs8H,YAAA,SAAA5pH,GACA,OAAAA,QAAA1H,IAAA0H,EAAAw0E,SAaAlnF,EAAA65G,oBAAA,SAAAjrG,GACA,IAAA+uH,KACApmE,KAEA,SAAA/0C,EAAApa,EAAAklG,EAAA7H,EAAA8H,GAgBA,GAfAh2C,IAAA9mD,MAAA,EAAA88F,GAAArvF,QAAAovF,IAGAllG,IACA,eAAAA,EAAA8+E,UAAA,IAAA9+E,EAAA81G,YACA,aAAA3mD,EAAAg2C,EAAA,kBAAAD,GAAA,aAAAA,IAUA,CAEA,IAAAx+F,EAOA,SAAAyoD,GACA,OAAAA,EAAA74B,KAAA,KARAk/F,CAAArmE,GACAtpD,EAAA0pE,EAAA51E,eAAA6M,EAAAE,GAAA9N,MACA2J,MAAAxI,QAAA8L,IAEA0vH,EAAAxxH,KAAA2C,IAYA,GALA9O,EAAAqtG,MAAAkuB,EAAA/4G,GACA5T,EAAA2iE,SAAA3iE,EAAA2iE,QAAAa,YACApyE,EAAAqtG,MAAAz+F,EAAA2iE,QAAAa,WAAA5vD,GAGA5T,EAAA2jE,WAGA,IAFA,IAAAA,EAAA3jE,EAAA2jE,WAEAryE,EAAA,EAAsBA,EAAAqyE,EAAApqE,OAAuBjI,IAAA,CAC7C,IACAD,EADAsyE,EAAAryE,GACAqxE,QAEAtxE,IACAs3D,GAAA,cAAAr3D,EAAA,KAEAF,EAAAqtG,MAAAptG,EAAAmyE,WAAA5vD,EAAA,IAgBA,OALA5T,EAAAw/F,YAAAx/F,EAAAw/F,WAAA78B,SAAA3iE,EAAAw/F,WAAA78B,QAAAa,aACApyE,EAAAqtG,MAAAz+F,EAAAw/F,WAAA78B,QAAAa,WAAA5vD,GACAm7G,EAAAhmD,EAAAtwE,aAAAs2H,IAGAA,GAkBA39H,EAAA69H,kBAAA,SAAAjvH,EAAAqE,GACA,IAEA6qH,EAAA7B,EAFAhqH,EAAAgB,EAAA,GACA/S,EAAA,EAGA,kBAAA+R,EAAA,CACA,IAAAtH,MAAAxI,QAAAyM,EAAA2jE,YAAA,SACA,IAAAwrD,EAAA9qH,EAAA,GACA,IAAAipH,EAAA6B,OAAAnvH,EAAA2jE,WAAApqE,OACA,SAGA8zH,GADA6B,GAAAtmD,EAAA/E,mBAAA7jE,EAAA2jE,WAAAwrD,GAAAn/G,WAAqFwzD,aACrF0rD,EAAA7qH,EAAA,IACA/S,EAAA,OAEA,YAAA0O,EAAAgQ,KACAq9G,EAAAP,EAAAzpH,OAEA,CAGA,IAAAs/D,EAAA3iE,EAAA2iE,QAEA,GADAA,OAAAiG,EAAAp3E,QAAAwO,EAAAgQ,MAAA28G,EAAA38G,KAAA01D,WAA8F/C,UAC9FA,EAAA,SAMA,KAHA0qD,GADA6B,EAAAvsD,EAAAa,aACA0rD,EAAA7rH,IAGA,CACA,IAAA4gE,EAAAtB,EAAAo8B,eACA96B,KAAAT,aACA6pD,EAAAppD,EAAAT,WAAAngE,IAKAgqH,MAAAV,EAAAtpH,IAGA,OAAA+pH,EAAAC,EAAAhpH,EAAA/S,IAgBAF,EAAAg+H,mBAAA,SAAA5kC,EAAAnmF,GAGA,OAAA+oH,EAGA,SAAA5iC,EAAAnnF,GACA,IAAA/R,EAAA8S,EAAAu+D,EAAAa,EAGA+4B,EAAA/R,EAAAgQ,iBACA,GAAA+B,EAAA,CACA,IAAAzgG,EACA,IAAAxK,EAAA,EAAkBA,EAAAirG,EAAAhjG,OAA4BjI,IAAA,CAE9C,IADAqxE,EAAA45B,EAAAjrG,IACAi7G,WAAA5pC,EAAA4pC,UAAA9mG,KAAApC,GAAA,CAGA,GAAAs/D,EAAA0sD,oBAAA,OAAA1sD,EAAA0sD,qBAGAvzH,GAAA6mE,EAAAC,mBAAA9mE,EAAA6mE,EAAAC,kBAKA,IAAA0sD,EAAA3sD,EAAA4sD,wBACA,GAAAD,GAAAjsH,KAAAisH,EAAA,OAAAA,EAAAjsH,GAEA,GAAAvH,EAAA,OAAAA,EAIA,IAAAtK,EAAAg5F,EAAA+P,SACA,GAAA/oG,EACA,IAAAF,EAAA,EAAkBA,EAAAE,EAAA+H,OAAoBjI,IAEtC,IADAkyE,EAAAhyE,EAAAF,GAAAsxE,mBACAv/D,KAAAmgE,EACA,OAAAA,EAAAngE,GAaA,IAAAe,KAAAwkE,EAAAxF,mBAEA,KADAT,EAAAiG,EAAAxF,mBAAAh/D,IACAi/D,QAAAhgE,IAAAs/D,EAAA9wE,KACA,OAAA8wE,EAAAC,iBAIA,GAAAv/D,KAAAo/D,EAAA,OAAAA,EAAAp/D,GAIA,kBAAAA,GAAA,gBAAAA,EACA,OAAA0pH,EAAA1pH,GAEA,OAAA0pH,EAAA7nE,OAAA7hD,KAAA,EAhEAmsH,CAAAhlC,EAAAnmF,EAAA,IAEAA,EAAA,kCC5SA,IAAAorH,EAAAv+H,EAAA,IAEAG,EAAAD,SACA4e,MACAsoE,QAAA,aACA42B,KAAA,OACAtlG,UACA87D,KAAA,UACAspC,SAAA,uBAEAzmE,SACA+vC,QAAA,aACA1uE,SAAA,mBACAslG,KAAA,OACAxpC,MAAA,EACAspC,SAAA,OACAK,aACA,mDACA,2CACA,kCACA,iDACAv/E,KAAA,MAEA05F,YACAlxC,QAAA,UACA42B,KAAA,OACAxpC,MAAA,EACAspC,SAAA,QACAK,aACA,0DACA,iCACAv/E,KAAA,MAEA4/F,aACAp3C,QAAA,SACA42B,KAAA,OACAxpC,KAAA,GACAspC,SAAA,QACAK,aACA,wCACA,kEACA,+BACAv/E,KAAA,MAEAw3C,SACAgR,QAAA,SACA42B,KAAA,QACAl0G,IAAA,EACAD,IAAA,EACA2qE,KAAA,EACAspC,SAAA,QACAK,YAAA,kCAEAx9G,MACAymF,QAAA,SACA42B,KAAA,OACAF,SAAA,QACAK,aACA,uBACA,0DACAv/E,KAAA,MAEA8/C,KACA0I,QAAA,SACA42B,KAAA,OACAxpC,KAAA,GACAspC,SAAA,QAEA1R,KACAhlB,QAAA,aACA02B,SAAA,OACAK,aACA,mCACA,mEACAv/E,KAAA,MAEA6/F,YACAr3C,QAAA,aACA02B,SAAA,OACAK,aACA,iCACA,0EACA,2EACA,gBACAv/E,KAAA,MAQAlvB,gBACA03E,QAAA,MACA42B,KAAA,OACAF,SAAA,OACAK,aACA,uDACA,yDACA,2EACA,6EACA,8EACAv/E,KAAA,MAGA21F,WACAntC,QAAA,WACA42B,KAAA,OACAwU,OAAA,2BACAsD,QAAA,qBACA1X,SAAA,EACA5pC,KAAA,MACAspC,SAAA,OACAK,aACA,sDACA,0EACA,kEACAv/E,KAAA,MAEA8/F,WAAAH,EAAAG,WACAlyF,QACAjN,OACA6nD,QAAA,SACA62B,SAAA,EACAC,QAAA,EACAF,KAAA,OACAF,SAAA,OACAK,aACA,mEACA,kDACAv/E,KAAA,MAEA+/F,WACAv3C,QAAA,SACAt9E,IAAA,EACAD,IAAA,IACA2qE,KAAA,IACAwpC,KAAA,OACAF,SAAA,OACAK,aACA,iEACA,mBACA,gEACA,6BACAv/E,KAAA,MAEAk/E,SAAA,uCCjJA,IAAAl8G,EAAA5B,EAAA,GACAqC,EAAArC,EAAA,IACAoC,EAAApC,EAAA,IACA4+H,EAAA5+H,EAAA,IAgBAG,EAAAD,QAAA,SAAAkmB,EAAAy4G,GACA,GAAAj9H,EAAAi9H,KAAA3qH,OAAA2qH,QACA,oBAAAA,GACA,SAAAA,EAAA9wH,OAAA8wH,EAAAx2H,OAAA,GACA,2BAUA,IAPA,IAEAy2H,EACApqD,EACAt0E,EAJAsM,EAAA,EACAqyH,EAAAF,EAAA5rH,MAAA,KAMAvG,EAAAqyH,EAAA12H,QAAA,CAGA,GADAy2H,EAAA5qH,OAAA6qH,EAAAryH,IAAA0G,MAAA,kCACA,CACA,GAAA0rH,EAAA,GAAAC,EAAAryH,GAAAoyH,EAAA,OAEA,QAAApyH,EACA,2BADAqyH,EAAArxH,OAAA,KAOA,IAJAgnE,EAAAoqD,EAAA,GACA/wH,OAAA,EAAA+wH,EAAA,GAAAz2H,OAAA,GACA4K,MAAA,MAEA7S,EAAA,EAAsBA,EAAAs0E,EAAArsE,OAAoBjI,IAC1CsM,IACAqyH,EAAArxH,OAAAhB,EAAA,EAAA7E,OAAA6sE,EAAAt0E,KAGAsM,IAGA,uBAAA0Z,EAoOA,SAAAA,EAAAy4G,EAAAE,GACA,OACAp2H,IAAA,WAAyB,sBACzBzH,IAAA,aACA8N,KAAA6vH,EACA1rH,MAAA4rH,EACAnsH,IAAAwT,GAzOA44G,CAAA54G,EAAAy4G,EAAAE,IAIAp2H,IAAAs2H,EAAA74G,EAAA24G,EAAAF,GACA39H,IAOA,SAAAg+H,EAAAj3H,EAAAkL,GACA,kBACA,IACAgsH,EACAC,EACAx0H,EACAxK,EACAsM,EALA2yH,EAAAp3H,EAOA,IAAA7H,EAAA,EAAkBA,EAAA+S,EAAA9K,OAAA,EAAsBjI,IAAA,CAExC,SADA++H,EAAAhsH,EAAA/S,IACA,CAGA,IAFAg/H,GAAA,EACAx0H,KACA8B,EAAA,EAA0BA,EAAA2yH,EAAAh3H,OAAoBqE,IAC9C9B,EAAA8B,GAAAwyH,EAAAG,EAAA3yH,GAAAyG,EAAAxC,MAAAvQ,EAAA,GAAA8+H,GACAt0H,EAAA8B,KAAA9B,EAAA,KAAAw0H,GAAA,GAEA,OAAAA,EAAAx0H,EAAA,GAAAA,EAEA,oBAAAu0H,IAAA98H,EAAAg9H,GACA,OAGA,oBADAA,IAAAF,KACA,OAAAE,EACA,OAKA,oBAAAA,GAAA,OAAAA,GAGA,QADAz0H,EAAAy0H,EAAAlsH,EAAA/S,KAEA,OAAAwK,GAzCAs0H,CAAA94G,EAAA24G,GACA/vH,KAAA6vH,EACA1rH,MAAA4rH,EACAnsH,IAAAwT,IA+DA,IAAAk5G,EAAA,kDACAC,EAAA,eACA,SAAAC,EAAArxH,EAAA0wH,GACA,QAmJA3zH,KADA0H,EAlJAzE,IAmJA,OAAAyE,IACA,iBAAAA,IACAvQ,EAAAuQ,KAAAvK,OACAvH,OAAA2P,KAAAmC,GAAAvK,UArJAjG,EAAA+L,IAAA,MAAA0wH,EAAAnuH,OAAAmuH,EAAAx2H,OAAA,IACAw2H,EAAAzrH,MAAAmsH,SAAAr0H,IAAAiD,EAEA,SA8IA,IAAAyE,EA5IA,IAAAvQ,EAAA8L,GAAA,SAEA,GAAA0wH,EAAAzrH,MAAAksH,GAAA,SAEA,IAAAlsH,EAAAwrH,EAAAC,GAIA,OAAAzrH,GAAA,KAAAA,EAAAm5C,MAGA,SAAA0yE,EAAAh3H,EAAAkL,EAAA0rH,GACA,gBAAA1wH,GACA,IAIAgxH,EACA/+H,EALAi/H,EAAAp3H,EACAw3H,EAAA,GACAC,IAAAz3H,EAAAw3H,IACAE,EAAAH,EAAArxH,EAAA0wH,GAIA,IAAAz+H,EAAA,EAAkBA,EAAA+S,EAAA9K,OAAA,EAAsBjI,IAAA,CAGxC,oBAFA++H,EAAAhsH,EAAA/S,MAEAiC,EAAAg9H,GACA,iDAIA,QAAAF,EAAA,CAEA,GADAQ,GAAAC,EAAAP,EAAAlsH,EAAAxC,MAAAvQ,EAAA,GAAA+N,EAAA0wH,GACA,MACA,OAGA,IAAAgB,EAAAR,EAAAF,EAAAhsH,EAAA/S,EAAA,GAAAu/H,GACA,MAKA,oBAFAN,IAAAF,KAEA,OAAAE,EACA,kCAGAI,EAAAK,EAAAL,EAAAN,GAEAO,EAAArzH,MAAAgzH,EAAAI,IAGAE,GACAv/H,IAAA+S,EAAA9K,OAAA,UAAAg3H,EAAAlsH,EAAA/S,IAuDA,SAAAs/H,GACA,IAAAt/H,EACAsM,EACA2yH,EACAI,EACAhvH,EACAsvH,EACA,IAAA3/H,EAAAs/H,EAAAr3H,OAAA,EAAuCjI,GAAA,EAAQA,IAAA,CAK/C,GAJAi/H,EAAAK,EAAAt/H,GAAA,GACAq/H,EAAAC,EAAAt/H,GAAA,GAEA2/H,GAAA,EACA19H,EAAAg9H,GACA,IAAA3yH,EAAA2yH,EAAAh3H,OAAA,EAAuCqE,GAAA,EAAQA,IAC/C8yH,EAAAH,EAAA3yH,GAAAozH,EAAAL,EAAA/yH,IACAqzH,EAAAV,EAAA3yH,QAAAxB,EACAm0H,EAAAhqF,MAEA0qF,GAAA,OAGA,oBAAAV,GAAA,OAAAA,EAGA,IAFA5uH,EAAA3P,OAAA2P,KAAA4uH,GACAU,GAAA,EACArzH,EAAA+D,EAAApI,OAAA,EAAoCqE,GAAA,EAAQA,IAC5C8yH,EAAAH,EAAA5uH,EAAA/D,IAAAozH,EAAAL,EAAAhvH,EAAA/D,YACA2yH,EAAA5uH,EAAA/D,IAEAqzH,GAAA,EAGA,GAAAA,EAAA,QArFAC,CAAAN,IAEAL,EAAAlsH,EAAA/S,IAAA+N,GAIA,SAAA2xH,EAAAjB,EAAAoB,GACA,IAAAC,EAAAD,EAIA,OAHAr+H,EAAAq+H,GAAAC,EAAA,IAAAD,EAAA,IACApB,IAAAqB,EAAA,IAAAD,GAEApB,EAAAqB,EAIA,SAAAN,EAAAO,EAAAC,EAAAjyH,EAAA0wH,GACA,IAMAz+H,EANAigI,EAAAh+H,EAAA8L,GACAmyH,GAAA,EACAC,EAAApyH,EACAqyH,EAAA3B,EAAAr2H,QAAA,QACAi4H,GAAAJ,GAAAb,EAAArxH,EAAAqyH,GACAE,EAAAN,EAAA,GAGA,IAAAhgI,EAAA,EAAcA,EAAA+/H,EAAA93H,OAA2BjI,IACzCogI,EAAA3B,EAAAr2H,QAAA,KAAApI,GACAigI,IAEAI,EAAAjB,EADAe,EAAApyH,EAAA/N,EAAA+N,EAAA9F,QACAm4H,IAEAC,IAAAH,GAAA,GACAT,EAAAM,EAAA//H,EAAAsgI,EAAAD,IAGAxB,EAAAkB,EAAA//H,GAAAggI,EAAAvB,EAAAr2H,QAAA,KAAApI,GAAA6+H,CAAAsB,GAEA,OAAAD,EAQA,SAAAT,EAAAz5G,EAAAgkG,EAAAuW,EAAAhB,GACA,QAAAz0H,IAAAkb,EAAAgkG,GAAA,CACA,GAAAuV,EAAA,SAEAv5G,EAAAgkG,GAAA,iBAAAuW,QAGA,wCC7OAxgI,EAAAD,SACAm3C,SACA+vC,QAAA,UACA42B,KAAA,OACAF,SAAA,OACAK,aACA,gEACAv/E,KAAA,MAEA9f,MACAsoE,QAAA,aACA1uE,QAAA,oCACAslG,KAAA,OACAF,SAAA,OACAK,aACA,uDAEA,0DACA,gCAEA,8DACA,mDAEA,6DACA,mBAEA,8DACAv/E,KAAA,MAEA40F,WACApsC,QAAA,UACA42B,KAAA,OACAF,SAAA,OACAK,aACA,gEACA,oBACA,kEACAv/E,KAAA,MAEAp0B,OACA48E,QAAA,aACA02B,SAAA,OACAK,aACA,4DACA,uDACAv/E,KAAA,MAEAgiG,YACAx5C,QAAA,aACA02B,SAAA,OACAK,aACA,kEACA,yDACA,uDACAv/E,KAAA,MAEA7rB,OACAq0E,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,GACAwpC,KAAA,OACAF,SAAA,OACAK,aACA,0CACA,kDACA,mEACA,mBACAv/E,KAAA,MAEAiiG,YACAz5C,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,GACAwpC,KAAA,OACAF,SAAA,OACAK,aACA,0CACA,kDACA,mEACA,wBACA,0DACAv/E,KAAA,MAEAkiG,UACA15C,QAAA,UACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,OACAF,SAAA,SAEAijB,eACA35C,QAAA,UACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,OACAF,SAAA,SAEAkjB,aACA55C,QAAA,UACA42B,KAAA,QACAF,SAAA,QAEAmjB,aACA75C,QAAA,UACA42B,KAAA,QACAF,SAAA,SAEAxtF,OACA82D,QAAA,QACA42B,KAAA,QACAF,SAAA,QACAK,YAAA,2CAEAhd,WACA/Z,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,QACAK,YAAA,iDAEAn4E,OACAohD,QAAA,SACAt9E,IAAA,EACAk0G,KAAA,QACAF,SAAA,OACAK,aACA,uDACA,sBACAv/E,KAAA,MAEAk/E,SAAA,OAEA+U,aACAz8C,SACAgR,QAAA,SACA42B,KAAA,QACAF,SAAA,QACAK,aACA,YACA,kEACAv/E,KAAA,sCC9IA,IAAAsiG,EAAAlhI,EAAA,IACA0jG,EAAA1jG,EAAA,IACAmG,EAAAnG,EAAA,IAAAmG,WACAgwH,EAAAn2H,EAAA,IAAAm2H,YAGAh2H,EAAAD,QAAAi2H,GAYAgL,eACA/5C,QAAA,aACA1uE,QAAA,qBACAslG,KAAA,QACAxpC,KAAA,SACA2pC,aACA,gDACA,qDACA,qDACA,qCACAv/E,KAAA,MAEAuiE,WACA/Z,QAAA,SACA42B,KAAA,QACAl0G,IAAA,EACA0qE,KAAA,GACA2pC,aACA,sCACA,oEACAv/E,KAAA,MAEAwiG,SACAh6C,QAAA,aACA1uE,QAAA,qBACAslG,KAAA,OACAxpC,KAAA,WACA2pC,aACA,6CACA,sDACA,oDACA,+BACAv/E,KAAA,MAEAp6B,KACA4iF,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,QACAG,aACA,mCACA,kDACA,yDACA,yBACAv/E,KAAA,MAEAtqB,GACA8yE,QAAA,SACA5S,KAAA,KACA1qE,KAAA,EACAD,IAAA,EACAm0G,KAAA,QACAG,aACA,4DACAv/E,KAAA,MAEAyiG,SACAj6C,QAAA,aACA1uE,QAAA,yBACA87D,KAAA,OACAwpC,KAAA,QACAG,aACA,oDACA,6DACA,gCACAv/E,KAAA,MAEA0iG,MACAl6C,QAAA,SACA42B,KAAA,QACAl0G,IAAA,EACA0qE,KAAA,GACA2pC,YAAA,6DAEA92F,GACA+/D,QAAA,SACA42B,KAAA,QACAxpC,KAAA,GACA1qE,KAAA,EACAD,IAAA,EACAs0G,aACA,4DACAv/E,KAAA,MAEA2iG,SACAn6C,QAAA,aACA1uE,QAAA,yBACAslG,KAAA,QACAxpC,KAAA,SACA2pC,aACA,iDACA,4DACA,iCACAv/E,KAAA,MAEA4iG,MACAp6C,QAAA,SACA42B,KAAA,QACAl0G,IAAA,EACA0qE,KAAA,GACA2pC,YAAA,6DAGAsjB,aAAAP,EAAAxO,UACAgP,aAAAR,EAAA9lC,UAGAumC,YAAAT,EAAAxO,UACAkP,aACAx6C,QAAA,SACA42B,KAAA,QACAl0G,IAAA,EACA0qE,KAAA,EACA2pC,aACA,kEACAv/E,KAAA,MAEAijG,SACAz6C,QAAA,QACA42B,KAAA,QACAxpC,KAAA,gBACA2pC,YAAA,kCAGAtvB,SAAAqyC,EAAAryC,SACAG,OAAAkyC,EAAAlyC,OACAI,MAAA8xC,EAAA9xC,MACAxB,MAAAszC,EAAAtzC,MACA4B,SAAA0xC,EAAA1xC,SACAC,SAAAyxC,EAAAzxC,SACA5uB,MAAA16D,KAAwB+6H,EAAArgE,OAAoB2T,KAAA,KAC5C8mB,QAAA4lC,EAAA5lC,QACAO,UAAAqlC,EAAArlC,UACAwC,UAAA6iC,EAAA7iC,UACArC,eAAAklC,EAAAllC,eACA/M,SAAAyU,GACAya,YAAA,yCAEArf,UAAAoiC,EAAApiC,UACA3K,WAAA+sC,EAAA/sC,WACAsE,gBAAAyoC,EAAAzoC,gBACAtD,WAAA+rC,EAAA/rC,WACAC,eAAA8rC,EAAA9rC,eACAC,WAAA6rC,EAAA7rC,WACAC,eAAA4rC,EAAA5rC,eACAthF,kBAAAktH,EAAAltH,kBACAi+E,eAAAivC,EAAAjvC,eACAyB,aAAAwtC,EAAAxtC,aACAg+B,OACAtqC,QAAA,SACA42B,KAAA,OACAG,YAAA,oCAEAtd,UAAA6C,GACAya,YAAA,sCAEA2jB,WACA16C,QAAA,aACA1uE,QAAA,wBACAslG,KAAA,QACAxpC,KAAA,MACA2pC,aACA,gDACA,kCACAv/E,KAAA,OAEC,uDCvLD,IAAAh9B,EAAA5B,EAAA,GAEA63E,EAAA73E,EAAA,GAEA+hI,EAAA/hI,EAAA,KACAgiI,EAAAhiI,EAAA,KACA02H,EAAA12H,EAAA,IACAiiI,EAAAjiI,EAAA,IAGAG,EAAAD,QAAA,SAAAivG,EAAAI,EAAAv7C,EAAApxD,EAAA4S,GACA,IAoBA0sH,EApBAr/G,EAAArN,EAAAqN,OACAs/G,EAAA3sH,EAAA2sH,QACAxL,EAAA9zG,EAAAlS,MAAA,EAAAkS,EAAAxa,OAAA,GACA4F,EAAA4U,EACAg1D,EAAA51E,eAAAktG,EAAAwnB,GAAAz1H,UACAiuG,EACAjhG,EAAA2U,EACAg1D,EAAA51E,eAAAstG,EAAAonB,GAAAz1H,UACAquG,EACA6yB,EAAAn0H,EAAAk0H,EAAA,OACAE,EAAAp0H,EAAAk0H,EAAA,OACAG,EAAAr0H,EAAAmyE,WAGAx9E,EAAAigB,EAAAs/G,EAAA,SADAvgI,EAAAwgI,IAAAxgI,EAAAygI,IAAAD,EAAAC,IAEAz/H,EAAAigB,EAAAs/G,EAAA,OACAv/H,EAAAigB,EAAAs/G,EAAA,YAKAj3H,IAAAo3H,IAAAJ,GAAAxL,EAAA4L,IACA1/H,EAAAigB,EAAA,iBAAAq/G,GACA,IAWAK,EAXAC,EAAA5/H,EAAAigB,EAAA,eAGAjgB,EAAAigB,EAAA,kBACA3U,EAAAkyE,WAAA6hD,EAAAO,IAGA,iBAAA3/G,KAKAA,IAAA0/G,EAAAR,EAAA9zH,IACArL,EAAAigB,EAAA,YAAA0/G,IAEAP,EAAA/zH,EAAAC,EAAA8lD,mCCxCA9zD,EAAAuiI,cAAA,SAAAjtH,GACA,MACA,UAAAA,EAAA6rH,SACA,SAAA7rH,EAAA6rH,SAAA7rH,EAAAlB,GAAA,KAIApU,EAAAwiI,eAAA,SAAAltH,GACA,MACA,WAAAA,EAAA6rH,SACA,SAAA7rH,EAAA6rH,SAAA7rH,EAAAlB,EAAA,KAAAkB,EAAAlB,EAAA,KAIApU,EAAAyiI,eAAA,SAAAntH,GACA,MACA,WAAAA,EAAA+rH,SACA,SAAA/rH,EAAA+rH,SAAA/rH,EAAA6R,GAAA,KAIAnnB,EAAA0iI,eAAA,SAAAptH,GACA,MACA,WAAAA,EAAA+rH,SACA,SAAA/rH,EAAA+rH,SAAA/rH,EAAA6R,EAAA,KAAA7R,EAAA6R,EAAA,mCClCA,IAAAw7G,EAAA7iI,EAAA,KACA0jG,EAAA1jG,EAAA,IACA8iI,EAAA9iI,EAAA,IAGAG,EAAAD,SACAi0E,iBAAA,aAEA98B,SACA+vC,QAAA,UACA42B,KAAA,OACAxpC,MAAA,EACAspC,SAAA,kBACAK,aACA,yDACAv/E,KAAA,MAGAzb,MACAikE,QAAA,SACA42B,KAAA,OACAF,SAAA,kBACAK,aACA,iDACA,sDACA,qDACA,2DACA,8BACAv/E,KAAA,MAEAmkG,WACA37C,QAAA,QACA5S,KAAA,EACAwpC,KAAA,QACAF,SAAA,kBACAK,aACA,8CACA,mCACAv/E,KAAA,MAEAy5C,KAAAqrB,GACAoa,SAAA,kBACAC,cAAA,YACAI,YAAA,mCAEAn4E,OACAohD,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,KACAwpC,KAAA,QACAF,SAAA,kBACAK,aACA,mEACA,sDACA,iEACAv/E,KAAA,MAEA8kD,QACA0D,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,KACAwpC,KAAA,QACAF,SAAA,kBACAK,aACA,oEACA,yDACAv/E,KAAA,MAEAw3C,SACAgR,QAAA,SACAt9E,IAAA,EACAD,IAAA,EACA2qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,YACAK,YAAA,sDAEAv1E,OACAw+C,QAAA,aACA1uE,QAAA,yBACA87D,KAAA,SACAwpC,KAAA,QACAF,SAAA,YACAK,aACA,8DACA,4DACA,6DACA,qDACAv/E,KAAA,MAEAokG,QACA57C,QAAA,aACA1uE,QAAA,yBACA87D,KAAA,SACAwpC,KAAA,QACAF,SAAA,YACAK,aACA,4DACA,8DACA,oBACAv/E,KAAA,MAEAijG,SACAz6C,QAAA,QACA5S,KAAA,gBACAwpC,KAAA,QACAF,SAAA,YACAK,YAAA,gDAEAwjB,aACAv6C,QAAA,QACA5S,KAAA,gBACAwpC,KAAA,QACAF,SAAA,YACAK,aACA,iEACAv/E,KAAA,MAEAqkG,WACA77C,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,kBACAK,aACA,8CACA,6BACAv/E,KAAA,MAEAgjG,aACAx6C,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,kBACAK,aACA,iDACA,0BACAv/E,KAAA,MAGAskG,WACA97C,QAAA,UACA5S,MAAA,EACAwpC,KAAA,QACAF,SAAA,kBACAK,aACA,mEACA,qDACA,8DACAv/E,KAAA,MAEAukG,YACA/7C,QAAA,QACA42B,KAAA,QACAF,SAAA,YACAK,YAAA,2CAEAilB,WACAh8C,QAAA,UACAt9E,IAAA,EACAD,IAAAg5H,EAAAx6H,OACAmsE,KAAA,EACAwpC,KAAA,QACAF,SAAA,YACAK,YAAA,6CAEAklB,gBACAj8C,QAAA,UACAt9E,IAAA,EACAD,IAAAg5H,EAAAx6H,OACAmsE,KAAA,EACAwpC,KAAA,QACAF,SAAA,YACAK,YAAA,+CAEAmlB,WACAl8C,QAAA,WACAorC,OAAA,eACAsD,QAAA,QACAthD,KAAA,MACAwpC,KAAA,QACAF,SAAA,YACAK,YAAA,4CAEAolB,WACAn8C,QAAA,SACAt9E,IAAA,GACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,kBACAK,aACA,4EACA,qEACAv/E,KAAA,MAEA4kG,gBACAp8C,QAAA,SACAt9E,IAAA,GACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,kBACAK,aACA,8EACA,qEACAv/E,KAAA,MAEA6kG,YACAr8C,QAAA,SACAt9E,IAAA,GACAk0G,KAAA,QACAF,SAAA,kBACAK,YAAA,oDAEAulB,UACAt8C,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,kBACAK,aACA,sEACA,kEACA,kEACA,kEACA,0CACAv/E,KAAA,MAEA+kG,eACAv8C,QAAA,SACAt9E,IAAA,EACA0qE,KAAA,EACAwpC,KAAA,QACAF,SAAA,kBACAK,aACA,wEACA,kEACA,kEACA,kEACA,0CACAv/E,KAAA,MAEAyX,IACA+wC,QAAA,MACA42B,KAAA,OACAF,SAAA,kBACAK,aACA,+DACA,gDACA,6CACA,sCACA,iEACA,mCACAv/E,KAAA,MAEA0X,IACA8wC,QAAA,MACA42B,KAAA,OACAF,SAAA,kBACAK,aACA,+DACA,gDACA,6CACA,sCACA,iEACA,mCACAv/E,KAAA,MAEAglG,OACAx8C,QAAA,aACA5S,KAAA,QACA97D,QACA,QACAoqH,EAAA1nB,QAAA9mG,EAAA5I,YAEAsyG,KAAA,OACAF,SAAA,OACAK,aACA,8DACA,iEACA,gEACA,4DACA,+DACA,kCACAv/E,KAAA,MAEAilG,OACAz8C,QAAA,aACA5S,KAAA,QACA97D,QACA,QACAoqH,EAAA1nB,QAAA/zF,EAAA3b,YAEAsyG,KAAA,OACAF,SAAA,OACAK,aACA,8DACA,iEACA,+DACA,4DACA,+DACA,kCACAv/E,KAAA,MAGA44D,MACApQ,QAAA,aACA1uE,QACA,QACAoqH,EAAA1nB,QAAA9mG,EAAA5I,YAEAsyG,KAAA,OACAF,SAAA,OACAK,aACA,2CACA,8DACA,4BACA,kEACA,+DACA,qDACAv/E,KAAA,MAEAtqB,GACA8yE,QAAA,MACA42B,KAAA,OACAF,SAAA,kBACAK,aACA,oCACA,sDACA,6BACA,2DACA,4DACA,6CACA,0DACA,2DACA,6CACAv/E,KAAA,MAEAyiG,SACAj6C,QAAA,aACA1uE,QAAA,gCACA87D,KAAA,OACAwpC,KAAA,OACAF,SAAA,kBACAK,aACA,iDACA,6DACA,gCACA,yDACA,0DACA,sDACA,iBACA,sDACA,uDACA,gEACA,oCACAv/E,KAAA,MAEAklG,QACA18C,QAAA,SACA5S,KAAA,EACAwpC,KAAA,QACAF,SAAA,kBACAK,aACA,+DACA,4DACAv/E,KAAA,MAEA64D,MACArQ,QAAA,aACA1uE,QACA,QACAoqH,EAAA1nB,QAAA/zF,EAAA3b,YAEAsyG,KAAA,OACAF,SAAA,OACAK,aACA,2CACA,8DACA,4BACA,kEACA,4DACA,gDACAv/E,KAAA,MAEAvX,GACA+/D,QAAA,MACA42B,KAAA,OACAF,SAAA,kBACAK,aACA,oCACA,sDACA,6BACA,2DACA,4DACA,6CACA,0DACA,2DACA,6CACAv/E,KAAA,MAEA2iG,SACAn6C,QAAA,aACA1uE,QAAA,gCACA87D,KAAA,OACAwpC,KAAA,OACAF,SAAA,kBACAK,aACA,+CACA,4DACA,iCACA,yDACA,sDACA,oDACA,iBACA,sDACA,uDACA,gEACA,oCACAv/E,KAAA,MAEAmlG,QACA38C,QAAA,SACA5S,KAAA,EACAwpC,KAAA,QACAF,SAAA,kBACAK,aACA,2DACA,sDACAv/E,KAAA,MAEAolG,aACA58C,QAAA,aACA1uE,SAAA,mBACA87D,MAAA,EACAwpC,KAAA,QACAF,SAAA,YACAK,aACA,uDACA,iEACA,gEACA,iEACA,+DACA,8DACA,gEACA,wBACA,oEACA,mEACA,kEACA,+DACAv/E,KAAA,MAEAqlG,QACA78C,QAAA,MACA42B,KAAA,OACAF,SAAA,YACAK,aACA,oEACA,uDACAv/E,KAAA,MAEAslG,QACA98C,QAAA,MACA42B,KAAA,OACAF,SAAA,YACAK,aACA,oEACA,uDACAv/E,KAAA,MAEAg6F,WACAxxC,QAAA,SACA42B,KAAA,OACAF,SAAA,YACAK,aACA,0DACA,oDACAv/E,KAAA,MAEA8/F,YACAmD,S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,EACA90G,IAIA60G,EAAAjnG,MAAAna,WAAA,WACAuM,IACA60G,EAAAjnG,MAAA,MACKknG,IAGLrnI,EAAA+G,KAAA,SAAAuhB,GACA,IAAA8+G,EAAAF,EAAA5+G,GACA,OAAA8+G,KAAAjnG,MAEA,IAAAmgE,QAAA,SAAAmE,GACA,IAAA6iC,EAAAF,EAAA/W,OACA+W,EAAA/W,OAAA,WACAiX,OACA7iC,IACA2iC,EAAA/W,OAAA,QAPA/vB,QAAAmE,WAkBAzkG,EAAAiH,MAAA,SAAAqhB,GACA,GAAAA,EACA6+G,EAAAD,EAAA5+G,WACA4+G,EAAA5+G,QAGA,QAAAq0F,KAAAuqB,EAAAlnI,EAAAiH,MAAA01G,kCClFA18G,EAAAD,SACA8+D,MACAooB,QAAA,aACA5S,KAAA,WACAwpC,KAAA,OACAtlG,QAAA,+BACAylG,aACA,oEACA,qEACA,wEACA,uEACA,0EACA,eACAv/E,KAAA,MAEAuX,WACAixC,QAAA,aACA42B,KAAA,OACAtlG,QAAA,qBACA87D,KAAA,UACA2pC,aACA,6EACAv/E,KAAA,MAEA6oG,aACArgD,QAAA,UACA5S,MAAA,EACAwpC,KAAA,OACAG,aACA,uEACAv/E,KAAA,MAEAiwE,OACArlG,UACA49E,QAAA,SACA42B,KAAA,OACAl0G,IAAA,EACA0qE,KAAA,IACA2pC,aACA,wEACA,uDACAv/E,KAAA,MAEAmvC,QACAqZ,QAAA,UACA42B,KAAA,OACAxpC,MAAA,EACA2pC,aACA,qEACA,uEACA,qEACA,sBACAv/E,KAAA,OAGAr1B,YACAC,UACA49E,QAAA,SACA42B,KAAA,OACAl0G,IAAA,EACA0qE,KAAA,IACA2pC,aACA,qEACA,4BACAv/E,KAAA,MAEA8oG,QACAtgD,QAAA,aACA5S,KAAA,eACA97D,QACA,SACA,OACA,QACA,MACA,MACA,SACA,UACA,OACA,SACA,YACA,UACA,WACA,SACA,SACA,YACA,aACA,UACA,YACA,aACA,WACA,YACA,UACA,UACA,aACA,cACA,WACA,aACA,gBACA,cACA,eACA,aACA,aACA,gBACA,iBACA,cACA,iBAE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AtxF,KAAuBo/J,EAAA9tE,MACvB0mB,aACA,2CACA,8DACA,4BACA,kEACA,4DACA,oDACAv/E,KAAA,OAEAxS,IACAg7D,QAAA,MACA42B,KAAA,OACAF,SAAA,kBACAK,aACA,wCACA,6BACAv/E,KAAA,MAEAvS,IACA+6D,QAAA,MACA42B,KAAA,OACAF,SAAA,kBACAK,aACA,mCACA,6BACAv/E,KAAA,MAGA9rB,MACAs0E,QAAA,SACA42B,KAAA,OACAF,SAAA,kBACAK,aACA,iEACA,iEACA,oEACA,qCACA,kEAEA,gEACA,kEACA,gEACA,wDACA,kEACA,YAEA,oEACA,oEACA,6CACA,uEACA,iEACA,mDACA,2BACAv/E,KAAA,MAGAw3C,SACAgR,QAAA,SACAt9E,IAAA,EACAD,IAAA,EACA2qE,KAAA,EACAwpC,KAAA,OACAF,SAAA,YACAK,YAAA,kCAEArqE,MACAxjB,MAAAnqB,KAA4Bq/J,EAAAl1I,OAA2BwtF,SAAA,cACvD93E,MAAA7/B,KAA4Bq/J,EAAAx/H,OAA2B83E,SAAA,oBACvD1jC,KAAAj0E,KAA2Bi0E,GAAS0jC,SAAA,cACpCE,KAAA,OACAF,SAAA,mBAEAljC,WACAwM,QAAA,QACA5S,KAAA,gBACAwpC,KAAA,OACAF,SAAA,YACAK,aACA,gDACAv/E,KAAA,MAEAk/E,SAAA,2CCpKA,IAAAglB,EAAA9iI,EAAA,IAGAG,EAAAD,SACAi0E,iBAAA,QAEA98B,SACA+vC,QAAA,UACA42B,KAAA,OACAxpC,MAAA,EACAspC,SAAA,YACAK,aACA,oDACAv/E,KAAA,MAGAziB,QACAirE,QAAA,SACA42B,KAAA,OACAF,SAAA,YACAK,aACA,6CACA,uDACA,6DAEAv/E,KAAA,MAGA0tE,OACAllB,QAAA,aACA1uE,QAAA,iBACA87D,KAAA,QACAwpC,KAAA,OACAF,SAAA,YACAK,aACA,4DACA,kDACA,8CACAv/E,KAAA,MAGA6mI,OACAr+E,QAAA,SACA42B,KAAA,OACAxpC,KAAA,EACAspC,SAAA,YACAK,aACA,8CACA,yDACA,0DACA,sBACAv/E,KAAA,MAGA8mI,OACAt+E,QAAA,SACA42B,KAAA,OACAxpC,KAAA,EACAspC,SAAA,YACAK,aACA,4CACA,yDACA,0DACA,uBACAv/E,KAAA,MAGA+mI,QACAv+E,QAAA,aACA1uE,QAAA,4BACA87D,KAAA,UACAwpC,KAAA,OACAF,SAAA,YACAK,aACA,wDACAv/E,KAAA,MAGAw3C,SACAgR,QAAA,SACA42B,KAAA,OACAl0G,IAAA,EACAD,IAAA,EACA2qE,KAAA,EACAspC,SAAA,YACAK,YAAA,kCAGA7pG,GACA8yE,QAAA,MACA42B,KAAA,OACAxpC,KAAA,EACAspC,SAAA,YACAK,aACA,+BACA,0DACA,sBACA,4BACAv/E,KAAA,MAGAvX,GACA+/D,QAAA,MACA42B,KAAA,OACAxpC,KAAA,EACAspC,SAAA,YACAK,aACA,+BACA,0DACA,sBACA,4BACAv/E,KAAA,MAGAyiG,SACAj6C,QAAA,aACA1uE,QAAA,yBACA87D,KAAA,OACAwpC,KAAA,OACAF,SAAA,YACAK,YAAA,sCAGAojB,SACAn6C,QAAA,aACA1uE,QAAA,yBACA87D,KAAA,MACAwpC,KAAA,OACAF,SAAA,YACAK,YAAA,uCAGA3mB,MACApQ,QAAA,aACA1uE,QACA,QACAoqH,EAAA1nB,QAAA9mG,EAAA5I,YAEA8oE,KAAA,QACAwpC,KAAA,OACAF,SAAA,YACAK,aACA,uCACA,6DACA,iCACA,kEACA,6CACA,oDACAv/E,KAAA,MAGA64D,MACArQ,QAAA,aACA1uE,QACA,QACAoqH,EAAA1nB,QAAA/zF,EAAA3b,YAEA8oE,KAAA,QACAwpC,KAAA,OACAF,SAAA,YACAK,aACA,uCACA,6DACA,iCACA,kEACA,mDACA,oDACAv/E,KAAA,MAEAk/E,SAAA,2CCzKA,IAAApa,EAAA1jG,EAAA,IACAw1E,EAAAx1E,EAAA,IACAmG,EAAAnG,EAAA,IAAAmG,WACAgwH,EAAAn2H,EAAA,IAAAm2H,YACAyvC,EAAA5lK,EAAA,KAEA6lK,GACA1xF,iBAAA,SAEA/3D,QACAgrE,QAAA,aACA1uE,QAAA,gDACA87D,KAAA,UACAwpC,KAAA,OACAG,aACA,gDACA,2EACA,yEACA,0EACA,8CACAv/E,KAAA,MAEAja,MACAyiE,QAAA,aACA42B,KAAA,OACA8nD,YAAA,EACAh0C,QACa1qC,QAAA,QACAA,QAAA,QACAA,QAAA,QAEb+2B,aACA,uDACA,oCACAv/E,KAAA,MAEAk0G,OACA1rD,QAAA,SACA42B,KAAA,OACAxpC,KAAA,GACA2pC,YAAA,gDAEA4nD,SACA3+E,QAAA,UACA42B,KAAA,OACAxpC,MAAA,EACA2pC,aACA,sFACA,uFACA,0FACA,2FACA,yCACAv/E,KAAA,OAIAz+B,EAAAD,QAAAi2H,GACAhiD,iBAAA,aACAvC,mBAAA,4CAEAv6B,SACA+vC,QAAA,UACA42B,KAAA,OACAG,aACA,yDACAv/E,KAAA,MAGA9f,MACAsoE,QAAA,aACA1uE,QAAA,sBACA87D,KAAA,WACAwpC,KAAA,OACAG,aACA,oEACA,iEACAv/E,KAAA,MAGAuX,WACAixC,QAAA,aACA1uE,QAAA,4BACA87D,KAAA,OACAwpC,KAAA,OACAG,aACA,sEACA,sEACA,wEACA,iBACAv/E,KAAA,MAGAsrC,QACAkd,QAAA,UACA42B,KAAA,OACAl0G,KAAA,EACA0qE,KAAA,EACA2pC,aACA,wDACA,sBACAv/E,KAAA,MAGAonI,YACA5+E,QAAA,UACA42B,KAAA,OACAxpC,MAAA,EACA2pC,YAAA,6DAGAgS,QAAA01C,EAEAvxJ,GACA8yE,QAAA,SACAt9E,KAAA,EACAD,IAAA,EACA2qE,MAAA,IACAwpC,KAAA,QACAG,YAAA,uEAEAkjB,SACAj6C,QAAA,aACA1uE,QAAA,gCACA87D,KAAA,QACAwpC,KAAA,OACAG,aACA,qDACA,6DACA,qCACAv/E,KAAA,MAEAvX,GACA+/D,QAAA,SACAt9E,KAAA,EACAD,IAAA,EACA2qE,KAAA,EACAwpC,KAAA,QACAG,YAAA,uEAEAojB,SACAn6C,QAAA,aACA1uE,QAAA,gCACA87D,KAAA,MACAwpC,KAAA,OACAG,aACA,kDACA,4DACA,sCACAv/E,KAAA,MAGA10B,IAAA/D,KAAsBy/J,GACtBznD,YAAA,0DAGA9lC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","file":"libs/interactive-report.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 136);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 718accb9422c147473f2","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\n\nvar numConstants = require('../constants/numerical');\nvar FP_SAFE = numConstants.FP_SAFE;\nvar BADNUM = numConstants.BADNUM;\n\nvar lib = module.exports = {};\n\nlib.nestedProperty = require('./nested_property');\nlib.keyedContainer = require('./keyed_container');\nlib.relativeAttr = require('./relative_attr');\nlib.isPlainObject = require('./is_plain_object');\nlib.isArray = require('./is_array');\nlib.mod = require('./mod');\nlib.toLogRange = require('./to_log_range');\nlib.relinkPrivateKeys = require('./relink_private');\nlib.ensureArray = require('./ensure_array');\n\nvar coerceModule = require('./coerce');\nlib.valObjectMeta = coerceModule.valObjectMeta;\nlib.coerce = coerceModule.coerce;\nlib.coerce2 = coerceModule.coerce2;\nlib.coerceFont = coerceModule.coerceFont;\nlib.coerceHoverinfo = coerceModule.coerceHoverinfo;\nlib.coerceSelectionMarkerOpacity = coerceModule.coerceSelectionMarkerOpacity;\nlib.validate = coerceModule.validate;\n\nvar datesModule = require('./dates');\nlib.dateTime2ms = datesModule.dateTime2ms;\nlib.isDateTime = datesModule.isDateTime;\nlib.ms2DateTime = datesModule.ms2DateTime;\nlib.ms2DateTimeLocal = datesModule.ms2DateTimeLocal;\nlib.cleanDate = datesModule.cleanDate;\nlib.isJSDate = datesModule.isJSDate;\nlib.formatDate = datesModule.formatDate;\nlib.incrementMonth = datesModule.incrementMonth;\nlib.dateTick0 = datesModule.dateTick0;\nlib.dfltRange = datesModule.dfltRange;\nlib.findExactDates = datesModule.findExactDates;\nlib.MIN_MS = datesModule.MIN_MS;\nlib.MAX_MS = datesModule.MAX_MS;\n\nvar searchModule = require('./search');\nlib.findBin = searchModule.findBin;\nlib.sorterAsc = searchModule.sorterAsc;\nlib.sorterDes = searchModule.sorterDes;\nlib.distinctVals = searchModule.distinctVals;\nlib.roundUp = searchModule.roundUp;\n\nvar statsModule = require('./stats');\nlib.aggNums = statsModule.aggNums;\nlib.len = statsModule.len;\nlib.mean = statsModule.mean;\nlib.variance = statsModule.variance;\nlib.stdev = statsModule.stdev;\nlib.interp = statsModule.interp;\n\nvar matrixModule = require('./matrix');\nlib.init2dArray = matrixModule.init2dArray;\nlib.transposeRagged = matrixModule.transposeRagged;\nlib.dot = matrixModule.dot;\nlib.translationMatrix = matrixModule.translationMatrix;\nlib.rotationMatrix = matrixModule.rotationMatrix;\nlib.rotationXYMatrix = matrixModule.rotationXYMatrix;\nlib.apply2DTransform = matrixModule.apply2DTransform;\nlib.apply2DTransform2 = matrixModule.apply2DTransform2;\n\nvar anglesModule = require('./angles');\nlib.deg2rad = anglesModule.deg2rad;\nlib.rad2deg = anglesModule.rad2deg;\nlib.wrap360 = anglesModule.wrap360;\nlib.wrap180 = anglesModule.wrap180;\n\nvar geom2dModule = require('./geometry2d');\nlib.segmentsIntersect = geom2dModule.segmentsIntersect;\nlib.segmentDistance = geom2dModule.segmentDistance;\nlib.getTextLocation = geom2dModule.getTextLocation;\nlib.clearLocationCache = geom2dModule.clearLocationCache;\nlib.getVisibleSegment = geom2dModule.getVisibleSegment;\nlib.findPointOnPath = geom2dModule.findPointOnPath;\n\nvar extendModule = require('./extend');\nlib.extendFlat = extendModule.extendFlat;\nlib.extendDeep = extendModule.extendDeep;\nlib.extendDeepAll = extendModule.extendDeepAll;\nlib.extendDeepNoArrays = extendModule.extendDeepNoArrays;\n\nvar loggersModule = require('./loggers');\nlib.log = loggersModule.log;\nlib.warn = loggersModule.warn;\nlib.error = loggersModule.error;\n\nvar regexModule = require('./regex');\nlib.counterRegex = regexModule.counter;\n\nvar throttleModule = require('./throttle');\nlib.throttle = throttleModule.throttle;\nlib.throttleDone = throttleModule.done;\nlib.clearThrottle = throttleModule.clear;\n\nlib.getGraphDiv = require('./get_graph_div');\n\nlib._ = require('./localize');\n\nlib.notifier = require('./notifier');\n\nlib.filterUnique = require('./filter_unique');\nlib.filterVisible = require('./filter_visible');\nlib.pushUnique = require('./push_unique');\n\nlib.cleanNumber = require('./clean_number');\n\nlib.ensureNumber = function num(v) {\n    if(!isNumeric(v)) return BADNUM;\n    v = Number(v);\n    if(v < -FP_SAFE || v > FP_SAFE) return BADNUM;\n    return isNumeric(v) ? Number(v) : BADNUM;\n};\n\nlib.noop = require('./noop');\nlib.identity = require('./identity');\n\n/**\n * swap x and y of the same attribute in container cont\n * specify attr with a ? in place of x/y\n * you can also swap other things than x/y by providing part1 and part2\n */\nlib.swapAttrs = function(cont, attrList, part1, part2) {\n    if(!part1) part1 = 'x';\n    if(!part2) part2 = 'y';\n    for(var i = 0; i < attrList.length; i++) {\n        var attr = attrList[i],\n            xp = lib.nestedProperty(cont, attr.replace('?', part1)),\n            yp = lib.nestedProperty(cont, attr.replace('?', part2)),\n            temp = xp.get();\n        xp.set(yp.get());\n        yp.set(temp);\n    }\n};\n\n/**\n * to prevent event bubbling, in particular text selection during drag.\n * see http://stackoverflow.com/questions/5429827/\n *      how-can-i-prevent-text-element-selection-with-cursor-drag\n * for maximum effect use:\n *      return pauseEvent(e);\n */\nlib.pauseEvent = function(e) {\n    if(e.stopPropagation) e.stopPropagation();\n    if(e.preventDefault) e.preventDefault();\n    e.cancelBubble = true;\n    return false;\n};\n\n/**\n * SVG painter's algo worked around with reinsertion\n */\nlib.raiseToTop = function raiseToTop(elem) {\n    elem.parentNode.appendChild(elem);\n};\n\n/**\n * cancel a possibly pending transition; returned selection may be used by caller\n */\nlib.cancelTransition = function(selection) {\n    return selection.transition().duration(0);\n};\n\n// constrain - restrict a number v to be between v0 and v1\nlib.constrain = function(v, v0, v1) {\n    if(v0 > v1) return Math.max(v1, Math.min(v0, v));\n    return Math.max(v0, Math.min(v1, v));\n};\n\n/**\n * do two bounding boxes from getBoundingClientRect,\n * ie {left,right,top,bottom,width,height}, overlap?\n * takes optional padding pixels\n */\nlib.bBoxIntersect = function(a, b, pad) {\n    pad = pad || 0;\n    return (a.left <= b.right + pad &&\n            b.left <= a.right + pad &&\n            a.top <= b.bottom + pad &&\n            b.top <= a.bottom + pad);\n};\n\n/*\n * simpleMap: alternative to Array.map that only\n * passes on the element and up to 2 extra args you\n * provide (but not the array index or the whole array)\n *\n * array: the array to map it to\n * func: the function to apply\n * x1, x2: optional extra args\n */\nlib.simpleMap = function(array, func, x1, x2) {\n    var len = array.length,\n        out = new Array(len);\n    for(var i = 0; i < len; i++) out[i] = func(array[i], x1, x2);\n    return out;\n};\n\n// random string generator\nlib.randstr = function randstr(existing, bits, base) {\n    /*\n     * Include number of bits, the base of the string you want\n     * and an optional array of existing strings to avoid.\n     */\n    if(!base) base = 16;\n    if(bits === undefined) bits = 24;\n    if(bits <= 0) return '0';\n\n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base),\n        res = '',\n        i,\n        b,\n        x;\n\n    for(i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n\n    var rem = digits - Math.floor(digits);\n\n    for(i = 0; i < Math.floor(digits); i++) {\n        x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n\n    if(rem) {\n        b = Math.pow(base, rem);\n        x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n\n    var parsed = parseInt(res, base);\n    if((existing && (existing.indexOf(res) > -1)) ||\n         (parsed !== Infinity && parsed >= Math.pow(2, bits))) {\n        return randstr(existing, bits, base);\n    }\n    else return res;\n};\n\nlib.OptionControl = function(opt, optname) {\n    /*\n     * An environment to contain all option setters and\n     * getters that collectively modify opts.\n     *\n     * You can call up opts from any function in new object\n     * as this.optname || this.opt\n     *\n     * See FitOpts for example of usage\n     */\n    if(!opt) opt = {};\n    if(!optname) optname = 'opt';\n\n    var self = {};\n    self.optionList = [];\n\n    self._newoption = function(optObj) {\n        optObj[optname] = opt;\n        self[optObj.name] = optObj;\n        self.optionList.push(optObj);\n    };\n\n    self['_' + optname] = opt;\n    return self;\n};\n\n/**\n * lib.smooth: smooth arrayIn by convolving with\n * a hann window with given full width at half max\n * bounce the ends in, so the output has the same length as the input\n */\nlib.smooth = function(arrayIn, FWHM) {\n    FWHM = Math.round(FWHM) || 0; // only makes sense for integers\n    if(FWHM < 2) return arrayIn;\n\n    var alen = arrayIn.length,\n        alen2 = 2 * alen,\n        wlen = 2 * FWHM - 1,\n        w = new Array(wlen),\n        arrayOut = new Array(alen),\n        i,\n        j,\n        k,\n        v;\n\n    // first make the window array\n    for(i = 0; i < wlen; i++) {\n        w[i] = (1 - Math.cos(Math.PI * (i + 1) / FWHM)) / (2 * FWHM);\n    }\n\n    // now do the convolution\n    for(i = 0; i < alen; i++) {\n        v = 0;\n        for(j = 0; j < wlen; j++) {\n            k = i + j + 1 - FWHM;\n\n            // multibounce\n            if(k < -alen) k -= alen2 * Math.round(k / alen2);\n            else if(k >= alen2) k -= alen2 * Math.floor(k / alen2);\n\n            // single bounce\n            if(k < 0) k = - 1 - k;\n            else if(k >= alen) k = alen2 - 1 - k;\n\n            v += arrayIn[k] * w[j];\n        }\n        arrayOut[i] = v;\n    }\n\n    return arrayOut;\n};\n\n/**\n * syncOrAsync: run a sequence of functions synchronously\n * as long as its returns are not promises (ie have no .then)\n * includes one argument arg to send to all functions...\n * this is mainly just to prevent us having to make wrapper functions\n * when the only purpose of the wrapper is to reference gd\n * and a final step to be executed at the end\n * TODO: if there's an error and everything is sync,\n * this doesn't happen yet because we want to make sure\n * that it gets reported\n */\nlib.syncOrAsync = function(sequence, arg, finalStep) {\n    var ret, fni;\n\n    function continueAsync() {\n        return lib.syncOrAsync(sequence, arg, finalStep);\n    }\n\n    while(sequence.length) {\n        fni = sequence.splice(0, 1)[0];\n        ret = fni(arg);\n\n        if(ret && ret.then) {\n            return ret.then(continueAsync)\n                .then(undefined, lib.promiseError);\n        }\n    }\n\n    return finalStep && finalStep(arg);\n};\n\n\n/**\n * Helper to strip trailing slash, from\n * http://stackoverflow.com/questions/6680825/return-string-without-trailing-slash\n */\nlib.stripTrailingSlash = function(str) {\n    if(str.substr(-1) === '/') return str.substr(0, str.length - 1);\n    return str;\n};\n\nlib.noneOrAll = function(containerIn, containerOut, attrList) {\n    /**\n     * some attributes come together, so if you have one of them\n     * in the input, you should copy the default values of the others\n     * to the input as well.\n     */\n    if(!containerIn) return;\n\n    var hasAny = false,\n        hasAll = true,\n        i,\n        val;\n\n    for(i = 0; i < attrList.length; i++) {\n        val = containerIn[attrList[i]];\n        if(val !== undefined && val !== null) hasAny = true;\n        else hasAll = false;\n    }\n\n    if(hasAny && !hasAll) {\n        for(i = 0; i < attrList.length; i++) {\n            containerIn[attrList[i]] = containerOut[attrList[i]];\n        }\n    }\n};\n\n/** merges calcdata field (given by cdAttr) with traceAttr values\n *\n * N.B. Loop over minimum of cd.length and traceAttr.length\n * i.e. it does not try to fill in beyond traceAttr.length-1\n *\n * @param {array} traceAttr : trace attribute\n * @param {object} cd : calcdata trace\n * @param {string} cdAttr : calcdata key\n */\nlib.mergeArray = function(traceAttr, cd, cdAttr) {\n    if(Array.isArray(traceAttr)) {\n        var imax = Math.min(traceAttr.length, cd.length);\n        for(var i = 0; i < imax; i++) cd[i][cdAttr] = traceAttr[i];\n    }\n};\n\n/** fills calcdata field (given by cdAttr) with traceAttr values\n *  or function of traceAttr values (e.g. some fallback)\n *\n * N.B. Loops over all cd items.\n *\n * @param {array} traceAttr : trace attribute\n * @param {object} cd : calcdata trace\n * @param {string} cdAttr : calcdata key\n * @param {function} [fn] : optional function to apply to each array item\n */\nlib.fillArray = function(traceAttr, cd, cdAttr, fn) {\n    fn = fn || lib.identity;\n\n    if(Array.isArray(traceAttr)) {\n        for(var i = 0; i < cd.length; i++) {\n            cd[i][cdAttr] = fn(traceAttr[i]);\n        }\n    }\n};\n\n/** Handler for trace-wide vs per-point options\n *\n * @param {object} trace : (full) trace object\n * @param {number} ptNumber : index of the point in question\n * @param {string} astr : attribute string\n * @param {function} [fn] : optional function to apply to each array item\n *\n * @return {any}\n */\nlib.castOption = function(trace, ptNumber, astr, fn) {\n    fn = fn || lib.identity;\n\n    var val = lib.nestedProperty(trace, astr).get();\n\n    if(Array.isArray(val)) {\n        if(Array.isArray(ptNumber) && Array.isArray(val[ptNumber[0]])) {\n            return fn(val[ptNumber[0]][ptNumber[1]]);\n        } else {\n            return fn(val[ptNumber]);\n        }\n    } else {\n        return val;\n    }\n};\n\n/** Extract option from calcdata item, correctly falling back to\n *  trace value if not found.\n *\n *  @param {object} calcPt : calcdata[i][j] item\n *  @param {object} trace : (full) trace object\n *  @param {string} calcKey : calcdata key\n *  @param {string} traceKey : aka trace attribute string\n *  @return {any}\n */\nlib.extractOption = function(calcPt, trace, calcKey, traceKey) {\n    if(calcKey in calcPt) return calcPt[calcKey];\n\n    // fallback to trace value,\n    //   must check if value isn't itself an array\n    //   which means the trace attribute has a corresponding\n    //   calcdata key, but its value is falsy\n    var traceVal = lib.nestedProperty(trace, traceKey).get();\n    if(!Array.isArray(traceVal)) return traceVal;\n};\n\n/** Tag selected calcdata items\n *\n * N.B. note that point 'index' corresponds to input data array index\n *  whereas 'number' is its post-transform version.\n *\n * @param {array} calcTrace\n * @param {object} trace\n *  - selectedpoints {array}\n *  - _indexToPoints {object}\n * @param {ptNumber2cdIndex} ptNumber2cdIndex (optional)\n *  optional map object for trace types that do not have 1-to-1 point number to\n *  calcdata item index correspondence (e.g. histogram)\n */\nlib.tagSelected = function(calcTrace, trace, ptNumber2cdIndex) {\n    var selectedpoints = trace.selectedpoints;\n    var indexToPoints = trace._indexToPoints;\n    var ptIndex2ptNumber;\n\n    // make pt index-to-number map object, which takes care of transformed traces\n    if(indexToPoints) {\n        ptIndex2ptNumber = {};\n        for(var k in indexToPoints) {\n            var pts = indexToPoints[k];\n            for(var j = 0; j < pts.length; j++) {\n                ptIndex2ptNumber[pts[j]] = k;\n            }\n        }\n    }\n\n    function isPtIndexValid(v) {\n        return isNumeric(v) && v >= 0 && v % 1 === 0;\n    }\n\n    function isCdIndexValid(v) {\n        return v !== undefined && v < calcTrace.length;\n    }\n\n    for(var i = 0; i < selectedpoints.length; i++) {\n        var ptIndex = selectedpoints[i];\n\n        if(isPtIndexValid(ptIndex)) {\n            var ptNumber = ptIndex2ptNumber ? ptIndex2ptNumber[ptIndex] : ptIndex;\n            var cdIndex = ptNumber2cdIndex ? ptNumber2cdIndex[ptNumber] : ptNumber;\n\n            if(isCdIndexValid(cdIndex)) {\n                calcTrace[cdIndex].selected = 1;\n            }\n        }\n    }\n};\n\n/** Returns target as set by 'target' transform attribute\n *\n * @param {object} trace : full trace object\n * @param {object} transformOpts : transform option object\n *  - target (string} :\n *      either an attribute string referencing an array in the trace object, or\n *      a set array.\n *\n * @return {array or false} : the target array (NOT a copy!!) or false if invalid\n */\nlib.getTargetArray = function(trace, transformOpts) {\n    var target = transformOpts.target;\n\n    if(typeof target === 'string' && target) {\n        var array = lib.nestedProperty(trace, target).get();\n        return Array.isArray(array) ? array : false;\n    } else if(Array.isArray(target)) {\n        return target;\n    }\n\n    return false;\n};\n\n/**\n * modified version of jQuery's extend to strip out private objs and functions,\n * and cut arrays down to first <arraylen> or 1 elements\n * because extend-like algorithms are hella slow\n * obj2 is assumed to already be clean of these things (including no arrays)\n */\nlib.minExtend = function(obj1, obj2) {\n    var objOut = {};\n    if(typeof obj2 !== 'object') obj2 = {};\n    var arrayLen = 3,\n        keys = Object.keys(obj1),\n        i,\n        k,\n        v;\n    for(i = 0; i < keys.length; i++) {\n        k = keys[i];\n        v = obj1[k];\n        if(k.charAt(0) === '_' || typeof v === 'function') continue;\n        else if(k === 'module') objOut[k] = v;\n        else if(Array.isArray(v)) objOut[k] = v.slice(0, arrayLen);\n        else if(v && (typeof v === 'object')) objOut[k] = lib.minExtend(obj1[k], obj2[k]);\n        else objOut[k] = v;\n    }\n\n    keys = Object.keys(obj2);\n    for(i = 0; i < keys.length; i++) {\n        k = keys[i];\n        v = obj2[k];\n        if(typeof v !== 'object' || !(k in objOut) || typeof objOut[k] !== 'object') {\n            objOut[k] = v;\n        }\n    }\n\n    return objOut;\n};\n\nlib.titleCase = function(s) {\n    return s.charAt(0).toUpperCase() + s.substr(1);\n};\n\nlib.containsAny = function(s, fragments) {\n    for(var i = 0; i < fragments.length; i++) {\n        if(s.indexOf(fragments[i]) !== -1) return true;\n    }\n    return false;\n};\n\nlib.isPlotDiv = function(el) {\n    var el3 = d3.select(el);\n    return el3.node() instanceof HTMLElement &&\n        el3.size() &&\n        el3.classed('js-plotly-plot');\n};\n\nlib.removeElement = function(el) {\n    var elParent = el && el.parentNode;\n    if(elParent) elParent.removeChild(el);\n};\n\n/**\n * for dynamically adding style rules\n * makes one stylesheet that contains all rules added\n * by all calls to this function\n */\nlib.addStyleRule = function(selector, styleString) {\n    if(!lib.styleSheet) {\n        var style = document.createElement('style');\n        // WebKit hack :(\n        style.appendChild(document.createTextNode(''));\n        document.head.appendChild(style);\n        lib.styleSheet = style.sheet;\n    }\n    var styleSheet = lib.styleSheet;\n\n    if(styleSheet.insertRule) {\n        styleSheet.insertRule(selector + '{' + styleString + '}', 0);\n    }\n    else if(styleSheet.addRule) {\n        styleSheet.addRule(selector, styleString, 0);\n    }\n    else lib.warn('addStyleRule failed');\n};\n\nlib.isIE = function() {\n    return typeof window.navigator.msSaveBlob !== 'undefined';\n};\n\n/**\n * Duck typing to recognize a d3 selection, mostly for IE9's benefit\n * because it doesn't handle instanceof like modern browsers\n */\nlib.isD3Selection = function(obj) {\n    return obj && (typeof obj.classed === 'function');\n};\n\n\n/**\n * Converts a string path to an object.\n *\n * When given a string containing an array element, it will create a `null`\n * filled array of the given size.\n *\n * @example\n * lib.objectFromPath('nested.test[2].path', 'value');\n * // returns { nested: { test: [null, null, { path: 'value' }]}\n *\n * @param   {string}    path to nested value\n * @param   {*}         any value to be set\n *\n * @return {Object} the constructed object with a full nested path\n */\nlib.objectFromPath = function(path, value) {\n    var keys = path.split('.'),\n        tmpObj,\n        obj = tmpObj = {};\n\n    for(var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var el = null;\n\n        var parts = keys[i].match(/(.*)\\[([0-9]+)\\]/);\n\n        if(parts) {\n            key = parts[1];\n            el = parts[2];\n\n            tmpObj = tmpObj[key] = [];\n\n            if(i === keys.length - 1) {\n                tmpObj[el] = value;\n            } else {\n                tmpObj[el] = {};\n            }\n\n            tmpObj = tmpObj[el];\n        } else {\n\n            if(i === keys.length - 1) {\n                tmpObj[key] = value;\n            } else {\n                tmpObj[key] = {};\n            }\n\n            tmpObj = tmpObj[key];\n        }\n    }\n\n    return obj;\n};\n\n/**\n * Iterate through an object in-place, converting dotted properties to objects.\n *\n * Examples:\n *\n *   lib.expandObjectPaths({'nested.test.path': 'value'});\n *     => { nested: { test: {path: 'value'}}}\n *\n * It also handles array notation, e.g.:\n *\n *   lib.expandObjectPaths({'foo[1].bar': 'value'});\n *     => { foo: [null, {bar: value}] }\n *\n * It handles merges the results when two properties are specified in parallel:\n *\n *   lib.expandObjectPaths({'foo[1].bar': 10, 'foo[0].bar': 20});\n *     => { foo: [{bar: 10}, {bar: 20}] }\n *\n * It does NOT, however, merge mulitple mutliply-nested arrays::\n *\n *   lib.expandObjectPaths({'marker[1].range[1]': 5, 'marker[1].range[0]': 4})\n *     => { marker: [null, {range: 4}] }\n */\n\n// Store this to avoid recompiling regex on *every* prop since this may happen many\n// many times for animations. Could maybe be inside the function. Not sure about\n// scoping vs. recompilation tradeoff, but at least it's not just inlining it into\n// the inner loop.\nvar dottedPropertyRegex = /^([^\\[\\.]+)\\.(.+)?/;\nvar indexedPropertyRegex = /^([^\\.]+)\\[([0-9]+)\\](\\.)?(.+)?/;\n\nlib.expandObjectPaths = function(data) {\n    var match, key, prop, datum, idx, dest, trailingPath;\n    if(typeof data === 'object' && !Array.isArray(data)) {\n        for(key in data) {\n            if(data.hasOwnProperty(key)) {\n                if((match = key.match(dottedPropertyRegex))) {\n                    datum = data[key];\n                    prop = match[1];\n\n                    delete data[key];\n\n                    data[prop] = lib.extendDeepNoArrays(data[prop] || {}, lib.objectFromPath(key, lib.expandObjectPaths(datum))[prop]);\n                } else if((match = key.match(indexedPropertyRegex))) {\n                    datum = data[key];\n\n                    prop = match[1];\n                    idx = parseInt(match[2]);\n\n                    delete data[key];\n\n                    data[prop] = data[prop] || [];\n\n                    if(match[3] === '.') {\n                        // This is the case where theere are subsequent properties into which\n                        // we must recurse, e.g. transforms[0].value\n                        trailingPath = match[4];\n                        dest = data[prop][idx] = data[prop][idx] || {};\n\n                        // NB: Extend deep no arrays prevents this from working on multiple\n                        // nested properties in the same object, e.g.\n                        //\n                        // {\n                        //   foo[0].bar[1].range\n                        //   foo[0].bar[0].range\n                        // }\n                        //\n                        // In this case, the extendDeepNoArrays will overwrite one array with\n                        // the other, so that both properties *will not* be present in the\n                        // result. Fixing this would require a more intelligent tracking\n                        // of changes and merging than extendDeepNoArrays currently accomplishes.\n                        lib.extendDeepNoArrays(dest, lib.objectFromPath(trailingPath, lib.expandObjectPaths(datum)));\n                    } else {\n                        // This is the case where this property is the end of the line,\n                        // e.g. xaxis.range[0]\n                        data[prop][idx] = lib.expandObjectPaths(datum);\n                    }\n                } else {\n                    data[key] = lib.expandObjectPaths(data[key]);\n                }\n            }\n        }\n    }\n\n    return data;\n};\n\n/**\n * Converts value to string separated by the provided separators.\n *\n * @example\n * lib.numSeparate(2016, '.,');\n * // returns '2016'\n *\n * @example\n * lib.numSeparate(3000, '.,', true);\n * // returns '3,000'\n *\n * @example\n * lib.numSeparate(1234.56, '|,')\n * // returns '1,234|56'\n *\n * @param   {string|number} value       the value to be converted\n * @param   {string}    separators  string of decimal, then thousands separators\n * @param   {boolean}    separatethousands  boolean, 4-digit integers are separated if true\n *\n * @return  {string}    the value that has been separated\n */\nlib.numSeparate = function(value, separators, separatethousands) {\n    if(!separatethousands) separatethousands = false;\n\n    if(typeof separators !== 'string' || separators.length === 0) {\n        throw new Error('Separator string required for formatting!');\n    }\n\n    if(typeof value === 'number') {\n        value = String(value);\n    }\n\n    var thousandsRe = /(\\d+)(\\d{3})/,\n        decimalSep = separators.charAt(0),\n        thouSep = separators.charAt(1);\n\n    var x = value.split('.'),\n        x1 = x[0],\n        x2 = x.length > 1 ? decimalSep + x[1] : '';\n\n    // Years are ignored for thousands separators\n    if(thouSep && (x.length > 1 || x1.length > 4 || separatethousands)) {\n        while(thousandsRe.test(x1)) {\n            x1 = x1.replace(thousandsRe, '$1' + thouSep + '$2');\n        }\n    }\n\n    return x1 + x2;\n};\n\nvar TEMPLATE_STRING_REGEX = /%{([^\\s%{}]*)}/g;\nvar SIMPLE_PROPERTY_REGEX = /^\\w*$/;\n\n/*\n * Substitute values from an object into a string\n *\n * Examples:\n *  Lib.templateString('name: %{trace}', {trace: 'asdf'}) --> 'name: asdf'\n *  Lib.templateString('name: %{trace[0].name}', {trace: [{name: 'asdf'}]}) --> 'name: asdf'\n *\n * @param {string}  input string containing %{...} template strings\n * @param {obj}     data object containing substitution values\n *\n * @return {string} templated string\n */\n\nlib.templateString = function(string, obj) {\n    // Not all that useful, but cache nestedProperty instantiation\n    // just in case it speeds things up *slightly*:\n    var getterCache = {};\n\n    return string.replace(TEMPLATE_STRING_REGEX, function(dummy, key) {\n        if(SIMPLE_PROPERTY_REGEX.test(key)) {\n            return obj[key] || '';\n        }\n        getterCache[key] = getterCache[key] || lib.nestedProperty(obj, key).get;\n        return getterCache[key]() || '';\n    });\n};\n\n/*\n * alphanumeric string sort, tailored for subplot IDs like scene2, scene10, x10y13 etc\n */\nvar char0 = 48;\nvar char9 = 57;\nlib.subplotSort = function(a, b) {\n    var l = Math.min(a.length, b.length) + 1;\n    var numA = 0;\n    var numB = 0;\n    for(var i = 0; i < l; i++) {\n        var charA = a.charCodeAt(i) || 0;\n        var charB = b.charCodeAt(i) || 0;\n        var isNumA = charA >= char0 && charA <= char9;\n        var isNumB = charB >= char0 && charB <= char9;\n\n        if(isNumA) numA = 10 * numA + charA - char0;\n        if(isNumB) numB = 10 * numB + charB - char0;\n\n        if(!isNumA || !isNumB) {\n            if(numA !== numB) return numA - numB;\n            if(charA !== charB) return charA - charB;\n        }\n    }\n    return numB - numA;\n};\n\n/*\n * test if event listener options supported\n */\nlib.eventListenerOptionsSupported = function() {\n    var supported = false;\n\n    try {\n        var opts = Object.defineProperty({}, 'passive', {\n            get: function() {\n                supported = true;\n            }\n        });\n\n        window.addEventListener('test', null, opts);\n        window.removeEventListener('test', null, opts);\n    } catch(e) {\n        supported = false;\n    }\n\n    return supported;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/index.js\n// module id = 0\n// module chunks = 0","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/node_modules/d3/d3.js\n// module id = 1\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Loggers = require('./lib/loggers');\nvar noop = require('./lib/noop');\nvar pushUnique = require('./lib/push_unique');\nvar ExtendModule = require('./lib/extend');\nvar extendFlat = ExtendModule.extendFlat;\nvar extendDeepAll = ExtendModule.extendDeepAll;\n\nvar basePlotAttributes = require('./plots/attributes');\nvar baseLayoutAttributes = require('./plots/layout_attributes');\n\nexports.modules = {};\nexports.allCategories = {};\nexports.allTypes = [];\nexports.subplotsRegistry = {};\nexports.transformsRegistry = {};\nexports.componentsRegistry = {};\nexports.layoutArrayContainers = [];\nexports.layoutArrayRegexes = [];\nexports.traceLayoutAttributes = {};\nexports.localeRegistry = {};\n\n/**\n * register a module as the handler for a trace type\n *\n * @param {object} _module the module that will handle plotting this trace type\n * @param {string} thisType\n * @param {array of strings} categoriesIn all the categories this type is in,\n *     tested by calls: traceIs(trace, oneCategory)\n * @param {object} meta meta information about the trace type\n */\nexports.register = function(_module, thisType, categoriesIn, meta) {\n    if(exports.modules[thisType]) {\n        Loggers.log('Type ' + thisType + ' already registered');\n        return;\n    }\n\n    var categoryObj = {};\n    for(var i = 0; i < categoriesIn.length; i++) {\n        categoryObj[categoriesIn[i]] = true;\n        exports.allCategories[categoriesIn[i]] = true;\n    }\n\n    exports.modules[thisType] = {\n        _module: _module,\n        categories: categoryObj\n    };\n\n    if(meta && Object.keys(meta).length) {\n        exports.modules[thisType].meta = meta;\n    }\n\n    exports.allTypes.push(thisType);\n\n    for(var componentName in exports.componentsRegistry) {\n        mergeComponentAttrsToTrace(componentName, thisType);\n    }\n\n    /*\n     * Collect all trace layout attributes in one place for easier lookup later\n     * but don't merge them into the base schema as it would confuse the docs\n     * (at least after https://github.com/plotly/documentation/issues/202 gets done!)\n     */\n    if(_module.layoutAttributes) {\n        extendFlat(exports.traceLayoutAttributes, _module.layoutAttributes);\n    }\n};\n\n/**\n * register a subplot type\n *\n * @param {object} _module subplot module:\n *\n *      @param {string or array of strings} attr\n *          attribute name in traces and layout\n *      @param {string or array of strings} idRoot\n *          root of id (setting the possible value for attrName)\n *      @param {object} attributes\n *          attribute(s) for traces of this subplot type\n *\n * In trace objects `attr` is the object key taking a valid `id` as value\n * (the set of all valid ids is generated below and stored in idRegex).\n *\n * In the layout object, a or several valid `attr` name(s) can be keys linked\n * to a nested attribute objects\n * (the set of all valid attr names is generated below and stored in attrRegex).\n */\nexports.registerSubplot = function(_module) {\n    var plotType = _module.name;\n\n    if(exports.subplotsRegistry[plotType]) {\n        Loggers.log('Plot type ' + plotType + ' already registered.');\n        return;\n    }\n\n    // relayout array handling will look for component module methods with this\n    // name and won't find them because this is a subplot module... but that\n    // should be fine, it will just fall back on redrawing the plot.\n    findArrayRegexps(_module);\n\n    // not sure what's best for the 'cartesian' type at this point\n    exports.subplotsRegistry[plotType] = _module;\n\n    for(var componentName in exports.componentsRegistry) {\n        mergeComponentAttrsToSubplot(componentName, _module.name);\n    }\n};\n\nexports.registerComponent = function(_module) {\n    var name = _module.name;\n\n    exports.componentsRegistry[name] = _module;\n\n    if(_module.layoutAttributes) {\n        if(_module.layoutAttributes._isLinkedToArray) {\n            pushUnique(exports.layoutArrayContainers, name);\n        }\n        findArrayRegexps(_module);\n    }\n\n    for(var traceType in exports.modules) {\n        mergeComponentAttrsToTrace(name, traceType);\n    }\n\n    for(var subplotName in exports.subplotsRegistry) {\n        mergeComponentAttrsToSubplot(name, subplotName);\n    }\n\n    for(var transformType in exports.transformsRegistry) {\n        mergeComponentAttrsToTransform(name, transformType);\n    }\n\n    if(_module.schema && _module.schema.layout) {\n        extendDeepAll(baseLayoutAttributes, _module.schema.layout);\n    }\n};\n\nexports.registerTransform = function(_module) {\n    exports.transformsRegistry[_module.name] = _module;\n\n    for(var componentName in exports.componentsRegistry) {\n        mergeComponentAttrsToTransform(componentName, _module.name);\n    }\n};\n\nfunction findArrayRegexps(_module) {\n    if(_module.layoutAttributes) {\n        var arrayAttrRegexps = _module.layoutAttributes._arrayAttrRegexps;\n        if(arrayAttrRegexps) {\n            for(var i = 0; i < arrayAttrRegexps.length; i++) {\n                pushUnique(exports.layoutArrayRegexes, arrayAttrRegexps[i]);\n            }\n        }\n    }\n}\n\nfunction mergeComponentAttrsToTrace(componentName, traceType) {\n    var componentSchema = exports.componentsRegistry[componentName].schema;\n    if(!componentSchema || !componentSchema.traces) return;\n\n    var traceAttrs = componentSchema.traces[traceType];\n    if(traceAttrs) {\n        extendDeepAll(exports.modules[traceType]._module.attributes, traceAttrs);\n    }\n}\n\nfunction mergeComponentAttrsToTransform(componentName, transformType) {\n    var componentSchema = exports.componentsRegistry[componentName].schema;\n    if(!componentSchema || !componentSchema.transforms) return;\n\n    var transformAttrs = componentSchema.transforms[transformType];\n    if(transformAttrs) {\n        extendDeepAll(exports.transformsRegistry[transformType].attributes, transformAttrs);\n    }\n}\n\nfunction mergeComponentAttrsToSubplot(componentName, subplotName) {\n    var componentSchema = exports.componentsRegistry[componentName].schema;\n    if(!componentSchema || !componentSchema.subplots) return;\n\n    var subplotModule = exports.subplotsRegistry[subplotName];\n    var subplotAttrs = subplotModule.layoutAttributes;\n    var subplotAttr = subplotModule.attr === 'subplot' ? subplotModule.name : subplotModule.attr;\n    if(Array.isArray(subplotAttr)) subplotAttr = subplotAttr[0];\n\n    var componentLayoutAttrs = componentSchema.subplots[subplotAttr];\n    if(subplotAttrs && componentLayoutAttrs) {\n        extendDeepAll(subplotAttrs, componentLayoutAttrs);\n    }\n}\n\n/**\n * Get registered module using trace object or trace type\n *\n * @param {object||string} trace\n *  trace object with prop 'type' or trace type as a string\n * @return {object}\n *  module object corresponding to trace type\n */\nexports.getModule = function(trace) {\n    var _module = exports.modules[getTraceType(trace)];\n    if(!_module) return false;\n    return _module._module;\n};\n\n/**\n * Determine if this trace type is in a given category\n *\n * @param {object||string} traceType\n *  a trace (object) or trace type (string)\n * @param {string} category\n *  category in question\n * @return {boolean}\n */\nexports.traceIs = function(traceType, category) {\n    traceType = getTraceType(traceType);\n\n    // old plot.ly workspace hack, nothing to see here\n    if(traceType === 'various') return false;\n\n    var _module = exports.modules[traceType];\n\n    if(!_module) {\n        if(traceType && traceType !== 'area') {\n            Loggers.log('Unrecognized trace type ' + traceType + '.');\n        }\n\n        _module = exports.modules[basePlotAttributes.type.dflt];\n    }\n\n    return !!_module.categories[category];\n};\n\n/**\n * Determine if this trace has a transform of the given type and return\n * array of matching indices.\n *\n * @param {object} data\n *  a trace object (member of data or fullData)\n * @param {string} type\n *  type of trace to test\n * @return {array}\n *  array of matching indices. If none found, returns []\n */\nexports.getTransformIndices = function(data, type) {\n    var indices = [];\n    var transforms = data.transforms || [];\n    for(var i = 0; i < transforms.length; i++) {\n        if(transforms[i].type === type) {\n            indices.push(i);\n        }\n    }\n    return indices;\n};\n\n/**\n * Determine if this trace has a transform of the given type\n *\n * @param {object} data\n *  a trace object (member of data or fullData)\n * @param {string} type\n *  type of trace to test\n * @return {boolean}\n */\nexports.hasTransform = function(data, type) {\n    var transforms = data.transforms || [];\n    for(var i = 0; i < transforms.length; i++) {\n        if(transforms[i].type === type) {\n            return true;\n        }\n    }\n    return false;\n\n};\n\n/**\n * Retrieve component module method. Falls back on noop if either the\n * module or the method is missing, so the result can always be safely called\n *\n * @param {string} name\n *  name of component (as declared in component module)\n * @param {string} method\n *  name of component module method\n * @return {function}\n */\nexports.getComponentMethod = function(name, method) {\n    var _module = exports.componentsRegistry[name];\n\n    if(!_module) return noop;\n    return _module[method] || noop;\n};\n\nfunction getTraceType(traceType) {\n    if(typeof traceType === 'object') traceType = traceType.type;\n    return traceType;\n}\n\n/**\n * Register a new locale dictionary\n *\n * @param {object} module\n * @param {string} moduleType\n *  should be 'locale' so that Plotly.register will forward to this function\n * @param {string} module.name\n *  the locale name. Should be a 2-digit language string ('en', 'de')\n *  optionally with a country/region code ('en-GB', 'de-CH'). If a country\n *  code is used but the base language locale has not yet been supplied,\n *  we will use this locale for the base as well.\n * @param {object} module.dictionary\n *  the dictionary mapping input strings to localized strings\n *  generally the keys should be the literal input strings, but\n *  if default translations are provided you can use any string as a key.\n * @param {object} module.format\n *  a `d3.locale` format specifier for this locale\n *  any omitted keys we'll fall back on en-US\n */\nexports.registerLocale = function(_module) {\n    var locale = _module.name;\n    var baseLocale = locale.split('-')[0];\n\n    var newDict = _module.dictionary;\n    var newFormat = _module.format;\n    var hasDict = newDict && Object.keys(newDict).length;\n    var hasFormat = newFormat && Object.keys(newFormat).length;\n\n    var locales = exports.localeRegistry;\n\n    var localeObj = locales[locale];\n    if(!localeObj) locales[locale] = localeObj = {};\n\n    // Should we use this dict for the base locale?\n    // In case we're overwriting a previous dict for this locale, check\n    // whether the base matches the full locale dict now. If we're not\n    // overwriting, locales[locale] is undefined so this just checks if\n    // baseLocale already had a dict or not.\n    // Same logic for dateFormats\n    if(baseLocale !== locale) {\n        var baseLocaleObj = locales[baseLocale];\n        if(!baseLocaleObj) locales[baseLocale] = baseLocaleObj = {};\n\n        if(hasDict && baseLocaleObj.dictionary === localeObj.dictionary) {\n            baseLocaleObj.dictionary = newDict;\n        }\n        if(hasFormat && baseLocaleObj.format === localeObj.format) {\n            baseLocaleObj.format = newFormat;\n        }\n    }\n\n    if(hasDict) localeObj.dictionary = newDict;\n    if(hasFormat) localeObj.format = newFormat;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/registry.js\n// module id = 2\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar tinycolor = require('tinycolor2');\nvar isNumeric = require('fast-isnumeric');\n\nvar color = module.exports = {};\n\nvar colorAttrs = require('./attributes');\ncolor.defaults = colorAttrs.defaults;\nvar defaultLine = color.defaultLine = colorAttrs.defaultLine;\ncolor.lightLine = colorAttrs.lightLine;\nvar background = color.background = colorAttrs.background;\n\n/*\n * tinyRGB: turn a tinycolor into an rgb string, but\n * unlike the built-in tinycolor.toRgbString this never includes alpha\n */\ncolor.tinyRGB = function(tc) {\n    var c = tc.toRgb();\n    return 'rgb(' + Math.round(c.r) + ', ' +\n        Math.round(c.g) + ', ' + Math.round(c.b) + ')';\n};\n\ncolor.rgb = function(cstr) { return color.tinyRGB(tinycolor(cstr)); };\n\ncolor.opacity = function(cstr) { return cstr ? tinycolor(cstr).getAlpha() : 0; };\n\ncolor.addOpacity = function(cstr, op) {\n    var c = tinycolor(cstr).toRgb();\n    return 'rgba(' + Math.round(c.r) + ', ' +\n        Math.round(c.g) + ', ' + Math.round(c.b) + ', ' + op + ')';\n};\n\n// combine two colors into one apparent color\n// if back has transparency or is missing,\n// color.background is assumed behind it\ncolor.combine = function(front, back) {\n    var fc = tinycolor(front).toRgb();\n    if(fc.a === 1) return tinycolor(front).toRgbString();\n\n    var bc = tinycolor(back || background).toRgb(),\n        bcflat = bc.a === 1 ? bc : {\n            r: 255 * (1 - bc.a) + bc.r * bc.a,\n            g: 255 * (1 - bc.a) + bc.g * bc.a,\n            b: 255 * (1 - bc.a) + bc.b * bc.a\n        },\n        fcflat = {\n            r: bcflat.r * (1 - fc.a) + fc.r * fc.a,\n            g: bcflat.g * (1 - fc.a) + fc.g * fc.a,\n            b: bcflat.b * (1 - fc.a) + fc.b * fc.a\n        };\n    return tinycolor(fcflat).toRgbString();\n};\n\n/*\n * Create a color that contrasts with cstr.\n *\n * If cstr is a dark color, we lighten it; if it's light, we darken.\n *\n * If lightAmount / darkAmount are used, we adjust by these percentages,\n * otherwise we go all the way to white or black.\n */\ncolor.contrast = function(cstr, lightAmount, darkAmount) {\n    var tc = tinycolor(cstr);\n\n    if(tc.getAlpha() !== 1) tc = tinycolor(color.combine(cstr, background));\n\n    var newColor = tc.isDark() ?\n        (lightAmount ? tc.lighten(lightAmount) : background) :\n        (darkAmount ? tc.darken(darkAmount) : defaultLine);\n\n    return newColor.toString();\n};\n\ncolor.stroke = function(s, c) {\n    var tc = tinycolor(c);\n    s.style({'stroke': color.tinyRGB(tc), 'stroke-opacity': tc.getAlpha()});\n};\n\ncolor.fill = function(s, c) {\n    var tc = tinycolor(c);\n    s.style({\n        'fill': color.tinyRGB(tc),\n        'fill-opacity': tc.getAlpha()\n    });\n};\n\n// search container for colors with the deprecated rgb(fractions) format\n// and convert them to rgb(0-255 values)\ncolor.clean = function(container) {\n    if(!container || typeof container !== 'object') return;\n\n    var keys = Object.keys(container),\n        i,\n        j,\n        key,\n        val;\n\n    for(i = 0; i < keys.length; i++) {\n        key = keys[i];\n        val = container[key];\n\n        // only sanitize keys that end in \"color\" or \"colorscale\"\n        if(key.substr(key.length - 5) === 'color') {\n            if(Array.isArray(val)) {\n                for(j = 0; j < val.length; j++) val[j] = cleanOne(val[j]);\n            }\n            else container[key] = cleanOne(val);\n        }\n        else if(key.substr(key.length - 10) === 'colorscale' && Array.isArray(val)) {\n            // colorscales have the format [[0, color1], [frac, color2], ... [1, colorN]]\n            for(j = 0; j < val.length; j++) {\n                if(Array.isArray(val[j])) val[j][1] = cleanOne(val[j][1]);\n            }\n        }\n        // recurse into arrays of objects, and plain objects\n        else if(Array.isArray(val)) {\n            var el0 = val[0];\n            if(!Array.isArray(el0) && el0 && typeof el0 === 'object') {\n                for(j = 0; j < val.length; j++) color.clean(val[j]);\n            }\n        }\n        else if(val && typeof val === 'object') color.clean(val);\n    }\n};\n\nfunction cleanOne(val) {\n    if(isNumeric(val) || typeof val !== 'string') return val;\n\n    var valTrim = val.trim();\n    if(valTrim.substr(0, 3) !== 'rgb') return val;\n\n    var match = valTrim.match(/^rgba?\\s*\\(([^()]*)\\)$/);\n    if(!match) return val;\n\n    var parts = match[1].trim().split(/\\s*[\\s,]\\s*/),\n        rgba = valTrim.charAt(3) === 'a' && parts.length === 4;\n    if(!rgba && parts.length !== 3) return val;\n\n    for(var i = 0; i < parts.length; i++) {\n        if(!parts[i].length) return val;\n        parts[i] = Number(parts[i]);\n\n        // all parts must be non-negative numbers\n        if(!(parts[i] >= 0)) return val;\n        // alpha>1 gets clipped to 1\n        if(i === 3) {\n            if(parts[i] > 1) parts[i] = 1;\n        }\n        // r, g, b must be < 1 (ie 1 itself is not allowed)\n        else if(parts[i] >= 1) return val;\n    }\n\n    var rgbStr = Math.round(parts[0] * 255) + ', ' +\n        Math.round(parts[1] * 255) + ', ' +\n        Math.round(parts[2] * 255);\n\n    if(rgba) return 'rgba(' + rgbStr + ', ' + parts[3] + ')';\n    return 'rgb(' + rgbStr + ')';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/color/index.js\n// module id = 3\n// module chunks = 0","/**\n * inspired by is-number <https://github.com/jonschlinkert/is-number>\n * but significantly simplified and sped up by ignoring number and string constructors\n * ie these return false:\n *   new Number(1)\n *   new String('1')\n */\n\n'use strict';\n\n/**\n * Is this string all whitespace?\n * This solution kind of makes my brain hurt, but it's significantly faster\n * than !str.trim() or any other solution I could find.\n *\n * whitespace codes from: http://en.wikipedia.org/wiki/Whitespace_character\n * and verified with:\n *\n *  for(var i = 0; i < 65536; i++) {\n *      var s = String.fromCharCode(i);\n *      if(+s===0 && !s.trim()) console.log(i, s);\n *  }\n *\n * which counts a couple of these as *not* whitespace, but finds nothing else\n * that *is* whitespace. Note that charCodeAt stops at 16 bits, but it appears\n * that there are no whitespace characters above this, and code points above\n * this do not map onto white space characters.\n */\nfunction allBlankCharCodes(str){\n    var l = str.length,\n        a;\n    for(var i = 0; i < l; i++) {\n        a = str.charCodeAt(i);\n        if((a < 9 || a > 13) && (a !== 32) && (a !== 133) && (a !== 160) &&\n            (a !== 5760) && (a !== 6158) && (a < 8192 || a > 8205) &&\n            (a !== 8232) && (a !== 8233) && (a !== 8239) && (a !== 8287) &&\n            (a !== 8288) && (a !== 12288) && (a !== 65279)) {\n                return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = function(n) {\n    var type = typeof n;\n    if(type === 'string') {\n        var original = n;\n        n = +n;\n        // whitespace strings cast to zero - filter them out\n        if(n===0 && allBlankCharCodes(original)) return false;\n    }\n    else if(type !== 'number') return false;\n\n    return n - n < 1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fast-isnumeric/index.js\n// module id = 4\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\nvar tinycolor = require('tinycolor2');\n\nvar Registry = require('../../registry');\nvar Color = require('../color');\nvar Colorscale = require('../colorscale');\nvar Lib = require('../../lib');\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\nvar alignment = require('../../constants/alignment');\nvar LINE_SPACING = alignment.LINE_SPACING;\nvar DESELECTDIM = require('../../constants/interactions').DESELECTDIM;\n\nvar subTypes = require('../../traces/scatter/subtypes');\nvar makeBubbleSizeFn = require('../../traces/scatter/make_bubble_size_func');\n\nvar drawing = module.exports = {};\n\n// -----------------------------------------------------\n// styling functions for plot elements\n// -----------------------------------------------------\n\ndrawing.font = function(s, family, size, color) {\n    // also allow the form font(s, {family, size, color})\n    if(Lib.isPlainObject(family)) {\n        color = family.color;\n        size = family.size;\n        family = family.family;\n    }\n    if(family) s.style('font-family', family);\n    if(size + 1) s.style('font-size', size + 'px');\n    if(color) s.call(Color.fill, color);\n};\n\n/*\n * Positioning helpers\n * Note: do not use `setPosition` with <text> nodes modified by\n * `svgTextUtils.convertToTspans`. Use `svgTextUtils.positionText`\n * instead, so that <tspan.line> elements get updated to match.\n */\ndrawing.setPosition = function(s, x, y) { s.attr('x', x).attr('y', y); };\ndrawing.setSize = function(s, w, h) { s.attr('width', w).attr('height', h); };\ndrawing.setRect = function(s, x, y, w, h) {\n    s.call(drawing.setPosition, x, y).call(drawing.setSize, w, h);\n};\n\n/** Translate node\n *\n * @param {object} d : calcdata point item\n * @param {sel} sel : d3 selction of node to translate\n * @param {object} xa : corresponding full xaxis object\n * @param {object} ya : corresponding full yaxis object\n *\n * @return {boolean} :\n *  true if selection got translated\n *  false if selection could not get translated\n */\ndrawing.translatePoint = function(d, sel, xa, ya) {\n    var x = xa.c2p(d.x);\n    var y = ya.c2p(d.y);\n\n    if(isNumeric(x) && isNumeric(y) && sel.node()) {\n        // for multiline text this works better\n        if(sel.node().nodeName === 'text') {\n            sel.attr('x', x).attr('y', y);\n        } else {\n            sel.attr('transform', 'translate(' + x + ',' + y + ')');\n        }\n    } else {\n        return false;\n    }\n\n    return true;\n};\n\ndrawing.translatePoints = function(s, xa, ya) {\n    s.each(function(d) {\n        var sel = d3.select(this);\n        drawing.translatePoint(d, sel, xa, ya);\n    });\n};\n\ndrawing.hideOutsideRangePoint = function(d, sel, xa, ya, xcalendar, ycalendar) {\n    sel.attr(\n        'display',\n        (xa.isPtWithinRange(d, xcalendar) && ya.isPtWithinRange(d, ycalendar)) ? null : 'none'\n    );\n};\n\ndrawing.hideOutsideRangePoints = function(traceGroups, subplot) {\n    if(!subplot._hasClipOnAxisFalse) return;\n\n    var xa = subplot.xaxis;\n    var ya = subplot.yaxis;\n\n    traceGroups.each(function(d) {\n        var trace = d[0].trace;\n        var xcalendar = trace.xcalendar;\n        var ycalendar = trace.ycalendar;\n\n        traceGroups.selectAll('.point,.textpoint').each(function(d) {\n            drawing.hideOutsideRangePoint(d, d3.select(this), xa, ya, xcalendar, ycalendar);\n        });\n    });\n};\n\ndrawing.crispRound = function(gd, lineWidth, dflt) {\n    // for lines that disable antialiasing we want to\n    // make sure the width is an integer, and at least 1 if it's nonzero\n\n    if(!lineWidth || !isNumeric(lineWidth)) return dflt || 0;\n\n    // but not for static plots - these don't get antialiased anyway.\n    if(gd._context.staticPlot) return lineWidth;\n\n    if(lineWidth < 1) return 1;\n    return Math.round(lineWidth);\n};\n\ndrawing.singleLineStyle = function(d, s, lw, lc, ld) {\n    s.style('fill', 'none');\n    var line = (((d || [])[0] || {}).trace || {}).line || {},\n        lw1 = lw || line.width||0,\n        dash = ld || line.dash || '';\n\n    Color.stroke(s, lc || line.color);\n    drawing.dashLine(s, dash, lw1);\n};\n\ndrawing.lineGroupStyle = function(s, lw, lc, ld) {\n    s.style('fill', 'none')\n    .each(function(d) {\n        var line = (((d || [])[0] || {}).trace || {}).line || {},\n            lw1 = lw || line.width||0,\n            dash = ld || line.dash || '';\n\n        d3.select(this)\n            .call(Color.stroke, lc || line.color)\n            .call(drawing.dashLine, dash, lw1);\n    });\n};\n\ndrawing.dashLine = function(s, dash, lineWidth) {\n    lineWidth = +lineWidth || 0;\n\n    dash = drawing.dashStyle(dash, lineWidth);\n\n    s.style({\n        'stroke-dasharray': dash,\n        'stroke-width': lineWidth + 'px'\n    });\n};\n\ndrawing.dashStyle = function(dash, lineWidth) {\n    lineWidth = +lineWidth || 1;\n    var dlw = Math.max(lineWidth, 3);\n\n    if(dash === 'solid') dash = '';\n    else if(dash === 'dot') dash = dlw + 'px,' + dlw + 'px';\n    else if(dash === 'dash') dash = (3 * dlw) + 'px,' + (3 * dlw) + 'px';\n    else if(dash === 'longdash') dash = (5 * dlw) + 'px,' + (5 * dlw) + 'px';\n    else if(dash === 'dashdot') {\n        dash = (3 * dlw) + 'px,' + dlw + 'px,' + dlw + 'px,' + dlw + 'px';\n    }\n    else if(dash === 'longdashdot') {\n        dash = (5 * dlw) + 'px,' + (2 * dlw) + 'px,' + dlw + 'px,' + (2 * dlw) + 'px';\n    }\n    // otherwise user wrote the dasharray themselves - leave it be\n\n    return dash;\n};\n\n// Same as fillGroupStyle, except in this case the selection may be a transition\ndrawing.singleFillStyle = function(sel) {\n    var node = d3.select(sel.node());\n    var data = node.data();\n    var fillcolor = (((data[0] || [])[0] || {}).trace || {}).fillcolor;\n    if(fillcolor) {\n        sel.call(Color.fill, fillcolor);\n    }\n};\n\ndrawing.fillGroupStyle = function(s) {\n    s.style('stroke-width', 0)\n    .each(function(d) {\n        var shape = d3.select(this);\n        try {\n            shape.call(Color.fill, d[0].trace.fillcolor);\n        }\n        catch(e) {\n            Lib.error(e, s);\n            shape.remove();\n        }\n    });\n};\n\nvar SYMBOLDEFS = require('./symbol_defs');\n\ndrawing.symbolNames = [];\ndrawing.symbolFuncs = [];\ndrawing.symbolNeedLines = {};\ndrawing.symbolNoDot = {};\ndrawing.symbolNoFill = {};\ndrawing.symbolList = [];\n\nObject.keys(SYMBOLDEFS).forEach(function(k) {\n    var symDef = SYMBOLDEFS[k];\n    drawing.symbolList = drawing.symbolList.concat(\n        [symDef.n, k, symDef.n + 100, k + '-open']);\n    drawing.symbolNames[symDef.n] = k;\n    drawing.symbolFuncs[symDef.n] = symDef.f;\n    if(symDef.needLine) {\n        drawing.symbolNeedLines[symDef.n] = true;\n    }\n    if(symDef.noDot) {\n        drawing.symbolNoDot[symDef.n] = true;\n    }\n    else {\n        drawing.symbolList = drawing.symbolList.concat(\n            [symDef.n + 200, k + '-dot', symDef.n + 300, k + '-open-dot']);\n    }\n    if(symDef.noFill) {\n        drawing.symbolNoFill[symDef.n] = true;\n    }\n});\nvar MAXSYMBOL = drawing.symbolNames.length,\n    // add a dot in the middle of the symbol\n    DOTPATH = 'M0,0.5L0.5,0L0,-0.5L-0.5,0Z';\n\ndrawing.symbolNumber = function(v) {\n    if(typeof v === 'string') {\n        var vbase = 0;\n        if(v.indexOf('-open') > 0) {\n            vbase = 100;\n            v = v.replace('-open', '');\n        }\n        if(v.indexOf('-dot') > 0) {\n            vbase += 200;\n            v = v.replace('-dot', '');\n        }\n        v = drawing.symbolNames.indexOf(v);\n        if(v >= 0) { v += vbase; }\n    }\n    if((v % 100 >= MAXSYMBOL) || v >= 400) { return 0; }\n    return Math.floor(Math.max(v, 0));\n};\n\nfunction makePointPath(symbolNumber, r) {\n    var base = symbolNumber % 100;\n    return drawing.symbolFuncs[base](r) + (symbolNumber >= 200 ? DOTPATH : '');\n}\n\nfunction singlePointStyle(d, sel, trace, markerScale, lineScale, marker, markerLine, gd) {\n    if(Registry.traceIs(trace, 'symbols')) {\n        var sizeFn = makeBubbleSizeFn(trace);\n\n        sel.attr('d', function(d) {\n            var r;\n\n            // handle multi-trace graph edit case\n            if(d.ms === 'various' || marker.size === 'various') {\n                r = 3;\n            } else {\n                r = subTypes.isBubble(trace) ?\n                        sizeFn(d.ms) : (marker.size || 6) / 2;\n            }\n\n            // store the calculated size so hover can use it\n            d.mrc = r;\n\n            // turn the symbol into a sanitized number\n            var x = drawing.symbolNumber(d.mx || marker.symbol) || 0;\n\n            // save if this marker is open\n            // because that impacts how to handle colors\n            d.om = x % 200 >= 100;\n\n            return makePointPath(x, r);\n        });\n    }\n\n    sel.style('opacity', function(d) {\n        return (d.mo + 1 || marker.opacity + 1) - 1;\n    });\n\n    var perPointGradient = false;\n\n    // 'so' is suspected outliers, for box plots\n    var fillColor,\n        lineColor,\n        lineWidth;\n    if(d.so) {\n        lineWidth = markerLine.outlierwidth;\n        lineColor = markerLine.outliercolor;\n        fillColor = marker.outliercolor;\n    }\n    else {\n        lineWidth = (d.mlw + 1 || markerLine.width + 1 ||\n            // TODO: we need the latter for legends... can we get rid of it?\n            (d.trace ? d.trace.marker.line.width : 0) + 1) - 1;\n\n        if('mlc' in d) lineColor = d.mlcc = lineScale(d.mlc);\n        // weird case: array wasn't long enough to apply to every point\n        else if(Array.isArray(markerLine.color)) lineColor = Color.defaultLine;\n        else lineColor = markerLine.color;\n\n        if(Array.isArray(marker.color)) {\n            fillColor = Color.defaultLine;\n            perPointGradient = true;\n        }\n\n        if('mc' in d) fillColor = d.mcc = markerScale(d.mc);\n        else fillColor = marker.color || 'rgba(0,0,0,0)';\n    }\n\n    if(d.om) {\n        // open markers can't have zero linewidth, default to 1px,\n        // and use fill color as stroke color\n        sel.call(Color.stroke, fillColor)\n            .style({\n                'stroke-width': (lineWidth || 1) + 'px',\n                fill: 'none'\n            });\n    }\n    else {\n        sel.style('stroke-width', lineWidth + 'px');\n\n        var markerGradient = marker.gradient;\n\n        var gradientType = d.mgt;\n        if(gradientType) perPointGradient = true;\n        else gradientType = markerGradient && markerGradient.type;\n\n        if(gradientType && gradientType !== 'none') {\n            var gradientColor = d.mgc;\n            if(gradientColor) perPointGradient = true;\n            else gradientColor = markerGradient.color;\n\n            var gradientID = 'g' + gd._fullLayout._uid + '-' + trace.uid;\n            if(perPointGradient) gradientID += '-' + d.i;\n\n            sel.call(drawing.gradient, gd, gradientID, gradientType, fillColor, gradientColor);\n        }\n        else {\n            sel.call(Color.fill, fillColor);\n        }\n\n        if(lineWidth) {\n            sel.call(Color.stroke, lineColor);\n        }\n    }\n}\n\nvar HORZGRADIENT = {x1: 1, x2: 0, y1: 0, y2: 0};\nvar VERTGRADIENT = {x1: 0, x2: 0, y1: 1, y2: 0};\n\ndrawing.gradient = function(sel, gd, gradientID, type, color1, color2) {\n    var gradient = gd._fullLayout._defs.select('.gradients')\n        .selectAll('#' + gradientID)\n        .data([type + color1 + color2], Lib.identity);\n\n    gradient.exit().remove();\n\n    gradient.enter()\n        .append(type === 'radial' ? 'radialGradient' : 'linearGradient')\n        .each(function() {\n            var el = d3.select(this);\n            if(type === 'horizontal') el.attr(HORZGRADIENT);\n            else if(type === 'vertical') el.attr(VERTGRADIENT);\n\n            el.attr('id', gradientID);\n\n            var tc1 = tinycolor(color1);\n            var tc2 = tinycolor(color2);\n\n            el.append('stop').attr({\n                offset: '0%',\n                'stop-color': Color.tinyRGB(tc2),\n                'stop-opacity': tc2.getAlpha()\n            });\n\n            el.append('stop').attr({\n                offset: '100%',\n                'stop-color': Color.tinyRGB(tc1),\n                'stop-opacity': tc1.getAlpha()\n            });\n        });\n\n    sel.style({\n        fill: 'url(#' + gradientID + ')',\n        'fill-opacity': null\n    });\n};\n\n/*\n * Make the gradients container and clear out any previous gradients.\n * We never collect all the gradients we need in one place,\n * so we can't ever remove gradients that have stopped being useful,\n * except all at once before a full redraw.\n * The upside of this is arbitrary points can share gradient defs\n */\ndrawing.initGradients = function(gd) {\n    var gradientsGroup = gd._fullLayout._defs.selectAll('.gradients').data([0]);\n    gradientsGroup.enter().append('g').classed('gradients', true);\n\n    gradientsGroup.selectAll('linearGradient,radialGradient').remove();\n};\n\ndrawing.singlePointStyle = function(d, sel, trace, markerScale, lineScale, gd) {\n    var marker = trace.marker;\n\n    singlePointStyle(d, sel, trace, markerScale, lineScale, marker, marker.line, gd);\n};\n\ndrawing.pointStyle = function(s, trace, gd) {\n    if(!s.size()) return;\n\n    // allow array marker and marker line colors to be\n    // scaled by given max and min to colorscales\n    var marker = trace.marker;\n    var markerScale = drawing.tryColorscale(marker, '');\n    var lineScale = drawing.tryColorscale(marker, 'line');\n\n    s.each(function(d) {\n        drawing.singlePointStyle(d, d3.select(this), trace, markerScale, lineScale, gd);\n    });\n};\n\ndrawing.selectedPointStyle = function(s, trace) {\n    if(!s.size() || !trace.selectedpoints) return;\n\n    var selectedAttrs = trace.selected || {};\n    var unselectedAttrs = trace.unselected || {};\n\n    var marker = trace.marker || {};\n    var selectedMarker = selectedAttrs.marker || {};\n    var unselectedMarker = unselectedAttrs.marker || {};\n\n    var mo = marker.opacity;\n    var smo = selectedMarker.opacity;\n    var usmo = unselectedMarker.opacity;\n    var smoIsDefined = smo !== undefined;\n    var usmoIsDefined = usmo !== undefined;\n\n    s.each(function(d) {\n        var pt = d3.select(this);\n        var dmo = d.mo;\n        var dmoIsDefined = dmo !== undefined;\n        var mo2;\n\n        if(dmoIsDefined || smoIsDefined || usmoIsDefined) {\n            if(d.selected) {\n                if(smoIsDefined) mo2 = smo;\n            } else {\n                if(usmoIsDefined) mo2 = usmo;\n                else mo2 = DESELECTDIM * (dmoIsDefined ? dmo : mo);\n            }\n        }\n\n        if(mo2 !== undefined) pt.style('opacity', mo2);\n    });\n\n    var smc = selectedMarker.color;\n    var usmc = unselectedMarker.color;\n\n    if(smc || usmc) {\n        s.each(function(d) {\n            var pt = d3.select(this);\n            var mc2;\n\n            if(d.selected) {\n                if(smc) mc2 = smc;\n            } else {\n                if(usmc) mc2 = usmc;\n            }\n\n            if(mc2) Color.fill(pt, mc2);\n        });\n    }\n\n    var sms = selectedMarker.size;\n    var usms = unselectedMarker.size;\n    var smsIsDefined = sms !== undefined;\n    var usmsIsDefined = usms !== undefined;\n\n    if(Registry.traceIs(trace, 'symbols') && (smsIsDefined || usmsIsDefined)) {\n        s.each(function(d) {\n            var pt = d3.select(this);\n            var mrc = d.mrc;\n            var mx = d.mx || marker.symbol || 0;\n            var mrc2;\n\n            if(d.selected) {\n                mrc2 = (smsIsDefined) ? sms / 2 : mrc;\n            } else {\n                mrc2 = (usmsIsDefined) ? usms / 2 : mrc;\n            }\n\n            pt.attr('d', makePointPath(drawing.symbolNumber(mx), mrc2));\n\n            // save for selectedTextStyle\n            d.mrc2 = mrc2;\n        });\n    }\n};\n\ndrawing.tryColorscale = function(marker, prefix) {\n    var cont = prefix ? Lib.nestedProperty(marker, prefix).get() : marker,\n        scl = cont.colorscale,\n        colorArray = cont.color;\n\n    if(scl && Array.isArray(colorArray)) {\n        return Colorscale.makeColorScaleFunc(\n            Colorscale.extractScale(scl, cont.cmin, cont.cmax)\n        );\n    }\n    else return Lib.identity;\n};\n\nvar TEXTOFFSETSIGN = {start: 1, end: -1, middle: 0, bottom: 1, top: -1};\n\nfunction textPointPosition(s, textPosition, fontSize, markerRadius) {\n    var group = d3.select(s.node().parentNode);\n\n    var v = textPosition.indexOf('top') !== -1 ?\n        'top' :\n        textPosition.indexOf('bottom') !== -1 ? 'bottom' : 'middle';\n    var h = textPosition.indexOf('left') !== -1 ?\n        'end' :\n        textPosition.indexOf('right') !== -1 ? 'start' : 'middle';\n\n    // if markers are shown, offset a little more than\n    // the nominal marker size\n    // ie 2/1.6 * nominal, bcs some markers are a bit bigger\n    var r = markerRadius ? markerRadius / 0.8 + 1 : 0;\n\n    var numLines = (svgTextUtils.lineCount(s) - 1) * LINE_SPACING + 1;\n    var dx = TEXTOFFSETSIGN[h] * r;\n    var dy = fontSize * 0.75 + TEXTOFFSETSIGN[v] * r +\n            (TEXTOFFSETSIGN[v] - 1) * numLines * fontSize / 2;\n\n    // fix the overall text group position\n    s.attr('text-anchor', h);\n    group.attr('transform', 'translate(' + dx + ',' + dy + ')');\n}\n\nfunction extracTextFontSize(d, trace) {\n    var fontSize = d.ts || trace.textfont.size;\n    return (isNumeric(fontSize) && fontSize > 0) ? fontSize : 0;\n}\n\n// draw text at points\ndrawing.textPointStyle = function(s, trace, gd) {\n    s.each(function(d) {\n        var p = d3.select(this);\n        var text = Lib.extractOption(d, trace, 'tx', 'text');\n\n        if(!text) {\n            p.remove();\n            return;\n        }\n\n        var pos = d.tp || trace.textposition;\n        var fontSize = extracTextFontSize(d, trace);\n\n        p.call(drawing.font,\n                d.tf || trace.textfont.family,\n                fontSize,\n                d.tc || trace.textfont.color)\n            .text(text)\n            .call(svgTextUtils.convertToTspans, gd)\n            .call(textPointPosition, pos, fontSize, d.mrc);\n    });\n};\n\ndrawing.selectedTextStyle = function(s, trace) {\n    if(!s.size() || !trace.selectedpoints) return;\n\n    var selectedAttrs = trace.selected || {};\n    var unselectedAttrs = trace.unselected || {};\n\n    s.each(function(d) {\n        var tx = d3.select(this);\n        var tc = d.tc || trace.textfont.color;\n        var tp = d.tp || trace.textposition;\n        var fontSize = extracTextFontSize(d, trace);\n        var stc = (selectedAttrs.textfont || {}).color;\n        var utc = (unselectedAttrs.textfont || {}).color;\n        var tc2;\n\n        if(d.selected) {\n            if(stc) tc2 = stc;\n        } else {\n            if(utc) tc2 = utc;\n            else if(!stc) tc2 = Color.addOpacity(tc, DESELECTDIM);\n        }\n\n        if(tc2) Color.fill(tx, tc2);\n        textPointPosition(tx, tp, fontSize, d.mrc2 || d.mrc);\n    });\n};\n\n// generalized Catmull-Rom splines, per\n// http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\nvar CatmullRomExp = 0.5;\ndrawing.smoothopen = function(pts, smoothness) {\n    if(pts.length < 3) { return 'M' + pts.join('L');}\n    var path = 'M' + pts[0],\n        tangents = [], i;\n    for(i = 1; i < pts.length - 1; i++) {\n        tangents.push(makeTangent(pts[i - 1], pts[i], pts[i + 1], smoothness));\n    }\n    path += 'Q' + tangents[0][0] + ' ' + pts[1];\n    for(i = 2; i < pts.length - 1; i++) {\n        path += 'C' + tangents[i - 2][1] + ' ' + tangents[i - 1][0] + ' ' + pts[i];\n    }\n    path += 'Q' + tangents[pts.length - 3][1] + ' ' + pts[pts.length - 1];\n    return path;\n};\n\ndrawing.smoothclosed = function(pts, smoothness) {\n    if(pts.length < 3) { return 'M' + pts.join('L') + 'Z'; }\n    var path = 'M' + pts[0],\n        pLast = pts.length - 1,\n        tangents = [makeTangent(pts[pLast],\n                        pts[0], pts[1], smoothness)],\n        i;\n    for(i = 1; i < pLast; i++) {\n        tangents.push(makeTangent(pts[i - 1], pts[i], pts[i + 1], smoothness));\n    }\n    tangents.push(\n        makeTangent(pts[pLast - 1], pts[pLast], pts[0], smoothness)\n    );\n\n    for(i = 1; i <= pLast; i++) {\n        path += 'C' + tangents[i - 1][1] + ' ' + tangents[i][0] + ' ' + pts[i];\n    }\n    path += 'C' + tangents[pLast][1] + ' ' + tangents[0][0] + ' ' + pts[0] + 'Z';\n    return path;\n};\n\nfunction makeTangent(prevpt, thispt, nextpt, smoothness) {\n    var d1x = prevpt[0] - thispt[0],\n        d1y = prevpt[1] - thispt[1],\n        d2x = nextpt[0] - thispt[0],\n        d2y = nextpt[1] - thispt[1],\n        d1a = Math.pow(d1x * d1x + d1y * d1y, CatmullRomExp / 2),\n        d2a = Math.pow(d2x * d2x + d2y * d2y, CatmullRomExp / 2),\n        numx = (d2a * d2a * d1x - d1a * d1a * d2x) * smoothness,\n        numy = (d2a * d2a * d1y - d1a * d1a * d2y) * smoothness,\n        denom1 = 3 * d2a * (d1a + d2a),\n        denom2 = 3 * d1a * (d1a + d2a);\n    return [\n        [\n            d3.round(thispt[0] + (denom1 && numx / denom1), 2),\n            d3.round(thispt[1] + (denom1 && numy / denom1), 2)\n        ], [\n            d3.round(thispt[0] - (denom2 && numx / denom2), 2),\n            d3.round(thispt[1] - (denom2 && numy / denom2), 2)\n        ]\n    ];\n}\n\n// step paths - returns a generator function for paths\n// with the given step shape\nvar STEPPATH = {\n    hv: function(p0, p1) {\n        return 'H' + d3.round(p1[0], 2) + 'V' + d3.round(p1[1], 2);\n    },\n    vh: function(p0, p1) {\n        return 'V' + d3.round(p1[1], 2) + 'H' + d3.round(p1[0], 2);\n    },\n    hvh: function(p0, p1) {\n        return 'H' + d3.round((p0[0] + p1[0]) / 2, 2) + 'V' +\n            d3.round(p1[1], 2) + 'H' + d3.round(p1[0], 2);\n    },\n    vhv: function(p0, p1) {\n        return 'V' + d3.round((p0[1] + p1[1]) / 2, 2) + 'H' +\n            d3.round(p1[0], 2) + 'V' + d3.round(p1[1], 2);\n    }\n};\nvar STEPLINEAR = function(p0, p1) {\n    return 'L' + d3.round(p1[0], 2) + ',' + d3.round(p1[1], 2);\n};\ndrawing.steps = function(shape) {\n    var onestep = STEPPATH[shape] || STEPLINEAR;\n    return function(pts) {\n        var path = 'M' + d3.round(pts[0][0], 2) + ',' + d3.round(pts[0][1], 2);\n        for(var i = 1; i < pts.length; i++) {\n            path += onestep(pts[i - 1], pts[i]);\n        }\n        return path;\n    };\n};\n\n// off-screen svg render testing element, shared by the whole page\n// uses the id 'js-plotly-tester' and stores it in drawing.tester\ndrawing.makeTester = function() {\n    var tester = d3.select('body')\n        .selectAll('#js-plotly-tester')\n        .data([0]);\n\n    tester.enter().append('svg')\n        .attr('id', 'js-plotly-tester')\n        .attr(xmlnsNamespaces.svgAttrs)\n        .style({\n            position: 'absolute',\n            left: '-10000px',\n            top: '-10000px',\n            width: '9000px',\n            height: '9000px',\n            'z-index': '1'\n        });\n\n    // browsers differ on how they describe the bounding rect of\n    // the svg if its contents spill over... so make a 1x1px\n    // reference point we can measure off of.\n    var testref = tester.selectAll('.js-reference-point').data([0]);\n    testref.enter().append('path')\n        .classed('js-reference-point', true)\n        .attr('d', 'M0,0H1V1H0Z')\n        .style({\n            'stroke-width': 0,\n            fill: 'black'\n        });\n\n    drawing.tester = tester;\n    drawing.testref = testref;\n};\n\n/*\n * use our offscreen tester to get a clientRect for an element,\n * in a reference frame where it isn't translated (or transformed) and\n * its anchor point is at (0,0)\n * always returns a copy of the bbox, so the caller can modify it safely\n *\n * @param {SVGElement} node: the element to measure. If possible this should be\n *   a <text> or MathJax <g> element that's already passed through\n *   `convertToTspans` because in that case we can cache the results, but it's\n *   possible to pass in any svg element.\n *\n * @param {boolean} inTester: is this element already in `drawing.tester`?\n *   If you are measuring a dummy element, rather than one you really intend\n *   to use on the plot, making it in `drawing.tester` in the first place\n *   allows us to test faster because it cuts out cloning and appending it.\n *\n * @param {string} hash: for internal use only, if we already know the cache key\n *   for this element beforehand.\n *\n * @return {object}: a plain object containing the width, height, left, right,\n *   top, and bottom of `node`\n */\ndrawing.savedBBoxes = {};\nvar savedBBoxesCount = 0;\nvar maxSavedBBoxes = 10000;\n\ndrawing.bBox = function(node, inTester, hash) {\n    /*\n     * Cache elements we've already measured so we don't have to\n     * remeasure the same thing many times\n     * We have a few bBox callers though who pass a node larger than\n     * a <text> or a MathJax <g>, such as an axis group containing many labels.\n     * These will not generate a hash (unless we figure out an appropriate\n     * hash key for them) and thus we will not hash them.\n     */\n    if(!hash) hash = nodeHash(node);\n    var out;\n    if(hash) {\n        out = drawing.savedBBoxes[hash];\n        if(out) return Lib.extendFlat({}, out);\n    }\n    else if(node.childNodes.length === 1) {\n        /*\n         * If we have only one child element, which is itself hashable, make\n         * a new hash from this element plus its x,y,transform\n         * These bounding boxes *include* x,y,transform - mostly for use by\n         * callers trying to avoid overlaps (ie titles)\n         */\n        var innerNode = node.childNodes[0];\n\n        hash = nodeHash(innerNode);\n        if(hash) {\n            var x = +innerNode.getAttribute('x') || 0;\n            var y = +innerNode.getAttribute('y') || 0;\n            var transform = innerNode.getAttribute('transform');\n\n            if(!transform) {\n                // in this case, just varying x and y, don't bother caching\n                // the final bBox because the alteration is quick.\n                var innerBB = drawing.bBox(innerNode, false, hash);\n                if(x) {\n                    innerBB.left += x;\n                    innerBB.right += x;\n                }\n                if(y) {\n                    innerBB.top += y;\n                    innerBB.bottom += y;\n                }\n                return innerBB;\n            }\n            /*\n             * else we have a transform - rather than make a complicated\n             * (and error-prone and probably slow) transform parser/calculator,\n             * just continue on calculating the boundingClientRect of the group\n             * and use the new composite hash to cache it.\n             * That said, `innerNode.transform.baseVal` is an array of\n             * `SVGTransform` objects, that *do* seem to have a nice matrix\n             * multiplication interface that we could use to avoid making\n             * another getBoundingClientRect call...\n             */\n            hash += '~' + x + '~' + y + '~' + transform;\n\n            out = drawing.savedBBoxes[hash];\n            if(out) return Lib.extendFlat({}, out);\n        }\n    }\n    var testNode, tester;\n    if(inTester) {\n        testNode = node;\n    }\n    else {\n        tester = drawing.tester.node();\n\n        // copy the node to test into the tester\n        testNode = node.cloneNode(true);\n        tester.appendChild(testNode);\n    }\n\n    // standardize its position (and newline tspans if any)\n    d3.select(testNode)\n        .attr('transform', null)\n        .call(svgTextUtils.positionText, 0, 0);\n\n    var testRect = testNode.getBoundingClientRect();\n    var refRect = drawing.testref\n        .node()\n        .getBoundingClientRect();\n\n    if(!inTester) tester.removeChild(testNode);\n\n    var bb = {\n        height: testRect.height,\n        width: testRect.width,\n        left: testRect.left - refRect.left,\n        top: testRect.top - refRect.top,\n        right: testRect.right - refRect.left,\n        bottom: testRect.bottom - refRect.top\n    };\n\n    // make sure we don't have too many saved boxes,\n    // or a long session could overload on memory\n    // by saving boxes for long-gone elements\n    if(savedBBoxesCount >= maxSavedBBoxes) {\n        drawing.savedBBoxes = {};\n        savedBBoxesCount = 0;\n    }\n\n    // cache this bbox\n    if(hash) drawing.savedBBoxes[hash] = bb;\n    savedBBoxesCount++;\n\n    return Lib.extendFlat({}, bb);\n};\n\n// capture everything about a node (at least in our usage) that\n// impacts its bounding box, given that bBox clears x, y, and transform\nfunction nodeHash(node) {\n    var inputText = node.getAttribute('data-unformatted');\n    if(inputText === null) return;\n    return inputText +\n        node.getAttribute('data-math') +\n        node.getAttribute('text-anchor') +\n        node.getAttribute('style');\n}\n\n/*\n * make a robust clipPath url from a local id\n * note! We'd better not be exporting from a page\n * with a <base> or the svg will not be portable!\n */\ndrawing.setClipUrl = function(s, localId) {\n    if(!localId) {\n        s.attr('clip-path', null);\n        return;\n    }\n\n    var url = '#' + localId,\n        base = d3.select('base');\n\n    // add id to location href w/o hashes if any)\n    if(base.size() && base.attr('href')) {\n        url = window.location.href.split('#')[0] + url;\n    }\n\n    s.attr('clip-path', 'url(' + url + ')');\n};\n\ndrawing.getTranslate = function(element) {\n    // Note the separator [^\\d] between x and y in this regex\n    // We generally use ',' but IE will convert it to ' '\n    var re = /.*\\btranslate\\((-?\\d*\\.?\\d*)[^-\\d]*(-?\\d*\\.?\\d*)[^\\d].*/,\n        getter = element.attr ? 'attr' : 'getAttribute',\n        transform = element[getter]('transform') || '';\n\n    var translate = transform.replace(re, function(match, p1, p2) {\n        return [p1, p2].join(' ');\n    })\n    .split(' ');\n\n    return {\n        x: +translate[0] || 0,\n        y: +translate[1] || 0\n    };\n};\n\ndrawing.setTranslate = function(element, x, y) {\n\n    var re = /(\\btranslate\\(.*?\\);?)/,\n        getter = element.attr ? 'attr' : 'getAttribute',\n        setter = element.attr ? 'attr' : 'setAttribute',\n        transform = element[getter]('transform') || '';\n\n    x = x || 0;\n    y = y || 0;\n\n    transform = transform.replace(re, '').trim();\n    transform += ' translate(' + x + ', ' + y + ')';\n    transform = transform.trim();\n\n    element[setter]('transform', transform);\n\n    return transform;\n};\n\ndrawing.getScale = function(element) {\n\n    var re = /.*\\bscale\\((\\d*\\.?\\d*)[^\\d]*(\\d*\\.?\\d*)[^\\d].*/,\n        getter = element.attr ? 'attr' : 'getAttribute',\n        transform = element[getter]('transform') || '';\n\n    var translate = transform.replace(re, function(match, p1, p2) {\n        return [p1, p2].join(' ');\n    })\n    .split(' ');\n\n    return {\n        x: +translate[0] || 1,\n        y: +translate[1] || 1\n    };\n};\n\ndrawing.setScale = function(element, x, y) {\n\n    var re = /(\\bscale\\(.*?\\);?)/,\n        getter = element.attr ? 'attr' : 'getAttribute',\n        setter = element.attr ? 'attr' : 'setAttribute',\n        transform = element[getter]('transform') || '';\n\n    x = x || 1;\n    y = y || 1;\n\n    transform = transform.replace(re, '').trim();\n    transform += ' scale(' + x + ', ' + y + ')';\n    transform = transform.trim();\n\n    element[setter]('transform', transform);\n\n    return transform;\n};\n\ndrawing.setPointGroupScale = function(selection, x, y) {\n    var t, scale, re;\n\n    x = x || 1;\n    y = y || 1;\n\n    if(x === 1 && y === 1) {\n        scale = '';\n    } else {\n        // The same scale transform for every point:\n        scale = ' scale(' + x + ',' + y + ')';\n    }\n\n    // A regex to strip any existing scale:\n    re = /\\s*sc.*/;\n\n    selection.each(function() {\n        // Get the transform:\n        t = (this.getAttribute('transform') || '').replace(re, '');\n        t += scale;\n        t = t.trim();\n\n        // Append the scale transform\n        this.setAttribute('transform', t);\n    });\n\n    return scale;\n};\n\nvar TEXT_POINT_LAST_TRANSLATION_RE = /translate\\([^)]*\\)\\s*$/;\n\ndrawing.setTextPointsScale = function(selection, xScale, yScale) {\n    selection.each(function() {\n        var transforms;\n        var el = d3.select(this);\n        var text = el.select('text');\n\n        if(!text.node()) return;\n\n        var x = parseFloat(text.attr('x') || 0);\n        var y = parseFloat(text.attr('y') || 0);\n\n        var existingTransform = (el.attr('transform') || '').match(TEXT_POINT_LAST_TRANSLATION_RE);\n\n        if(xScale === 1 && yScale === 1) {\n            transforms = [];\n        } else {\n            transforms = [\n                'translate(' + x + ',' + y + ')',\n                'scale(' + xScale + ',' + yScale + ')',\n                'translate(' + (-x) + ',' + (-y) + ')',\n            ];\n        }\n\n        if(existingTransform) {\n            transforms.push(existingTransform);\n        }\n\n        el.attr('transform', transforms.join(' '));\n    });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/drawing/index.js\n// module id = 5\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar Titles = require('../../components/titles');\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\n\nvar constants = require('../../constants/numerical');\nvar FP_SAFE = constants.FP_SAFE;\nvar ONEAVGYEAR = constants.ONEAVGYEAR;\nvar ONEAVGMONTH = constants.ONEAVGMONTH;\nvar ONEDAY = constants.ONEDAY;\nvar ONEHOUR = constants.ONEHOUR;\nvar ONEMIN = constants.ONEMIN;\nvar ONESEC = constants.ONESEC;\nvar MINUS_SIGN = constants.MINUS_SIGN;\nvar BADNUM = constants.BADNUM;\n\nvar MID_SHIFT = require('../../constants/alignment').MID_SHIFT;\n\nvar axes = module.exports = {};\n\naxes.setConvert = require('./set_convert');\nvar autoType = require('./axis_autotype');\n\nvar axisIds = require('./axis_ids');\naxes.id2name = axisIds.id2name;\naxes.cleanId = axisIds.cleanId;\naxes.list = axisIds.list;\naxes.listIds = axisIds.listIds;\naxes.getFromId = axisIds.getFromId;\naxes.getFromTrace = axisIds.getFromTrace;\n\n/*\n * find the list of possible axes to reference with an xref or yref attribute\n * and coerce it to that list\n *\n * attr: the attribute we're generating a reference for. Should end in 'x' or 'y'\n *     but can be prefixed, like 'ax' for annotation's arrow x\n * dflt: the default to coerce to, or blank to use the first axis (falling back on\n *     extraOption if there is no axis)\n * extraOption: aside from existing axes with this letter, what non-axis value is allowed?\n *     Only required if it's different from `dflt`\n */\naxes.coerceRef = function(containerIn, containerOut, gd, attr, dflt, extraOption) {\n    var axLetter = attr.charAt(attr.length - 1);\n    var axlist = gd._fullLayout._subplots[axLetter + 'axis'];\n    var refAttr = attr + 'ref';\n    var attrDef = {};\n\n    if(!dflt) dflt = axlist[0] || extraOption;\n    if(!extraOption) extraOption = dflt;\n\n    // data-ref annotations are not supported in gl2d yet\n\n    attrDef[refAttr] = {\n        valType: 'enumerated',\n        values: axlist.concat(extraOption ? [extraOption] : []),\n        dflt: dflt\n    };\n\n    // xref, yref\n    return Lib.coerce(containerIn, containerOut, attrDef, refAttr);\n};\n\n/*\n * coerce position attributes (range-type) that can be either on axes or absolute\n * (paper or pixel) referenced. The biggest complication here is that we don't know\n * before looking at the axis whether the value must be a number or not (it may be\n * a date string), so we can't use the regular valType='number' machinery\n *\n * axRef (string): the axis this position is referenced to, or:\n *     paper: fraction of the plot area\n *     pixel: pixels relative to some starting position\n * attr (string): the attribute in containerOut we are coercing\n * dflt (number): the default position, as a fraction or pixels. If the attribute\n *     is to be axis-referenced, this will be converted to an axis data value\n *\n * Also cleans the values, since the attribute definition itself has to say\n * valType: 'any' to handle date axes. This allows us to accept:\n * - for category axes: category names, and convert them here into serial numbers.\n *   Note that this will NOT work for axis range endpoints, because we don't know\n *   the category list yet (it's set by ax.makeCalcdata during calc)\n *   but it works for component (note, shape, images) positions.\n * - for date axes: JS Dates or milliseconds, and convert to date strings\n * - for other types: coerce them to numbers\n */\naxes.coercePosition = function(containerOut, gd, coerce, axRef, attr, dflt) {\n    var cleanPos, pos;\n\n    if(axRef === 'paper' || axRef === 'pixel') {\n        cleanPos = Lib.ensureNumber;\n        pos = coerce(attr, dflt);\n    } else {\n        var ax = axes.getFromId(gd, axRef);\n        dflt = ax.fraction2r(dflt);\n        pos = coerce(attr, dflt);\n        cleanPos = ax.cleanPos;\n    }\n\n    containerOut[attr] = cleanPos(pos);\n};\n\naxes.cleanPosition = function(pos, gd, axRef) {\n    var cleanPos = (axRef === 'paper' || axRef === 'pixel') ?\n        Lib.ensureNumber :\n        axes.getFromId(gd, axRef).cleanPos;\n\n    return cleanPos(pos);\n};\n\nvar getDataConversions = axes.getDataConversions = function(gd, trace, target, targetArray) {\n    var ax;\n\n    // If target points to an axis, use the type we already have for that\n    // axis to find the data type. Otherwise use the values to autotype.\n    var d2cTarget = (target === 'x' || target === 'y' || target === 'z') ?\n        target :\n        targetArray;\n\n    // In the case of an array target, make a mock data array\n    // and call supplyDefaults to the data type and\n    // setup the data-to-calc method.\n    if(Array.isArray(d2cTarget)) {\n        ax = {\n            type: autoType(targetArray),\n            _categories: []\n        };\n        axes.setConvert(ax);\n\n        // build up ax._categories (usually done during ax.makeCalcdata()\n        if(ax.type === 'category') {\n            for(var i = 0; i < targetArray.length; i++) {\n                ax.d2c(targetArray[i]);\n            }\n        }\n    } else {\n        ax = axes.getFromTrace(gd, trace, d2cTarget);\n    }\n\n    // if 'target' has corresponding axis\n    // -> use setConvert method\n    if(ax) return {d2c: ax.d2c, c2d: ax.c2d};\n\n    // special case for 'ids'\n    // -> cast to String\n    if(d2cTarget === 'ids') return {d2c: toString, c2d: toString};\n\n    // otherwise (e.g. numeric-array of 'marker.color' or 'marker.size')\n    // -> cast to Number\n\n    return {d2c: toNum, c2d: toNum};\n};\n\nfunction toNum(v) { return +v; }\nfunction toString(v) { return String(v); }\n\naxes.getDataToCoordFunc = function(gd, trace, target, targetArray) {\n    return getDataConversions(gd, trace, target, targetArray).d2c;\n};\n\n// get counteraxis letter for this axis (name or id)\n// this can also be used as the id for default counter axis\naxes.counterLetter = function(id) {\n    var axLetter = id.charAt(0);\n    if(axLetter === 'x') return 'y';\n    if(axLetter === 'y') return 'x';\n};\n\n// incorporate a new minimum difference and first tick into\n// forced\n// note that _forceTick0 is linearized, so needs to be turned into\n// a range value for setting tick0\naxes.minDtick = function(ax, newDiff, newFirst, allow) {\n    // doesn't make sense to do forced min dTick on log or category axes,\n    // and the plot itself may decide to cancel (ie non-grouped bars)\n    if(['log', 'category'].indexOf(ax.type) !== -1 || !allow) {\n        ax._minDtick = 0;\n    }\n    // undefined means there's nothing there yet\n    else if(ax._minDtick === undefined) {\n        ax._minDtick = newDiff;\n        ax._forceTick0 = newFirst;\n    }\n    else if(ax._minDtick) {\n        // existing minDtick is an integer multiple of newDiff\n        // (within rounding err)\n        // and forceTick0 can be shifted to newFirst\n        if((ax._minDtick / newDiff + 1e-6) % 1 < 2e-6 &&\n                (((newFirst - ax._forceTick0) / newDiff % 1) +\n                    1.000001) % 1 < 2e-6) {\n            ax._minDtick = newDiff;\n            ax._forceTick0 = newFirst;\n        }\n        // if the converse is true (newDiff is a multiple of minDtick and\n        // newFirst can be shifted to forceTick0) then do nothing - same\n        // forcing stands. Otherwise, cancel forced minimum\n        else if((newDiff / ax._minDtick + 1e-6) % 1 > 2e-6 ||\n                (((newFirst - ax._forceTick0) / ax._minDtick % 1) +\n                    1.000001) % 1 > 2e-6) {\n            ax._minDtick = 0;\n        }\n    }\n};\n\n// Find the autorange for this axis\n//\n// assumes ax._min and ax._max have already been set by calling axes.expand\n// using calcdata from all traces. These are arrays of:\n// {val: calcdata value, pad: extra pixels beyond this value}\n//\n// Returns an array of [min, max]. These are calcdata for log and category axes\n// and data for linear and date axes.\n//\n// TODO: we want to change log to data as well, but it's hard to do this\n// maintaining backward compatibility. category will always have to use calcdata\n// though, because otherwise values between categories (or outside all categories)\n// would be impossible.\naxes.getAutoRange = function(ax) {\n    var newRange = [];\n\n    var minmin = ax._min[0].val,\n        maxmax = ax._max[0].val,\n        i;\n\n    for(i = 1; i < ax._min.length; i++) {\n        if(minmin !== maxmax) break;\n        minmin = Math.min(minmin, ax._min[i].val);\n    }\n    for(i = 1; i < ax._max.length; i++) {\n        if(minmin !== maxmax) break;\n        maxmax = Math.max(maxmax, ax._max[i].val);\n    }\n\n    var j, minpt, maxpt, minbest, maxbest, dp, dv,\n        mbest = 0,\n        axReverse = false;\n\n    if(ax.range) {\n        var rng = Lib.simpleMap(ax.range, ax.r2l);\n        axReverse = rng[1] < rng[0];\n    }\n\n    // one-time setting to easily reverse the axis\n    // when plotting from code\n    if(ax.autorange === 'reversed') {\n        axReverse = true;\n        ax.autorange = true;\n    }\n\n    for(i = 0; i < ax._min.length; i++) {\n        minpt = ax._min[i];\n        for(j = 0; j < ax._max.length; j++) {\n            maxpt = ax._max[j];\n            dv = maxpt.val - minpt.val;\n            dp = ax._length - minpt.pad - maxpt.pad;\n            if(dv > 0 && dp > 0 && dv / dp > mbest) {\n                minbest = minpt;\n                maxbest = maxpt;\n                mbest = dv / dp;\n            }\n        }\n    }\n\n    if(minmin === maxmax) {\n        var lower = minmin - 1;\n        var upper = minmin + 1;\n        if(ax.rangemode === 'tozero') {\n            newRange = minmin < 0 ? [lower, 0] : [0, upper];\n        }\n        else if(ax.rangemode === 'nonnegative') {\n            newRange = [Math.max(0, lower), Math.max(0, upper)];\n        }\n        else {\n            newRange = [lower, upper];\n        }\n    }\n    else if(mbest) {\n        if(ax.type === 'linear' || ax.type === '-') {\n            if(ax.rangemode === 'tozero') {\n                if(minbest.val >= 0) {\n                    minbest = {val: 0, pad: 0};\n                }\n                if(maxbest.val <= 0) {\n                    maxbest = {val: 0, pad: 0};\n                }\n            }\n            else if(ax.rangemode === 'nonnegative') {\n                if(minbest.val - mbest * minbest.pad < 0) {\n                    minbest = {val: 0, pad: 0};\n                }\n                if(maxbest.val < 0) {\n                    maxbest = {val: 1, pad: 0};\n                }\n            }\n\n            // in case it changed again...\n            mbest = (maxbest.val - minbest.val) /\n                (ax._length - minbest.pad - maxbest.pad);\n\n        }\n\n        newRange = [\n            minbest.val - mbest * minbest.pad,\n            maxbest.val + mbest * maxbest.pad\n        ];\n    }\n\n    // don't let axis have zero size, while still respecting tozero and nonnegative\n    if(newRange[0] === newRange[1]) {\n        if(ax.rangemode === 'tozero') {\n            if(newRange[0] < 0) {\n                newRange = [newRange[0], 0];\n            }\n            else if(newRange[0] > 0) {\n                newRange = [0, newRange[0]];\n            }\n            else {\n                newRange = [0, 1];\n            }\n        }\n        else {\n            newRange = [newRange[0] - 1, newRange[0] + 1];\n            if(ax.rangemode === 'nonnegative') {\n                newRange[0] = Math.max(0, newRange[0]);\n            }\n        }\n    }\n\n    // maintain reversal\n    if(axReverse) newRange.reverse();\n\n    return Lib.simpleMap(newRange, ax.l2r || Number);\n};\n\naxes.doAutoRange = function(ax) {\n    if(!ax._length) ax.setScale();\n\n    // TODO do we really need this?\n    var hasDeps = (ax._min && ax._max && ax._min.length && ax._max.length);\n\n    if(ax.autorange && hasDeps) {\n        ax.range = axes.getAutoRange(ax);\n\n        ax._r = ax.range.slice();\n        ax._rl = Lib.simpleMap(ax._r, ax.r2l);\n\n        // doAutoRange will get called on fullLayout,\n        // but we want to report its results back to layout\n\n        var axIn = ax._input;\n        axIn.range = ax.range.slice();\n        axIn.autorange = ax.autorange;\n    }\n};\n\n// save a copy of the initial axis ranges in fullLayout\n// use them in mode bar and dblclick events\naxes.saveRangeInitial = function(gd, overwrite) {\n    var axList = axes.list(gd, '', true),\n        hasOneAxisChanged = false;\n\n    for(var i = 0; i < axList.length; i++) {\n        var ax = axList[i];\n\n        var isNew = (ax._rangeInitial === undefined);\n        var hasChanged = (\n            isNew || !(\n                ax.range[0] === ax._rangeInitial[0] &&\n                ax.range[1] === ax._rangeInitial[1]\n            )\n        );\n\n        if((isNew && ax.autorange === false) || (overwrite && hasChanged)) {\n            ax._rangeInitial = ax.range.slice();\n            hasOneAxisChanged = true;\n        }\n    }\n\n    return hasOneAxisChanged;\n};\n\n// save a copy of the initial spike visibility\naxes.saveShowSpikeInitial = function(gd, overwrite) {\n    var axList = axes.list(gd, '', true),\n        hasOneAxisChanged = false,\n        allSpikesEnabled = 'on';\n\n    for(var i = 0; i < axList.length; i++) {\n        var ax = axList[i];\n\n        var isNew = (ax._showSpikeInitial === undefined);\n        var hasChanged = (\n            isNew || !(\n                ax.showspikes === ax._showspikes\n            )\n        );\n\n        if((isNew) || (overwrite && hasChanged)) {\n            ax._showSpikeInitial = ax.showspikes;\n            hasOneAxisChanged = true;\n        }\n\n        if(allSpikesEnabled === 'on' && !ax.showspikes) {\n            allSpikesEnabled = 'off';\n        }\n    }\n    gd._fullLayout._cartesianSpikesEnabled = allSpikesEnabled;\n    return hasOneAxisChanged;\n};\n\n// axes.expand: if autoranging, include new data in the outer limits\n// for this axis\n// data is an array of numbers (ie already run through ax.d2c)\n// available options:\n//      vpad: (number or number array) pad values (data value +-vpad)\n//      ppad: (number or number array) pad pixels (pixel location +-ppad)\n//      ppadplus, ppadminus, vpadplus, vpadminus:\n//          separate padding for each side, overrides symmetric\n//      padded: (boolean) add 5% padding to both ends\n//          (unless one end is overridden by tozero)\n//      tozero: (boolean) make sure to include zero if axis is linear,\n//          and make it a tight bound if possible\naxes.expand = function(ax, data, options) {\n    var needsAutorange = (\n        ax.autorange ||\n        !!Lib.nestedProperty(ax, 'rangeslider.autorange').get()\n    );\n\n    if(!needsAutorange || !data) return;\n\n    if(!ax._min) ax._min = [];\n    if(!ax._max) ax._max = [];\n    if(!options) options = {};\n    if(!ax._m) ax.setScale();\n\n    var len = data.length,\n        extrappad = options.padded ? ax._length * 0.05 : 0,\n        tozero = options.tozero && (ax.type === 'linear' || ax.type === '-'),\n        i, j, v, di, dmin, dmax,\n        ppadiplus, ppadiminus, includeThis, vmin, vmax;\n\n    // domain-constrained axes: base extrappad on the unconstrained\n    // domain so it's consistent as the domain changes\n    if(extrappad && (ax.constrain === 'domain') && ax._inputDomain) {\n        extrappad *= (ax._inputDomain[1] - ax._inputDomain[0]) /\n            (ax.domain[1] - ax.domain[0]);\n    }\n\n    function getPad(item) {\n        if(Array.isArray(item)) {\n            return function(i) { return Math.max(Number(item[i]||0), 0); };\n        }\n        else {\n            var v = Math.max(Number(item||0), 0);\n            return function() { return v; };\n        }\n    }\n    var ppadplus = getPad((ax._m > 0 ?\n            options.ppadplus : options.ppadminus) || options.ppad || 0),\n        ppadminus = getPad((ax._m > 0 ?\n            options.ppadminus : options.ppadplus) || options.ppad || 0),\n        vpadplus = getPad(options.vpadplus || options.vpad),\n        vpadminus = getPad(options.vpadminus || options.vpad);\n\n    function addItem(i) {\n        di = data[i];\n        if(!isNumeric(di)) return;\n        ppadiplus = ppadplus(i) + extrappad;\n        ppadiminus = ppadminus(i) + extrappad;\n        vmin = di - vpadminus(i);\n        vmax = di + vpadplus(i);\n        // special case for log axes: if vpad makes this object span\n        // more than an order of mag, clip it to one order. This is so\n        // we don't have non-positive errors or absurdly large lower\n        // range due to rounding errors\n        if(ax.type === 'log' && vmin < vmax / 10) { vmin = vmax / 10; }\n\n        dmin = ax.c2l(vmin);\n        dmax = ax.c2l(vmax);\n\n        if(tozero) {\n            dmin = Math.min(0, dmin);\n            dmax = Math.max(0, dmax);\n        }\n\n        // In order to stop overflow errors, don't consider points\n        // too close to the limits of js floating point\n        function goodNumber(v) {\n            return isNumeric(v) && Math.abs(v) < FP_SAFE;\n        }\n\n        if(goodNumber(dmin)) {\n            includeThis = true;\n            // take items v from ax._min and compare them to the\n            // presently active point:\n            // - if the item supercedes the new point, set includethis false\n            // - if the new pt supercedes the item, delete it from ax._min\n            for(j = 0; j < ax._min.length && includeThis; j++) {\n                v = ax._min[j];\n                if(v.val <= dmin && v.pad >= ppadiminus) {\n                    includeThis = false;\n                }\n                else if(v.val >= dmin && v.pad <= ppadiminus) {\n                    ax._min.splice(j, 1);\n                    j--;\n                }\n            }\n            if(includeThis) {\n                ax._min.push({\n                    val: dmin,\n                    pad: (tozero && dmin === 0) ? 0 : ppadiminus\n                });\n            }\n        }\n\n        if(goodNumber(dmax)) {\n            includeThis = true;\n            for(j = 0; j < ax._max.length && includeThis; j++) {\n                v = ax._max[j];\n                if(v.val >= dmax && v.pad >= ppadiplus) {\n                    includeThis = false;\n                }\n                else if(v.val <= dmax && v.pad <= ppadiplus) {\n                    ax._max.splice(j, 1);\n                    j--;\n                }\n            }\n            if(includeThis) {\n                ax._max.push({\n                    val: dmax,\n                    pad: (tozero && dmax === 0) ? 0 : ppadiplus\n                });\n            }\n        }\n    }\n\n    // For efficiency covering monotonic or near-monotonic data,\n    // check a few points at both ends first and then sweep\n    // through the middle\n    for(i = 0; i < 6; i++) addItem(i);\n    for(i = len - 1; i > 5; i--) addItem(i);\n\n};\n\naxes.autoBin = function(data, ax, nbins, is2d, calendar) {\n    var dataMin = Lib.aggNums(Math.min, null, data),\n        dataMax = Lib.aggNums(Math.max, null, data);\n\n    if(!calendar) calendar = ax.calendar;\n\n    if(ax.type === 'category') {\n        return {\n            start: dataMin - 0.5,\n            end: dataMax + 0.5,\n            size: 1,\n            _count: dataMax - dataMin + 1\n        };\n    }\n\n    var size0;\n    if(nbins) size0 = ((dataMax - dataMin) / nbins);\n    else {\n        // totally auto: scale off std deviation so the highest bin is\n        // somewhat taller than the total number of bins, but don't let\n        // the size get smaller than the 'nice' rounded down minimum\n        // difference between values\n        var distinctData = Lib.distinctVals(data),\n            msexp = Math.pow(10, Math.floor(\n                Math.log(distinctData.minDiff) / Math.LN10)),\n            minSize = msexp * Lib.roundUp(\n                distinctData.minDiff / msexp, [0.9, 1.9, 4.9, 9.9], true);\n        size0 = Math.max(minSize, 2 * Lib.stdev(data) /\n            Math.pow(data.length, is2d ? 0.25 : 0.4));\n\n        // fallback if ax.d2c output BADNUMs\n        // e.g. when user try to plot categorical bins\n        // on a layout.xaxis.type: 'linear'\n        if(!isNumeric(size0)) size0 = 1;\n    }\n\n    // piggyback off autotick code to make \"nice\" bin sizes\n    var dummyAx;\n    if(ax.type === 'log') {\n        dummyAx = {\n            type: 'linear',\n            range: [dataMin, dataMax]\n        };\n    }\n    else {\n        dummyAx = {\n            type: ax.type,\n            range: Lib.simpleMap([dataMin, dataMax], ax.c2r, 0, calendar),\n            calendar: calendar\n        };\n    }\n    axes.setConvert(dummyAx);\n\n    axes.autoTicks(dummyAx, size0);\n    var binStart = axes.tickIncrement(\n            axes.tickFirst(dummyAx), dummyAx.dtick, 'reverse', calendar);\n    var binEnd, bincount;\n\n    // check for too many data points right at the edges of bins\n    // (>50% within 1% of bin edges) or all data points integral\n    // and offset the bins accordingly\n    if(typeof dummyAx.dtick === 'number') {\n        binStart = autoShiftNumericBins(binStart, data, dummyAx, dataMin, dataMax);\n\n        bincount = 1 + Math.floor((dataMax - binStart) / dummyAx.dtick);\n        binEnd = binStart + bincount * dummyAx.dtick;\n    }\n    else {\n        // month ticks - should be the only nonlinear kind we have at this point.\n        // dtick (as supplied by axes.autoTick) only has nonlinear values on\n        // date and log axes, but even if you display a histogram on a log axis\n        // we bin it on a linear axis (which one could argue against, but that's\n        // a separate issue)\n        if(dummyAx.dtick.charAt(0) === 'M') {\n            binStart = autoShiftMonthBins(binStart, data, dummyAx.dtick, dataMin, calendar);\n        }\n\n        // calculate the endpoint for nonlinear ticks - you have to\n        // just increment until you're done\n        binEnd = binStart;\n        bincount = 0;\n        while(binEnd <= dataMax) {\n            binEnd = axes.tickIncrement(binEnd, dummyAx.dtick, false, calendar);\n            bincount++;\n        }\n    }\n\n    return {\n        start: ax.c2r(binStart, 0, calendar),\n        end: ax.c2r(binEnd, 0, calendar),\n        size: dummyAx.dtick,\n        _count: bincount\n    };\n};\n\n\nfunction autoShiftNumericBins(binStart, data, ax, dataMin, dataMax) {\n    var edgecount = 0,\n        midcount = 0,\n        intcount = 0,\n        blankCount = 0;\n\n    function nearEdge(v) {\n        // is a value within 1% of a bin edge?\n        return (1 + (v - binStart) * 100 / ax.dtick) % 100 < 2;\n    }\n\n    for(var i = 0; i < data.length; i++) {\n        if(data[i] % 1 === 0) intcount++;\n        else if(!isNumeric(data[i])) blankCount++;\n\n        if(nearEdge(data[i])) edgecount++;\n        if(nearEdge(data[i] + ax.dtick / 2)) midcount++;\n    }\n    var dataCount = data.length - blankCount;\n\n    if(intcount === dataCount && ax.type !== 'date') {\n        // all integers: if bin size is <1, it's because\n        // that was specifically requested (large nbins)\n        // so respect that... but center the bins containing\n        // integers on those integers\n        if(ax.dtick < 1) {\n            binStart = dataMin - 0.5 * ax.dtick;\n        }\n        // otherwise start half an integer down regardless of\n        // the bin size, just enough to clear up endpoint\n        // ambiguity about which integers are in which bins.\n        else {\n            binStart -= 0.5;\n            if(binStart + ax.dtick < dataMin) binStart += ax.dtick;\n        }\n    }\n    else if(midcount < dataCount * 0.1) {\n        if(edgecount > dataCount * 0.3 ||\n                nearEdge(dataMin) || nearEdge(dataMax)) {\n            // lots of points at the edge, not many in the middle\n            // shift half a bin\n            var binshift = ax.dtick / 2;\n            binStart += (binStart + binshift < dataMin) ? binshift : -binshift;\n        }\n    }\n    return binStart;\n}\n\n\nfunction autoShiftMonthBins(binStart, data, dtick, dataMin, calendar) {\n    var stats = Lib.findExactDates(data, calendar);\n    // number of data points that needs to be an exact value\n    // to shift that increment to (near) the bin center\n    var threshold = 0.8;\n\n    if(stats.exactDays > threshold) {\n        var numMonths = Number(dtick.substr(1));\n\n        if((stats.exactYears > threshold) && (numMonths % 12 === 0)) {\n            // The exact middle of a non-leap-year is 1.5 days into July\n            // so if we start the bins here, all but leap years will\n            // get hover-labeled as exact years.\n            binStart = axes.tickIncrement(binStart, 'M6', 'reverse') + ONEDAY * 1.5;\n        }\n        else if(stats.exactMonths > threshold) {\n            // Months are not as clean, but if we shift half the *longest*\n            // month (31/2 days) then 31-day months will get labeled exactly\n            // and shorter months will get labeled with the correct month\n            // but shifted 12-36 hours into it.\n            binStart = axes.tickIncrement(binStart, 'M1', 'reverse') + ONEDAY * 15.5;\n        }\n        else {\n            // Shifting half a day is exact, but since these are month bins it\n            // will always give a somewhat odd-looking label, until we do something\n            // smarter like showing the bin boundaries (or the bounds of the actual\n            // data in each bin)\n            binStart -= ONEDAY / 2;\n        }\n        var nextBinStart = axes.tickIncrement(binStart, dtick);\n\n        if(nextBinStart <= dataMin) return nextBinStart;\n    }\n    return binStart;\n}\n\n// ----------------------------------------------------\n// Ticks and grids\n// ----------------------------------------------------\n\n// calculate the ticks: text, values, positioning\n// if ticks are set to automatic, determine the right values (tick0,dtick)\n// in any case, set tickround to # of digits to round tick labels to,\n// or codes to this effect for log and date scales\naxes.calcTicks = function calcTicks(ax) {\n    var rng = Lib.simpleMap(ax.range, ax.r2l);\n\n    // calculate max number of (auto) ticks to display based on plot size\n    if(ax.tickmode === 'auto' || !ax.dtick) {\n        var nt = ax.nticks,\n            minPx;\n        if(!nt) {\n            if(ax.type === 'category') {\n                minPx = ax.tickfont ? (ax.tickfont.size || 12) * 1.2 : 15;\n                nt = ax._length / minPx;\n            }\n            else {\n                minPx = ax._id.charAt(0) === 'y' ? 40 : 80;\n                nt = Lib.constrain(ax._length / minPx, 4, 9) + 1;\n            }\n\n            // radial axes span half their domain,\n            // multiply nticks value by two to get correct number of auto ticks.\n            if(ax._name === 'radialaxis') nt *= 2;\n        }\n\n        // add a couple of extra digits for filling in ticks when we\n        // have explicit tickvals without tick text\n        if(ax.tickmode === 'array') nt *= 100;\n\n        axes.autoTicks(ax, Math.abs(rng[1] - rng[0]) / nt);\n        // check for a forced minimum dtick\n        if(ax._minDtick > 0 && ax.dtick < ax._minDtick * 2) {\n            ax.dtick = ax._minDtick;\n            ax.tick0 = ax.l2r(ax._forceTick0);\n        }\n    }\n\n    // check for missing tick0\n    if(!ax.tick0) {\n        ax.tick0 = (ax.type === 'date') ? '2000-01-01' : 0;\n    }\n\n    // now figure out rounding of tick values\n    autoTickRound(ax);\n\n    // now that we've figured out the auto values for formatting\n    // in case we're missing some ticktext, we can break out for array ticks\n    if(ax.tickmode === 'array') return arrayTicks(ax);\n\n    // find the first tick\n    ax._tmin = axes.tickFirst(ax);\n\n    // check for reversed axis\n    var axrev = (rng[1] < rng[0]);\n\n    // return the full set of tick vals\n    var vals = [],\n        // add a tiny bit so we get ticks which may have rounded out\n        endtick = rng[1] * 1.0001 - rng[0] * 0.0001;\n    if(ax.type === 'category') {\n        endtick = (axrev) ? Math.max(-0.5, endtick) :\n            Math.min(ax._categories.length - 0.5, endtick);\n    }\n\n    var xPrevious = null;\n    var maxTicks = Math.max(1000, ax._length || 0);\n    for(var x = ax._tmin;\n            (axrev) ? (x >= endtick) : (x <= endtick);\n            x = axes.tickIncrement(x, ax.dtick, axrev, ax.calendar)) {\n        // prevent infinite loops - no more than one tick per pixel,\n        // and make sure each value is different from the previous\n        if(vals.length > maxTicks || x === xPrevious) break;\n        xPrevious = x;\n\n        vals.push(x);\n    }\n\n    // If same angle over a full circle, the last tick vals is a duplicate.\n    // TODO must do something similar for angular date axes.\n    if(ax._id === 'angular' && Math.abs(rng[1] - rng[0]) === 360) {\n        vals.pop();\n    }\n\n    // save the last tick as well as first, so we can\n    // show the exponent only on the last one\n    ax._tmax = vals[vals.length - 1];\n\n    // for showing the rest of a date when the main tick label is only the\n    // latter part: ax._prevDateHead holds what we showed most recently.\n    // Start with it cleared and mark that we're in calcTicks (ie calculating a\n    // whole string of these so we should care what the previous date head was!)\n    ax._prevDateHead = '';\n    ax._inCalcTicks = true;\n\n    var ticksOut = new Array(vals.length);\n    for(var i = 0; i < vals.length; i++) ticksOut[i] = axes.tickText(ax, vals[i]);\n\n    ax._inCalcTicks = false;\n\n    return ticksOut;\n};\n\nfunction arrayTicks(ax) {\n    var vals = ax.tickvals,\n        text = ax.ticktext,\n        ticksOut = new Array(vals.length),\n        rng = Lib.simpleMap(ax.range, ax.r2l),\n        r0expanded = rng[0] * 1.0001 - rng[1] * 0.0001,\n        r1expanded = rng[1] * 1.0001 - rng[0] * 0.0001,\n        tickMin = Math.min(r0expanded, r1expanded),\n        tickMax = Math.max(r0expanded, r1expanded),\n        vali,\n        i,\n        j = 0;\n\n    // without a text array, just format the given values as any other ticks\n    // except with more precision to the numbers\n    if(!Array.isArray(text)) text = [];\n\n    // make sure showing ticks doesn't accidentally add new categories\n    var tickVal2l = ax.type === 'category' ? ax.d2l_noadd : ax.d2l;\n\n    // array ticks on log axes always show the full number\n    // (if no explicit ticktext overrides it)\n    if(ax.type === 'log' && String(ax.dtick).charAt(0) !== 'L') {\n        ax.dtick = 'L' + Math.pow(10, Math.floor(Math.min(ax.range[0], ax.range[1])) - 1);\n    }\n\n    for(i = 0; i < vals.length; i++) {\n        vali = tickVal2l(vals[i]);\n        if(vali > tickMin && vali < tickMax) {\n            if(text[i] === undefined) ticksOut[j] = axes.tickText(ax, vali);\n            else ticksOut[j] = tickTextObj(ax, vali, String(text[i]));\n            j++;\n        }\n    }\n\n    if(j < vals.length) ticksOut.splice(j, vals.length - j);\n\n    return ticksOut;\n}\n\nvar roundBase10 = [2, 5, 10],\n    roundBase24 = [1, 2, 3, 6, 12],\n    roundBase60 = [1, 2, 5, 10, 15, 30],\n    // 2&3 day ticks are weird, but need something btwn 1&7\n    roundDays = [1, 2, 3, 7, 14],\n    // approx. tick positions for log axes, showing all (1) and just 1, 2, 5 (2)\n    // these don't have to be exact, just close enough to round to the right value\n    roundLog1 = [-0.046, 0, 0.301, 0.477, 0.602, 0.699, 0.778, 0.845, 0.903, 0.954, 1],\n    roundLog2 = [-0.301, 0, 0.301, 0.699, 1],\n    // N.B. `thetaunit; 'radians' angular axes must be converted to degrees\n    roundAngles = [15, 30, 45, 90, 180];\n\nfunction roundDTick(roughDTick, base, roundingSet) {\n    return base * Lib.roundUp(roughDTick / base, roundingSet);\n}\n\n// autoTicks: calculate best guess at pleasant ticks for this axis\n// inputs:\n//      ax - an axis object\n//      roughDTick - rough tick spacing (to be turned into a nice round number)\n// outputs (into ax):\n//   tick0: starting point for ticks (not necessarily on the graph)\n//      usually 0 for numeric (=10^0=1 for log) or jan 1, 2000 for dates\n//   dtick: the actual, nice round tick spacing, usually a little larger than roughDTick\n//      if the ticks are spaced linearly (linear scale, categories,\n//          log with only full powers, date ticks < month),\n//          this will just be a number\n//      months: M#\n//      years: M# where # is 12*number of years\n//      log with linear ticks: L# where # is the linear tick spacing\n//      log showing powers plus some intermediates:\n//          D1 shows all digits, D2 shows 2 and 5\naxes.autoTicks = function(ax, roughDTick) {\n    var base;\n\n    function getBase(v) {\n        return Math.pow(v, Math.floor(Math.log(roughDTick) / Math.LN10));\n    }\n\n    if(ax.type === 'date') {\n        ax.tick0 = Lib.dateTick0(ax.calendar);\n        // the criteria below are all based on the rough spacing we calculate\n        // being > half of the final unit - so precalculate twice the rough val\n        var roughX2 = 2 * roughDTick;\n\n        if(roughX2 > ONEAVGYEAR) {\n            roughDTick /= ONEAVGYEAR;\n            base = getBase(10);\n            ax.dtick = 'M' + (12 * roundDTick(roughDTick, base, roundBase10));\n        }\n        else if(roughX2 > ONEAVGMONTH) {\n            roughDTick /= ONEAVGMONTH;\n            ax.dtick = 'M' + roundDTick(roughDTick, 1, roundBase24);\n        }\n        else if(roughX2 > ONEDAY) {\n            ax.dtick = roundDTick(roughDTick, ONEDAY, roundDays);\n            // get week ticks on sunday\n            // this will also move the base tick off 2000-01-01 if dtick is\n            // 2 or 3 days... but that's a weird enough case that we'll ignore it.\n            ax.tick0 = Lib.dateTick0(ax.calendar, true);\n        }\n        else if(roughX2 > ONEHOUR) {\n            ax.dtick = roundDTick(roughDTick, ONEHOUR, roundBase24);\n        }\n        else if(roughX2 > ONEMIN) {\n            ax.dtick = roundDTick(roughDTick, ONEMIN, roundBase60);\n        }\n        else if(roughX2 > ONESEC) {\n            ax.dtick = roundDTick(roughDTick, ONESEC, roundBase60);\n        }\n        else {\n            // milliseconds\n            base = getBase(10);\n            ax.dtick = roundDTick(roughDTick, base, roundBase10);\n        }\n    }\n    else if(ax.type === 'log') {\n        ax.tick0 = 0;\n        var rng = Lib.simpleMap(ax.range, ax.r2l);\n\n        if(roughDTick > 0.7) {\n            // only show powers of 10\n            ax.dtick = Math.ceil(roughDTick);\n        }\n        else if(Math.abs(rng[1] - rng[0]) < 1) {\n            // span is less than one power of 10\n            var nt = 1.5 * Math.abs((rng[1] - rng[0]) / roughDTick);\n\n            // ticks on a linear scale, labeled fully\n            roughDTick = Math.abs(Math.pow(10, rng[1]) -\n                Math.pow(10, rng[0])) / nt;\n            base = getBase(10);\n            ax.dtick = 'L' + roundDTick(roughDTick, base, roundBase10);\n        }\n        else {\n            // include intermediates between powers of 10,\n            // labeled with small digits\n            // ax.dtick = \"D2\" (show 2 and 5) or \"D1\" (show all digits)\n            ax.dtick = (roughDTick > 0.3) ? 'D2' : 'D1';\n        }\n    }\n    else if(ax.type === 'category') {\n        ax.tick0 = 0;\n        ax.dtick = Math.ceil(Math.max(roughDTick, 1));\n    }\n    else if(ax._id === 'angular') {\n        ax.tick0 = 0;\n        base = 1;\n        ax.dtick = roundDTick(roughDTick, base, roundAngles);\n    }\n    else {\n        // auto ticks always start at 0\n        ax.tick0 = 0;\n        base = getBase(10);\n        ax.dtick = roundDTick(roughDTick, base, roundBase10);\n    }\n\n    // prevent infinite loops\n    if(ax.dtick === 0) ax.dtick = 1;\n\n    // TODO: this is from log axis histograms with autorange off\n    if(!isNumeric(ax.dtick) && typeof ax.dtick !== 'string') {\n        var olddtick = ax.dtick;\n        ax.dtick = 1;\n        throw 'ax.dtick error: ' + String(olddtick);\n    }\n};\n\n// after dtick is already known, find tickround = precision\n// to display in tick labels\n//   for numeric ticks, integer # digits after . to round to\n//   for date ticks, the last date part to show (y,m,d,H,M,S)\n//      or an integer # digits past seconds\nfunction autoTickRound(ax) {\n    var dtick = ax.dtick;\n\n    ax._tickexponent = 0;\n    if(!isNumeric(dtick) && typeof dtick !== 'string') {\n        dtick = 1;\n    }\n\n    if(ax.type === 'category') {\n        ax._tickround = null;\n    }\n    if(ax.type === 'date') {\n        // If tick0 is unusual, give tickround a bit more information\n        // not necessarily *all* the information in tick0 though, if it's really odd\n        // minimal string length for tick0: 'd' is 10, 'M' is 16, 'S' is 19\n        // take off a leading minus (year < 0) and i (intercalary month) so length is consistent\n        var tick0ms = ax.r2l(ax.tick0),\n            tick0str = ax.l2r(tick0ms).replace(/(^-|i)/g, ''),\n            tick0len = tick0str.length;\n\n        if(String(dtick).charAt(0) === 'M') {\n            // any tick0 more specific than a year: alway show the full date\n            if(tick0len > 10 || tick0str.substr(5) !== '01-01') ax._tickround = 'd';\n            // show the month unless ticks are full multiples of a year\n            else ax._tickround = (+(dtick.substr(1)) % 12 === 0) ? 'y' : 'm';\n        }\n        else if((dtick >= ONEDAY && tick0len <= 10) || (dtick >= ONEDAY * 15)) ax._tickround = 'd';\n        else if((dtick >= ONEMIN && tick0len <= 16) || (dtick >= ONEHOUR)) ax._tickround = 'M';\n        else if((dtick >= ONESEC && tick0len <= 19) || (dtick >= ONEMIN)) ax._tickround = 'S';\n        else {\n            // tickround is a number of digits of fractional seconds\n            // of any two adjacent ticks, at least one will have the maximum fractional digits\n            // of all possible ticks - so take the max. length of tick0 and the next one\n            var tick1len = ax.l2r(tick0ms + dtick).replace(/^-/, '').length;\n            ax._tickround = Math.max(tick0len, tick1len) - 20;\n        }\n    }\n    else if(isNumeric(dtick) || dtick.charAt(0) === 'L') {\n        // linear or log (except D1, D2)\n        var rng = ax.range.map(ax.r2d || Number);\n        if(!isNumeric(dtick)) dtick = Number(dtick.substr(1));\n        // 2 digits past largest digit of dtick\n        ax._tickround = 2 - Math.floor(Math.log(dtick) / Math.LN10 + 0.01);\n\n        var maxend = Math.max(Math.abs(rng[0]), Math.abs(rng[1]));\n\n        var rangeexp = Math.floor(Math.log(maxend) / Math.LN10 + 0.01);\n        if(Math.abs(rangeexp) > 3) {\n            if(isSIFormat(ax.exponentformat) && !beyondSI(rangeexp)) {\n                ax._tickexponent = 3 * Math.round((rangeexp - 1) / 3);\n            }\n            else ax._tickexponent = rangeexp;\n        }\n    }\n    // D1 or D2 (log)\n    else ax._tickround = null;\n}\n\n// months and years don't have constant millisecond values\n// (but a year is always 12 months so we only need months)\n// log-scale ticks are also not consistently spaced, except\n// for pure powers of 10\n// numeric ticks always have constant differences, other datetime ticks\n// can all be calculated as constant number of milliseconds\naxes.tickIncrement = function(x, dtick, axrev, calendar) {\n    var axSign = axrev ? -1 : 1;\n\n    // includes linear, all dates smaller than month, and pure 10^n in log\n    if(isNumeric(dtick)) return x + axSign * dtick;\n\n    // everything else is a string, one character plus a number\n    var tType = dtick.charAt(0),\n        dtSigned = axSign * Number(dtick.substr(1));\n\n    // Dates: months (or years - see Lib.incrementMonth)\n    if(tType === 'M') return Lib.incrementMonth(x, dtSigned, calendar);\n\n    // Log scales: Linear, Digits\n    else if(tType === 'L') return Math.log(Math.pow(10, x) + dtSigned) / Math.LN10;\n\n    // log10 of 2,5,10, or all digits (logs just have to be\n    // close enough to round)\n    else if(tType === 'D') {\n        var tickset = (dtick === 'D2') ? roundLog2 : roundLog1,\n            x2 = x + axSign * 0.01,\n            frac = Lib.roundUp(Lib.mod(x2, 1), tickset, axrev);\n\n        return Math.floor(x2) +\n            Math.log(d3.round(Math.pow(10, frac), 1)) / Math.LN10;\n    }\n    else throw 'unrecognized dtick ' + String(dtick);\n};\n\n// calculate the first tick on an axis\naxes.tickFirst = function(ax) {\n    var r2l = ax.r2l || Number,\n        rng = Lib.simpleMap(ax.range, r2l),\n        axrev = rng[1] < rng[0],\n        sRound = axrev ? Math.floor : Math.ceil,\n        // add a tiny extra bit to make sure we get ticks\n        // that may have been rounded out\n        r0 = rng[0] * 1.0001 - rng[1] * 0.0001,\n        dtick = ax.dtick,\n        tick0 = r2l(ax.tick0);\n\n    if(isNumeric(dtick)) {\n        var tmin = sRound((r0 - tick0) / dtick) * dtick + tick0;\n\n        // make sure no ticks outside the category list\n        if(ax.type === 'category') {\n            tmin = Lib.constrain(tmin, 0, ax._categories.length - 1);\n        }\n        return tmin;\n    }\n\n    var tType = dtick.charAt(0),\n        dtNum = Number(dtick.substr(1));\n\n    // Dates: months (or years)\n    if(tType === 'M') {\n        var cnt = 0,\n            t0 = tick0,\n            t1,\n            mult,\n            newDTick;\n\n        // This algorithm should work for *any* nonlinear (but close to linear!)\n        // tick spacing. Limit to 10 iterations, for gregorian months it's normally <=3.\n        while(cnt < 10) {\n            t1 = axes.tickIncrement(t0, dtick, axrev, ax.calendar);\n            if((t1 - r0) * (t0 - r0) <= 0) {\n                // t1 and t0 are on opposite sides of r0! we've succeeded!\n                if(axrev) return Math.min(t0, t1);\n                return Math.max(t0, t1);\n            }\n            mult = (r0 - ((t0 + t1) / 2)) / (t1 - t0);\n            newDTick = tType + ((Math.abs(Math.round(mult)) || 1) * dtNum);\n            t0 = axes.tickIncrement(t0, newDTick, mult < 0 ? !axrev : axrev, ax.calendar);\n            cnt++;\n        }\n        Lib.error('tickFirst did not converge', ax);\n        return t0;\n    }\n\n    // Log scales: Linear, Digits\n    else if(tType === 'L') {\n        return Math.log(sRound(\n            (Math.pow(10, r0) - tick0) / dtNum) * dtNum + tick0) / Math.LN10;\n    }\n    else if(tType === 'D') {\n        var tickset = (dtick === 'D2') ? roundLog2 : roundLog1,\n            frac = Lib.roundUp(Lib.mod(r0, 1), tickset, axrev);\n\n        return Math.floor(r0) +\n            Math.log(d3.round(Math.pow(10, frac), 1)) / Math.LN10;\n    }\n    else throw 'unrecognized dtick ' + String(dtick);\n};\n\n// draw the text for one tick.\n// px,py are the location on gd.paper\n// prefix is there so the x axis ticks can be dropped a line\n// ax is the axis layout, x is the tick value\n// hover is a (truthy) flag for whether to show numbers with a bit\n// more precision for hovertext\naxes.tickText = function(ax, x, hover) {\n    var out = tickTextObj(ax, x),\n        hideexp,\n        arrayMode = ax.tickmode === 'array',\n        extraPrecision = hover || arrayMode,\n        i,\n        tickVal2l = ax.type === 'category' ? ax.d2l_noadd : ax.d2l;\n\n    if(arrayMode && Array.isArray(ax.ticktext)) {\n        var rng = Lib.simpleMap(ax.range, ax.r2l),\n            minDiff = Math.abs(rng[1] - rng[0]) / 10000;\n        for(i = 0; i < ax.ticktext.length; i++) {\n            if(Math.abs(x - tickVal2l(ax.tickvals[i])) < minDiff) break;\n        }\n        if(i < ax.ticktext.length) {\n            out.text = String(ax.ticktext[i]);\n            return out;\n        }\n    }\n\n    function isHidden(showAttr) {\n        var first_or_last;\n\n        if(showAttr === undefined) return true;\n        if(hover) return showAttr === 'none';\n\n        first_or_last = {\n            first: ax._tmin,\n            last: ax._tmax\n        }[showAttr];\n\n        return showAttr !== 'all' && x !== first_or_last;\n    }\n\n    if(hover) {\n        hideexp = 'never';\n    } else {\n        hideexp = ax.exponentformat !== 'none' && isHidden(ax.showexponent) ? 'hide' : '';\n    }\n\n    if(ax.type === 'date') formatDate(ax, out, hover, extraPrecision);\n    else if(ax.type === 'log') formatLog(ax, out, hover, extraPrecision, hideexp);\n    else if(ax.type === 'category') formatCategory(ax, out);\n    else if(ax._id === 'angular') formatAngle(ax, out, hover, extraPrecision, hideexp);\n    else formatLinear(ax, out, hover, extraPrecision, hideexp);\n\n    // add prefix and suffix\n    if(ax.tickprefix && !isHidden(ax.showtickprefix)) out.text = ax.tickprefix + out.text;\n    if(ax.ticksuffix && !isHidden(ax.showticksuffix)) out.text += ax.ticksuffix;\n\n    return out;\n};\n\n/**\n * create text for a hover label on this axis, with special handling of\n * log axes (where negative values can't be displayed but can appear in hover text)\n *\n * @param {object} ax: the axis to format text for\n * @param {number} val: calcdata value to format\n * @param {Optional(number)} val2: a second value to display\n *\n * @returns {string} `val` formatted as a string appropriate to this axis, or\n *     `val` and `val2` as a range (ie '<val> - <val2>') if `val2` is provided and\n *     it's different from `val`.\n */\naxes.hoverLabelText = function(ax, val, val2) {\n    if(val2 !== BADNUM && val2 !== val) {\n        return axes.hoverLabelText(ax, val) + ' - ' + axes.hoverLabelText(ax, val2);\n    }\n\n    var logOffScale = (ax.type === 'log' && val <= 0);\n    var tx = axes.tickText(ax, ax.c2l(logOffScale ? -val : val), 'hover').text;\n\n    if(logOffScale) {\n        return val === 0 ? '0' : MINUS_SIGN + tx;\n    }\n\n    // TODO: should we do something special if the axis calendar and\n    // the data calendar are different? Somehow display both dates with\n    // their system names? Right now it will just display in the axis calendar\n    // but users could add the other one as text.\n    return tx;\n};\n\nfunction tickTextObj(ax, x, text) {\n    var tf = ax.tickfont || {};\n\n    return {\n        x: x,\n        dx: 0,\n        dy: 0,\n        text: text || '',\n        fontSize: tf.size,\n        font: tf.family,\n        fontColor: tf.color\n    };\n}\n\nfunction formatDate(ax, out, hover, extraPrecision) {\n    var tr = ax._tickround,\n        fmt = (hover && ax.hoverformat) || axes.getTickFormat(ax);\n\n    if(extraPrecision) {\n        // second or sub-second precision: extra always shows max digits.\n        // for other fields, extra precision just adds one field.\n        if(isNumeric(tr)) tr = 4;\n        else tr = {y: 'm', m: 'd', d: 'M', M: 'S', S: 4}[tr];\n    }\n\n    var dateStr = Lib.formatDate(out.x, fmt, tr, ax._dateFormat, ax.calendar),\n        headStr;\n\n    var splitIndex = dateStr.indexOf('\\n');\n    if(splitIndex !== -1) {\n        headStr = dateStr.substr(splitIndex + 1);\n        dateStr = dateStr.substr(0, splitIndex);\n    }\n\n    if(extraPrecision) {\n        // if extraPrecision led to trailing zeros, strip them off\n        // actually, this can lead to removing even more zeros than\n        // in the original rounding, but that's fine because in these\n        // contexts uniformity is not so important (if there's even\n        // anything to be uniform with!)\n\n        // can we remove the whole time part?\n        if(dateStr === '00:00:00' || dateStr === '00:00') {\n            dateStr = headStr;\n            headStr = '';\n        }\n        else if(dateStr.length === 8) {\n            // strip off seconds if they're zero (zero fractional seconds\n            // are already omitted)\n            // but we never remove minutes and leave just hours\n            dateStr = dateStr.replace(/:00$/, '');\n        }\n    }\n\n    if(headStr) {\n        if(hover) {\n            // hover puts it all on one line, so headPart works best up front\n            // except for year headPart: turn this into \"Jan 1, 2000\" etc.\n            if(tr === 'd') dateStr += ', ' + headStr;\n            else dateStr = headStr + (dateStr ? ', ' + dateStr : '');\n        }\n        else if(!ax._inCalcTicks || (headStr !== ax._prevDateHead)) {\n            dateStr += '<br>' + headStr;\n            ax._prevDateHead = headStr;\n        }\n    }\n\n    out.text = dateStr;\n}\n\nfunction formatLog(ax, out, hover, extraPrecision, hideexp) {\n    var dtick = ax.dtick,\n        x = out.x,\n        tickformat = ax.tickformat;\n\n    if(hideexp === 'never') {\n        // If this is a hover label, then we must *never* hide the exponent\n        // for the sake of display, which could give the wrong value by\n        // potentially many orders of magnitude. If hideexp was 'never', then\n        // it's now succeeded by preventing the other condition from automating\n        // this choice. Thus we can unset it so that the axis formatting takes\n        // precedence.\n        hideexp = '';\n    }\n\n    if(extraPrecision && ((typeof dtick !== 'string') || dtick.charAt(0) !== 'L')) dtick = 'L3';\n\n    if(tickformat || (typeof dtick === 'string' && dtick.charAt(0) === 'L')) {\n        out.text = numFormat(Math.pow(10, x), ax, hideexp, extraPrecision);\n    }\n    else if(isNumeric(dtick) || ((dtick.charAt(0) === 'D') && (Lib.mod(x + 0.01, 1) < 0.1))) {\n        var p = Math.round(x);\n        if(['e', 'E', 'power'].indexOf(ax.exponentformat) !== -1 ||\n                (isSIFormat(ax.exponentformat) && beyondSI(p))) {\n            if(p === 0) out.text = 1;\n            else if(p === 1) out.text = '10';\n            else if(p > 1) out.text = '10<sup>' + p + '</sup>';\n            else out.text = '10<sup>' + MINUS_SIGN + -p + '</sup>';\n\n            out.fontSize *= 1.25;\n        }\n        else {\n            out.text = numFormat(Math.pow(10, x), ax, '', 'fakehover');\n            if(dtick === 'D1' && ax._id.charAt(0) === 'y') {\n                out.dy -= out.fontSize / 6;\n            }\n        }\n    }\n    else if(dtick.charAt(0) === 'D') {\n        out.text = String(Math.round(Math.pow(10, Lib.mod(x, 1))));\n        out.fontSize *= 0.75;\n    }\n    else throw 'unrecognized dtick ' + String(dtick);\n\n    // if 9's are printed on log scale, move the 10's away a bit\n    if(ax.dtick === 'D1') {\n        var firstChar = String(out.text).charAt(0);\n        if(firstChar === '0' || firstChar === '1') {\n            if(ax._id.charAt(0) === 'y') {\n                out.dx -= out.fontSize / 4;\n            }\n            else {\n                out.dy += out.fontSize / 2;\n                out.dx += (ax.range[1] > ax.range[0] ? 1 : -1) *\n                    out.fontSize * (x < 0 ? 0.5 : 0.25);\n            }\n        }\n    }\n}\n\nfunction formatCategory(ax, out) {\n    var tt = ax._categories[Math.round(out.x)];\n    if(tt === undefined) tt = '';\n    out.text = String(tt);\n}\n\nfunction formatLinear(ax, out, hover, extraPrecision, hideexp) {\n    if(hideexp === 'never') {\n        // If this is a hover label, then we must *never* hide the exponent\n        // for the sake of display, which could give the wrong value by\n        // potentially many orders of magnitude. If hideexp was 'never', then\n        // it's now succeeded by preventing the other condition from automating\n        // this choice. Thus we can unset it so that the axis formatting takes\n        // precedence.\n        hideexp = '';\n    } else if(ax.showexponent === 'all' && Math.abs(out.x / ax.dtick) < 1e-6) {\n        // don't add an exponent to zero if we're showing all exponents\n        // so the only reason you'd show an exponent on zero is if it's the\n        // ONLY tick to get an exponent (first or last)\n        hideexp = 'hide';\n    }\n    out.text = numFormat(out.x, ax, hideexp, extraPrecision);\n}\n\nfunction formatAngle(ax, out, hover, extraPrecision, hideexp) {\n    if(ax.thetaunit === 'radians' && !hover) {\n        var num = out.x / 180;\n\n        if(num === 0) {\n            out.text = '0';\n        } else {\n            var frac = num2frac(num);\n\n            if(frac[1] >= 100) {\n                out.text = numFormat(Lib.deg2rad(out.x), ax, hideexp, extraPrecision);\n            } else {\n                var isNeg = out.x < 0;\n\n                if(frac[1] === 1) {\n                    if(frac[0] === 1) out.text = 'π';\n                    else out.text = frac[0] + 'π';\n                } else {\n                    out.text = [\n                        '<sup>', frac[0], '</sup>',\n                        '⁄',\n                        '<sub>', frac[1], '</sub>',\n                        'π'\n                    ].join('');\n                }\n\n                if(isNeg) out.text = MINUS_SIGN + out.text;\n            }\n        }\n    } else {\n        out.text = numFormat(out.x, ax, hideexp, extraPrecision);\n    }\n}\n\n// inspired by\n// https://github.com/yisibl/num2fraction/blob/master/index.js\nfunction num2frac(num) {\n    function almostEq(a, b) {\n        return Math.abs(a - b) <= 1e-6;\n    }\n\n    function findGCD(a, b) {\n        return almostEq(b, 0) ? a : findGCD(b, a % b);\n    }\n\n    function findPrecision(n) {\n        var e = 1;\n        while(!almostEq(Math.round(n * e) / e, n)) {\n            e *= 10;\n        }\n        return e;\n    }\n\n    var precision = findPrecision(num);\n    var number = num * precision;\n    var gcd = Math.abs(findGCD(number, precision));\n\n    return [\n        // numerator\n        Math.round(number / gcd),\n        // denominator\n        Math.round(precision / gcd)\n    ];\n}\n\n// format a number (tick value) according to the axis settings\n// new, more reliable procedure than d3.round or similar:\n// add half the rounding increment, then stringify and truncate\n// also automatically switch to sci. notation\nvar SIPREFIXES = ['f', 'p', 'n', 'μ', 'm', '', 'k', 'M', 'G', 'T'];\n\nfunction isSIFormat(exponentFormat) {\n    return exponentFormat === 'SI' || exponentFormat === 'B';\n}\n\n// are we beyond the range of common SI prefixes?\n// 10^-16 -> 1x10^-16\n// 10^-15 -> 1f\n// ...\n// 10^14 -> 100T\n// 10^15 -> 1x10^15\n// 10^16 -> 1x10^16\nfunction beyondSI(exponent) {\n    return exponent > 14 || exponent < -15;\n}\n\nfunction numFormat(v, ax, fmtoverride, hover) {\n        // negative?\n    var isNeg = v < 0,\n        // max number of digits past decimal point to show\n        tickRound = ax._tickround,\n        exponentFormat = fmtoverride || ax.exponentformat || 'B',\n        exponent = ax._tickexponent,\n        tickformat = axes.getTickFormat(ax),\n        separatethousands = ax.separatethousands;\n\n    // special case for hover: set exponent just for this value, and\n    // add a couple more digits of precision over tick labels\n    if(hover) {\n        // make a dummy axis obj to get the auto rounding and exponent\n        var ah = {\n            exponentformat: ax.exponentformat,\n            dtick: ax.showexponent === 'none' ? ax.dtick :\n                (isNumeric(v) ? Math.abs(v) || 1 : 1),\n            // if not showing any exponents, don't change the exponent\n            // from what we calculate\n            range: ax.showexponent === 'none' ? ax.range.map(ax.r2d) : [0, v || 1]\n        };\n        autoTickRound(ah);\n        tickRound = (Number(ah._tickround) || 0) + 4;\n        exponent = ah._tickexponent;\n        if(ax.hoverformat) tickformat = ax.hoverformat;\n    }\n\n    if(tickformat) return ax._numFormat(tickformat)(v).replace(/-/g, MINUS_SIGN);\n\n    // 'epsilon' - rounding increment\n    var e = Math.pow(10, -tickRound) / 2;\n\n    // exponentFormat codes:\n    // 'e' (1.2e+6, default)\n    // 'E' (1.2E+6)\n    // 'SI' (1.2M)\n    // 'B' (same as SI except 10^9=B not G)\n    // 'none' (1200000)\n    // 'power' (1.2x10^6)\n    // 'hide' (1.2, use 3rd argument=='hide' to eg\n    //      only show exponent on last tick)\n    if(exponentFormat === 'none') exponent = 0;\n\n    // take the sign out, put it back manually at the end\n    // - makes cases easier\n    v = Math.abs(v);\n    if(v < e) {\n        // 0 is just 0, but may get exponent if it's the last tick\n        v = '0';\n        isNeg = false;\n    }\n    else {\n        v += e;\n        // take out a common exponent, if any\n        if(exponent) {\n            v *= Math.pow(10, -exponent);\n            tickRound += exponent;\n        }\n        // round the mantissa\n        if(tickRound === 0) v = String(Math.floor(v));\n        else if(tickRound < 0) {\n            v = String(Math.round(v));\n            v = v.substr(0, v.length + tickRound);\n            for(var i = tickRound; i < 0; i++) v += '0';\n        }\n        else {\n            v = String(v);\n            var dp = v.indexOf('.') + 1;\n            if(dp) v = v.substr(0, dp + tickRound).replace(/\\.?0+$/, '');\n        }\n        // insert appropriate decimal point and thousands separator\n        v = Lib.numSeparate(v, ax._separators, separatethousands);\n    }\n\n    // add exponent\n    if(exponent && exponentFormat !== 'hide') {\n        if(isSIFormat(exponentFormat) && beyondSI(exponent)) exponentFormat = 'power';\n\n        var signedExponent;\n        if(exponent < 0) signedExponent = MINUS_SIGN + -exponent;\n        else if(exponentFormat !== 'power') signedExponent = '+' + exponent;\n        else signedExponent = String(exponent);\n\n        if(exponentFormat === 'e') {\n            v += 'e' + signedExponent;\n        }\n        else if(exponentFormat === 'E') {\n            v += 'E' + signedExponent;\n        }\n        else if(exponentFormat === 'power') {\n            v += '×10<sup>' + signedExponent + '</sup>';\n        }\n        else if(exponentFormat === 'B' && exponent === 9) {\n            v += 'B';\n        }\n        else if(isSIFormat(exponentFormat)) {\n            v += SIPREFIXES[exponent / 3 + 5];\n        }\n    }\n\n    // put sign back in and return\n    // replace standard minus character (which is technically a hyphen)\n    // with a true minus sign\n    if(isNeg) return MINUS_SIGN + v;\n    return v;\n}\n\naxes.getTickFormat = function(ax) {\n    var i;\n\n    function convertToMs(dtick) {\n        return typeof dtick !== 'string' ? dtick : Number(dtick.replace('M', '')) * ONEAVGMONTH;\n    }\n\n    function compareLogTicks(left, right) {\n        var priority = ['L', 'D'];\n        if(typeof left === typeof right) {\n            if(typeof left === 'number') {\n                return left - right;\n            } else {\n                var leftPriority = priority.indexOf(left.charAt(0));\n                var rightPriority = priority.indexOf(right.charAt(0));\n                if(leftPriority === rightPriority) {\n                    return Number(left.replace(/(L|D)/g, '')) - Number(right.replace(/(L|D)/g, ''));\n                } else {\n                    return leftPriority - rightPriority;\n                }\n            }\n        } else {\n            return typeof left === 'number' ? 1 : -1;\n        }\n    }\n\n    function isProperStop(dtick, range, convert) {\n        var convertFn = convert || function(x) { return x;};\n        var leftDtick = range[0];\n        var rightDtick = range[1];\n        return ((!leftDtick && typeof leftDtick !== 'number') || convertFn(leftDtick) <= convertFn(dtick)) &&\n               ((!rightDtick && typeof rightDtick !== 'number') || convertFn(rightDtick) >= convertFn(dtick));\n    }\n\n    function isProperLogStop(dtick, range) {\n        var isLeftDtickNull = range[0] === null;\n        var isRightDtickNull = range[1] === null;\n        var isDtickInRangeLeft = compareLogTicks(dtick, range[0]) >= 0;\n        var isDtickInRangeRight = compareLogTicks(dtick, range[1]) <= 0;\n        return (isLeftDtickNull || isDtickInRangeLeft) && (isRightDtickNull || isDtickInRangeRight);\n    }\n\n    var tickstop;\n    if(ax.tickformatstops && ax.tickformatstops.length > 0) {\n        switch(ax.type) {\n            case 'date':\n            case 'linear': {\n                for(i = 0; i < ax.tickformatstops.length; i++) {\n                    if(isProperStop(ax.dtick, ax.tickformatstops[i].dtickrange, convertToMs)) {\n                        tickstop = ax.tickformatstops[i];\n                        break;\n                    }\n                }\n                break;\n            }\n            case 'log': {\n                for(i = 0; i < ax.tickformatstops.length; i++) {\n                    if(isProperLogStop(ax.dtick, ax.tickformatstops[i].dtickrange)) {\n                        tickstop = ax.tickformatstops[i];\n                        break;\n                    }\n                }\n                break;\n            }\n            default:\n        }\n    }\n    return tickstop ? tickstop.value : ax.tickformat;\n};\n\n// getSubplots - extract all subplot IDs we need\n// as an array of items like 'xy', 'x2y', 'x2y2'...\n// sorted by x (x,x2,x3...) then y\n// optionally restrict to only subplots containing axis object ax\naxes.getSubplots = function(gd, ax) {\n    var subplotObj = gd._fullLayout._subplots;\n    var allSubplots = subplotObj.cartesian.concat(subplotObj.gl2d || []);\n\n    var out = ax ? axes.findSubplotsWithAxis(allSubplots, ax) : allSubplots;\n\n    out.sort(function(a, b) {\n        var aParts = a.substr(1).split('y');\n        var bParts = b.substr(1).split('y');\n\n        if(aParts[0] === bParts[0]) return +aParts[1] - +bParts[1];\n        return +aParts[0] - +bParts[0];\n    });\n\n    return out;\n};\n\n// find all subplots with axis 'ax'\naxes.findSubplotsWithAxis = function(subplots, ax) {\n    var axMatch = new RegExp(\n        (ax._id.charAt(0) === 'x') ? ('^' + ax._id + 'y') : (ax._id + '$')\n    );\n    var subplotsWithAxis = [];\n\n    for(var i = 0; i < subplots.length; i++) {\n        var sp = subplots[i];\n        if(axMatch.test(sp)) subplotsWithAxis.push(sp);\n    }\n\n    return subplotsWithAxis;\n};\n\n// makeClipPaths: prepare clipPaths for all single axes and all possible xy pairings\naxes.makeClipPaths = function(gd) {\n    var fullLayout = gd._fullLayout;\n    var fullWidth = {_offset: 0, _length: fullLayout.width, _id: ''};\n    var fullHeight = {_offset: 0, _length: fullLayout.height, _id: ''};\n    var xaList = axes.list(gd, 'x', true);\n    var yaList = axes.list(gd, 'y', true);\n    var clipList = [];\n    var i, j;\n\n    for(i = 0; i < xaList.length; i++) {\n        clipList.push({x: xaList[i], y: fullHeight});\n        for(j = 0; j < yaList.length; j++) {\n            if(i === 0) clipList.push({x: fullWidth, y: yaList[j]});\n            clipList.push({x: xaList[i], y: yaList[j]});\n        }\n    }\n\n    // selectors don't work right with camelCase tags,\n    // have to use class instead\n    // https://groups.google.com/forum/#!topic/d3-js/6EpAzQ2gU9I\n    var axClips = fullLayout._clips.selectAll('.axesclip')\n        .data(clipList, function(d) { return d.x._id + d.y._id; });\n\n    axClips.enter().append('clipPath')\n        .classed('axesclip', true)\n        .attr('id', function(d) { return 'clip' + fullLayout._uid + d.x._id + d.y._id; })\n      .append('rect');\n\n    axClips.exit().remove();\n\n    axClips.each(function(d) {\n        d3.select(this).select('rect').attr({\n            x: d.x._offset || 0,\n            y: d.y._offset || 0,\n            width: d.x._length || 1,\n            height: d.y._length || 1\n        });\n    });\n};\n\n// doTicks: draw ticks, grids, and tick labels\n// axid: 'x', 'y', 'x2' etc,\n//     blank to do all,\n//     'redraw' to force full redraw, and reset:\n//          ax._r (stored range for use by zoom/pan)\n//          ax._rl (stored linearized range for use by zoom/pan)\n//     or can pass in an axis object directly\naxes.doTicks = function(gd, axid, skipTitle) {\n    var fullLayout = gd._fullLayout,\n        ax,\n        independent = false;\n\n    // allow passing an independent axis object instead of id\n    if(typeof axid === 'object') {\n        ax = axid;\n        axid = ax._id;\n        independent = true;\n    }\n    else {\n        ax = axes.getFromId(gd, axid);\n\n        if(axid === 'redraw') {\n            fullLayout._paper.selectAll('g.subplot').each(function(subplot) {\n                var plotinfo = fullLayout._plots[subplot],\n                    xa = plotinfo.xaxis,\n                    ya = plotinfo.yaxis;\n\n                plotinfo.xaxislayer\n                    .selectAll('.' + xa._id + 'tick').remove();\n                plotinfo.yaxislayer\n                    .selectAll('.' + ya._id + 'tick').remove();\n                plotinfo.gridlayer\n                    .selectAll('path').remove();\n                plotinfo.zerolinelayer\n                    .selectAll('path').remove();\n                fullLayout._infolayer.select('.g-' + xa._id + 'title').remove();\n                fullLayout._infolayer.select('.g-' + ya._id + 'title').remove();\n            });\n        }\n\n        if(!axid || axid === 'redraw') {\n            return Lib.syncOrAsync(axes.list(gd, '', true).map(function(ax) {\n                return function() {\n                    if(!ax._id) return;\n                    var axDone = axes.doTicks(gd, ax._id);\n                    if(axid === 'redraw') {\n                        ax._r = ax.range.slice();\n                        ax._rl = Lib.simpleMap(ax._r, ax.r2l);\n                    }\n                    return axDone;\n                };\n            }));\n        }\n    }\n\n    // make sure we only have allowed options for exponents\n    // (others can make confusing errors)\n    if(!ax.tickformat) {\n        if(['none', 'e', 'E', 'power', 'SI', 'B'].indexOf(ax.exponentformat) === -1) {\n            ax.exponentformat = 'e';\n        }\n        if(['all', 'first', 'last', 'none'].indexOf(ax.showexponent) === -1) {\n            ax.showexponent = 'all';\n        }\n    }\n\n    // set scaling to pixels\n    ax.setScale();\n\n    var axLetter = axid.charAt(0),\n        counterLetter = axes.counterLetter(axid),\n        vals = axes.calcTicks(ax),\n        datafn = function(d) { return [d.text, d.x, ax.mirror, d.font, d.fontSize, d.fontColor].join('_'); },\n        tcls = axid + 'tick',\n        gcls = axid + 'grid',\n        zcls = axid + 'zl',\n        pad = (ax.linewidth || 1) / 2,\n        labelStandoff = (ax.ticks === 'outside' ? ax.ticklen : 0),\n        labelShift = 0,\n        gridWidth = Drawing.crispRound(gd, ax.gridwidth, 1),\n        zeroLineWidth = Drawing.crispRound(gd, ax.zerolinewidth, gridWidth),\n        tickWidth = Drawing.crispRound(gd, ax.tickwidth, 1),\n        sides, transfn, tickpathfn, subplots,\n        i;\n\n    if(ax._counterangle && ax.ticks === 'outside') {\n        var caRad = ax._counterangle * Math.PI / 180;\n        labelStandoff = ax.ticklen * Math.cos(caRad) + 1;\n        labelShift = ax.ticklen * Math.sin(caRad);\n    }\n\n    if(ax.showticklabels && (ax.ticks === 'outside' || ax.showline)) {\n        labelStandoff += 0.2 * ax.tickfont.size;\n    }\n\n    // positioning arguments for x vs y axes\n    if(axLetter === 'x') {\n        sides = ['bottom', 'top'];\n        transfn = ax._transfn || function(d) {\n            return 'translate(' + (ax._offset + ax.l2p(d.x)) + ',0)';\n        };\n        tickpathfn = function(shift, len) {\n            if(ax._counterangle) {\n                var caRad = ax._counterangle * Math.PI / 180;\n                return 'M0,' + shift + 'l' + (Math.sin(caRad) * len) + ',' + (Math.cos(caRad) * len);\n            }\n            else return 'M0,' + shift + 'v' + len;\n        };\n    }\n    else if(axLetter === 'y') {\n        sides = ['left', 'right'];\n        transfn = ax._transfn || function(d) {\n            return 'translate(0,' + (ax._offset + ax.l2p(d.x)) + ')';\n        };\n        tickpathfn = function(shift, len) {\n            if(ax._counterangle) {\n                var caRad = ax._counterangle * Math.PI / 180;\n                return 'M' + shift + ',0l' + (Math.cos(caRad) * len) + ',' + (-Math.sin(caRad) * len);\n            }\n            else return 'M' + shift + ',0h' + len;\n        };\n    }\n    else if(axid === 'angular') {\n        sides = ['left', 'right'];\n        transfn = ax._transfn;\n        tickpathfn = function(shift, len) {\n            return 'M' + shift + ',0h' + len;\n        };\n    }\n    else {\n        Lib.warn('Unrecognized doTicks axis:', axid);\n        return;\n    }\n    var axside = ax.side || sides[0],\n    // which direction do the side[0], side[1], and free ticks go?\n    // then we flip if outside XOR y axis\n        ticksign = [-1, 1, axside === sides[1] ? 1 : -1];\n    if((ax.ticks !== 'inside') === (axLetter === 'x')) {\n        ticksign = ticksign.map(function(v) { return -v; });\n    }\n\n    if(!ax.visible) return;\n\n    if(ax._tickFilter) {\n        vals = vals.filter(ax._tickFilter);\n    }\n\n    // remove zero lines, grid lines, and inside ticks if they're within\n    // 1 pixel of the end\n    // The key case here is removing zero lines when the axis bound is zero.\n    function clipEnds(d) {\n        var p = ax.l2p(d.x);\n        return (p > 1 && p < ax._length - 1);\n    }\n    var valsClipped = vals.filter(clipEnds);\n\n    // don't clip angular values\n    if(ax._id === 'angular') {\n        valsClipped = vals;\n    }\n\n    function drawTicks(container, tickpath) {\n        var ticks = container.selectAll('path.' + tcls)\n            .data(ax.ticks === 'inside' ? valsClipped : vals, datafn);\n        if(tickpath && ax.ticks) {\n            ticks.enter().append('path').classed(tcls, 1).classed('ticks', 1)\n                .classed('crisp', 1)\n                .call(Color.stroke, ax.tickcolor)\n                .style('stroke-width', tickWidth + 'px')\n                .attr('d', tickpath);\n            ticks.attr('transform', transfn);\n            ticks.exit().remove();\n        }\n        else ticks.remove();\n    }\n\n    function drawLabels(container, position) {\n        // tick labels - for now just the main labels.\n        // TODO: mirror labels, esp for subplots\n        var tickLabels = container.selectAll('g.' + tcls).data(vals, datafn);\n\n        if(!isNumeric(position)) {\n            tickLabels.remove();\n            drawAxTitle();\n            return;\n        }\n        if(!ax.showticklabels) {\n            tickLabels.remove();\n            drawAxTitle();\n            calcBoundingBox();\n            return;\n        }\n\n        var labelx, labely, labelanchor, labelpos0, flipit;\n        if(axLetter === 'x') {\n            flipit = (axside === 'bottom') ? 1 : -1;\n            labelx = function(d) { return d.dx + labelShift * flipit; };\n            labelpos0 = position + (labelStandoff + pad) * flipit;\n            labely = function(d) {\n                return d.dy + labelpos0 + d.fontSize *\n                    ((axside === 'bottom') ? 1 : -0.2);\n            };\n            labelanchor = function(angle) {\n                if(!isNumeric(angle) || angle === 0 || angle === 180) {\n                    return 'middle';\n                }\n                return (angle * flipit < 0) ? 'end' : 'start';\n            };\n        }\n        else if(axLetter === 'y') {\n            flipit = (axside === 'right') ? 1 : -1;\n            labely = function(d) {\n                return d.dy + d.fontSize * MID_SHIFT - labelShift * flipit;\n            };\n            labelx = function(d) {\n                return d.dx + position + (labelStandoff + pad +\n                    ((Math.abs(ax.tickangle) === 90) ? d.fontSize / 2 : 0)) * flipit;\n            };\n            labelanchor = function(angle) {\n                if(isNumeric(angle) && Math.abs(angle) === 90) {\n                    return 'middle';\n                }\n                return axside === 'right' ? 'start' : 'end';\n            };\n        }\n        else if(axid === 'angular') {\n            ax._labelShift = labelShift;\n            ax._labelStandoff = labelStandoff;\n            ax._pad = pad;\n\n            labelx = ax._labelx;\n            labely = ax._labely;\n            labelanchor = ax._labelanchor;\n        }\n\n        var maxFontSize = 0,\n            autoangle = 0,\n            labelsReady = [];\n        tickLabels.enter().append('g').classed(tcls, 1)\n            .append('text')\n                // only so tex has predictable alignment that we can\n                // alter later\n                .attr('text-anchor', 'middle')\n                .each(function(d) {\n                    var thisLabel = d3.select(this),\n                        newPromise = gd._promises.length;\n                    thisLabel\n                        .call(svgTextUtils.positionText, labelx(d), labely(d))\n                        .call(Drawing.font, d.font, d.fontSize, d.fontColor)\n                        .text(d.text)\n                        .call(svgTextUtils.convertToTspans, gd);\n                    newPromise = gd._promises[newPromise];\n                    if(newPromise) {\n                        // if we have an async label, we'll deal with that\n                        // all here so take it out of gd._promises and\n                        // instead position the label and promise this in\n                        // labelsReady\n                        labelsReady.push(gd._promises.pop().then(function() {\n                            positionLabels(thisLabel, ax.tickangle);\n                        }));\n                    }\n                    else {\n                        // sync label: just position it now.\n                        positionLabels(thisLabel, ax.tickangle);\n                    }\n                });\n        tickLabels.exit().remove();\n\n        tickLabels.each(function(d) {\n            maxFontSize = Math.max(maxFontSize, d.fontSize);\n        });\n\n        if(axid === 'angular') {\n            tickLabels.each(function(d) {\n                d3.select(this).select('text')\n                    .call(svgTextUtils.positionText, labelx(d), labely(d));\n            });\n        }\n\n        function positionLabels(s, angle) {\n            s.each(function(d) {\n                var anchor = labelanchor(angle, d);\n                var thisLabel = d3.select(this),\n                    mathjaxGroup = thisLabel.select('.text-math-group'),\n                    transform = transfn(d) +\n                        ((isNumeric(angle) && +angle !== 0) ?\n                        (' rotate(' + angle + ',' + labelx(d) + ',' +\n                            (labely(d) - d.fontSize / 2) + ')') :\n                        '');\n                if(mathjaxGroup.empty()) {\n                    thisLabel.select('text').attr({\n                        transform: transform,\n                        'text-anchor': anchor\n                    });\n                }\n                else {\n                    var mjShift =\n                        Drawing.bBox(mathjaxGroup.node()).width *\n                            {end: -0.5, start: 0.5}[anchor];\n                    mathjaxGroup.attr('transform', transform +\n                        (mjShift ? 'translate(' + mjShift + ',0)' : ''));\n                }\n            });\n        }\n\n        // make sure all labels are correctly positioned at their base angle\n        // the positionLabels call above is only for newly drawn labels.\n        // do this without waiting, using the last calculated angle to\n        // minimize flicker, then do it again when we know all labels are\n        // there, putting back the prescribed angle to check for overlaps.\n        positionLabels(tickLabels, ax._lastangle || ax.tickangle);\n\n        function allLabelsReady() {\n            return labelsReady.length && Promise.all(labelsReady);\n        }\n\n        function fixLabelOverlaps() {\n            positionLabels(tickLabels, ax.tickangle);\n\n            // check for auto-angling if x labels overlap\n            // don't auto-angle at all for log axes with\n            // base and digit format\n            if(axLetter === 'x' && !isNumeric(ax.tickangle) &&\n                    (ax.type !== 'log' || String(ax.dtick).charAt(0) !== 'D')) {\n                var lbbArray = [];\n                tickLabels.each(function(d) {\n                    var s = d3.select(this),\n                        thisLabel = s.select('.text-math-group'),\n                        x = ax.l2p(d.x);\n                    if(thisLabel.empty()) thisLabel = s.select('text');\n\n                    var bb = Drawing.bBox(thisLabel.node());\n\n                    lbbArray.push({\n                        // ignore about y, just deal with x overlaps\n                        top: 0,\n                        bottom: 10,\n                        height: 10,\n                        left: x - bb.width / 2,\n                        // impose a 2px gap\n                        right: x + bb.width / 2 + 2,\n                        width: bb.width + 2\n                    });\n                });\n                for(i = 0; i < lbbArray.length - 1; i++) {\n                    if(Lib.bBoxIntersect(lbbArray[i], lbbArray[i + 1])) {\n                        // any overlap at all - set 30 degrees\n                        autoangle = 30;\n                        break;\n                    }\n                }\n                if(autoangle) {\n                    var tickspacing = Math.abs(\n                            (vals[vals.length - 1].x - vals[0].x) * ax._m\n                        ) / (vals.length - 1);\n                    if(tickspacing < maxFontSize * 2.5) {\n                        autoangle = 90;\n                    }\n                    positionLabels(tickLabels, autoangle);\n                }\n                ax._lastangle = autoangle;\n            }\n\n            // update the axis title\n            // (so it can move out of the way if needed)\n            // TODO: separate out scoot so we don't need to do\n            // a full redraw of the title (mostly relevant for MathJax)\n            drawAxTitle();\n            return axid + ' done';\n        }\n\n        function calcBoundingBox() {\n            if(ax.showticklabels) {\n                var gdBB = gd.getBoundingClientRect();\n                var bBox = container.node().getBoundingClientRect();\n\n                /*\n                 * the way we're going to use this, the positioning that matters\n                 * is relative to the origin of gd. This is important particularly\n                 * if gd is scrollable, and may have been scrolled between the time\n                 * we calculate this and the time we use it\n                 */\n\n                ax._boundingBox = {\n                    width: bBox.width,\n                    height: bBox.height,\n                    left: bBox.left - gdBB.left,\n                    right: bBox.right - gdBB.left,\n                    top: bBox.top - gdBB.top,\n                    bottom: bBox.bottom - gdBB.top\n                };\n            } else {\n                var gs = fullLayout._size;\n                var pos;\n\n                // set dummy bbox for ticklabel-less axes\n\n                if(axLetter === 'x') {\n                    pos = ax.anchor === 'free' ?\n                        gs.t + gs.h * (1 - ax.position) :\n                        gs.t + gs.h * (1 - ax._anchorAxis.domain[{bottom: 0, top: 1}[ax.side]]);\n\n                    ax._boundingBox = {\n                        top: pos,\n                        bottom: pos,\n                        left: ax._offset,\n                        right: ax._offset + ax._length,\n                        width: ax._length,\n                        height: 0\n                    };\n                } else {\n                    pos = ax.anchor === 'free' ?\n                        gs.l + gs.w * ax.position :\n                        gs.l + gs.w * ax._anchorAxis.domain[{left: 0, right: 1}[ax.side]];\n\n                    ax._boundingBox = {\n                        left: pos,\n                        right: pos,\n                        bottom: ax._offset + ax._length,\n                        top: ax._offset,\n                        height: ax._length,\n                        width: 0\n                    };\n                }\n            }\n\n            /*\n             * for spikelines: what's the full domain of positions in the\n             * opposite direction that are associated with this axis?\n             * This means any axes that we make a subplot with, plus the\n             * position of the axis itself if it's free.\n             */\n            if(subplots) {\n                var fullRange = ax._counterSpan = [Infinity, -Infinity];\n\n                for(i = 0; i < subplots.length; i++) {\n                    var subplot = fullLayout._plots[subplots[i]];\n                    var counterAxis = subplot[(axLetter === 'x') ? 'yaxis' : 'xaxis'];\n\n                    extendRange(fullRange, [\n                        counterAxis._offset,\n                        counterAxis._offset + counterAxis._length\n                    ]);\n                }\n\n                if(ax.anchor === 'free') {\n                    extendRange(fullRange, (axLetter === 'x') ?\n                        [ax._boundingBox.bottom, ax._boundingBox.top] :\n                        [ax._boundingBox.right, ax._boundingBox.left]);\n                }\n            }\n\n            function extendRange(range, newRange) {\n                range[0] = Math.min(range[0], newRange[0]);\n                range[1] = Math.max(range[1], newRange[1]);\n            }\n        }\n\n        var done = Lib.syncOrAsync([\n            allLabelsReady,\n            fixLabelOverlaps,\n            calcBoundingBox\n        ]);\n        if(done && done.then) gd._promises.push(done);\n        return done;\n    }\n\n    function drawAxTitle() {\n        if(skipTitle) return;\n\n        // now this only applies to regular cartesian axes; colorbars and\n        // others ALWAYS call doTicks with skipTitle=true so they can\n        // configure their own titles.\n        var ax = axisIds.getFromId(gd, axid),\n            avoidSelection = d3.select(gd).selectAll('g.' + axid + 'tick'),\n            avoid = {\n                selection: avoidSelection,\n                side: ax.side\n            },\n            axLetter = axid.charAt(0),\n            gs = gd._fullLayout._size,\n            offsetBase = 1.5,\n            fontSize = ax.titlefont.size,\n            transform,\n            counterAxis,\n            x,\n            y;\n        if(avoidSelection.size()) {\n            var translation = Drawing.getTranslate(avoidSelection.node().parentNode);\n            avoid.offsetLeft = translation.x;\n            avoid.offsetTop = translation.y;\n        }\n\n        var titleStandoff = 10 + fontSize * offsetBase +\n            (ax.linewidth ? ax.linewidth - 1 : 0);\n\n        if(axLetter === 'x') {\n            counterAxis = (ax.anchor === 'free') ?\n                {_offset: gs.t + (1 - (ax.position || 0)) * gs.h, _length: 0} :\n                axisIds.getFromId(gd, ax.anchor);\n\n            x = ax._offset + ax._length / 2;\n            if(ax.side === 'top') {\n                y = -titleStandoff - fontSize * (ax.showticklabels ? 1 : 0);\n            }\n            else {\n                y = counterAxis._length + titleStandoff +\n                    fontSize * (ax.showticklabels ? 1.5 : 0.5);\n            }\n            y += counterAxis._offset;\n\n            if(ax.rangeslider && ax.rangeslider.visible && ax._boundingBox) {\n                y += (fullLayout.height - fullLayout.margin.b - fullLayout.margin.t) *\n                    ax.rangeslider.thickness + ax._boundingBox.height;\n            }\n\n            if(!avoid.side) avoid.side = 'bottom';\n        }\n        else {\n            counterAxis = (ax.anchor === 'free') ?\n                {_offset: gs.l + (ax.position || 0) * gs.w, _length: 0} :\n                axisIds.getFromId(gd, ax.anchor);\n\n            y = ax._offset + ax._length / 2;\n            if(ax.side === 'right') {\n                x = counterAxis._length + titleStandoff +\n                    fontSize * (ax.showticklabels ? 1 : 0.5);\n            }\n            else {\n                x = -titleStandoff - fontSize * (ax.showticklabels ? 0.5 : 0);\n            }\n            x += counterAxis._offset;\n\n            transform = {rotate: '-90', offset: 0};\n            if(!avoid.side) avoid.side = 'left';\n        }\n\n        Titles.draw(gd, axid + 'title', {\n            propContainer: ax,\n            propName: ax._name + '.title',\n            placeholder: fullLayout._dfltTitle[axLetter],\n            avoid: avoid,\n            transform: transform,\n            attributes: {x: x, y: y, 'text-anchor': 'middle'}\n        });\n    }\n\n    function traceHasBarsOrFill(trace, subplot) {\n        if(trace.visible !== true || trace.xaxis + trace.yaxis !== subplot) return false;\n        if(Registry.traceIs(trace, 'bar') && trace.orientation === {x: 'h', y: 'v'}[axLetter]) return true;\n        return trace.fill && trace.fill.charAt(trace.fill.length - 1) === axLetter;\n    }\n\n    function drawGrid(plotinfo, counteraxis, subplot) {\n        var gridcontainer = plotinfo.gridlayer.selectAll('.' + axid);\n        var zlcontainer = plotinfo.zerolinelayer;\n        var gridvals = plotinfo['hidegrid' + axLetter] ? [] : valsClipped;\n        var gridpath = ax._gridpath || ((axLetter === 'x' ?\n                ('M0,' + counteraxis._offset + 'v') :\n                ('M' + counteraxis._offset + ',0h')\n            ) + counteraxis._length);\n        var grid = gridcontainer.selectAll('path.' + gcls)\n            .data((ax.showgrid === false) ? [] : gridvals, datafn);\n        grid.enter().append('path').classed(gcls, 1)\n            .classed('crisp', 1)\n            .attr('d', gridpath)\n            .each(function(d) {\n                if(ax.zeroline && (ax.type === 'linear' || ax.type === '-') &&\n                        Math.abs(d.x) < ax.dtick / 100) {\n                    d3.select(this).remove();\n                }\n            });\n        grid.attr('transform', transfn)\n            .call(Color.stroke, ax.gridcolor || '#ddd')\n            .style('stroke-width', gridWidth + 'px');\n        if(typeof gridpath === 'function') grid.attr('d', gridpath);\n        grid.exit().remove();\n\n        // zero line\n        if(zlcontainer) {\n            var hasBarsOrFill = false;\n            for(var i = 0; i < gd._fullData.length; i++) {\n                if(traceHasBarsOrFill(gd._fullData[i], subplot)) {\n                    hasBarsOrFill = true;\n                    break;\n                }\n            }\n            var rng = Lib.simpleMap(ax.range, ax.r2l),\n                showZl = (rng[0] * rng[1] <= 0) && ax.zeroline &&\n                (ax.type === 'linear' || ax.type === '-') && gridvals.length &&\n                (hasBarsOrFill || clipEnds({x: 0}) || !ax.showline);\n            var zl = zlcontainer.selectAll('path.' + zcls)\n                .data(showZl ? [{x: 0, id: axid}] : []);\n            zl.enter().append('path').classed(zcls, 1).classed('zl', 1)\n                .classed('crisp', 1)\n                .attr('d', gridpath)\n                .each(function() {\n                    // use the fact that only one element can enter to trigger a sort.\n                    // If several zerolines enter at the same time we will sort once per,\n                    // but generally this should be a minimal overhead.\n                    zlcontainer.selectAll('path').sort(function(da, db) {\n                        return axisIds.idSort(da.id, db.id);\n                    });\n                });\n            zl.attr('transform', transfn)\n                .call(Color.stroke, ax.zerolinecolor || Color.defaultLine)\n                .style('stroke-width', zeroLineWidth + 'px');\n            zl.exit().remove();\n        }\n    }\n\n    if(independent) {\n        drawTicks(ax._axislayer, tickpathfn(ax._pos + pad * ticksign[2], ticksign[2] * ax.ticklen));\n        if(ax._counteraxis) {\n            var fictionalPlotinfo = {\n                gridlayer: ax._gridlayer,\n                zerolinelayer: ax._zerolinelayer\n            };\n            drawGrid(fictionalPlotinfo, ax._counteraxis);\n        }\n        return drawLabels(ax._axislayer, ax._pos);\n    }\n    else if(fullLayout._has('cartesian')) {\n        subplots = axes.getSubplots(gd, ax);\n\n        // keep track of which subplots (by main conteraxis) we've already\n        // drawn grids for, so we don't overdraw overlaying subplots\n        var finishedGrids = {};\n\n        subplots.map(function(subplot) {\n            var plotinfo = fullLayout._plots[subplot];\n            var counterAxis = plotinfo[counterLetter + 'axis'];\n\n            var mainCounterID = counterAxis._mainAxis._id;\n            if(finishedGrids[mainCounterID]) return;\n            finishedGrids[mainCounterID] = 1;\n\n            drawGrid(plotinfo, counterAxis, subplot);\n        });\n\n        var mainSubplot = ax._mainSubplot;\n        var mainPlotinfo = fullLayout._plots[mainSubplot];\n        var tickSubplots = [];\n\n        if(ax.ticks) {\n            var mainSign = ticksign[2];\n            var tickpath = tickpathfn(ax._mainLinePosition + pad * mainSign, mainSign * ax.ticklen);\n            if(ax._anchorAxis && ax.mirror && ax.mirror !== true) {\n                tickpath += tickpathfn(ax._mainMirrorPosition - pad * mainSign, -mainSign * ax.ticklen);\n            }\n            drawTicks(mainPlotinfo[axLetter + 'axislayer'], tickpath);\n\n            tickSubplots = Object.keys(ax._linepositions);\n        }\n\n        tickSubplots.map(function(subplot) {\n            var plotinfo = fullLayout._plots[subplot];\n\n            var container = plotinfo[axLetter + 'axislayer'];\n\n            // [bottom or left, top or right]\n            // free and main are handled above\n            var linepositions = ax._linepositions[subplot] || [];\n\n            function tickPathSide(sidei) {\n                var tsign = ticksign[sidei];\n                return tickpathfn(linepositions[sidei] + pad * tsign, tsign * ax.ticklen);\n            }\n\n            drawTicks(container, tickPathSide(0) + tickPathSide(1));\n        });\n\n        var mainContainer = mainPlotinfo[axLetter + 'axislayer'];\n\n        return drawLabels(mainContainer, ax._mainLinePosition);\n    }\n};\n\n// swap all the presentation attributes of the axes showing these traces\naxes.swap = function(gd, traces) {\n    var axGroups = makeAxisGroups(gd, traces);\n\n    for(var i = 0; i < axGroups.length; i++) {\n        swapAxisGroup(gd, axGroups[i].x, axGroups[i].y);\n    }\n};\n\nfunction makeAxisGroups(gd, traces) {\n    var groups = [],\n        i,\n        j;\n\n    for(i = 0; i < traces.length; i++) {\n        var groupsi = [],\n            xi = gd._fullData[traces[i]].xaxis,\n            yi = gd._fullData[traces[i]].yaxis;\n        if(!xi || !yi) continue; // not a 2D cartesian trace?\n\n        for(j = 0; j < groups.length; j++) {\n            if(groups[j].x.indexOf(xi) !== -1 || groups[j].y.indexOf(yi) !== -1) {\n                groupsi.push(j);\n            }\n        }\n\n        if(!groupsi.length) {\n            groups.push({x: [xi], y: [yi]});\n            continue;\n        }\n\n        var group0 = groups[groupsi[0]],\n            groupj;\n\n        if(groupsi.length > 1) {\n            for(j = 1; j < groupsi.length; j++) {\n                groupj = groups[groupsi[j]];\n                mergeAxisGroups(group0.x, groupj.x);\n                mergeAxisGroups(group0.y, groupj.y);\n            }\n        }\n        mergeAxisGroups(group0.x, [xi]);\n        mergeAxisGroups(group0.y, [yi]);\n    }\n\n    return groups;\n}\n\nfunction mergeAxisGroups(intoSet, fromSet) {\n    for(var i = 0; i < fromSet.length; i++) {\n        if(intoSet.indexOf(fromSet[i]) === -1) intoSet.push(fromSet[i]);\n    }\n}\n\nfunction swapAxisGroup(gd, xIds, yIds) {\n    var i,\n        j,\n        xFullAxes = [],\n        yFullAxes = [],\n        layout = gd.layout;\n\n    for(i = 0; i < xIds.length; i++) xFullAxes.push(axes.getFromId(gd, xIds[i]));\n    for(i = 0; i < yIds.length; i++) yFullAxes.push(axes.getFromId(gd, yIds[i]));\n\n    var allAxKeys = Object.keys(xFullAxes[0]),\n        noSwapAttrs = [\n            'anchor', 'domain', 'overlaying', 'position', 'side', 'tickangle'\n        ],\n        numericTypes = ['linear', 'log'];\n\n    for(i = 0; i < allAxKeys.length; i++) {\n        var keyi = allAxKeys[i],\n            xVal = xFullAxes[0][keyi],\n            yVal = yFullAxes[0][keyi],\n            allEqual = true,\n            coerceLinearX = false,\n            coerceLinearY = false;\n        if(keyi.charAt(0) === '_' || typeof xVal === 'function' ||\n                noSwapAttrs.indexOf(keyi) !== -1) {\n            continue;\n        }\n        for(j = 1; j < xFullAxes.length && allEqual; j++) {\n            var xVali = xFullAxes[j][keyi];\n            if(keyi === 'type' && numericTypes.indexOf(xVal) !== -1 &&\n                    numericTypes.indexOf(xVali) !== -1 && xVal !== xVali) {\n                // type is special - if we find a mixture of linear and log,\n                // coerce them all to linear on flipping\n                coerceLinearX = true;\n            }\n            else if(xVali !== xVal) allEqual = false;\n        }\n        for(j = 1; j < yFullAxes.length && allEqual; j++) {\n            var yVali = yFullAxes[j][keyi];\n            if(keyi === 'type' && numericTypes.indexOf(yVal) !== -1 &&\n                    numericTypes.indexOf(yVali) !== -1 && yVal !== yVali) {\n                // type is special - if we find a mixture of linear and log,\n                // coerce them all to linear on flipping\n                coerceLinearY = true;\n            }\n            else if(yFullAxes[j][keyi] !== yVal) allEqual = false;\n        }\n        if(allEqual) {\n            if(coerceLinearX) layout[xFullAxes[0]._name].type = 'linear';\n            if(coerceLinearY) layout[yFullAxes[0]._name].type = 'linear';\n            swapAxisAttrs(layout, keyi, xFullAxes, yFullAxes, gd._fullLayout._dfltTitle);\n        }\n    }\n\n    // now swap x&y for any annotations anchored to these x & y\n    for(i = 0; i < gd._fullLayout.annotations.length; i++) {\n        var ann = gd._fullLayout.annotations[i];\n        if(xIds.indexOf(ann.xref) !== -1 &&\n                yIds.indexOf(ann.yref) !== -1) {\n            Lib.swapAttrs(layout.annotations[i], ['?']);\n        }\n    }\n}\n\nfunction swapAxisAttrs(layout, key, xFullAxes, yFullAxes, dfltTitle) {\n    // in case the value is the default for either axis,\n    // look at the first axis in each list and see if\n    // this key's value is undefined\n    var np = Lib.nestedProperty,\n        xVal = np(layout[xFullAxes[0]._name], key).get(),\n        yVal = np(layout[yFullAxes[0]._name], key).get(),\n        i;\n    if(key === 'title') {\n        // special handling of placeholder titles\n        if(xVal === dfltTitle.x) {\n            xVal = dfltTitle.y;\n        }\n        if(yVal === dfltTitle.y) {\n            yVal = dfltTitle.x;\n        }\n    }\n\n    for(i = 0; i < xFullAxes.length; i++) {\n        np(layout, xFullAxes[i]._name + '.' + key).set(yVal);\n    }\n    for(i = 0; i < yFullAxes.length; i++) {\n        np(layout, yFullAxes[i]._name + '.' + key).set(xVal);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/axes.js\n// module id = 6\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/*\n * Pack internal modules unto an object.\n *\n * This object is require'ed in as 'Plotly' in numerous src and test files.\n * Require'ing 'Plotly' bypasses circular dependencies.\n *\n * Future development should move away from this pattern.\n *\n */\n\n// configuration\nexports.defaultConfig = require('./plot_api/plot_config');\n\n// plots\nexports.Plots = require('./plots/plots');\nexports.Axes = require('./plots/cartesian/axes');\n\n// components\nexports.ModeBar = require('./components/modebar');\n\n// plot api\nrequire('./plot_api/plot_api');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plotly.js\n// module id = 7\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\n\nvar Plotly = require('../plotly');\nvar PlotSchema = require('../plot_api/plot_schema');\nvar Registry = require('../registry');\nvar axisIDs = require('../plots/cartesian/axis_ids');\nvar Lib = require('../lib');\nvar _ = Lib._;\nvar Color = require('../components/color');\nvar BADNUM = require('../constants/numerical').BADNUM;\n\nvar plots = module.exports = {};\n\nvar animationAttrs = require('./animation_attributes');\nvar frameAttrs = require('./frame_attributes');\n\nvar relinkPrivateKeys = Lib.relinkPrivateKeys;\n\n// Expose registry methods on Plots for backward-compatibility\nLib.extendFlat(plots, Registry);\n\nplots.attributes = require('./attributes');\nplots.attributes.type.values = plots.allTypes;\nplots.fontAttrs = require('./font_attributes');\nplots.layoutAttributes = require('./layout_attributes');\n\n// TODO make this a plot attribute?\nplots.fontWeight = 'normal';\n\nvar transformsRegistry = plots.transformsRegistry;\n\nvar ErrorBars = require('../components/errorbars');\n\nvar commandModule = require('./command');\nplots.executeAPICommand = commandModule.executeAPICommand;\nplots.computeAPICommandBindings = commandModule.computeAPICommandBindings;\nplots.manageCommandObserver = commandModule.manageCommandObserver;\nplots.hasSimpleAPICommandBindings = commandModule.hasSimpleAPICommandBindings;\n\n// in some cases the browser doesn't seem to know how big\n// the text is at first, so it needs to draw it,\n// then wait a little, then draw it again\nplots.redrawText = function(gd) {\n    gd = Lib.getGraphDiv(gd);\n\n    // do not work if polar is present\n    if((gd.data && gd.data[0] && gd.data[0].r)) return;\n\n    return new Promise(function(resolve) {\n        setTimeout(function() {\n            Registry.getComponentMethod('annotations', 'draw')(gd);\n            Registry.getComponentMethod('legend', 'draw')(gd);\n\n            (gd.calcdata || []).forEach(function(d) {\n                if(d[0] && d[0].t && d[0].t.cb) d[0].t.cb();\n            });\n\n            resolve(plots.previousPromises(gd));\n        }, 300);\n    });\n};\n\n// resize plot about the container size\nplots.resize = function(gd) {\n    gd = Lib.getGraphDiv(gd);\n\n    return new Promise(function(resolve, reject) {\n\n        function isHidden(gd) {\n            var display = window.getComputedStyle(gd).display;\n            return !display || display === 'none';\n        }\n\n        if(!gd || isHidden(gd)) {\n            reject(new Error('Resize must be passed a displayed plot div element.'));\n        }\n\n        if(gd._redrawTimer) clearTimeout(gd._redrawTimer);\n\n        gd._redrawTimer = setTimeout(function() {\n            // return if there is nothing to resize\n            if(gd.layout.width && gd.layout.height) {\n                resolve(gd);\n                return;\n            }\n\n            delete gd.layout.width;\n            delete gd.layout.height;\n\n            // autosizing doesn't count as a change that needs saving\n            var oldchanged = gd.changed;\n\n            // nor should it be included in the undo queue\n            gd.autoplay = true;\n\n            Plotly.relayout(gd, { autosize: true }).then(function() {\n                gd.changed = oldchanged;\n                resolve(gd);\n            });\n        }, 100);\n    });\n};\n\n\n// for use in Lib.syncOrAsync, check if there are any\n// pending promises in this plot and wait for them\nplots.previousPromises = function(gd) {\n    if((gd._promises || []).length) {\n        return Promise.all(gd._promises)\n            .then(function() { gd._promises = []; });\n    }\n};\n\n/**\n * Adds the 'Edit chart' link.\n * Note that now Plotly.plot() calls this so it can regenerate whenever it replots\n *\n * Add source links to your graph inside the 'showSources' config argument.\n */\nplots.addLinks = function(gd) {\n    // Do not do anything if showLink and showSources are not set to true in config\n    if(!gd._context.showLink && !gd._context.showSources) return;\n\n    var fullLayout = gd._fullLayout;\n\n    var linkContainer = fullLayout._paper\n        .selectAll('text.js-plot-link-container').data([0]);\n\n    linkContainer.enter().append('text')\n        .classed('js-plot-link-container', true)\n        .style({\n            'font-family': '\"Open Sans\", Arial, sans-serif',\n            'font-size': '12px',\n            'fill': Color.defaultLine,\n            'pointer-events': 'all'\n        })\n        .each(function() {\n            var links = d3.select(this);\n            links.append('tspan').classed('js-link-to-tool', true);\n            links.append('tspan').classed('js-link-spacer', true);\n            links.append('tspan').classed('js-sourcelinks', true);\n        });\n\n    // The text node inside svg\n    var text = linkContainer.node(),\n        attrs = {\n            y: fullLayout._paper.attr('height') - 9\n        };\n\n    // If text's width is bigger than the layout\n    // Check that text is a child node or document.body\n    // because otherwise IE/Edge might throw an exception\n    // when calling getComputedTextLength().\n    // Apparently offsetParent is null for invisibles.\n    if(document.body.contains(text) && text.getComputedTextLength() >= (fullLayout.width - 20)) {\n        // Align the text at the left\n        attrs['text-anchor'] = 'start';\n        attrs.x = 5;\n    }\n    else {\n        // Align the text at the right\n        attrs['text-anchor'] = 'end';\n        attrs.x = fullLayout._paper.attr('width') - 7;\n    }\n\n    linkContainer.attr(attrs);\n\n    var toolspan = linkContainer.select('.js-link-to-tool'),\n        spacespan = linkContainer.select('.js-link-spacer'),\n        sourcespan = linkContainer.select('.js-sourcelinks');\n\n    if(gd._context.showSources) gd._context.showSources(gd);\n\n    // 'view in plotly' link for embedded plots\n    if(gd._context.showLink) positionPlayWithData(gd, toolspan);\n\n    // separator if we have both sources and tool link\n    spacespan.text((toolspan.text() && sourcespan.text()) ? ' - ' : '');\n};\n\n// note that now this function is only adding the brand in\n// iframes and 3rd-party apps\nfunction positionPlayWithData(gd, container) {\n    container.text('');\n    var link = container.append('a')\n        .attr({\n            'xlink:xlink:href': '#',\n            'class': 'link--impt link--embedview',\n            'font-weight': 'bold'\n        })\n        .text(gd._context.linkText + ' ' + String.fromCharCode(187));\n\n    if(gd._context.sendData) {\n        link.on('click', function() {\n            plots.sendDataToCloud(gd);\n        });\n    }\n    else {\n        var path = window.location.pathname.split('/');\n        var query = window.location.search;\n        link.attr({\n            'xlink:xlink:show': 'new',\n            'xlink:xlink:href': '/' + path[2].split('.')[0] + '/' + path[1] + query\n        });\n    }\n}\n\nplots.sendDataToCloud = function(gd) {\n    gd.emit('plotly_beforeexport');\n\n    var baseUrl = (window.PLOTLYENV && window.PLOTLYENV.BASE_URL) || 'https://plot.ly';\n\n    var hiddenformDiv = d3.select(gd)\n        .append('div')\n        .attr('id', 'hiddenform')\n        .style('display', 'none');\n\n    var hiddenform = hiddenformDiv\n        .append('form')\n        .attr({\n            action: baseUrl + '/external',\n            method: 'post',\n            target: '_blank'\n        });\n\n    var hiddenformInput = hiddenform\n        .append('input')\n        .attr({\n            type: 'text',\n            name: 'data'\n        });\n\n    hiddenformInput.node().value = plots.graphJson(gd, false, 'keepdata');\n    hiddenform.node().submit();\n    hiddenformDiv.remove();\n\n    gd.emit('plotly_afterexport');\n    return false;\n};\n\n// Fill in default values:\n//\n// gd.data, gd.layout:\n//   are precisely what the user specified,\n//   these fields shouldn't be modified nor used directly\n//   after the supply defaults step.\n//\n// gd._fullData, gd._fullLayout:\n//   are complete descriptions of how to draw the plot,\n//   use these fields in all required computations.\n//\n// gd._fullLayout._modules\n//   is a list of all the trace modules required to draw the plot.\n//\n// gd._fullLayout._basePlotModules\n//   is a list of all the plot modules required to draw the plot.\n//\n// gd._fullLayout._transformModules\n//   is a list of all the transform modules invoked.\n//\nplots.supplyDefaults = function(gd) {\n    var oldFullLayout = gd._fullLayout || {},\n        newFullLayout = gd._fullLayout = {},\n        newLayout = gd.layout || {};\n\n    var oldFullData = gd._fullData || [],\n        newFullData = gd._fullData = [],\n        newData = gd.data || [];\n\n    var i;\n\n    // Create all the storage space for frames, but only if doesn't already exist\n    if(!gd._transitionData) plots.createTransitionData(gd);\n\n    // So we only need to do this once (and since we have gd here)\n    // get the translated placeholder titles.\n    // These ones get used as default values so need to be known at supplyDefaults\n    // others keep their blank defaults but render the placeholder as desired later\n    // TODO: make these work the same way, only inserting the placeholder text at draw time?\n    // The challenge is that this has slightly different behavior right now in editable mode:\n    // using the placeholder as default makes this text permanently (but lightly) visible,\n    // but explicit '' for these titles gives you a placeholder that's hidden until you mouse\n    // over it - so you're not distracted by it if you really don't want a title, but if you do\n    // and you're new to plotly you may not be able to find it.\n    // When editable=false the two behave the same, no title is drawn.\n    newFullLayout._dfltTitle = {\n        plot: _(gd, 'Click to enter Plot title'),\n        x: _(gd, 'Click to enter X axis title'),\n        y: _(gd, 'Click to enter Y axis title'),\n        colorbar: _(gd, 'Click to enter Colorscale title'),\n        annotation: _(gd, 'new text')\n    };\n    newFullLayout._traceWord = _(gd, 'trace');\n\n    var formatObj = getD3FormatObj(gd);\n\n    // first fill in what we can of layout without looking at data\n    // because fullData needs a few things from layout\n\n    if(oldFullLayout._initialAutoSizeIsDone) {\n\n        // coerce the updated layout while preserving width and height\n        var oldWidth = oldFullLayout.width,\n            oldHeight = oldFullLayout.height;\n\n        plots.supplyLayoutGlobalDefaults(newLayout, newFullLayout, formatObj);\n\n        if(!newLayout.width) newFullLayout.width = oldWidth;\n        if(!newLayout.height) newFullLayout.height = oldHeight;\n    }\n    else {\n\n        // coerce the updated layout and autosize if needed\n        plots.supplyLayoutGlobalDefaults(newLayout, newFullLayout, formatObj);\n\n        var missingWidthOrHeight = (!newLayout.width || !newLayout.height),\n            autosize = newFullLayout.autosize,\n            autosizable = gd._context && gd._context.autosizable,\n            initialAutoSize = missingWidthOrHeight && (autosize || autosizable);\n\n        if(initialAutoSize) plots.plotAutoSize(gd, newLayout, newFullLayout);\n        else if(missingWidthOrHeight) plots.sanitizeMargins(gd);\n\n        // for backwards-compatibility with Plotly v1.x.x\n        if(!autosize && missingWidthOrHeight) {\n            newLayout.width = newFullLayout.width;\n            newLayout.height = newFullLayout.height;\n        }\n    }\n\n    newFullLayout._d3locale = getFormatter(formatObj, newFullLayout.separators);\n\n    newFullLayout._initialAutoSizeIsDone = true;\n\n    // keep track of how many traces are inputted\n    newFullLayout._dataLength = newData.length;\n\n    // clear the lists of trace and baseplot modules, and subplots\n    newFullLayout._modules = [];\n    newFullLayout._basePlotModules = [];\n    newFullLayout._subplots = emptySubplotLists();\n\n    // then do the data\n    newFullLayout._globalTransforms = (gd._context || {}).globalTransforms;\n    plots.supplyDataDefaults(newData, newFullData, newLayout, newFullLayout);\n\n    // attach helper method to check whether a plot type is present on graph\n    newFullLayout._has = plots._hasPlotType.bind(newFullLayout);\n\n    // special cases that introduce interactions between traces\n    var _modules = newFullLayout._modules;\n    for(i = 0; i < _modules.length; i++) {\n        var _module = _modules[i];\n        if(_module.cleanData) _module.cleanData(newFullData);\n    }\n\n    if(oldFullData.length === newData.length) {\n        for(i = 0; i < newFullData.length; i++) {\n            relinkPrivateKeys(newFullData[i], oldFullData[i]);\n        }\n    }\n\n    // finally, fill in the pieces of layout that may need to look at data\n    plots.supplyLayoutModuleDefaults(newLayout, newFullLayout, newFullData, gd._transitionData);\n\n    // TODO remove in v2.0.0\n    // add has-plot-type refs to fullLayout for backward compatibility\n    newFullLayout._hasCartesian = newFullLayout._has('cartesian');\n    newFullLayout._hasGeo = newFullLayout._has('geo');\n    newFullLayout._hasGL3D = newFullLayout._has('gl3d');\n    newFullLayout._hasGL2D = newFullLayout._has('gl2d');\n    newFullLayout._hasTernary = newFullLayout._has('ternary');\n    newFullLayout._hasPie = newFullLayout._has('pie');\n\n    // clean subplots and other artifacts from previous plot calls\n    plots.cleanPlot(newFullData, newFullLayout, oldFullData, oldFullLayout);\n\n    // relink / initialize subplot axis objects\n    plots.linkSubplots(newFullData, newFullLayout, oldFullData, oldFullLayout);\n\n    // relink functions and _ attributes to promote consistency between plots\n    relinkPrivateKeys(newFullLayout, oldFullLayout);\n\n    // TODO may return a promise\n    plots.doAutoMargin(gd);\n\n    // set scale after auto margin routine\n    var axList = axisIDs.list(gd);\n    for(i = 0; i < axList.length; i++) {\n        var ax = axList[i];\n        ax.setScale();\n    }\n\n    // update object references in calcdata\n    if((gd.calcdata || []).length === newFullData.length) {\n        for(i = 0; i < newFullData.length; i++) {\n            var newTrace = newFullData[i];\n            var cd0 = gd.calcdata[i][0];\n            if(cd0 && cd0.trace) {\n                if(cd0.trace._hasCalcTransform) {\n                    remapTransformedArrays(cd0, newTrace);\n                } else {\n                    cd0.trace = newTrace;\n                }\n            }\n        }\n    }\n};\n\n/**\n * Make a container for collecting subplots we need to display.\n *\n * Finds all subplot types we need to enumerate once and caches it,\n * but makes a new output object each time.\n * Single-trace subplots (which have no `id`) such as pie, table, etc\n * do not need to be collected because we just draw all visible traces.\n */\nvar collectableSubplotTypes;\nfunction emptySubplotLists() {\n    var out = {};\n    var i, j;\n\n    if(!collectableSubplotTypes) {\n        collectableSubplotTypes = [];\n\n        var subplotsRegistry = Registry.subplotsRegistry;\n\n        for(var subplotType in subplotsRegistry) {\n            var subplotModule = subplotsRegistry[subplotType];\n            var subplotAttr = subplotModule.attr;\n\n            if(subplotAttr) {\n                collectableSubplotTypes.push(subplotType);\n\n                // special case, currently just for cartesian:\n                // we need to enumerate axes, not just subplots\n                if(Array.isArray(subplotAttr)) {\n                    for(j = 0; j < subplotAttr.length; j++) {\n                        Lib.pushUnique(collectableSubplotTypes, subplotAttr[j]);\n                    }\n                }\n            }\n        }\n    }\n\n    for(i = 0; i < collectableSubplotTypes.length; i++) {\n        out[collectableSubplotTypes[i]] = [];\n    }\n    return out;\n}\n\nfunction remapTransformedArrays(cd0, newTrace) {\n    var oldTrace = cd0.trace;\n    var arrayAttrs = oldTrace._arrayAttrs;\n    var transformedArrayHash = {};\n    var i, astr;\n\n    for(i = 0; i < arrayAttrs.length; i++) {\n        astr = arrayAttrs[i];\n        transformedArrayHash[astr] = Lib.nestedProperty(oldTrace, astr).get().slice();\n    }\n\n    cd0.trace = newTrace;\n\n    for(i = 0; i < arrayAttrs.length; i++) {\n        astr = arrayAttrs[i];\n        Lib.nestedProperty(cd0.trace, astr).set(transformedArrayHash[astr]);\n    }\n}\n\nvar formatKeys = [\n    'days', 'shortDays', 'months', 'shortMonths', 'periods',\n    'dateTime', 'date', 'time',\n    'decimal', 'thousands', 'grouping', 'currency'\n];\n\n/**\n * getD3FormatObj: use _context to get the d3.locale argument object.\n * decimal and thousands can be overridden later by layout.separators\n * grouping and currency are not presently used by our automatic number\n * formatting system but can be used by custom formats.\n *\n * @returns {object} d3.locale format object\n */\nfunction getD3FormatObj(gd) {\n    var locale = gd._context.locale;\n    if(!locale) locale === 'en-US';\n\n    var formatDone = false;\n    var formatObj = {};\n\n    function includeFormat(newFormat) {\n        var formatFinished = true;\n        for(var i = 0; i < formatKeys.length; i++) {\n            var formatKey = formatKeys[i];\n            if(!formatObj[formatKey]) {\n                if(newFormat[formatKey]) {\n                    formatObj[formatKey] = newFormat[formatKey];\n                }\n                else formatFinished = false;\n            }\n        }\n        if(formatFinished) formatDone = true;\n    }\n\n    // same as localize, look for format parts in each format spec in the chain\n    for(var i = 0; i < 2; i++) {\n        var locales = gd._context.locales;\n        for(var j = 0; j < 2; j++) {\n            var formatj = (locales[locale] || {}).format;\n            if(formatj) {\n                includeFormat(formatj);\n                if(formatDone) break;\n            }\n            locales = Registry.localeRegistry;\n        }\n\n        var baseLocale = locale.split('-')[0];\n        if(formatDone || baseLocale === locale) break;\n        locale = baseLocale;\n    }\n\n    // lastly pick out defaults from english (non-US, as DMY is so much more common)\n    if(!formatDone) includeFormat(Registry.localeRegistry.en.format);\n\n    return formatObj;\n}\n\n/**\n * getFormatter: combine the final separators with the locale formatting object\n * we pulled earlier to generate number and time formatters\n * TODO: remove separators in v2, only use locale, so we don't need this step?\n *\n * @param {object} formatObj: d3.locale format object\n * @param {string} separators: length-2 string to override decimal and thousands\n *   separators in number formatting\n *\n * @returns {object} {numberFormat, timeFormat} d3 formatter factory functions\n *   for numbers and time\n */\nfunction getFormatter(formatObj, separators) {\n    formatObj.decimal = separators.charAt(0);\n    formatObj.thousands = separators.charAt(1);\n\n    return d3.locale(formatObj);\n}\n\n// Create storage for all of the data related to frames and transitions:\nplots.createTransitionData = function(gd) {\n    // Set up the default keyframe if it doesn't exist:\n    if(!gd._transitionData) {\n        gd._transitionData = {};\n    }\n\n    if(!gd._transitionData._frames) {\n        gd._transitionData._frames = [];\n    }\n\n    if(!gd._transitionData._frameHash) {\n        gd._transitionData._frameHash = {};\n    }\n\n    if(!gd._transitionData._counter) {\n        gd._transitionData._counter = 0;\n    }\n\n    if(!gd._transitionData._interruptCallbacks) {\n        gd._transitionData._interruptCallbacks = [];\n    }\n};\n\n// helper function to be bound to fullLayout to check\n// whether a certain plot type is present on plot\n// or trace has a category\nplots._hasPlotType = function(category) {\n    // check plot\n    var basePlotModules = this._basePlotModules || [];\n    var i;\n\n    for(i = 0; i < basePlotModules.length; i++) {\n        var _module = basePlotModules[i];\n\n        if(_module.name === category) return true;\n    }\n\n    // check trace\n    var modules = this._modules || [];\n\n    for(i = 0; i < modules.length; i++) {\n        var modulei = modules[i];\n        if(modulei.categories && modulei.categories.indexOf(category) >= 0) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\nplots.cleanPlot = function(newFullData, newFullLayout, oldFullData, oldFullLayout) {\n    var i, j;\n\n    var basePlotModules = oldFullLayout._basePlotModules || [];\n    for(i = 0; i < basePlotModules.length; i++) {\n        var _module = basePlotModules[i];\n\n        if(_module.clean) {\n            _module.clean(newFullData, newFullLayout, oldFullData, oldFullLayout);\n        }\n    }\n\n    var hasPaper = !!oldFullLayout._paper;\n    var hasInfoLayer = !!oldFullLayout._infolayer;\n    var hadGl = oldFullLayout._has && oldFullLayout._has('gl');\n    var hasGl = newFullLayout._has && newFullLayout._has('gl');\n\n    if(hadGl && !hasGl) {\n        if(oldFullLayout._glcontainer !== undefined) {\n            oldFullLayout._glcontainer.selectAll('.gl-canvas').remove();\n            oldFullLayout._glcanvas = null;\n        }\n    }\n\n    oldLoop:\n    for(i = 0; i < oldFullData.length; i++) {\n        var oldTrace = oldFullData[i],\n            oldUid = oldTrace.uid;\n\n        for(j = 0; j < newFullData.length; j++) {\n            var newTrace = newFullData[j];\n\n            if(oldUid === newTrace.uid) continue oldLoop;\n        }\n\n        var query = (\n            '.hm' + oldUid +\n            ',.contour' + oldUid +\n            ',.carpet' + oldUid +\n            ',#clip' + oldUid +\n            ',.trace' + oldUid\n        );\n\n        // clean old heatmap, contour traces and clip paths\n        // that rely on uid identifiers\n        if(hasPaper) {\n            oldFullLayout._paper.selectAll(query).remove();\n        }\n\n        // clean old colorbars and range slider plot\n        if(hasInfoLayer) {\n            oldFullLayout._infolayer.selectAll('.cb' + oldUid).remove();\n\n            oldFullLayout._infolayer.selectAll('g.rangeslider-container')\n                .selectAll(query).remove();\n        }\n    }\n\n    if(oldFullLayout._zoomlayer) {\n        oldFullLayout._zoomlayer.selectAll('.select-outline').remove();\n    }\n};\n\nplots.linkSubplots = function(newFullData, newFullLayout, oldFullData, oldFullLayout) {\n    var oldSubplots = oldFullLayout._plots || {};\n    var newSubplots = newFullLayout._plots = {};\n    var newSubplotList = newFullLayout._subplots;\n\n    var mockGd = {\n        _fullData: newFullData,\n        _fullLayout: newFullLayout\n    };\n\n    var ids = newSubplotList.cartesian.concat(newSubplotList.gl2d || []);\n\n    var i, j, id, ax;\n\n    // sort subplot lists\n    for(var subplotType in newSubplotList) {\n        newSubplotList[subplotType].sort(Lib.subplotSort);\n    }\n\n    for(i = 0; i < ids.length; i++) {\n        id = ids[i];\n        var oldSubplot = oldSubplots[id];\n        var xaxis = axisIDs.getFromId(mockGd, id, 'x');\n        var yaxis = axisIDs.getFromId(mockGd, id, 'y');\n        var plotinfo;\n\n        if(oldSubplot) {\n            plotinfo = newSubplots[id] = oldSubplot;\n\n            if(plotinfo.xaxis.layer !== xaxis.layer) {\n                plotinfo.xlines.attr('d', null);\n                plotinfo.xaxislayer.selectAll('*').remove();\n            }\n\n            if(plotinfo.yaxis.layer !== yaxis.layer) {\n                plotinfo.ylines.attr('d', null);\n                plotinfo.yaxislayer.selectAll('*').remove();\n            }\n        } else {\n            plotinfo = newSubplots[id] = {};\n            plotinfo.id = id;\n        }\n\n        plotinfo.xaxis = xaxis;\n        plotinfo.yaxis = yaxis;\n\n        // By default, we clip at the subplot level,\n        // but if one trace on a given subplot has *cliponaxis* set to false,\n        // we need to clip at the trace module layer level;\n        // find this out here, once of for all.\n        plotinfo._hasClipOnAxisFalse = false;\n\n        for(j = 0; j < newFullData.length; j++) {\n            var trace = newFullData[j];\n\n            if(\n                trace.xaxis === plotinfo.xaxis._id &&\n                trace.yaxis === plotinfo.yaxis._id &&\n                trace.cliponaxis === false\n            ) {\n                plotinfo._hasClipOnAxisFalse = true;\n                break;\n            }\n        }\n    }\n\n    // while we're at it, link overlaying axes to their main axes and\n    // anchored axes to the axes they're anchored to\n    var axList = axisIDs.list(mockGd, null, true);\n    for(i = 0; i < axList.length; i++) {\n        ax = axList[i];\n        var mainAx = null;\n\n        if(ax.overlaying) {\n            mainAx = axisIDs.getFromId(mockGd, ax.overlaying);\n\n            // you cannot overlay an axis that's already overlaying another\n            if(mainAx && mainAx.overlaying) {\n                ax.overlaying = false;\n                mainAx = null;\n            }\n        }\n        ax._mainAxis = mainAx || ax;\n\n        /*\n         * For now force overlays to overlay completely... so they\n         * can drag together correctly and share backgrounds.\n         * Later perhaps we make separate axis domain and\n         * tick/line domain or something, so they can still share\n         * the (possibly larger) dragger and background but don't\n         * have to both be drawn over that whole domain\n         */\n        if(mainAx) ax.domain = mainAx.domain.slice();\n\n        ax._anchorAxis = ax.anchor === 'free' ?\n            null :\n            axisIDs.getFromId(mockGd, ax.anchor);\n    }\n\n    for(i = 0; i < axList.length; i++) {\n        // Figure out which subplot to draw ticks, labels, & axis lines on\n        // do this as a separate loop so we already have all the\n        // _mainAxis and _anchorAxis links set\n        ax = axList[i];\n        var isX = ax._id.charAt(0) === 'x';\n        var anchorAx = ax._mainAxis._anchorAxis;\n        var mainSubplotID = '';\n        var nextBestMainSubplotID = '';\n        var anchorID = '';\n        // First try the main ID with the anchor\n        if(anchorAx) {\n            anchorID = anchorAx._mainAxis._id;\n            mainSubplotID = isX ? (ax._id + anchorID) : (anchorID + ax._id);\n        }\n        // Then look for a subplot with the counteraxis overlaying the anchor\n        // If that fails just use the first subplot including this axis\n        if(!mainSubplotID || ids.indexOf(mainSubplotID) === -1) {\n            mainSubplotID = '';\n            for(j = 0; j < ids.length; j++) {\n                id = ids[j];\n                var yIndex = id.indexOf('y');\n                var idPart = isX ? id.substr(0, yIndex) : id.substr(yIndex);\n                var counterPart = isX ? id.substr(yIndex) : id.substr(0, yIndex);\n                if(idPart === ax._id) {\n                    if(!nextBestMainSubplotID) nextBestMainSubplotID = id;\n                    var counterAx = axisIDs.getFromId(mockGd, counterPart);\n                    if(anchorID && counterAx.overlaying === anchorID) {\n                        mainSubplotID = id;\n                        break;\n                    }\n                }\n            }\n        }\n        ax._mainSubplot = mainSubplotID || nextBestMainSubplotID;\n    }\n};\n\n// This function clears any trace attributes with valType: color and\n// no set dflt filed in the plot schema. This is needed because groupby (which\n// is the only transform for which this currently applies) supplies parent\n// trace defaults, then expanded trace defaults. The result is that `null`\n// colors are default-supplied and inherited as a color instead of a null.\n// The result is that expanded trace default colors have no effect, with\n// the final result that groups are indistinguishable. This function clears\n// those colors so that individual groupby groups get unique colors.\nplots.clearExpandedTraceDefaultColors = function(trace) {\n    var colorAttrs, path, i;\n\n    // This uses weird closure state in order to satisfy the linter rule\n    // that we can't create functions in a loop.\n    function locateColorAttrs(attr, attrName, attrs, level) {\n        path[level] = attrName;\n        path.length = level + 1;\n        if(attr.valType === 'color' && attr.dflt === undefined) {\n            colorAttrs.push(path.join('.'));\n        }\n    }\n\n    path = [];\n\n    // Get the cached colorAttrs:\n    colorAttrs = trace._module._colorAttrs;\n\n    // Or else compute and cache the colorAttrs on the module:\n    if(!colorAttrs) {\n        trace._module._colorAttrs = colorAttrs = [];\n        PlotSchema.crawl(\n            trace._module.attributes,\n            locateColorAttrs\n        );\n    }\n\n    for(i = 0; i < colorAttrs.length; i++) {\n        var origprop = Lib.nestedProperty(trace, '_input.' + colorAttrs[i]);\n\n        if(!origprop.get()) {\n            Lib.nestedProperty(trace, colorAttrs[i]).set(null);\n        }\n    }\n};\n\n\nplots.supplyDataDefaults = function(dataIn, dataOut, layout, fullLayout) {\n    var modules = fullLayout._modules;\n    var basePlotModules = fullLayout._basePlotModules;\n    var cnt = 0;\n    var colorCnt = 0;\n\n    var i, fullTrace, trace;\n\n    fullLayout._transformModules = [];\n\n    function pushModule(fullTrace) {\n        dataOut.push(fullTrace);\n\n        var _module = fullTrace._module;\n        if(!_module) return;\n\n        if(fullTrace.visible === true) Lib.pushUnique(modules, _module);\n        Lib.pushUnique(basePlotModules, fullTrace._module.basePlotModule);\n\n        cnt++;\n\n        // TODO: do we really want color not to increment for explicitly invisible traces?\n        // This logic is weird, but matches previous behavior: traces that you explicitly\n        // set to visible:false do not increment the color, but traces WE determine to be\n        // empty or invalid (and thus set to visible:false) DO increment color.\n        // I kind of think we should just let all traces increment color, visible or not.\n        // see mock: axes-autotype-empty vs. a test of restyling visible: false that\n        // I can't find right now...\n        if(fullTrace._input.visible !== false) colorCnt++;\n    }\n\n    var carpetIndex = {};\n    var carpetDependents = [];\n\n    for(i = 0; i < dataIn.length; i++) {\n        trace = dataIn[i];\n        fullTrace = plots.supplyTraceDefaults(trace, colorCnt, fullLayout, i);\n\n        fullTrace.index = i;\n        fullTrace._input = trace;\n        fullTrace._expandedIndex = cnt;\n\n        if(fullTrace.transforms && fullTrace.transforms.length) {\n            var expandedTraces = applyTransforms(fullTrace, dataOut, layout, fullLayout);\n\n            for(var j = 0; j < expandedTraces.length; j++) {\n                var expandedTrace = expandedTraces[j];\n                var fullExpandedTrace = plots.supplyTraceDefaults(expandedTrace, cnt, fullLayout, i);\n\n                // relink private (i.e. underscore) keys expanded trace to full expanded trace so\n                // that transform supply-default methods can set _ keys for future use.\n                relinkPrivateKeys(fullExpandedTrace, expandedTrace);\n\n                // mutate uid here using parent uid and expanded index\n                // to promote consistency between update calls\n                expandedTrace.uid = fullExpandedTrace.uid = fullTrace.uid + j;\n\n                // add info about parent data trace\n                fullExpandedTrace.index = i;\n                fullExpandedTrace._input = trace;\n                fullExpandedTrace._fullInput = fullTrace;\n\n                // add info about the expanded data\n                fullExpandedTrace._expandedIndex = cnt;\n                fullExpandedTrace._expandedInput = expandedTrace;\n\n                pushModule(fullExpandedTrace);\n            }\n        }\n        else {\n            // add identify refs for consistency with transformed traces\n            fullTrace._fullInput = fullTrace;\n            fullTrace._expandedInput = fullTrace;\n\n            pushModule(fullTrace);\n        }\n\n        if(Registry.traceIs(fullTrace, 'carpetAxis')) {\n            carpetIndex[fullTrace.carpet] = fullTrace;\n        }\n\n        if(Registry.traceIs(fullTrace, 'carpetDependent')) {\n            carpetDependents.push(i);\n        }\n    }\n\n    for(i = 0; i < carpetDependents.length; i++) {\n        fullTrace = dataOut[carpetDependents[i]];\n\n        if(!fullTrace.visible) continue;\n\n        var carpetAxis = carpetIndex[fullTrace.carpet];\n        fullTrace._carpet = carpetAxis;\n\n        if(!carpetAxis || !carpetAxis.visible) {\n            fullTrace.visible = false;\n            continue;\n        }\n\n        fullTrace.xaxis = carpetAxis.xaxis;\n        fullTrace.yaxis = carpetAxis.yaxis;\n    }\n};\n\nplots.supplyAnimationDefaults = function(opts) {\n    opts = opts || {};\n    var i;\n    var optsOut = {};\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(opts || {}, optsOut, animationAttrs, attr, dflt);\n    }\n\n    coerce('mode');\n    coerce('direction');\n    coerce('fromcurrent');\n\n    if(Array.isArray(opts.frame)) {\n        optsOut.frame = [];\n        for(i = 0; i < opts.frame.length; i++) {\n            optsOut.frame[i] = plots.supplyAnimationFrameDefaults(opts.frame[i] || {});\n        }\n    } else {\n        optsOut.frame = plots.supplyAnimationFrameDefaults(opts.frame || {});\n    }\n\n    if(Array.isArray(opts.transition)) {\n        optsOut.transition = [];\n        for(i = 0; i < opts.transition.length; i++) {\n            optsOut.transition[i] = plots.supplyAnimationTransitionDefaults(opts.transition[i] || {});\n        }\n    } else {\n        optsOut.transition = plots.supplyAnimationTransitionDefaults(opts.transition || {});\n    }\n\n    return optsOut;\n};\n\nplots.supplyAnimationFrameDefaults = function(opts) {\n    var optsOut = {};\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(opts || {}, optsOut, animationAttrs.frame, attr, dflt);\n    }\n\n    coerce('duration');\n    coerce('redraw');\n\n    return optsOut;\n};\n\nplots.supplyAnimationTransitionDefaults = function(opts) {\n    var optsOut = {};\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(opts || {}, optsOut, animationAttrs.transition, attr, dflt);\n    }\n\n    coerce('duration');\n    coerce('easing');\n\n    return optsOut;\n};\n\nplots.supplyFrameDefaults = function(frameIn) {\n    var frameOut = {};\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(frameIn, frameOut, frameAttrs, attr, dflt);\n    }\n\n    coerce('group');\n    coerce('name');\n    coerce('traces');\n    coerce('baseframe');\n    coerce('data');\n    coerce('layout');\n\n    return frameOut;\n};\n\nplots.supplyTraceDefaults = function(traceIn, colorIndex, layout, traceInIndex) {\n    var colorway = layout.colorway || Color.defaults;\n    var traceOut = {},\n        defaultColor = colorway[colorIndex % colorway.length];\n\n    var i;\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, plots.attributes, attr, dflt);\n    }\n\n    var visible = coerce('visible');\n\n    coerce('type');\n    coerce('uid');\n    coerce('name', layout._traceWord + ' ' + traceInIndex);\n\n    // we want even invisible traces to make their would-be subplots visible\n    // so coerce the subplot id(s) now no matter what\n    var _module = plots.getModule(traceOut);\n    traceOut._module = _module;\n    if(_module) {\n        var basePlotModule = _module.basePlotModule;\n        var subplotAttr = basePlotModule.attr;\n        if(subplotAttr) {\n            var subplots = layout._subplots;\n            var subplotAttrs = basePlotModule.attributes;\n            var subplotId = '';\n\n            // TODO - currently if we draw an empty gl2d subplot, it draws\n            // nothing then gets stuck and you can't get it back without newPlot\n            // sort this out in the regl refactor? but for now just drop empty gl2d subplots\n            if(basePlotModule.name !== 'gl2d' || visible) {\n                if(Array.isArray(subplotAttr)) {\n                    for(i = 0; i < subplotAttr.length; i++) {\n                        var attri = subplotAttr[i];\n                        var vali = Lib.coerce(traceIn, traceOut, subplotAttrs, attri);\n\n                        if(subplots[attri]) Lib.pushUnique(subplots[attri], vali);\n                        subplotId += vali;\n                    }\n                }\n                else {\n                    subplotId = Lib.coerce(traceIn, traceOut, subplotAttrs, subplotAttr);\n                }\n\n                if(subplots[basePlotModule.name]) {\n                    Lib.pushUnique(subplots[basePlotModule.name], subplotId);\n                }\n            }\n        }\n    }\n\n    if(visible) {\n        coerce('customdata');\n        coerce('ids');\n\n        if(plots.traceIs(traceOut, 'showLegend')) {\n            coerce('showlegend');\n            coerce('legendgroup');\n        }\n\n        Registry.getComponentMethod(\n            'fx',\n            'supplyDefaults'\n        )(traceIn, traceOut, defaultColor, layout);\n\n        // TODO add per-base-plot-module trace defaults step\n\n        if(_module) {\n            _module.supplyDefaults(traceIn, traceOut, defaultColor, layout);\n            Lib.coerceHoverinfo(traceIn, traceOut, layout);\n        }\n\n        if(!plots.traceIs(traceOut, 'noOpacity')) coerce('opacity');\n\n        if(plots.traceIs(traceOut, 'notLegendIsolatable')) {\n            // This clears out the legendonly state for traces like carpet that\n            // cannot be isolated in the legend\n            traceOut.visible = !!traceOut.visible;\n        }\n\n        if(_module && _module.selectPoints) {\n            coerce('selectedpoints');\n        }\n\n        plots.supplyTransformDefaults(traceIn, traceOut, layout);\n    }\n\n    return traceOut;\n};\n\nplots.supplyTransformDefaults = function(traceIn, traceOut, layout) {\n    var globalTransforms = layout._globalTransforms || [];\n    var transformModules = layout._transformModules || [];\n\n    if(!Array.isArray(traceIn.transforms) && globalTransforms.length === 0) return;\n\n    var containerIn = traceIn.transforms || [],\n        transformList = globalTransforms.concat(containerIn),\n        containerOut = traceOut.transforms = [];\n\n    for(var i = 0; i < transformList.length; i++) {\n        var transformIn = transformList[i],\n            type = transformIn.type,\n            _module = transformsRegistry[type],\n            transformOut;\n\n        /*\n         * Supply defaults may run twice. First pass runs all supply defaults steps\n         * and adds the _module to any output transforms.\n         * If transforms exist another pass is run so that any generated traces also\n         * go through supply defaults. This has the effect of rerunning\n         * supplyTransformDefaults. If the transform does not have a `transform`\n         * function it could not have generated any new traces and the second stage\n         * is unnecessary. We detect this case with the following variables.\n         */\n        var isFirstStage = !(transformIn._module && transformIn._module === _module),\n            doLaterStages = _module && typeof _module.transform === 'function';\n\n        if(!_module) Lib.warn('Unrecognized transform type ' + type + '.');\n\n        if(_module && _module.supplyDefaults && (isFirstStage || doLaterStages)) {\n            transformOut = _module.supplyDefaults(transformIn, traceOut, layout, traceIn);\n            transformOut.type = type;\n            transformOut._module = _module;\n\n            Lib.pushUnique(transformModules, _module);\n        }\n        else {\n            transformOut = Lib.extendFlat({}, transformIn);\n        }\n\n        containerOut.push(transformOut);\n    }\n};\n\nfunction applyTransforms(fullTrace, fullData, layout, fullLayout) {\n    var container = fullTrace.transforms,\n        dataOut = [fullTrace];\n\n    for(var i = 0; i < container.length; i++) {\n        var transform = container[i],\n            _module = transformsRegistry[transform.type];\n\n        if(_module && _module.transform) {\n            dataOut = _module.transform(dataOut, {\n                transform: transform,\n                fullTrace: fullTrace,\n                fullData: fullData,\n                layout: layout,\n                fullLayout: fullLayout,\n                transformIndex: i\n            });\n        }\n    }\n\n    return dataOut;\n}\n\nplots.supplyLayoutGlobalDefaults = function(layoutIn, layoutOut, formatObj) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(layoutIn, layoutOut, plots.layoutAttributes, attr, dflt);\n    }\n\n    var globalFont = Lib.coerceFont(coerce, 'font');\n\n    coerce('title', layoutOut._dfltTitle.plot);\n\n    Lib.coerceFont(coerce, 'titlefont', {\n        family: globalFont.family,\n        size: Math.round(globalFont.size * 1.4),\n        color: globalFont.color\n    });\n\n    // Make sure that autosize is defaulted to *true*\n    // on layouts with no set width and height for backward compatibly,\n    // in particular https://plot.ly/javascript/responsive-fluid-layout/\n    //\n    // Before https://github.com/plotly/plotly.js/pull/635 ,\n    // layouts with no set width and height were set temporary set to 'initial'\n    // to pass through the autosize routine\n    //\n    // This behavior is subject to change in v2.\n    coerce('autosize', !(layoutIn.width && layoutIn.height));\n\n    coerce('width');\n    coerce('height');\n    coerce('margin.l');\n    coerce('margin.r');\n    coerce('margin.t');\n    coerce('margin.b');\n    coerce('margin.pad');\n    coerce('margin.autoexpand');\n\n    if(layoutIn.width && layoutIn.height) plots.sanitizeMargins(layoutOut);\n\n    coerce('paper_bgcolor');\n\n    coerce('separators', formatObj.decimal + formatObj.thousands);\n    coerce('hidesources');\n\n    coerce('colorway');\n\n    Registry.getComponentMethod(\n        'calendars',\n        'handleDefaults'\n    )(layoutIn, layoutOut, 'calendar');\n\n    Registry.getComponentMethod(\n        'fx',\n        'supplyLayoutGlobalDefaults'\n    )(layoutIn, layoutOut, coerce);\n};\n\nplots.plotAutoSize = function plotAutoSize(gd, layout, fullLayout) {\n    var context = gd._context || {},\n        frameMargins = context.frameMargins,\n        newWidth,\n        newHeight;\n\n    var isPlotDiv = Lib.isPlotDiv(gd);\n\n    if(isPlotDiv) gd.emit('plotly_autosize');\n\n    // embedded in an iframe - just take the full iframe size\n    // if we get to this point, with no aspect ratio restrictions\n    if(context.fillFrame) {\n        newWidth = window.innerWidth;\n        newHeight = window.innerHeight;\n\n        // somehow we get a few extra px height sometimes...\n        // just hide it\n        document.body.style.overflow = 'hidden';\n    }\n    else if(isNumeric(frameMargins) && frameMargins > 0) {\n        var reservedMargins = calculateReservedMargins(gd._boundingBoxMargins),\n            reservedWidth = reservedMargins.left + reservedMargins.right,\n            reservedHeight = reservedMargins.bottom + reservedMargins.top,\n            factor = 1 - 2 * frameMargins;\n\n        var gdBB = fullLayout._container && fullLayout._container.node ?\n            fullLayout._container.node().getBoundingClientRect() : {\n                width: fullLayout.width,\n                height: fullLayout.height\n            };\n\n        newWidth = Math.round(factor * (gdBB.width - reservedWidth));\n        newHeight = Math.round(factor * (gdBB.height - reservedHeight));\n    }\n    else {\n        // plotly.js - let the developers do what they want, either\n        // provide height and width for the container div,\n        // specify size in layout, or take the defaults,\n        // but don't enforce any ratio restrictions\n        var computedStyle = isPlotDiv ? window.getComputedStyle(gd) : {};\n\n        newWidth = parseFloat(computedStyle.width) || fullLayout.width;\n        newHeight = parseFloat(computedStyle.height) || fullLayout.height;\n    }\n\n    var minWidth = plots.layoutAttributes.width.min,\n        minHeight = plots.layoutAttributes.height.min;\n    if(newWidth < minWidth) newWidth = minWidth;\n    if(newHeight < minHeight) newHeight = minHeight;\n\n    var widthHasChanged = !layout.width &&\n            (Math.abs(fullLayout.width - newWidth) > 1),\n        heightHasChanged = !layout.height &&\n            (Math.abs(fullLayout.height - newHeight) > 1);\n\n    if(heightHasChanged || widthHasChanged) {\n        if(widthHasChanged) fullLayout.width = newWidth;\n        if(heightHasChanged) fullLayout.height = newHeight;\n    }\n\n    // cache initial autosize value, used in relayout when\n    // width or height values are set to null\n    if(!gd._initialAutoSize) {\n        gd._initialAutoSize = { width: newWidth, height: newHeight };\n    }\n\n    plots.sanitizeMargins(fullLayout);\n};\n\n/**\n * Reduce all reserved margin objects to a single required margin reservation.\n *\n * @param {Object} margins\n * @returns {{left: number, right: number, bottom: number, top: number}}\n */\nfunction calculateReservedMargins(margins) {\n    var resultingMargin = {left: 0, right: 0, bottom: 0, top: 0},\n        marginName;\n\n    if(margins) {\n        for(marginName in margins) {\n            if(margins.hasOwnProperty(marginName)) {\n                resultingMargin.left += margins[marginName].left || 0;\n                resultingMargin.right += margins[marginName].right || 0;\n                resultingMargin.bottom += margins[marginName].bottom || 0;\n                resultingMargin.top += margins[marginName].top || 0;\n            }\n        }\n    }\n    return resultingMargin;\n}\n\nplots.supplyLayoutModuleDefaults = function(layoutIn, layoutOut, fullData, transitionData) {\n    var componentsRegistry = Registry.componentsRegistry;\n    var basePlotModules = layoutOut._basePlotModules;\n    var component, i, _module;\n\n    var Cartesian = Registry.subplotsRegistry.cartesian;\n\n    // check if any components need to add more base plot modules\n    // that weren't captured by traces\n    for(component in componentsRegistry) {\n        _module = componentsRegistry[component];\n\n        if(_module.includeBasePlot) {\n            _module.includeBasePlot(layoutIn, layoutOut);\n        }\n    }\n\n    // make sure we *at least* have some cartesian axes\n    if(!basePlotModules.length) {\n        basePlotModules.push(Cartesian);\n    }\n\n    // ensure all cartesian axes have at least one subplot\n    if(layoutOut._has('cartesian')) {\n        Cartesian.finalizeSubplots(layoutIn, layoutOut);\n    }\n\n    // base plot module layout defaults\n    for(i = 0; i < basePlotModules.length; i++) {\n        _module = basePlotModules[i];\n\n        // e.g. pie does not have a layout-defaults step\n        if(_module.supplyLayoutDefaults) {\n            _module.supplyLayoutDefaults(layoutIn, layoutOut, fullData);\n        }\n    }\n\n    // trace module layout defaults\n    var modules = layoutOut._modules;\n    for(i = 0; i < modules.length; i++) {\n        _module = modules[i];\n\n        if(_module.supplyLayoutDefaults) {\n            _module.supplyLayoutDefaults(layoutIn, layoutOut, fullData);\n        }\n    }\n\n    // transform module layout defaults\n    var transformModules = layoutOut._transformModules;\n    for(i = 0; i < transformModules.length; i++) {\n        _module = transformModules[i];\n\n        if(_module.supplyLayoutDefaults) {\n            _module.supplyLayoutDefaults(layoutIn, layoutOut, fullData, transitionData);\n        }\n    }\n\n    for(component in componentsRegistry) {\n        _module = componentsRegistry[component];\n\n        if(_module.supplyLayoutDefaults) {\n            _module.supplyLayoutDefaults(layoutIn, layoutOut, fullData);\n        }\n    }\n};\n\n// Remove all plotly attributes from a div so it can be replotted fresh\n// TODO: these really need to be encapsulated into a much smaller set...\nplots.purge = function(gd) {\n    // note: we DO NOT remove _context because it doesn't change when we insert\n    // a new plot, and may have been set outside of our scope.\n\n    var fullLayout = gd._fullLayout || {};\n    if(fullLayout._glcontainer !== undefined) {\n        fullLayout._glcontainer.selectAll('.gl-canvas').remove();\n        fullLayout._glcontainer.remove();\n        fullLayout._glcanvas = null;\n    }\n    if(fullLayout._geocontainer !== undefined) fullLayout._geocontainer.remove();\n\n    // remove modebar\n    if(fullLayout._modeBar) fullLayout._modeBar.destroy();\n\n    if(gd._transitionData) {\n        // Ensure any dangling callbacks are simply dropped if the plot is purged.\n        // This is more or less only actually important for testing.\n        if(gd._transitionData._interruptCallbacks) {\n            gd._transitionData._interruptCallbacks.length = 0;\n        }\n\n        if(gd._transitionData._animationRaf) {\n            window.cancelAnimationFrame(gd._transitionData._animationRaf);\n        }\n    }\n\n    // remove any planned throttles\n    Lib.clearThrottle();\n\n    // data and layout\n    delete gd.data;\n    delete gd.layout;\n    delete gd._fullData;\n    delete gd._fullLayout;\n    delete gd.calcdata;\n    delete gd.framework;\n    delete gd.empty;\n\n    delete gd.fid;\n\n    delete gd.undoqueue; // action queue\n    delete gd.undonum;\n    delete gd.autoplay; // are we doing an action that doesn't go in undo queue?\n    delete gd.changed;\n\n    // these get recreated on Plotly.plot anyway, but just to be safe\n    // (and to have a record of them...)\n    delete gd._promises;\n    delete gd._redrawTimer;\n    delete gd.firstscatter;\n    delete gd._hmlumcount;\n    delete gd._hmpixcount;\n    delete gd._transitionData;\n    delete gd._transitioning;\n    delete gd._initialAutoSize;\n    delete gd._transitioningWithDuration;\n\n    // created during certain events, that *should* clean them up\n    // themselves, but may not if there was an error\n    delete gd._dragging;\n    delete gd._dragged;\n    delete gd._hoverdata;\n    delete gd._snapshotInProgress;\n    delete gd._editing;\n    delete gd._replotPending;\n    delete gd._mouseDownTime;\n    delete gd._legendMouseDownTime;\n\n    // remove all event listeners\n    if(gd.removeAllListeners) gd.removeAllListeners();\n};\n\nplots.style = function(gd) {\n    var _modules = gd._fullLayout._modules;\n    var styleModules = [];\n    var i;\n\n    // some trace modules reuse the same style method,\n    // make sure to not unnecessary call them multiple times.\n\n    for(i = 0; i < _modules.length; i++) {\n        var _module = _modules[i];\n        if(_module.style) {\n            Lib.pushUnique(styleModules, _module.style);\n        }\n    }\n\n    for(i = 0; i < styleModules.length; i++) {\n        styleModules[i](gd);\n    }\n};\n\nplots.sanitizeMargins = function(fullLayout) {\n    // polar doesn't do margins...\n    if(!fullLayout || !fullLayout.margin) return;\n\n    var width = fullLayout.width,\n        height = fullLayout.height,\n        margin = fullLayout.margin,\n        plotWidth = width - (margin.l + margin.r),\n        plotHeight = height - (margin.t + margin.b),\n        correction;\n\n    // if margin.l + margin.r = 0 then plotWidth > 0\n    // as width >= 10 by supplyDefaults\n    // similarly for margin.t + margin.b\n\n    if(plotWidth < 0) {\n        correction = (width - 1) / (margin.l + margin.r);\n        margin.l = Math.floor(correction * margin.l);\n        margin.r = Math.floor(correction * margin.r);\n    }\n\n    if(plotHeight < 0) {\n        correction = (height - 1) / (margin.t + margin.b);\n        margin.t = Math.floor(correction * margin.t);\n        margin.b = Math.floor(correction * margin.b);\n    }\n};\n\n// called by components to see if we need to\n// expand the margins to show them\n// o is {x,l,r,y,t,b} where x and y are plot fractions,\n// the rest are pixels in each direction\n// or leave o out to delete this entry (like if it's hidden)\nplots.autoMargin = function(gd, id, o) {\n    var fullLayout = gd._fullLayout;\n\n    if(!fullLayout._pushmargin) fullLayout._pushmargin = {};\n\n    if(fullLayout.margin.autoexpand !== false) {\n        if(!o) delete fullLayout._pushmargin[id];\n        else {\n            var pad = o.pad === undefined ? 12 : o.pad;\n\n            // if the item is too big, just give it enough automargin to\n            // make sure you can still grab it and bring it back\n            if(o.l + o.r > fullLayout.width * 0.5) o.l = o.r = 0;\n            if(o.b + o.t > fullLayout.height * 0.5) o.b = o.t = 0;\n\n            fullLayout._pushmargin[id] = {\n                l: {val: o.x, size: o.l + pad},\n                r: {val: o.x, size: o.r + pad},\n                b: {val: o.y, size: o.b + pad},\n                t: {val: o.y, size: o.t + pad}\n            };\n        }\n\n        if(!fullLayout._replotting) plots.doAutoMargin(gd);\n    }\n};\n\nplots.doAutoMargin = function(gd) {\n    var fullLayout = gd._fullLayout;\n    if(!fullLayout._size) fullLayout._size = {};\n    if(!fullLayout._pushmargin) fullLayout._pushmargin = {};\n\n    var gs = fullLayout._size,\n        oldmargins = JSON.stringify(gs);\n\n    // adjust margins for outside components\n    // fullLayout.margin is the requested margin,\n    // fullLayout._size has margins and plotsize after adjustment\n    var ml = Math.max(fullLayout.margin.l || 0, 0),\n        mr = Math.max(fullLayout.margin.r || 0, 0),\n        mt = Math.max(fullLayout.margin.t || 0, 0),\n        mb = Math.max(fullLayout.margin.b || 0, 0),\n        pm = fullLayout._pushmargin;\n\n    if(fullLayout.margin.autoexpand !== false) {\n\n        // fill in the requested margins\n        pm.base = {\n            l: {val: 0, size: ml},\n            r: {val: 1, size: mr},\n            t: {val: 1, size: mt},\n            b: {val: 0, size: mb}\n        };\n\n        // now cycle through all the combinations of l and r\n        // (and t and b) to find the required margins\n\n        for(var k1 in pm) {\n\n            var pushleft = pm[k1].l || {},\n                pushbottom = pm[k1].b || {},\n                fl = pushleft.val,\n                pl = pushleft.size,\n                fb = pushbottom.val,\n                pb = pushbottom.size;\n\n            for(var k2 in pm) {\n                if(isNumeric(pl) && pm[k2].r) {\n                    var fr = pm[k2].r.val,\n                        pr = pm[k2].r.size;\n\n                    if(fr > fl) {\n                        var newl = (pl * fr +\n                                (pr - fullLayout.width) * fl) / (fr - fl),\n                            newr = (pr * (1 - fl) +\n                                (pl - fullLayout.width) * (1 - fr)) / (fr - fl);\n                        if(newl >= 0 && newr >= 0 && newl + newr > ml + mr) {\n                            ml = newl;\n                            mr = newr;\n                        }\n                    }\n                }\n\n                if(isNumeric(pb) && pm[k2].t) {\n                    var ft = pm[k2].t.val,\n                        pt = pm[k2].t.size;\n\n                    if(ft > fb) {\n                        var newb = (pb * ft +\n                                (pt - fullLayout.height) * fb) / (ft - fb),\n                            newt = (pt * (1 - fb) +\n                                (pb - fullLayout.height) * (1 - ft)) / (ft - fb);\n                        if(newb >= 0 && newt >= 0 && newb + newt > mb + mt) {\n                            mb = newb;\n                            mt = newt;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    gs.l = Math.round(ml);\n    gs.r = Math.round(mr);\n    gs.t = Math.round(mt);\n    gs.b = Math.round(mb);\n    gs.p = Math.round(fullLayout.margin.pad);\n    gs.w = Math.round(fullLayout.width) - gs.l - gs.r;\n    gs.h = Math.round(fullLayout.height) - gs.t - gs.b;\n\n    // if things changed and we're not already redrawing, trigger a redraw\n    if(!fullLayout._replotting && oldmargins !== '{}' &&\n            oldmargins !== JSON.stringify(fullLayout._size)) {\n        return Plotly.plot(gd);\n    }\n};\n\n/**\n * JSONify the graph data and layout\n *\n * This function needs to recurse because some src can be inside\n * sub-objects.\n *\n * It also strips out functions and private (starts with _) elements.\n * Therefore, we can add temporary things to data and layout that don't\n * get saved.\n *\n * @param gd The graphDiv\n * @param {Boolean} dataonly If true, don't return layout.\n * @param {'keepref'|'keepdata'|'keepall'} [mode='keepref'] Filter what's kept\n *      keepref: remove data for which there's a src present\n *          eg if there's xsrc present (and xsrc is well-formed,\n *          ie has : and some chars before it), strip out x\n *      keepdata: remove all src tags, don't remove the data itself\n *      keepall: keep data and src\n * @param {String} output If you specify 'object', the result will not be stringified\n * @param {Boolean} useDefaults If truthy, use _fullLayout and _fullData\n * @returns {Object|String}\n */\nplots.graphJson = function(gd, dataonly, mode, output, useDefaults) {\n    // if the defaults aren't supplied yet, we need to do that...\n    if((useDefaults && dataonly && !gd._fullData) ||\n            (useDefaults && !dataonly && !gd._fullLayout)) {\n        plots.supplyDefaults(gd);\n    }\n\n    var data = (useDefaults) ? gd._fullData : gd.data,\n        layout = (useDefaults) ? gd._fullLayout : gd.layout,\n        frames = (gd._transitionData || {})._frames;\n\n    function stripObj(d) {\n        if(typeof d === 'function') {\n            return null;\n        }\n        if(Lib.isPlainObject(d)) {\n            var o = {}, v, src;\n            for(v in d) {\n                // remove private elements and functions\n                // _ is for private, [ is a mistake ie [object Object]\n                if(typeof d[v] === 'function' ||\n                        ['_', '['].indexOf(v.charAt(0)) !== -1) {\n                    continue;\n                }\n\n                // look for src/data matches and remove the appropriate one\n                if(mode === 'keepdata') {\n                    // keepdata: remove all ...src tags\n                    if(v.substr(v.length - 3) === 'src') {\n                        continue;\n                    }\n                }\n                else if(mode === 'keepstream') {\n                    // keep sourced data if it's being streamed.\n                    // similar to keepref, but if the 'stream' object exists\n                    // in a trace, we will keep the data array.\n                    src = d[v + 'src'];\n                    if(typeof src === 'string' && src.indexOf(':') > 0) {\n                        if(!Lib.isPlainObject(d.stream)) {\n                            continue;\n                        }\n                    }\n                }\n                else if(mode !== 'keepall') {\n                    // keepref: remove sourced data but only\n                    // if the source tag is well-formed\n                    src = d[v + 'src'];\n                    if(typeof src === 'string' && src.indexOf(':') > 0) {\n                        continue;\n                    }\n                }\n\n                // OK, we're including this... recurse into it\n                o[v] = stripObj(d[v]);\n            }\n            return o;\n        }\n\n        if(Array.isArray(d)) {\n            return d.map(stripObj);\n        }\n\n        // convert native dates to date strings...\n        // mostly for external users exporting to plotly\n        if(Lib.isJSDate(d)) return Lib.ms2DateTimeLocal(+d);\n\n        return d;\n    }\n\n    var obj = {\n        data: (data || []).map(function(v) {\n            var d = stripObj(v);\n            // fit has some little arrays in it that don't contain data,\n            // just fit params and meta\n            if(dataonly) { delete d.fit; }\n            return d;\n        })\n    };\n    if(!dataonly) { obj.layout = stripObj(layout); }\n\n    if(gd.framework && gd.framework.isPolar) obj = gd.framework.getConfig();\n\n    if(frames) obj.frames = stripObj(frames);\n\n    return (output === 'object') ? obj : JSON.stringify(obj);\n};\n\n/**\n * Modify a keyframe using a list of operations:\n *\n * @param {array of objects} operations\n *      Sequence of operations to be performed on the keyframes\n */\nplots.modifyFrames = function(gd, operations) {\n    var i, op, frame;\n    var _frames = gd._transitionData._frames;\n    var _hash = gd._transitionData._frameHash;\n\n    for(i = 0; i < operations.length; i++) {\n        op = operations[i];\n\n        switch(op.type) {\n            // No reason this couldn't exist, but is currently unused/untested:\n            /* case 'rename':\n                frame = _frames[op.index];\n                delete _hash[frame.name];\n                _hash[op.name] = frame;\n                frame.name = op.name;\n                break;*/\n            case 'replace':\n                frame = op.value;\n                var oldName = (_frames[op.index] || {}).name;\n                var newName = frame.name;\n                _frames[op.index] = _hash[newName] = frame;\n\n                if(newName !== oldName) {\n                    // If name has changed in addition to replacement, then update\n                    // the lookup table:\n                    delete _hash[oldName];\n                    _hash[newName] = frame;\n                }\n\n                break;\n            case 'insert':\n                frame = op.value;\n                _hash[frame.name] = frame;\n                _frames.splice(op.index, 0, frame);\n                break;\n            case 'delete':\n                frame = _frames[op.index];\n                delete _hash[frame.name];\n                _frames.splice(op.index, 1);\n                break;\n        }\n    }\n\n    return Promise.resolve();\n};\n\n/*\n * Compute a keyframe. Merge a keyframe into its base frame(s) and\n * expand properties.\n *\n * @param {object} frameLookup\n *      An object containing frames keyed by name (i.e. gd._transitionData._frameHash)\n * @param {string} frame\n *      The name of the keyframe to be computed\n *\n * Returns: a new object with the merged content\n */\nplots.computeFrame = function(gd, frameName) {\n    var frameLookup = gd._transitionData._frameHash;\n    var i, traceIndices, traceIndex, destIndex;\n\n    // Null or undefined will fail on .toString(). We'll allow numbers since we\n    // make it clear frames must be given string names, but we'll allow numbers\n    // here since they're otherwise fine for looking up frames as long as they're\n    // properly cast to strings. We really just want to ensure here that this\n    // 1) doesn't fail, and\n    // 2) doens't give an incorrect answer (which String(frameName) would)\n    if(!frameName) {\n        throw new Error('computeFrame must be given a string frame name');\n    }\n\n    var framePtr = frameLookup[frameName.toString()];\n\n    // Return false if the name is invalid:\n    if(!framePtr) {\n        return false;\n    }\n\n    var frameStack = [framePtr];\n    var frameNameStack = [framePtr.name];\n\n    // Follow frame pointers:\n    while(framePtr.baseframe && (framePtr = frameLookup[framePtr.baseframe.toString()])) {\n        // Avoid infinite loops:\n        if(frameNameStack.indexOf(framePtr.name) !== -1) break;\n\n        frameStack.push(framePtr);\n        frameNameStack.push(framePtr.name);\n    }\n\n    // A new object for the merged result:\n    var result = {};\n\n    // Merge, starting with the last and ending with the desired frame:\n    while((framePtr = frameStack.pop())) {\n        if(framePtr.layout) {\n            result.layout = plots.extendLayout(result.layout, framePtr.layout);\n        }\n\n        if(framePtr.data) {\n            if(!result.data) {\n                result.data = [];\n            }\n            traceIndices = framePtr.traces;\n\n            if(!traceIndices) {\n                // If not defined, assume serial order starting at zero\n                traceIndices = [];\n                for(i = 0; i < framePtr.data.length; i++) {\n                    traceIndices[i] = i;\n                }\n            }\n\n            if(!result.traces) {\n                result.traces = [];\n            }\n\n            for(i = 0; i < framePtr.data.length; i++) {\n                // Loop through this frames data, find out where it should go,\n                // and merge it!\n                traceIndex = traceIndices[i];\n                if(traceIndex === undefined || traceIndex === null) {\n                    continue;\n                }\n\n                destIndex = result.traces.indexOf(traceIndex);\n                if(destIndex === -1) {\n                    destIndex = result.data.length;\n                    result.traces[destIndex] = traceIndex;\n                }\n\n                result.data[destIndex] = plots.extendTrace(result.data[destIndex], framePtr.data[i]);\n            }\n        }\n    }\n\n    return result;\n};\n\n/*\n * Recompute the lookup table that maps frame name -> frame object. addFrames/\n * deleteFrames already manages this data one at a time, so the only time this\n * is necessary is if you poke around manually in `gd._transitionData._frames`\n * and create and haven't updated the lookup table.\n */\nplots.recomputeFrameHash = function(gd) {\n    var hash = gd._transitionData._frameHash = {};\n    var frames = gd._transitionData._frames;\n    for(var i = 0; i < frames.length; i++) {\n        var frame = frames[i];\n        if(frame && frame.name) {\n            hash[frame.name] = frame;\n        }\n    }\n};\n\n/**\n * Extend an object, treating container arrays very differently by extracting\n * their contents and merging them separately.\n *\n * This exists so that we can extendDeepNoArrays and avoid stepping into data\n * arrays without knowledge of the plot schema, but so that we may also manually\n * recurse into known container arrays, such as transforms.\n *\n * See extendTrace and extendLayout below for usage.\n */\nplots.extendObjectWithContainers = function(dest, src, containerPaths) {\n    var containerProp, containerVal, i, j, srcProp, destProp, srcContainer, destContainer;\n    var copy = Lib.extendDeepNoArrays({}, src || {});\n    var expandedObj = Lib.expandObjectPaths(copy);\n    var containerObj = {};\n\n    // Step through and extract any container properties. Otherwise extendDeepNoArrays\n    // will clobber any existing properties with an empty array and then supplyDefaults\n    // will reset everything to defaults.\n    if(containerPaths && containerPaths.length) {\n        for(i = 0; i < containerPaths.length; i++) {\n            containerProp = Lib.nestedProperty(expandedObj, containerPaths[i]);\n            containerVal = containerProp.get();\n\n            if(containerVal === undefined) {\n                Lib.nestedProperty(containerObj, containerPaths[i]).set(null);\n            }\n            else {\n                containerProp.set(null);\n                Lib.nestedProperty(containerObj, containerPaths[i]).set(containerVal);\n            }\n        }\n    }\n\n    dest = Lib.extendDeepNoArrays(dest || {}, expandedObj);\n\n    if(containerPaths && containerPaths.length) {\n        for(i = 0; i < containerPaths.length; i++) {\n            srcProp = Lib.nestedProperty(containerObj, containerPaths[i]);\n            srcContainer = srcProp.get();\n\n            if(!srcContainer) continue;\n\n            destProp = Lib.nestedProperty(dest, containerPaths[i]);\n            destContainer = destProp.get();\n\n            if(!Array.isArray(destContainer)) {\n                destContainer = [];\n                destProp.set(destContainer);\n            }\n\n            for(j = 0; j < srcContainer.length; j++) {\n                var srcObj = srcContainer[j];\n\n                if(srcObj === null) destContainer[j] = null;\n                else {\n                    destContainer[j] = plots.extendObjectWithContainers(destContainer[j], srcObj);\n                }\n            }\n\n            destProp.set(destContainer);\n        }\n    }\n\n    return dest;\n};\n\nplots.dataArrayContainers = ['transforms'];\nplots.layoutArrayContainers = Registry.layoutArrayContainers;\n\n/*\n * Extend a trace definition. This method:\n *\n *  1. directly transfers any array references\n *  2. manually recurses into container arrays like transforms\n *\n * The result is the original object reference with the new contents merged in.\n */\nplots.extendTrace = function(destTrace, srcTrace) {\n    return plots.extendObjectWithContainers(destTrace, srcTrace, plots.dataArrayContainers);\n};\n\n/*\n * Extend a layout definition. This method:\n *\n *  1. directly transfers any array references (not critically important for\n *     layout since there aren't really data arrays)\n *  2. manually recurses into container arrays like annotations\n *\n * The result is the original object reference with the new contents merged in.\n */\nplots.extendLayout = function(destLayout, srcLayout) {\n    return plots.extendObjectWithContainers(destLayout, srcLayout, plots.layoutArrayContainers);\n};\n\n/**\n * Transition to a set of new data and layout properties\n *\n * @param {DOM element} gd\n *      the DOM element of the graph container div\n * @param {Object[]} data\n *      an array of data objects following the normal Plotly data definition format\n * @param {Object} layout\n *      a layout object, following normal Plotly layout format\n * @param {Number[]} traces\n *      indices of the corresponding traces specified in `data`\n * @param {Object} frameOpts\n *      options for the frame (i.e. whether to redraw post-transition)\n * @param {Object} transitionOpts\n *      options for the transition\n */\nplots.transition = function(gd, data, layout, traces, frameOpts, transitionOpts) {\n    var i, traceIdx;\n\n    var dataLength = Array.isArray(data) ? data.length : 0;\n    var traceIndices = traces.slice(0, dataLength);\n\n    var transitionedTraces = [];\n\n    function prepareTransitions() {\n        var i;\n\n        for(i = 0; i < traceIndices.length; i++) {\n            var traceIdx = traceIndices[i];\n            var trace = gd._fullData[traceIdx];\n            var module = trace._module;\n\n            // There's nothing to do if this module is not defined:\n            if(!module) continue;\n\n            // Don't register the trace as transitioned if it doens't know what to do.\n            // If it *is* registered, it will receive a callback that it's responsible\n            // for calling in order to register the transition as having completed.\n            if(module.animatable) {\n                transitionedTraces.push(traceIdx);\n            }\n\n            gd.data[traceIndices[i]] = plots.extendTrace(gd.data[traceIndices[i]], data[i]);\n        }\n\n        // Follow the same procedure. Clone it so we don't mangle the input, then\n        // expand any object paths so we can merge deep into gd.layout:\n        var layoutUpdate = Lib.expandObjectPaths(Lib.extendDeepNoArrays({}, layout));\n\n        // Before merging though, we need to modify the incoming layout. We only\n        // know how to *transition* layout ranges, so it's imperative that a new\n        // range not be sent to the layout before the transition has started. So\n        // we must remove the things we can transition:\n        var axisAttrRe = /^[xy]axis[0-9]*$/;\n        for(var attr in layoutUpdate) {\n            if(!axisAttrRe.test(attr)) continue;\n            delete layoutUpdate[attr].range;\n        }\n\n        plots.extendLayout(gd.layout, layoutUpdate);\n\n        // Supply defaults after applying the incoming properties. Note that any attempt\n        // to simplify this step and reduce the amount of work resulted in the reconstruction\n        // of essentially the whole supplyDefaults step, so that it seems sensible to just use\n        // supplyDefaults even though it's heavier than would otherwise be desired for\n        // transitions:\n\n        // first delete calcdata so supplyDefaults knows a calc step is coming\n        delete gd.calcdata;\n\n        plots.supplyDefaults(gd);\n\n        plots.doCalcdata(gd);\n\n        ErrorBars.calc(gd);\n\n        return Promise.resolve();\n    }\n\n    function executeCallbacks(list) {\n        var p = Promise.resolve();\n        if(!list) return p;\n        while(list.length) {\n            p = p.then((list.shift()));\n        }\n        return p;\n    }\n\n    function flushCallbacks(list) {\n        if(!list) return;\n        while(list.length) {\n            list.shift();\n        }\n    }\n\n    var aborted = false;\n\n    function executeTransitions() {\n\n        gd.emit('plotly_transitioning', []);\n\n        return new Promise(function(resolve) {\n            // This flag is used to disabled things like autorange:\n            gd._transitioning = true;\n\n            // When instantaneous updates are coming through quickly, it's too much to simply disable\n            // all interaction, so store this flag so we can disambiguate whether mouse interactions\n            // should be fully disabled or not:\n            if(transitionOpts.duration > 0) {\n                gd._transitioningWithDuration = true;\n            }\n\n\n            // If another transition is triggered, this callback will be executed simply because it's\n            // in the interruptCallbacks queue. If this transition completes, it will instead flush\n            // that queue and forget about this callback.\n            gd._transitionData._interruptCallbacks.push(function() {\n                aborted = true;\n            });\n\n            if(frameOpts.redraw) {\n                gd._transitionData._interruptCallbacks.push(function() {\n                    return Plotly.redraw(gd);\n                });\n            }\n\n            // Emit this and make sure it happens last:\n            gd._transitionData._interruptCallbacks.push(function() {\n                gd.emit('plotly_transitioninterrupted', []);\n            });\n\n            // Construct callbacks that are executed on transition end. This ensures the d3 transitions\n            // are *complete* before anything else is done.\n            var numCallbacks = 0;\n            var numCompleted = 0;\n            function makeCallback() {\n                numCallbacks++;\n                return function() {\n                    numCompleted++;\n                    // When all are complete, perform a redraw:\n                    if(!aborted && numCompleted === numCallbacks) {\n                        completeTransition(resolve);\n                    }\n                };\n            }\n\n            var traceTransitionOpts;\n            var j;\n            var basePlotModules = gd._fullLayout._basePlotModules;\n            var hasAxisTransition = false;\n\n            if(layout) {\n                for(j = 0; j < basePlotModules.length; j++) {\n                    if(basePlotModules[j].transitionAxes) {\n                        var newLayout = Lib.expandObjectPaths(layout);\n                        hasAxisTransition = basePlotModules[j].transitionAxes(gd, newLayout, transitionOpts, makeCallback) || hasAxisTransition;\n                    }\n                }\n            }\n\n            // Here handle the exception that we refuse to animate scales and axes at the same\n            // time. In other words, if there's an axis transition, then set the data transition\n            // to instantaneous.\n            if(hasAxisTransition) {\n                traceTransitionOpts = Lib.extendFlat({}, transitionOpts);\n                traceTransitionOpts.duration = 0;\n            } else {\n                traceTransitionOpts = transitionOpts;\n            }\n\n            for(j = 0; j < basePlotModules.length; j++) {\n                // Note that we pass a callback to *create* the callback that must be invoked on completion.\n                // This is since not all traces know about transitions, so it greatly simplifies matters if\n                // the trace is responsible for creating a callback, if needed, and then executing it when\n                // the time is right.\n                basePlotModules[j].plot(gd, transitionedTraces, traceTransitionOpts, makeCallback);\n            }\n\n            // If nothing else creates a callback, then this will trigger the completion in the next tick:\n            setTimeout(makeCallback());\n\n        });\n    }\n\n    function completeTransition(callback) {\n        // This a simple workaround for tests which purge the graph before animations\n        // have completed. That's not a very common case, so this is the simplest\n        // fix.\n        if(!gd._transitionData) return;\n\n        flushCallbacks(gd._transitionData._interruptCallbacks);\n\n        return Promise.resolve().then(function() {\n            if(frameOpts.redraw) {\n                return Plotly.redraw(gd);\n            }\n        }).then(function() {\n            // Set transitioning false again once the redraw has occurred. This is used, for example,\n            // to prevent the trailing redraw from autoranging:\n            gd._transitioning = false;\n            gd._transitioningWithDuration = false;\n\n            gd.emit('plotly_transitioned', []);\n        }).then(callback);\n    }\n\n    function interruptPreviousTransitions() {\n        // Fail-safe against purged plot:\n        if(!gd._transitionData) return;\n\n        // If a transition is interrupted, set this to false. At the moment, the only thing that would\n        // interrupt a transition is another transition, so that it will momentarily be set to true\n        // again, but this determines whether autorange or dragbox work, so it's for the sake of\n        // cleanliness:\n        gd._transitioning = false;\n\n        return executeCallbacks(gd._transitionData._interruptCallbacks);\n    }\n\n    for(i = 0; i < traceIndices.length; i++) {\n        traceIdx = traceIndices[i];\n        var contFull = gd._fullData[traceIdx];\n        var module = contFull._module;\n\n        if(!module) continue;\n\n        if(!module.animatable) {\n            var thisUpdate = {};\n\n            for(var ai in data[i]) {\n                thisUpdate[ai] = [data[i][ai]];\n            }\n        }\n    }\n\n    var seq = [plots.previousPromises, interruptPreviousTransitions, prepareTransitions, plots.rehover, executeTransitions];\n\n    var transitionStarting = Lib.syncOrAsync(seq, gd);\n\n    if(!transitionStarting || !transitionStarting.then) {\n        transitionStarting = Promise.resolve();\n    }\n\n    return transitionStarting.then(function() {\n        return gd;\n    });\n};\n\nplots.doCalcdata = function(gd, traces) {\n    var axList = axisIDs.list(gd),\n        fullData = gd._fullData,\n        fullLayout = gd._fullLayout;\n\n    var trace, _module, i, j;\n\n    // XXX: Is this correct? Needs a closer look so that *some* traces can be recomputed without\n    // *all* needing doCalcdata:\n    var calcdata = new Array(fullData.length);\n    var oldCalcdata = (gd.calcdata || []).slice(0);\n    gd.calcdata = calcdata;\n\n    // extra helper variables\n    // firstscatter: fill-to-next on the first trace goes to zero\n    gd.firstscatter = true;\n\n    // how many box/violins plots do we have (in case they're grouped)\n    fullLayout._numBoxes = 0;\n    fullLayout._numViolins = 0;\n\n    // initialize violin per-scale-group stats container\n    fullLayout._violinScaleGroupStats = {};\n\n    // for calculating avg luminosity of heatmaps\n    gd._hmpixcount = 0;\n    gd._hmlumcount = 0;\n\n    // for sharing colors across pies (and for legend)\n    fullLayout._piecolormap = {};\n    fullLayout._piecolorway = null;\n    fullLayout._piedefaultcolorcount = 0;\n\n    // If traces were specified and this trace was not included,\n    // then transfer it over from the old calcdata:\n    for(i = 0; i < fullData.length; i++) {\n        if(Array.isArray(traces) && traces.indexOf(i) === -1) {\n            calcdata[i] = oldCalcdata[i];\n            continue;\n        }\n    }\n\n    // find array attributes in trace\n    for(i = 0; i < fullData.length; i++) {\n        trace = fullData[i];\n        trace._arrayAttrs = PlotSchema.findArrayAttributes(trace);\n    }\n\n    // add polar axes to axis list\n    var polarIds = fullLayout._subplots.polar || [];\n    for(i = 0; i < polarIds.length; i++) {\n        axList.push(\n            fullLayout[polarIds[i]].radialaxis,\n            fullLayout[polarIds[i]].angularaxis\n        );\n    }\n\n    initCategories(axList);\n\n    var hasCalcTransform = false;\n\n    // transform loop\n    for(i = 0; i < fullData.length; i++) {\n        trace = fullData[i];\n\n        if(trace.visible === true && trace.transforms) {\n            _module = trace._module;\n\n            // we need one round of trace module calc before\n            // the calc transform to 'fill in' the categories list\n            // used for example in the data-to-coordinate method\n            if(_module && _module.calc) _module.calc(gd, trace);\n\n            for(j = 0; j < trace.transforms.length; j++) {\n                var transform = trace.transforms[j];\n\n                _module = transformsRegistry[transform.type];\n                if(_module && _module.calcTransform) {\n                    trace._hasCalcTransform = true;\n                    hasCalcTransform = true;\n                    _module.calcTransform(gd, trace, transform);\n                }\n            }\n        }\n    }\n\n    // clear stuff that should recomputed in 'regular' loop\n    if(hasCalcTransform) {\n        for(i = 0; i < axList.length; i++) {\n            axList[i]._min = [];\n            axList[i]._max = [];\n            axList[i]._categories = [];\n            axList[i]._categoriesMap = {};\n        }\n        initCategories(axList);\n    }\n\n    // 'regular' loop\n    for(i = 0; i < fullData.length; i++) {\n        var cd = [];\n\n        trace = fullData[i];\n\n        if(trace.visible === true) {\n            _module = trace._module;\n\n            // keep ref of index-to-points map object of the *last* enabled transform,\n            // this index-to-points map object is required to determine the calcdata indices\n            // that correspond to input indices (e.g. from 'selectedpoints')\n            var transforms = trace.transforms || [];\n            for(j = transforms.length - 1; j >= 0; j--) {\n                if(transforms[j].enabled) {\n                    trace._indexToPoints = transforms[j]._indexToPoints;\n                    break;\n                }\n            }\n\n            if(_module && _module.calc) {\n                cd = _module.calc(gd, trace);\n            }\n        }\n\n        // Make sure there is a first point.\n        //\n        // This ensures there is a calcdata item for every trace,\n        // even if cartesian logic doesn't handle it (for things like legends).\n        if(!Array.isArray(cd) || !cd[0]) {\n            cd = [{x: BADNUM, y: BADNUM}];\n        }\n\n        // add the trace-wide properties to the first point,\n        // per point properties to every point\n        // t is the holder for trace-wide properties\n        if(!cd[0].t) cd[0].t = {};\n        cd[0].trace = trace;\n\n        calcdata[i] = cd;\n    }\n\n    Registry.getComponentMethod('fx', 'calc')(gd);\n};\n\n// initialize the category list, if there is one, so we start over\n// to be filled in later by ax.d2c\nfunction initCategories(axList) {\n    for(var i = 0; i < axList.length; i++) {\n        axList[i]._categories = axList[i]._initialCategories.slice();\n\n        // Build the lookup map for initialized categories\n        axList[i]._categoriesMap = {};\n        for(var j = 0; j < axList[i]._categories.length; j++) {\n            axList[i]._categoriesMap[axList[i]._categories[j]] = j;\n        }\n    }\n}\n\nplots.rehover = function(gd) {\n    if(gd._fullLayout._rehover) {\n        gd._fullLayout._rehover();\n    }\n};\n\nplots.generalUpdatePerTraceModule = function(gd, subplot, subplotCalcData, subplotLayout) {\n    var traceHashOld = subplot.traceHash;\n    var traceHash = {};\n    var i;\n\n    // build up moduleName -> calcData hash\n    for(i = 0; i < subplotCalcData.length; i++) {\n        var calcTraces = subplotCalcData[i],\n            trace = calcTraces[0].trace;\n\n        // skip over visible === false traces\n        // as they don't have `_module` ref\n        if(trace.visible) {\n            traceHash[trace.type] = traceHash[trace.type] || [];\n            traceHash[trace.type].push(calcTraces);\n        }\n    }\n\n    // when a trace gets deleted, make sure that its module's\n    // plot method is called so that it is properly\n    // removed from the DOM.\n    for(var moduleNameOld in traceHashOld) {\n        if(!traceHash[moduleNameOld]) {\n            var fakeCalcTrace = traceHashOld[moduleNameOld][0],\n                fakeTrace = fakeCalcTrace[0].trace;\n\n            fakeTrace.visible = false;\n            traceHash[moduleNameOld] = [fakeCalcTrace];\n        }\n    }\n\n    // call module plot method\n    for(var moduleName in traceHash) {\n        var moduleCalcData = traceHash[moduleName];\n        var _module = moduleCalcData[0][0].trace._module;\n\n        _module.plot(gd, subplot, Lib.filterVisible(moduleCalcData), subplotLayout);\n    }\n\n    // update moduleName -> calcData hash\n    subplot.traceHash = traceHash;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/plots.js\n// module id = 8\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n\nmodule.exports = {\n    /**\n     * Standardize all missing data in calcdata to use undefined\n     * never null or NaN.\n     * That way we can use !==undefined, or !== BADNUM,\n     * to test for real data\n     */\n    BADNUM: undefined,\n\n    /*\n     * Limit certain operations to well below floating point max value\n     * to avoid glitches: Make sure that even when you multiply it by the\n     * number of pixels on a giant screen it still works\n     */\n    FP_SAFE: Number.MAX_VALUE / 10000,\n\n    /*\n     * conversion of date units to milliseconds\n     * year and month constants are marked \"AVG\"\n     * to remind us that not all years and months\n     * have the same length\n     */\n    ONEAVGYEAR: 31557600000, // 365.25 days\n    ONEAVGMONTH: 2629800000, // 1/12 of ONEAVGYEAR\n    ONEDAY: 86400000,\n    ONEHOUR: 3600000,\n    ONEMIN: 60000,\n    ONESEC: 1000,\n\n    /*\n     * For fast conversion btwn world calendars and epoch ms, the Julian Day Number\n     * of the unix epoch. From calendars.instance().newDate(1970, 1, 1).toJD()\n     */\n    EPOCHJD: 2440587.5,\n\n    /*\n     * Are two values nearly equal? Compare to 1PPM\n     */\n    ALMOST_EQUAL: 1 - 1e-6,\n\n    /*\n     * not a number, but for displaying numbers: the \"minus sign\" symbol is\n     * wider than the regular ascii dash \"-\"\n     */\n    MINUS_SIGN: '\\u2212'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/constants/numerical.js\n// module id = 9\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\nvar counterRegex = require('../../lib').counterRegex;\n\n\nmodule.exports = {\n\n    idRegex: {\n        x: counterRegex('x'),\n        y: counterRegex('y')\n    },\n\n    attrRegex: counterRegex('[xy]axis'),\n\n    // axis match regular expression\n    xAxisMatch: counterRegex('xaxis'),\n    yAxisMatch: counterRegex('yaxis'),\n\n    // pattern matching axis ids and names\n    // note that this is more permissive than counterRegex, as\n    // id2name, name2id, and cleanId accept \"x1\" etc\n    AX_ID_PATTERN: /^[xyz][0-9]*$/,\n    AX_NAME_PATTERN: /^[xyz]axis[0-9]*$/,\n\n    // and for 2D subplots\n    SUBPLOT_PATTERN: /^x([0-9]*)y([0-9]*)$/,\n\n    // pixels to move mouse before you stop clamping to starting point\n    MINDRAG: 8,\n\n    // smallest dimension allowed for a select box\n    MINSELECT: 12,\n\n    // smallest dimension allowed for a zoombox\n    MINZOOM: 20,\n\n    // width of axis drag regions\n    DRAGGERSIZE: 20,\n\n    // max pixels off straight before a lasso select line counts as bent\n    BENDPX: 1.5,\n\n    // delay before a redraw (relayout) after smooth panning and zooming\n    REDRAWDELAY: 50,\n\n    // throttling limit (ms) for selectPoints calls\n    SELECTDELAY: 100,\n\n    // cache ID suffix for throttle\n    SELECTID: '-select',\n\n    // last resort axis ranges for x and y axes if we have no data\n    DFLTRANGEX: [-1, 6],\n    DFLTRANGEY: [-1, 4],\n\n    // Layers to keep trace types in the right order\n    traceLayerClasses: [\n        'imagelayer',\n        'maplayer',\n        'barlayer',\n        'carpetlayer',\n        'violinlayer',\n        'boxlayer',\n        'scatterlayer'\n    ],\n\n    layerValue2layerClass: {\n        'above traces': 'above',\n        'below traces': 'below'\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/constants.js\n// module id = 10\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\n\nvar constants = require('./constants');\n\n\n// convert between axis names (xaxis, xaxis2, etc, elements of gd.layout)\n// and axis id's (x, x2, etc). Would probably have ditched 'xaxis'\n// completely in favor of just 'x' if it weren't ingrained in the API etc.\nexports.id2name = function id2name(id) {\n    if(typeof id !== 'string' || !id.match(constants.AX_ID_PATTERN)) return;\n    var axNum = id.substr(1);\n    if(axNum === '1') axNum = '';\n    return id.charAt(0) + 'axis' + axNum;\n};\n\nexports.name2id = function name2id(name) {\n    if(!name.match(constants.AX_NAME_PATTERN)) return;\n    var axNum = name.substr(5);\n    if(axNum === '1') axNum = '';\n    return name.charAt(0) + axNum;\n};\n\nexports.cleanId = function cleanId(id, axLetter) {\n    if(!id.match(constants.AX_ID_PATTERN)) return;\n    if(axLetter && id.charAt(0) !== axLetter) return;\n\n    var axNum = id.substr(1).replace(/^0+/, '');\n    if(axNum === '1') axNum = '';\n    return id.charAt(0) + axNum;\n};\n\n// get all axis objects, as restricted in listNames\nexports.list = function(gd, axLetter, only2d) {\n    var fullLayout = gd._fullLayout;\n    if(!fullLayout) return [];\n\n    var idList = exports.listIds(gd, axLetter);\n    var out = new Array(idList.length);\n    var i;\n\n    for(i = 0; i < idList.length; i++) {\n        var idi = idList[i];\n        out[i] = fullLayout[idi.charAt(0) + 'axis' + idi.substr(1)];\n    }\n\n    if(!only2d) {\n        var sceneIds3D = fullLayout._subplots.gl3d || [];\n\n        for(i = 0; i < sceneIds3D.length; i++) {\n            var scene = fullLayout[sceneIds3D[i]];\n\n            if(axLetter) out.push(scene[axLetter + 'axis']);\n            else out.push(scene.xaxis, scene.yaxis, scene.zaxis);\n        }\n    }\n\n    return out;\n};\n\n// get all axis ids, optionally restricted by letter\n// this only makes sense for 2d axes\nexports.listIds = function(gd, axLetter) {\n    var fullLayout = gd._fullLayout;\n    if(!fullLayout) return [];\n\n    var subplotLists = fullLayout._subplots;\n    if(axLetter) return subplotLists[axLetter + 'axis'];\n    return subplotLists.xaxis.concat(subplotLists.yaxis);\n};\n\n// get an axis object from its id 'x','x2' etc\n// optionally, id can be a subplot (ie 'x2y3') and type gets x or y from it\nexports.getFromId = function(gd, id, type) {\n    var fullLayout = gd._fullLayout;\n\n    if(type === 'x') id = id.replace(/y[0-9]*/, '');\n    else if(type === 'y') id = id.replace(/x[0-9]*/, '');\n\n    return fullLayout[exports.id2name(id)];\n};\n\n// get an axis object of specified type from the containing trace\nexports.getFromTrace = function(gd, fullTrace, type) {\n    var fullLayout = gd._fullLayout;\n    var ax = null;\n\n    if(Registry.traceIs(fullTrace, 'gl3d')) {\n        var scene = fullTrace.scene;\n        if(scene.substr(0, 5) === 'scene') {\n            ax = fullLayout[scene][type + 'axis'];\n        }\n    }\n    else {\n        ax = exports.getFromId(gd, fullTrace[type + 'axis'] || type);\n    }\n\n    return ax;\n};\n\n// sort x, x2, x10, y, y2, y10...\nexports.idSort = function(id1, id2) {\n    var letter1 = id1.charAt(0);\n    var letter2 = id2.charAt(0);\n    if(letter1 !== letter2) return letter1 > letter2 ? 1 : -1;\n    return +(id1.substr(1) || 1) - +(id2.substr(1) || 1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/axis_ids.js\n// module id = 11\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isPlainObject = require('./is_plain_object.js');\nvar isArray = Array.isArray;\n\nfunction primitivesLoopSplice(source, target) {\n    var i, value;\n    for(i = 0; i < source.length; i++) {\n        value = source[i];\n        if(value !== null && typeof(value) === 'object') {\n            return false;\n        }\n        if(value !== void(0)) {\n            target[i] = value;\n        }\n    }\n    return true;\n}\n\nexports.extendFlat = function() {\n    return _extend(arguments, false, false, false);\n};\n\nexports.extendDeep = function() {\n    return _extend(arguments, true, false, false);\n};\n\nexports.extendDeepAll = function() {\n    return _extend(arguments, true, true, false);\n};\n\nexports.extendDeepNoArrays = function() {\n    return _extend(arguments, true, false, true);\n};\n\n/*\n * Inspired by https://github.com/justmoon/node-extend/blob/master/index.js\n * All credit to the jQuery authors for perfecting this amazing utility.\n *\n * API difference with jQuery version:\n * - No optional boolean (true -> deep extend) first argument,\n *   use `extendFlat` for first-level only extend and\n *   use `extendDeep` for a deep extend.\n *\n * Other differences with jQuery version:\n * - Uses a modern (and faster) isPlainObject routine.\n * - Expected to work with object {} and array [] arguments only.\n * - Does not check for circular structure.\n *   FYI: jQuery only does a check across one level.\n *   Warning: this might result in infinite loops.\n *\n */\nfunction _extend(inputs, isDeep, keepAllKeys, noArrayCopies) {\n    var target = inputs[0],\n        length = inputs.length;\n\n    var input, key, src, copy, copyIsArray, clone, allPrimitives;\n\n    if(length === 2 && isArray(target) && isArray(inputs[1]) && target.length === 0) {\n\n        allPrimitives = primitivesLoopSplice(inputs[1], target);\n\n        if(allPrimitives) {\n            return target;\n        } else {\n            target.splice(0, target.length); // reset target and continue to next block\n        }\n    }\n\n    for(var i = 1; i < length; i++) {\n        input = inputs[i];\n\n        for(key in input) {\n            src = target[key];\n            copy = input[key];\n\n            // Stop early and just transfer the array if array copies are disallowed:\n            if(noArrayCopies && isArray(copy)) {\n                target[key] = copy;\n            }\n\n            // recurse if we're merging plain objects or arrays\n            else if(isDeep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n                if(copyIsArray) {\n                    copyIsArray = false;\n                    clone = src && isArray(src) ? src : [];\n                } else {\n                    clone = src && isPlainObject(src) ? src : {};\n                }\n\n                // never move original objects, clone them\n                target[key] = _extend([clone, copy], isDeep, keepAllKeys, noArrayCopies);\n            }\n\n            // don't bring in undefined values, except for extendDeepAll\n            else if(typeof copy !== 'undefined' || keepAllKeys) {\n                target[key] = copy;\n            }\n        }\n    }\n\n    return target;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/extend.js\n// module id = 12\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/*\n * make a font attribute group\n *\n * @param {object} opts\n *   @param {string}\n *     opts.description: where & how this font is used\n *   @param {optional bool} arrayOk:\n *     should each part (family, size, color) be arrayOk? default false.\n *   @param {string} editType:\n *     the editType for all pieces of this font\n *   @param {optional string} colorEditType:\n *     a separate editType just for color\n *\n * @return {object} attributes object containing {family, size, color} as specified\n */\nmodule.exports = function(opts) {\n    var editType = opts.editType;\n    var colorEditType = opts.colorEditType;\n    if(colorEditType === undefined) colorEditType = editType;\n    var attrs = {\n        family: {\n            valType: 'string',\n            role: 'style',\n            noBlank: true,\n            strict: true,\n            editType: editType,\n            description: [\n                'HTML font family - the typeface that will be applied by the web browser.',\n                'The web browser will only be able to apply a font if it is available on the system',\n                'which it operates. Provide multiple font families, separated by commas, to indicate',\n                'the preference in which to apply fonts if they aren\\'t available on the system.',\n                'The plotly service (at https://plot.ly or on-premise) generates images on a server,',\n                'where only a select number of',\n                'fonts are installed and supported.',\n                'These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*,',\n                '*Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*,',\n                '*PT Sans Narrow*, *Raleway*, *Times New Roman*.'\n            ].join(' ')\n        },\n        size: {\n            valType: 'number',\n            role: 'style',\n            min: 1,\n            editType: editType\n        },\n        color: {\n            valType: 'color',\n            role: 'style',\n            editType: colorEditType\n        },\n        editType: editType,\n        // blank strings so compress_attributes can remove\n        // TODO - that's uber hacky... better solution?\n        description: '' + (opts.description || '') + ''\n    };\n\n    if(opts.arrayOk) {\n        attrs.family.arrayOk = true;\n        attrs.size.arrayOk = true;\n        attrs.color.arrayOk = true;\n    }\n\n    return attrs;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/font_attributes.js\n// module id = 13\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n/* global MathJax:false */\n\nvar d3 = require('d3');\n\nvar Lib = require('../lib');\nvar xmlnsNamespaces = require('../constants/xmlns_namespaces');\nvar stringMappings = require('../constants/string_mappings');\nvar LINE_SPACING = require('../constants/alignment').LINE_SPACING;\n\n// text converter\n\nfunction getSize(_selection, _dimension) {\n    return _selection.node().getBoundingClientRect()[_dimension];\n}\n\nvar FIND_TEX = /([^$]*)([$]+[^$]*[$]+)([^$]*)/;\n\nexports.convertToTspans = function(_context, gd, _callback) {\n    var str = _context.text();\n\n    // Until we get tex integrated more fully (so it can be used along with non-tex)\n    // allow some elements to prohibit it by attaching 'data-notex' to the original\n    var tex = (!_context.attr('data-notex')) &&\n        (typeof MathJax !== 'undefined') &&\n        str.match(FIND_TEX);\n\n    var parent = d3.select(_context.node().parentNode);\n    if(parent.empty()) return;\n    var svgClass = (_context.attr('class')) ? _context.attr('class').split(' ')[0] : 'text';\n    svgClass += '-math';\n    parent.selectAll('svg.' + svgClass).remove();\n    parent.selectAll('g.' + svgClass + '-group').remove();\n    _context.style('display', null)\n        .attr({\n            // some callers use data-unformatted *from the <text> element* in 'cancel'\n            // so we need it here even if we're going to turn it into math\n            // these two (plus style and text-anchor attributes) form the key we're\n            // going to use for Drawing.bBox\n            'data-unformatted': str,\n            'data-math': 'N'\n        });\n\n    function showText() {\n        if(!parent.empty()) {\n            svgClass = _context.attr('class') + '-math';\n            parent.select('svg.' + svgClass).remove();\n        }\n        _context.text('')\n            .style('white-space', 'pre');\n\n        var hasLink = buildSVGText(_context.node(), str);\n\n        if(hasLink) {\n            // at least in Chrome, pointer-events does not seem\n            // to be honored in children of <text> elements\n            // so if we have an anchor, we have to make the\n            // whole element respond\n            _context.style('pointer-events', 'all');\n        }\n\n        exports.positionText(_context);\n\n        if(_callback) _callback.call(_context);\n    }\n\n    if(tex) {\n        ((gd && gd._promises) || []).push(new Promise(function(resolve) {\n            _context.style('display', 'none');\n            var fontSize = parseInt(_context.node().style.fontSize, 10);\n            var config = {fontSize: fontSize};\n\n            texToSVG(tex[2], config, function(_svgEl, _glyphDefs, _svgBBox) {\n                parent.selectAll('svg.' + svgClass).remove();\n                parent.selectAll('g.' + svgClass + '-group').remove();\n\n                var newSvg = _svgEl && _svgEl.select('svg');\n                if(!newSvg || !newSvg.node()) {\n                    showText();\n                    resolve();\n                    return;\n                }\n\n                var mathjaxGroup = parent.append('g')\n                    .classed(svgClass + '-group', true)\n                    .attr({\n                        'pointer-events': 'none',\n                        'data-unformatted': str,\n                        'data-math': 'Y'\n                    });\n\n                mathjaxGroup.node().appendChild(newSvg.node());\n\n                // stitch the glyph defs\n                if(_glyphDefs && _glyphDefs.node()) {\n                    newSvg.node().insertBefore(_glyphDefs.node().cloneNode(true),\n                                               newSvg.node().firstChild);\n                }\n\n                newSvg.attr({\n                    'class': svgClass,\n                    height: _svgBBox.height,\n                    preserveAspectRatio: 'xMinYMin meet'\n                })\n                .style({overflow: 'visible', 'pointer-events': 'none'});\n\n                var fill = _context.node().style.fill || 'black';\n                newSvg.select('g').attr({fill: fill, stroke: fill});\n\n                var newSvgW = getSize(newSvg, 'width'),\n                    newSvgH = getSize(newSvg, 'height'),\n                    newX = +_context.attr('x') - newSvgW *\n                        {start: 0, middle: 0.5, end: 1}[_context.attr('text-anchor') || 'start'],\n                    // font baseline is about 1/4 fontSize below centerline\n                    textHeight = fontSize || getSize(_context, 'height'),\n                    dy = -textHeight / 4;\n\n                if(svgClass[0] === 'y') {\n                    mathjaxGroup.attr({\n                        transform: 'rotate(' + [-90, +_context.attr('x'), +_context.attr('y')] +\n                        ') translate(' + [-newSvgW / 2, dy - newSvgH / 2] + ')'\n                    });\n                    newSvg.attr({x: +_context.attr('x'), y: +_context.attr('y')});\n                }\n                else if(svgClass[0] === 'l') {\n                    newSvg.attr({x: _context.attr('x'), y: dy - (newSvgH / 2)});\n                }\n                else if(svgClass[0] === 'a') {\n                    newSvg.attr({x: 0, y: dy});\n                }\n                else {\n                    newSvg.attr({x: newX, y: (+_context.attr('y') + dy - newSvgH / 2)});\n                }\n\n                if(_callback) _callback.call(_context, mathjaxGroup);\n                resolve(mathjaxGroup);\n            });\n        }));\n    }\n    else showText();\n\n    return _context;\n};\n\n\n// MathJax\n\nvar LT_MATCH = /(<|&lt;|&#60;)/g;\nvar GT_MATCH = /(>|&gt;|&#62;)/g;\n\nfunction cleanEscapesForTex(s) {\n    return s.replace(LT_MATCH, '\\\\lt ')\n        .replace(GT_MATCH, '\\\\gt ');\n}\n\nfunction texToSVG(_texString, _config, _callback) {\n    var randomID = 'math-output-' + Lib.randstr([], 64);\n    var tmpDiv = d3.select('body').append('div')\n        .attr({id: randomID})\n        .style({visibility: 'hidden', position: 'absolute'})\n        .style({'font-size': _config.fontSize + 'px'})\n        .text(cleanEscapesForTex(_texString));\n\n    MathJax.Hub.Queue(['Typeset', MathJax.Hub, tmpDiv.node()], function() {\n        var glyphDefs = d3.select('body').select('#MathJax_SVG_glyphs');\n\n        if(tmpDiv.select('.MathJax_SVG').empty() || !tmpDiv.select('svg').node()) {\n            Lib.log('There was an error in the tex syntax.', _texString);\n            _callback();\n        }\n        else {\n            var svgBBox = tmpDiv.select('svg').node().getBoundingClientRect();\n            _callback(tmpDiv.select('.MathJax_SVG'), glyphDefs, svgBBox);\n        }\n\n        tmpDiv.remove();\n    });\n}\n\nvar TAG_STYLES = {\n    // would like to use baseline-shift for sub/sup but FF doesn't support it\n    // so we need to use dy along with the uber hacky shift-back-to\n    // baseline below\n    sup: 'font-size:70%',\n    sub: 'font-size:70%',\n    b: 'font-weight:bold',\n    i: 'font-style:italic',\n    a: 'cursor:pointer',\n    span: '',\n    em: 'font-style:italic;font-weight:bold'\n};\n\n// baseline shifts for sub and sup\nvar SHIFT_DY = {\n    sub: '0.3em',\n    sup: '-0.6em'\n};\n// reset baseline by adding a tspan (empty except for a zero-width space)\n// with dy of -70% * SHIFT_DY (because font-size=70%)\nvar RESET_DY = {\n    sub: '-0.21em',\n    sup: '0.42em'\n};\nvar ZERO_WIDTH_SPACE = '\\u200b';\n\n/*\n * Whitelist of protocols in user-supplied urls. Mostly we want to avoid javascript\n * and related attack vectors. The empty items are there for IE, that in various\n * versions treats relative paths as having different flavors of no protocol, while\n * other browsers have these explicitly inherit the protocol of the page they're in.\n */\nvar PROTOCOLS = ['http:', 'https:', 'mailto:', '', undefined, ':'];\n\nvar STRIP_TAGS = new RegExp('</?(' + Object.keys(TAG_STYLES).join('|') + ')( [^>]*)?/?>', 'g');\n\nvar ENTITY_TO_UNICODE = Object.keys(stringMappings.entityToUnicode).map(function(k) {\n    return {\n        regExp: new RegExp('&' + k + ';', 'g'),\n        sub: stringMappings.entityToUnicode[k]\n    };\n});\n\nvar NEWLINES = /(\\r\\n?|\\n)/g;\n\nvar SPLIT_TAGS = /(<[^<>]*>)/;\n\nvar ONE_TAG = /<(\\/?)([^ >]*)(\\s+(.*))?>/i;\n\nvar BR_TAG = /<br(\\s+.*)?>/i;\n\n/*\n * style and href: pull them out of either single or double quotes. Also\n * - target: (_blank|_self|_parent|_top|framename)\n *     note that you can't use target to get a popup but if you use popup,\n *     a `framename` will be passed along as the name of the popup window.\n *     per the spec, cannot contain whitespace.\n *     for backward compatibility we default to '_blank'\n * - popup: a custom one for us to enable popup (new window) links. String\n *     for window.open -> strWindowFeatures, like 'menubar=yes,width=500,height=550'\n *     note that at least in Chrome, you need to give at least one property\n *     in this string or the page will open in a new tab anyway. We follow this\n *     convention and will not make a popup if this string is empty.\n *     per the spec, cannot contain whitespace.\n *\n * Because we hack in other attributes with style (sub & sup), drop any trailing\n * semicolon in user-supplied styles so we can consistently append the tag-dependent style\n */\nvar STYLEMATCH = /(^|[\\s\"'])style\\s*=\\s*(\"([^\"]*);?\"|'([^']*);?')/i;\nvar HREFMATCH = /(^|[\\s\"'])href\\s*=\\s*(\"([^\"]*)\"|'([^']*)')/i;\nvar TARGETMATCH = /(^|[\\s\"'])target\\s*=\\s*(\"([^\"\\s]*)\"|'([^'\\s]*)')/i;\nvar POPUPMATCH = /(^|[\\s\"'])popup\\s*=\\s*(\"([\\w=,]*)\"|'([\\w=,]*)')/i;\n\n// dedicated matcher for these quoted regexes, that can return their results\n// in two different places\nfunction getQuotedMatch(_str, re) {\n    if(!_str) return null;\n    var match = _str.match(re);\n    return match && (match[3] || match[4]);\n}\n\nvar COLORMATCH = /(^|;)\\s*color:/;\n\nexports.plainText = function(_str) {\n    // strip out our pseudo-html so we have a readable\n    // version to put into text fields\n    return (_str || '').replace(STRIP_TAGS, ' ');\n};\n\nfunction replaceFromMapObject(_str, list) {\n    if(!_str) return '';\n\n    for(var i = 0; i < list.length; i++) {\n        var item = list[i];\n        _str = _str.replace(item.regExp, item.sub);\n    }\n\n    return _str;\n}\n\nfunction convertEntities(_str) {\n    return replaceFromMapObject(_str, ENTITY_TO_UNICODE);\n}\n\n/*\n * buildSVGText: convert our pseudo-html into SVG tspan elements, and attach these\n * to containerNode\n *\n * @param {svg text element} containerNode: the <text> node to insert this text into\n * @param {string} str: the pseudo-html string to convert to svg\n *\n * @returns {bool}: does the result contain any links? We need to handle the text element\n *   somewhat differently if it does, so just keep track of this when it happens.\n */\nfunction buildSVGText(containerNode, str) {\n    str = convertEntities(str)\n        /*\n         * Normalize behavior between IE and others wrt newlines and whitespace:pre\n         * this combination makes IE barf https://github.com/plotly/plotly.js/issues/746\n         * Chrome and FF display \\n, \\r, or \\r\\n as a space in this mode.\n         * I feel like at some point we turned these into <br> but currently we don't so\n         * I'm just going to cement what we do now in Chrome and FF\n         */\n        .replace(NEWLINES, ' ');\n\n    var hasLink = false;\n\n    // as we're building the text, keep track of what elements we're nested inside\n    // nodeStack will be an array of {node, type, style, href, target, popup}\n    // where only type: 'a' gets the last 3 and node is only added when it's created\n    var nodeStack = [];\n    var currentNode;\n    var currentLine = -1;\n\n    function newLine() {\n        currentLine++;\n\n        var lineNode = document.createElementNS(xmlnsNamespaces.svg, 'tspan');\n        d3.select(lineNode).attr({\n            class: 'line',\n            dy: (currentLine * LINE_SPACING) + 'em'\n        });\n        containerNode.appendChild(lineNode);\n\n        currentNode = lineNode;\n\n        var oldNodeStack = nodeStack;\n        nodeStack = [{node: lineNode}];\n\n        if(oldNodeStack.length > 1) {\n            for(var i = 1; i < oldNodeStack.length; i++) {\n                enterNode(oldNodeStack[i]);\n            }\n        }\n    }\n\n    function enterNode(nodeSpec) {\n        var type = nodeSpec.type;\n        var nodeAttrs = {};\n        var nodeType;\n\n        if(type === 'a') {\n            nodeType = 'a';\n            var target = nodeSpec.target;\n            var href = nodeSpec.href;\n            var popup = nodeSpec.popup;\n            if(href) {\n                nodeAttrs = {\n                    'xlink:xlink:show': (target === '_blank' || target.charAt(0) !== '_') ? 'new' : 'replace',\n                    target: target,\n                    'xlink:xlink:href': href\n                };\n                if(popup) {\n                    // security: href and target are not inserted as code but\n                    // as attributes. popup is, but limited to /[A-Za-z0-9_=,]/\n                    nodeAttrs.onclick = 'window.open(this.href.baseVal,this.target.baseVal,\"' +\n                        popup + '\");return false;';\n                }\n            }\n        }\n        else nodeType = 'tspan';\n\n        if(nodeSpec.style) nodeAttrs.style = nodeSpec.style;\n\n        var newNode = document.createElementNS(xmlnsNamespaces.svg, nodeType);\n\n        if(type === 'sup' || type === 'sub') {\n            addTextNode(currentNode, ZERO_WIDTH_SPACE);\n            currentNode.appendChild(newNode);\n\n            var resetter = document.createElementNS(xmlnsNamespaces.svg, 'tspan');\n            addTextNode(resetter, ZERO_WIDTH_SPACE);\n            d3.select(resetter).attr('dy', RESET_DY[type]);\n            nodeAttrs.dy = SHIFT_DY[type];\n\n            currentNode.appendChild(newNode);\n            currentNode.appendChild(resetter);\n        }\n        else {\n            currentNode.appendChild(newNode);\n        }\n\n        d3.select(newNode).attr(nodeAttrs);\n\n        currentNode = nodeSpec.node = newNode;\n        nodeStack.push(nodeSpec);\n    }\n\n    function addTextNode(node, text) {\n        node.appendChild(document.createTextNode(text));\n    }\n\n    function exitNode(type) {\n        // A bare closing tag can't close the root node. If we encounter this it\n        // means there's an extra closing tag that can just be ignored:\n        if(nodeStack.length === 1) {\n            Lib.log('Ignoring unexpected end tag </' + type + '>.', str);\n            return;\n        }\n\n        var innerNode = nodeStack.pop();\n\n        if(type !== innerNode.type) {\n            Lib.log('Start tag <' + innerNode.type + '> doesnt match end tag <' +\n                type + '>. Pretending it did match.', str);\n        }\n        currentNode = nodeStack[nodeStack.length - 1].node;\n    }\n\n    var hasLines = BR_TAG.test(str);\n\n    if(hasLines) newLine();\n    else {\n        currentNode = containerNode;\n        nodeStack = [{node: containerNode}];\n    }\n\n    var parts = str.split(SPLIT_TAGS);\n    for(var i = 0; i < parts.length; i++) {\n        var parti = parts[i];\n        var match = parti.match(ONE_TAG);\n        var tagType = match && match[2].toLowerCase();\n        var tagStyle = TAG_STYLES[tagType];\n\n        if(tagType === 'br') {\n            newLine();\n        }\n        else if(tagStyle === undefined) {\n            addTextNode(currentNode, parti);\n        }\n        else {\n            // tag - open or close\n            if(match[1]) {\n                exitNode(tagType);\n            }\n            else {\n                var extra = match[4];\n\n                var nodeSpec = {type: tagType};\n\n                // now add style, from both the tag name and any extra css\n                // Most of the svg css that users will care about is just like html,\n                // but font color is different (uses fill). Let our users ignore this.\n                var css = getQuotedMatch(extra, STYLEMATCH);\n                if(css) {\n                    css = css.replace(COLORMATCH, '$1 fill:');\n                    if(tagStyle) css += ';' + tagStyle;\n                }\n                else if(tagStyle) css = tagStyle;\n\n                if(css) nodeSpec.style = css;\n\n                if(tagType === 'a') {\n                    hasLink = true;\n\n                    var href = getQuotedMatch(extra, HREFMATCH);\n\n                    if(href) {\n                        // check safe protocols\n                        var dummyAnchor = document.createElement('a');\n                        dummyAnchor.href = href;\n                        if(PROTOCOLS.indexOf(dummyAnchor.protocol) !== -1) {\n                            nodeSpec.href = encodeURI(href);\n                            nodeSpec.target = getQuotedMatch(extra, TARGETMATCH) || '_blank';\n                            nodeSpec.popup = getQuotedMatch(extra, POPUPMATCH);\n                        }\n                    }\n                }\n\n                enterNode(nodeSpec);\n            }\n        }\n    }\n\n    return hasLink;\n}\n\nexports.lineCount = function lineCount(s) {\n    return s.selectAll('tspan.line').size() || 1;\n};\n\nexports.positionText = function positionText(s, x, y) {\n    return s.each(function() {\n        var text = d3.select(this);\n\n        function setOrGet(attr, val) {\n            if(val === undefined) {\n                val = text.attr(attr);\n                if(val === null) {\n                    text.attr(attr, 0);\n                    val = 0;\n                }\n            }\n            else text.attr(attr, val);\n            return val;\n        }\n\n        var thisX = setOrGet('x', x);\n        var thisY = setOrGet('y', y);\n\n        if(this.nodeName === 'text') {\n            text.selectAll('tspan.line').attr({x: thisX, y: thisY});\n        }\n    });\n};\n\nfunction alignHTMLWith(_base, container, options) {\n    var alignH = options.horizontalAlign,\n        alignV = options.verticalAlign || 'top',\n        bRect = _base.node().getBoundingClientRect(),\n        cRect = container.node().getBoundingClientRect(),\n        thisRect,\n        getTop,\n        getLeft;\n\n    if(alignV === 'bottom') {\n        getTop = function() { return bRect.bottom - thisRect.height; };\n    } else if(alignV === 'middle') {\n        getTop = function() { return bRect.top + (bRect.height - thisRect.height) / 2; };\n    } else { // default: top\n        getTop = function() { return bRect.top; };\n    }\n\n    if(alignH === 'right') {\n        getLeft = function() { return bRect.right - thisRect.width; };\n    } else if(alignH === 'center') {\n        getLeft = function() { return bRect.left + (bRect.width - thisRect.width) / 2; };\n    } else { // default: left\n        getLeft = function() { return bRect.left; };\n    }\n\n    return function() {\n        thisRect = this.node().getBoundingClientRect();\n        this.style({\n            top: (getTop() - cRect.top) + 'px',\n            left: (getLeft() - cRect.left) + 'px',\n            'z-index': 1000\n        });\n        return this;\n    };\n}\n\n/*\n * Editable title\n * @param {d3.selection} context: the element being edited. Normally text,\n *   but if it isn't, you should provide the styling options\n * @param {object} options:\n *   @param {div} options.gd: graphDiv\n *   @param {d3.selection} options.delegate: item to bind events to if not this\n *   @param {boolean} options.immediate: start editing now (true) or on click (false, default)\n *   @param {string} options.fill: font color if not as shown\n *   @param {string} options.background: background color if not as shown\n *   @param {string} options.text: initial text, if not as shown\n *   @param {string} options.horizontalAlign: alignment of the edit box wrt. the bound element\n *   @param {string} options.verticalAlign: alignment of the edit box wrt. the bound element\n */\n\nexports.makeEditable = function(context, options) {\n    var gd = options.gd;\n    var _delegate = options.delegate;\n    var dispatch = d3.dispatch('edit', 'input', 'cancel');\n    var handlerElement = _delegate || context;\n\n    context.style({'pointer-events': _delegate ? 'none' : 'all'});\n\n    if(context.size() !== 1) throw new Error('boo');\n\n    function handleClick() {\n        appendEditable();\n        context.style({opacity: 0});\n        // also hide any mathjax svg\n        var svgClass = handlerElement.attr('class'),\n            mathjaxClass;\n        if(svgClass) mathjaxClass = '.' + svgClass.split(' ')[0] + '-math-group';\n        else mathjaxClass = '[class*=-math-group]';\n        if(mathjaxClass) {\n            d3.select(context.node().parentNode).select(mathjaxClass).style({opacity: 0});\n        }\n    }\n\n    function selectElementContents(_el) {\n        var el = _el.node();\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n        el.focus();\n    }\n\n    function appendEditable() {\n        var plotDiv = d3.select(gd);\n        var container = plotDiv.select('.svg-container');\n        var div = container.append('div');\n        var cStyle = context.node().style;\n        var fontSize = parseFloat(cStyle.fontSize || 12);\n\n        div.classed('plugin-editable editable', true)\n            .style({\n                position: 'absolute',\n                'font-family': cStyle.fontFamily || 'Arial',\n                'font-size': fontSize,\n                color: options.fill || cStyle.fill || 'black',\n                opacity: 1,\n                'background-color': options.background || 'transparent',\n                outline: '#ffffff33 1px solid',\n                margin: [-fontSize / 8 + 1, 0, 0, -1].join('px ') + 'px',\n                padding: '0',\n                'box-sizing': 'border-box'\n            })\n            .attr({contenteditable: true})\n            .text(options.text || context.attr('data-unformatted'))\n            .call(alignHTMLWith(context, container, options))\n            .on('blur', function() {\n                gd._editing = false;\n                context.text(this.textContent)\n                    .style({opacity: 1});\n                var svgClass = d3.select(this).attr('class'),\n                    mathjaxClass;\n                if(svgClass) mathjaxClass = '.' + svgClass.split(' ')[0] + '-math-group';\n                else mathjaxClass = '[class*=-math-group]';\n                if(mathjaxClass) {\n                    d3.select(context.node().parentNode).select(mathjaxClass).style({opacity: 0});\n                }\n                var text = this.textContent;\n                d3.select(this).transition().duration(0).remove();\n                d3.select(document).on('mouseup', null);\n                dispatch.edit.call(context, text);\n            })\n            .on('focus', function() {\n                var editDiv = this;\n                gd._editing = true;\n                d3.select(document).on('mouseup', function() {\n                    if(d3.event.target === editDiv) return false;\n                    if(document.activeElement === div.node()) div.node().blur();\n                });\n            })\n            .on('keyup', function() {\n                if(d3.event.which === 27) {\n                    gd._editing = false;\n                    context.style({opacity: 1});\n                    d3.select(this)\n                        .style({opacity: 0})\n                        .on('blur', function() { return false; })\n                        .transition().remove();\n                    dispatch.cancel.call(context, this.textContent);\n                }\n                else {\n                    dispatch.input.call(context, this.textContent);\n                    d3.select(this).call(alignHTMLWith(context, container, options));\n                }\n            })\n            .on('keydown', function() {\n                if(d3.event.which === 13) this.blur();\n            })\n            .call(selectElementContents);\n    }\n\n    if(options.immediate) handleClick();\n    else handlerElement.on('click', handleClick);\n\n    return d3.rebind(context, dispatch, 'on');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/svg_text_utils.js\n// module id = 14\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n// fraction of some size to get to a named position\nmodule.exports = {\n    // from bottom left: this is the origin of our paper-reference\n    // positioning system\n    FROM_BL: {\n        left: 0,\n        center: 0.5,\n        right: 1,\n        bottom: 0,\n        middle: 0.5,\n        top: 1\n    },\n    // from top left: this is the screen pixel positioning origin\n    FROM_TL: {\n        left: 0,\n        center: 0.5,\n        right: 1,\n        bottom: 1,\n        middle: 0.5,\n        top: 0\n    },\n    // multiple of fontSize to get the vertical offset between lines\n    LINE_SPACING: 1.3,\n\n    // multiple of fontSize to shift from the baseline to the midline\n    // (to use when we don't calculate this shift from Drawing.bBox)\n    // To be precise this should be half the cap height (capital letter)\n    // of the font, and according to wikipedia:\n    //   an \"average\" font might have a cap height of 70% of the em\n    // https://en.wikipedia.org/wiki/Em_(typography)#History\n    MID_SHIFT: 0.35,\n\n    OPPOSITE_SIDE: {\n        left: 'right',\n        right: 'left',\n        top: 'bottom',\n        bottom: 'top'\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/constants/alignment.js\n// module id = 15\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\n\nmodule.exports = {\n    hasLines: function(trace) {\n        return trace.visible && trace.mode &&\n            trace.mode.indexOf('lines') !== -1;\n    },\n\n    hasMarkers: function(trace) {\n        return trace.visible && trace.mode &&\n            trace.mode.indexOf('markers') !== -1;\n    },\n\n    hasText: function(trace) {\n        return trace.visible && trace.mode &&\n            trace.mode.indexOf('text') !== -1;\n    },\n\n    isBubble: function(trace) {\n        return Lib.isPlainObject(trace.marker) &&\n            Array.isArray(trace.marker.size);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/subtypes.js\n// module id = 16\n// module chunks = 0","// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tinycolor2/tinycolor.js\n// module id = 17\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar mouseOffset = require('mouse-event-offset');\nvar hasHover = require('has-hover');\n\nvar Plotly = require('../../plotly');\nvar Lib = require('../../lib');\n\nvar constants = require('../../plots/cartesian/constants');\nvar interactConstants = require('../../constants/interactions');\n\nvar dragElement = module.exports = {};\n\ndragElement.align = require('./align');\ndragElement.getCursor = require('./cursor');\n\nvar unhover = require('./unhover');\ndragElement.unhover = unhover.wrapped;\ndragElement.unhoverRaw = unhover.raw;\n\nvar supportsPassive = Lib.eventListenerOptionsSupported();\n\n/**\n * Abstracts click & drag interactions\n *\n * During the interaction, a \"coverSlip\" element - a transparent\n * div covering the whole page - is created, which has two key effects:\n * - Lets you drag beyond the boundaries of the plot itself without\n *   dropping (but if you drag all the way out of the browser window the\n *   interaction will end)\n * - Freezes the cursor: whatever mouse cursor the drag element had when the\n *   interaction started gets copied to the coverSlip for use until mouseup\n *\n * If the user executes a drag bigger than MINDRAG, callbacks will fire as:\n *      prepFn, moveFn (1 or more times), doneFn\n * If the user does not drag enough, prepFn and clickFn will fire.\n *\n * Note: If you cancel contextmenu, clickFn will fire even with a right click\n * (unlike native events) so you'll get a `plotly_click` event. Cancel context eg:\n *    gd.addEventListener('contextmenu', function(e) { e.preventDefault(); });\n * TODO: we should probably turn this into a `config` parameter, so we can fix it\n * such that if you *don't* cancel contextmenu, we can prevent partial drags, which\n * put you in a weird state.\n *\n * If the user clicks multiple times quickly, clickFn will fire each time\n * but numClicks will increase to help you recognize doubleclicks.\n *\n * @param {object} options with keys:\n *      element (required) the DOM element to drag\n *      prepFn (optional) function(event, startX, startY)\n *          executed on mousedown\n *          startX and startY are the clientX and clientY pixel position\n *          of the mousedown event\n *      moveFn (optional) function(dx, dy)\n *          executed on move, ONLY after we've exceeded MINDRAG\n *          (we keep executing moveFn if you move back to where you started)\n *          dx and dy are the net pixel offset of the drag,\n *          dragged is true/false, has the mouse moved enough to\n *          constitute a drag\n *      doneFn (optional) function(e)\n *          executed on mouseup, ONLY if we exceeded MINDRAG (so you can be\n *          sure that moveFn has been called at least once)\n *          numClicks is how many clicks we've registered within\n *          a doubleclick time\n *          e is the original mouseup event\n *      clickFn (optional) function(numClicks, e)\n *          executed on mouseup if we have NOT exceeded MINDRAG (ie moveFn\n *          has not been called at all)\n *          numClicks is how many clicks we've registered within\n *          a doubleclick time\n *          e is the original mousedown event\n *      clampFn (optional, function(dx, dy) return [dx2, dy2])\n *          Provide custom clamping function for small displacements.\n *          By default, clamping is done using `minDrag` to x and y displacements\n *          independently.\n */\ndragElement.init = function init(options) {\n    var gd = options.gd;\n    var numClicks = 1;\n    var DBLCLICKDELAY = interactConstants.DBLCLICKDELAY;\n    var element = options.element;\n\n    var startX,\n        startY,\n        newMouseDownTime,\n        cursor,\n        dragCover,\n        initialEvent,\n        initialTarget,\n        rightClick;\n\n    if(!gd._mouseDownTime) gd._mouseDownTime = 0;\n\n    element.style.pointerEvents = 'all';\n\n    element.onmousedown = onStart;\n\n    if(!supportsPassive) {\n        element.ontouchstart = onStart;\n    }\n    else {\n        if(element._ontouchstart) {\n            element.removeEventListener('touchstart', element._ontouchstart);\n        }\n        element._ontouchstart = onStart;\n        element.addEventListener('touchstart', onStart, {passive: false});\n    }\n\n    function _clampFn(dx, dy, minDrag) {\n        if(Math.abs(dx) < minDrag) dx = 0;\n        if(Math.abs(dy) < minDrag) dy = 0;\n        return [dx, dy];\n    }\n\n    var clampFn = options.clampFn || _clampFn;\n\n    function onStart(e) {\n        // make dragging and dragged into properties of gd\n        // so that others can look at and modify them\n        gd._dragged = false;\n        gd._dragging = true;\n        var offset = pointerOffset(e);\n        startX = offset[0];\n        startY = offset[1];\n        initialTarget = e.target;\n        initialEvent = e;\n        rightClick = (e.buttons && e.buttons === 2) || e.ctrlKey;\n\n        newMouseDownTime = (new Date()).getTime();\n        if(newMouseDownTime - gd._mouseDownTime < DBLCLICKDELAY) {\n            // in a click train\n            numClicks += 1;\n        }\n        else {\n            // new click train\n            numClicks = 1;\n            gd._mouseDownTime = newMouseDownTime;\n        }\n\n        if(options.prepFn) options.prepFn(e, startX, startY);\n\n        if(hasHover && !rightClick) {\n            dragCover = coverSlip();\n            dragCover.style.cursor = window.getComputedStyle(element).cursor;\n        }\n        else if(!hasHover) {\n            // document acts as a dragcover for mobile, bc we can't create dragcover dynamically\n            dragCover = document;\n            cursor = window.getComputedStyle(document.documentElement).cursor;\n            document.documentElement.style.cursor = window.getComputedStyle(element).cursor;\n        }\n\n        document.addEventListener('mousemove', onMove);\n        document.addEventListener('mouseup', onDone);\n        document.addEventListener('touchmove', onMove);\n        document.addEventListener('touchend', onDone);\n\n        return Lib.pauseEvent(e);\n    }\n\n    function onMove(e) {\n        var offset = pointerOffset(e);\n        var minDrag = options.minDrag || constants.MINDRAG;\n        var dxdy = clampFn(offset[0] - startX, offset[1] - startY, minDrag);\n        var dx = dxdy[0];\n        var dy = dxdy[1];\n\n        if(dx || dy) {\n            gd._dragged = true;\n            dragElement.unhover(gd);\n        }\n\n        if(gd._dragged && options.moveFn && !rightClick) options.moveFn(dx, dy);\n\n        return Lib.pauseEvent(e);\n    }\n\n    function onDone(e) {\n        document.removeEventListener('mousemove', onMove);\n        document.removeEventListener('mouseup', onDone);\n        document.removeEventListener('touchmove', onMove);\n        document.removeEventListener('touchend', onDone);\n\n        if(hasHover) {\n            Lib.removeElement(dragCover);\n        }\n        else if(cursor) {\n            dragCover.documentElement.style.cursor = cursor;\n            cursor = null;\n        }\n\n        if(!gd._dragging) {\n            gd._dragged = false;\n            return;\n        }\n        gd._dragging = false;\n\n        // don't count as a dblClick unless the mouseUp is also within\n        // the dblclick delay\n        if((new Date()).getTime() - gd._mouseDownTime > DBLCLICKDELAY) {\n            numClicks = Math.max(numClicks - 1, 1);\n        }\n\n        if(gd._dragged) {\n            if(options.doneFn) options.doneFn(e);\n        }\n        else {\n            if(options.clickFn) options.clickFn(numClicks, initialEvent);\n\n            // If we haven't dragged, this should be a click. But because of the\n            // coverSlip changing the element, the natural system might not generate one,\n            // so we need to make our own. But right clicks don't normally generate\n            // click events, only contextmenu events, which happen on mousedown.\n            if(!rightClick) {\n                var e2;\n\n                try {\n                    e2 = new MouseEvent('click', e);\n                }\n                catch(err) {\n                    var offset = pointerOffset(e);\n                    e2 = document.createEvent('MouseEvents');\n                    e2.initMouseEvent('click',\n                        e.bubbles, e.cancelable,\n                        e.view, e.detail,\n                        e.screenX, e.screenY,\n                        offset[0], offset[1],\n                        e.ctrlKey, e.altKey, e.shiftKey, e.metaKey,\n                        e.button, e.relatedTarget);\n                }\n\n                initialTarget.dispatchEvent(e2);\n            }\n        }\n\n        finishDrag(gd);\n\n        gd._dragged = false;\n\n        return Lib.pauseEvent(e);\n    }\n};\n\nfunction coverSlip() {\n    var cover = document.createElement('div');\n\n    cover.className = 'dragcover';\n    var cStyle = cover.style;\n    cStyle.position = 'fixed';\n    cStyle.left = 0;\n    cStyle.right = 0;\n    cStyle.top = 0;\n    cStyle.bottom = 0;\n    cStyle.zIndex = 999999999;\n    cStyle.background = 'none';\n\n    document.body.appendChild(cover);\n\n    return cover;\n}\n\ndragElement.coverSlip = coverSlip;\n\nfunction finishDrag(gd) {\n    gd._dragging = false;\n    if(gd._replotPending) Plotly.plot(gd);\n}\n\nfunction pointerOffset(e) {\n    return mouseOffset(\n        e.changedTouches ? e.changedTouches[0] : e,\n        document.body\n    );\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/dragelement/index.js\n// module id = 18\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n\n// IMPORTANT - default colors should be in hex for compatibility\nexports.defaults = [\n    '#1f77b4',  // muted blue\n    '#ff7f0e',  // safety orange\n    '#2ca02c',  // cooked asparagus green\n    '#d62728',  // brick red\n    '#9467bd',  // muted purple\n    '#8c564b',  // chestnut brown\n    '#e377c2',  // raspberry yogurt pink\n    '#7f7f7f',  // middle gray\n    '#bcbd22',  // curry yellow-green\n    '#17becf'   // blue-teal\n];\n\nexports.defaultLine = '#444';\n\nexports.lightLine = '#eee';\n\nexports.background = '#fff';\n\nexports.borderLine = '#BEC8D9';\n\n// with axis.color and Color.interp we aren't using lightLine\n// itself anymore, instead interpolating between axis.color\n// and the background color using tinycolor.mix. lightFraction\n// gives back exactly lightLine if the other colors are defaults.\nexports.lightFraction = 100 * (0xe - 0x4) / (0xf - 0x4);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/color/attributes.js\n// module id = 19\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fontAttrs = require('../font_attributes');\nvar colorAttrs = require('../../components/color/attributes');\nvar dash = require('../../components/drawing/attributes').dash;\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar constants = require('./constants');\n\n\nmodule.exports = {\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'A single toggle to hide the axis while preserving interaction like dragging.',\n            'Default is true when a cheater plot is present on the axis, otherwise',\n            'false'\n        ].join(' ')\n    },\n    color: {\n        valType: 'color',\n        dflt: colorAttrs.defaultLine,\n        role: 'style',\n        editType: 'ticks',\n        description: [\n            'Sets default for all colors associated with this axis',\n            'all at once: line, font, tick, and grid colors.',\n            'Grid color is lightened by blending this with the plot background',\n            'Individual pieces can override this.'\n        ].join(' ')\n    },\n    title: {\n        valType: 'string',\n        role: 'info',\n        editType: 'ticks',\n        description: 'Sets the title of this axis.'\n    },\n    titlefont: fontAttrs({\n        editType: 'ticks',\n        description: [\n            'Sets this axis\\' title font.'\n        ].join(' ')\n    }),\n    type: {\n        valType: 'enumerated',\n        // '-' means we haven't yet run autotype or couldn't find any data\n        // it gets turned into linear in gd._fullLayout but not copied back\n        // to gd.data like the others are.\n        values: ['-', 'linear', 'log', 'date', 'category'],\n        dflt: '-',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the axis type.',\n            'By default, plotly attempts to determined the axis type',\n            'by looking into the data of the traces that referenced',\n            'the axis in question.'\n        ].join(' ')\n    },\n    autorange: {\n        valType: 'enumerated',\n        values: [true, false, 'reversed'],\n        dflt: true,\n        role: 'style',\n        editType: 'calc',\n        impliedEdits: {'range[0]': undefined, 'range[1]': undefined},\n        description: [\n            'Determines whether or not the range of this axis is',\n            'computed in relation to the input data.',\n            'See `rangemode` for more info.',\n            'If `range` is provided, then `autorange` is set to *false*.'\n        ].join(' ')\n    },\n    rangemode: {\n        valType: 'enumerated',\n        values: ['normal', 'tozero', 'nonnegative'],\n        dflt: 'normal',\n        role: 'style',\n        editType: 'calc',\n        description: [\n            'If *normal*, the range is computed in relation to the extrema',\n            'of the input data.',\n            'If *tozero*`, the range extends to 0,',\n            'regardless of the input data',\n            'If *nonnegative*, the range is non-negative,',\n            'regardless of the input data.'\n        ].join(' ')\n    },\n    range: {\n        valType: 'info_array',\n        role: 'info',\n        items: [\n            {valType: 'any', editType: 'plot', impliedEdits: {'^autorange': false}},\n            {valType: 'any', editType: 'plot', impliedEdits: {'^autorange': false}}\n        ],\n        editType: 'plot',\n        impliedEdits: {'autorange': false},\n        description: [\n            'Sets the range of this axis.',\n            'If the axis `type` is *log*, then you must take the log of your',\n            'desired range (e.g. to set the range from 1 to 100,',\n            'set the range from 0 to 2).',\n            'If the axis `type` is *date*, it should be date strings,',\n            'like date data, though Date objects and unix milliseconds',\n            'will be accepted and converted to strings.',\n            'If the axis `type` is *category*, it should be numbers,',\n            'using the scale where each category is assigned a serial',\n            'number from zero in the order it appears.'\n        ].join(' ')\n    },\n    fixedrange: {\n        valType: 'boolean',\n        dflt: false,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Determines whether or not this axis is zoom-able.',\n            'If true, then zoom is disabled.'\n        ].join(' ')\n    },\n    // scaleanchor: not used directly, just put here for reference\n    // values are any opposite-letter axis id\n    scaleanchor: {\n        valType: 'enumerated',\n        values: [\n            constants.idRegex.x.toString(),\n            constants.idRegex.y.toString()\n        ],\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'If set to another axis id (e.g. `x2`, `y`), the range of this axis',\n            'changes together with the range of the corresponding axis',\n            'such that the scale of pixels per unit is in a constant ratio.',\n            'Both axes are still zoomable, but when you zoom one, the other will',\n            'zoom the same amount, keeping a fixed midpoint.',\n            '`constrain` and `constraintoward` determine how we enforce the constraint.',\n            'You can chain these, ie `yaxis: {scaleanchor: *x*}, xaxis2: {scaleanchor: *y*}`',\n            'but you can only link axes of the same `type`.',\n            'The linked axis can have the opposite letter (to constrain the aspect ratio)',\n            'or the same letter (to match scales across subplots).',\n            'Loops (`yaxis: {scaleanchor: *x*}, xaxis: {scaleanchor: *y*}` or longer) are redundant',\n            'and the last constraint encountered will be ignored to avoid possible',\n            'inconsistent constraints via `scaleratio`.'\n        ].join(' ')\n    },\n    scaleratio: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'If this axis is linked to another by `scaleanchor`, this determines the pixel',\n            'to unit scale ratio. For example, if this value is 10, then every unit on',\n            'this axis spans 10 times the number of pixels as a unit on the linked axis.',\n            'Use this for example to create an elevation profile where the vertical scale',\n            'is exaggerated a fixed amount with respect to the horizontal.'\n        ].join(' ')\n    },\n    constrain: {\n        valType: 'enumerated',\n        values: ['range', 'domain'],\n        dflt: 'range',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'If this axis needs to be compressed (either due to its own `scaleanchor` and',\n            '`scaleratio` or those of the other axis), determines how that happens:',\n            'by increasing the *range* (default), or by decreasing the *domain*.'\n        ].join(' ')\n    },\n    // constraintoward: not used directly, just put here for reference\n    constraintoward: {\n        valType: 'enumerated',\n        values: ['left', 'center', 'right', 'top', 'middle', 'bottom'],\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'If this axis needs to be compressed (either due to its own `scaleanchor` and',\n            '`scaleratio` or those of the other axis), determines which direction we push',\n            'the originally specified plot area. Options are *left*, *center* (default),',\n            'and *right* for x axes, and *top*, *middle* (default), and *bottom* for y axes.'\n        ].join(' ')\n    },\n    // ticks\n    tickmode: {\n        valType: 'enumerated',\n        values: ['auto', 'linear', 'array'],\n        role: 'info',\n        editType: 'ticks',\n        impliedEdits: {tick0: undefined, dtick: undefined},\n        description: [\n            'Sets the tick mode for this axis.',\n            'If *auto*, the number of ticks is set via `nticks`.',\n            'If *linear*, the placement of the ticks is determined by',\n            'a starting position `tick0` and a tick step `dtick`',\n            '(*linear* is the default value if `tick0` and `dtick` are provided).',\n            'If *array*, the placement of the ticks is set via `tickvals`',\n            'and the tick text is `ticktext`.',\n            '(*array* is the default value if `tickvals` is provided).'\n        ].join(' ')\n    },\n    nticks: {\n        valType: 'integer',\n        min: 0,\n        dflt: 0,\n        role: 'style',\n        editType: 'ticks',\n        description: [\n            'Specifies the maximum number of ticks for the particular axis.',\n            'The actual number of ticks will be chosen automatically to be',\n            'less than or equal to `nticks`.',\n            'Has an effect only if `tickmode` is set to *auto*.'\n        ].join(' ')\n    },\n    tick0: {\n        valType: 'any',\n        role: 'style',\n        editType: 'ticks',\n        impliedEdits: {tickmode: 'linear'},\n        description: [\n            'Sets the placement of the first tick on this axis.',\n            'Use with `dtick`.',\n            'If the axis `type` is *log*, then you must take the log of your starting tick',\n            '(e.g. to set the starting tick to 100, set the `tick0` to 2)',\n            'except when `dtick`=*L<f>* (see `dtick` for more info).',\n            'If the axis `type` is *date*, it should be a date string, like date data.',\n            'If the axis `type` is *category*, it should be a number, using the scale where',\n            'each category is assigned a serial number from zero in the order it appears.'\n        ].join(' ')\n    },\n    dtick: {\n        valType: 'any',\n        role: 'style',\n        editType: 'ticks',\n        impliedEdits: {tickmode: 'linear'},\n        description: [\n            'Sets the step in-between ticks on this axis. Use with `tick0`.',\n            'Must be a positive number, or special strings available to *log* and *date* axes.',\n            'If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n',\n            'is the tick number. For example,',\n            'to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1.',\n            'To set tick marks at 1, 100, 10000, ... set dtick to 2.',\n            'To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433.',\n            '*log* has several special values; *L<f>*, where `f` is a positive number,',\n            'gives ticks linearly spaced in value (but not position).',\n            'For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc.',\n            'To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5).',\n            '`tick0` is ignored for *D1* and *D2*.',\n            'If the axis `type` is *date*, then you must convert the time to milliseconds.',\n            'For example, to set the interval between ticks to one day,',\n            'set `dtick` to 86400000.0.',\n            '*date* also has special values *M<n>* gives ticks spaced by a number of months.',\n            '`n` must be a positive integer.',\n            'To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*.',\n            'To set ticks every 4 years, set `dtick` to *M48*'\n        ].join(' ')\n    },\n    tickvals: {\n        valType: 'data_array',\n        editType: 'ticks',\n        description: [\n            'Sets the values at which ticks on this axis appear.',\n            'Only has an effect if `tickmode` is set to *array*.',\n            'Used with `ticktext`.'\n        ].join(' ')\n    },\n    ticktext: {\n        valType: 'data_array',\n        editType: 'ticks',\n        description: [\n            'Sets the text displayed at the ticks position via `tickvals`.',\n            'Only has an effect if `tickmode` is set to *array*.',\n            'Used with `tickvals`.'\n        ].join(' ')\n    },\n    ticks: {\n        valType: 'enumerated',\n        values: ['outside', 'inside', ''],\n        role: 'style',\n        editType: 'ticks',\n        description: [\n            'Determines whether ticks are drawn or not.',\n            'If **, this axis\\' ticks are not drawn.',\n            'If *outside* (*inside*), this axis\\' are drawn outside (inside)',\n            'the axis lines.'\n        ].join(' ')\n    },\n    mirror: {\n        valType: 'enumerated',\n        values: [true, 'ticks', false, 'all', 'allticks'],\n        dflt: false,\n        role: 'style',\n        editType: 'ticks+layoutstyle',\n        description: [\n            'Determines if the axis lines or/and ticks are mirrored to',\n            'the opposite side of the plotting area.',\n            'If *true*, the axis lines are mirrored.',\n            'If *ticks*, the axis lines and ticks are mirrored.',\n            'If *false*, mirroring is disable.',\n            'If *all*, axis lines are mirrored on all shared-axes subplots.',\n            'If *allticks*, axis lines and ticks are mirrored',\n            'on all shared-axes subplots.'\n        ].join(' ')\n    },\n    ticklen: {\n        valType: 'number',\n        min: 0,\n        dflt: 5,\n        role: 'style',\n        editType: 'ticks',\n        description: 'Sets the tick length (in px).'\n    },\n    tickwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        role: 'style',\n        editType: 'ticks',\n        description: 'Sets the tick width (in px).'\n    },\n    tickcolor: {\n        valType: 'color',\n        dflt: colorAttrs.defaultLine,\n        role: 'style',\n        editType: 'ticks',\n        description: 'Sets the tick color.'\n    },\n    showticklabels: {\n        valType: 'boolean',\n        dflt: true,\n        role: 'style',\n        editType: 'ticks',\n        description: 'Determines whether or not the tick labels are drawn.'\n    },\n    showspikes: {\n        valType: 'boolean',\n        dflt: false,\n        role: 'style',\n        editType: 'modebar',\n        description: [\n            'Determines whether or not spikes (aka droplines) are drawn for this axis.',\n            'Note: This only takes affect when hovermode = closest'\n        ].join(' ')\n    },\n    spikecolor: {\n        valType: 'color',\n        dflt: null,\n        role: 'style',\n        editType: 'none',\n        description: 'Sets the spike color. If undefined, will use the series color'\n    },\n    spikethickness: {\n        valType: 'number',\n        dflt: 3,\n        role: 'style',\n        editType: 'none',\n        description: 'Sets the width (in px) of the zero line.'\n    },\n    spikedash: extendFlat({}, dash, {dflt: 'dash', editType: 'none'}),\n    spikemode: {\n        valType: 'flaglist',\n        flags: ['toaxis', 'across', 'marker'],\n        role: 'style',\n        dflt: 'toaxis',\n        editType: 'none',\n        description: [\n            'Determines the drawing mode for the spike line',\n            'If *toaxis*, the line is drawn from the data point to the axis the ',\n            'series is plotted on.',\n\n            'If *across*, the line is drawn across the entire plot area, and',\n            'supercedes *toaxis*.',\n\n            'If *marker*, then a marker dot is drawn on the axis the series is',\n            'plotted on'\n        ].join(' ')\n    },\n    spikesnap: {\n        valType: 'enumerated',\n        values: ['data', 'cursor'],\n        dflt: 'data',\n        role: 'style',\n        editType: 'none',\n        description: 'Determines whether spikelines are stuck to the cursor or to the closest datapoints.'\n    },\n    tickfont: fontAttrs({\n        editType: 'ticks',\n        description: 'Sets the tick font.'\n    }),\n    tickangle: {\n        valType: 'angle',\n        dflt: 'auto',\n        role: 'style',\n        editType: 'ticks',\n        description: [\n            'Sets the angle of the tick labels with respect to the horizontal.',\n            'For example, a `tickangle` of -90 draws the tick labels',\n            'vertically.'\n        ].join(' ')\n    },\n    tickprefix: {\n        valType: 'string',\n        dflt: '',\n        role: 'style',\n        editType: 'ticks',\n        description: 'Sets a tick label prefix.'\n    },\n    showtickprefix: {\n        valType: 'enumerated',\n        values: ['all', 'first', 'last', 'none'],\n        dflt: 'all',\n        role: 'style',\n        editType: 'ticks',\n        description: [\n            'If *all*, all tick labels are displayed with a prefix.',\n            'If *first*, only the first tick is displayed with a prefix.',\n            'If *last*, only the last tick is displayed with a suffix.',\n            'If *none*, tick prefixes are hidden.'\n        ].join(' ')\n    },\n    ticksuffix: {\n        valType: 'string',\n        dflt: '',\n        role: 'style',\n        editType: 'ticks',\n        description: 'Sets a tick label suffix.'\n    },\n    showticksuffix: {\n        valType: 'enumerated',\n        values: ['all', 'first', 'last', 'none'],\n        dflt: 'all',\n        role: 'style',\n        editType: 'ticks',\n        description: 'Same as `showtickprefix` but for tick suffixes.'\n    },\n    showexponent: {\n        valType: 'enumerated',\n        values: ['all', 'first', 'last', 'none'],\n        dflt: 'all',\n        role: 'style',\n        editType: 'ticks',\n        description: [\n            'If *all*, all exponents are shown besides their significands.',\n            'If *first*, only the exponent of the first tick is shown.',\n            'If *last*, only the exponent of the last tick is shown.',\n            'If *none*, no exponents appear.'\n        ].join(' ')\n    },\n    exponentformat: {\n        valType: 'enumerated',\n        values: ['none', 'e', 'E', 'power', 'SI', 'B'],\n        dflt: 'B',\n        role: 'style',\n        editType: 'ticks',\n        description: [\n            'Determines a formatting rule for the tick exponents.',\n            'For example, consider the number 1,000,000,000.',\n            'If *none*, it appears as 1,000,000,000.',\n            'If *e*, 1e+9.',\n            'If *E*, 1E+9.',\n            'If *power*, 1x10^9 (with 9 in a super script).',\n            'If *SI*, 1G.',\n            'If *B*, 1B.'\n        ].join(' ')\n    },\n    separatethousands: {\n        valType: 'boolean',\n        dflt: false,\n        role: 'style',\n        editType: 'ticks',\n        description: [\n            'If \"true\", even 4-digit integers are separated'\n        ].join(' ')\n    },\n    tickformat: {\n        valType: 'string',\n        dflt: '',\n        role: 'style',\n        editType: 'ticks',\n        description: [\n            'Sets the tick label formatting rule using d3 formatting mini-languages',\n            'which are very similar to those in Python. For numbers, see:',\n            'https://github.com/d3/d3-format/blob/master/README.md#locale_format',\n            'And for dates see:',\n            'https://github.com/d3/d3-time-format/blob/master/README.md#locale_format',\n            'We add one item to d3\\'s date formatter: *%{n}f* for fractional seconds',\n            'with n digits. For example, *2016-10-13 09:15:23.456* with tickformat',\n            '*%H~%M~%S.%2f* would display *09~15~23.46*'\n        ].join(' ')\n    },\n    tickformatstops: {\n        _isLinkedToArray: 'tickformatstop',\n\n        dtickrange: {\n            valType: 'info_array',\n            role: 'info',\n            items: [\n                {valType: 'any', editType: 'ticks'},\n                {valType: 'any', editType: 'ticks'}\n            ],\n            editType: 'ticks',\n            description: [\n                'range [*min*, *max*], where *min*, *max* - dtick values',\n                'which describe some zoom level, it is possible to omit *min*',\n                'or *max* value by passing *null*'\n            ].join(' ')\n        },\n        value: {\n            valType: 'string',\n            dflt: '',\n            role: 'style',\n            editType: 'ticks',\n            description: [\n                'string - dtickformat for described zoom level, the same as *tickformat*'\n            ].join(' ')\n        },\n        editType: 'ticks'\n    },\n    hoverformat: {\n        valType: 'string',\n        dflt: '',\n        role: 'style',\n        editType: 'none',\n        description: [\n            'Sets the hover text formatting rule using d3 formatting mini-languages',\n            'which are very similar to those in Python. For numbers, see:',\n            'https://github.com/d3/d3-format/blob/master/README.md#locale_format',\n            'And for dates see:',\n            'https://github.com/d3/d3-time-format/blob/master/README.md#locale_format',\n            'We add one item to d3\\'s date formatter: *%{n}f* for fractional seconds',\n            'with n digits. For example, *2016-10-13 09:15:23.456* with tickformat',\n            '*%H~%M~%S.%2f* would display *09~15~23.46*'\n        ].join(' ')\n    },\n    // lines and grids\n    showline: {\n        valType: 'boolean',\n        dflt: false,\n        role: 'style',\n        editType: 'layoutstyle',\n        description: [\n            'Determines whether or not a line bounding this axis is drawn.'\n        ].join(' ')\n    },\n    linecolor: {\n        valType: 'color',\n        dflt: colorAttrs.defaultLine,\n        role: 'style',\n        editType: 'layoutstyle',\n        description: 'Sets the axis line color.'\n    },\n    linewidth: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        role: 'style',\n        editType: 'ticks+layoutstyle',\n        description: 'Sets the width (in px) of the axis line.'\n    },\n    showgrid: {\n        valType: 'boolean',\n        role: 'style',\n        editType: 'ticks',\n        description: [\n            'Determines whether or not grid lines are drawn.',\n            'If *true*, the grid lines are drawn at every tick mark.'\n        ].join(' ')\n    },\n    gridcolor: {\n        valType: 'color',\n        dflt: colorAttrs.lightLine,\n        role: 'style',\n        editType: 'ticks',\n        description: 'Sets the color of the grid lines.'\n    },\n    gridwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        role: 'style',\n        editType: 'ticks',\n        description: 'Sets the width (in px) of the grid lines.'\n    },\n    zeroline: {\n        valType: 'boolean',\n        role: 'style',\n        editType: 'ticks',\n        description: [\n            'Determines whether or not a line is drawn at along the 0 value',\n            'of this axis.',\n            'If *true*, the zero line is drawn on top of the grid lines.'\n        ].join(' ')\n    },\n    zerolinecolor: {\n        valType: 'color',\n        dflt: colorAttrs.defaultLine,\n        role: 'style',\n        editType: 'ticks',\n        description: 'Sets the line color of the zero line.'\n    },\n    zerolinewidth: {\n        valType: 'number',\n        dflt: 1,\n        role: 'style',\n        editType: 'ticks',\n        description: 'Sets the width (in px) of the zero line.'\n    },\n    // positioning attributes\n    // anchor: not used directly, just put here for reference\n    // values are any opposite-letter axis id\n    anchor: {\n        valType: 'enumerated',\n        values: [\n            'free',\n            constants.idRegex.x.toString(),\n            constants.idRegex.y.toString()\n        ],\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'If set to an opposite-letter axis id (e.g. `x2`, `y`), this axis is bound to',\n            'the corresponding opposite-letter axis.',\n            'If set to *free*, this axis\\' position is determined by `position`.'\n        ].join(' ')\n    },\n    // side: not used directly, as values depend on direction\n    // values are top, bottom for x axes, and left, right for y\n    side: {\n        valType: 'enumerated',\n        values: ['top', 'bottom', 'left', 'right'],\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Determines whether a x (y) axis is positioned',\n            'at the *bottom* (*left*) or *top* (*right*)',\n            'of the plotting area.'\n        ].join(' ')\n    },\n    // overlaying: not used directly, just put here for reference\n    // values are false and any other same-letter axis id that's not\n    // itself overlaying anything\n    overlaying: {\n        valType: 'enumerated',\n        values: [\n            'free',\n            constants.idRegex.x.toString(),\n            constants.idRegex.y.toString()\n        ],\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'If set a same-letter axis id, this axis is overlaid on top of',\n            'the corresponding same-letter axis.',\n            'If *false*, this axis does not overlay any same-letter axes.'\n        ].join(' ')\n    },\n    layer: {\n        valType: 'enumerated',\n        values: ['above traces', 'below traces'],\n        dflt: 'above traces',\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Sets the layer on which this axis is displayed.',\n            'If *above traces*, this axis is displayed above all the subplot\\'s traces',\n            'If *below traces*, this axis is displayed below all the subplot\\'s traces,',\n            'but above the grid lines.',\n            'Useful when used together with scatter-like traces with `cliponaxis`',\n            'set to *false* to show markers and/or text nodes above this axis.'\n        ].join(' ')\n    },\n    domain: {\n        valType: 'info_array',\n        role: 'info',\n        items: [\n            {valType: 'number', min: 0, max: 1, editType: 'calc'},\n            {valType: 'number', min: 0, max: 1, editType: 'calc'}\n        ],\n        dflt: [0, 1],\n        editType: 'calc',\n        description: [\n            'Sets the domain of this axis (in plot fraction).'\n        ].join(' ')\n    },\n    position: {\n        valType: 'number',\n        min: 0,\n        max: 1,\n        dflt: 0,\n        role: 'style',\n        editType: 'plot',\n        description: [\n            'Sets the position of this axis in the plotting space',\n            '(in normalized coordinates).',\n            'Only has an effect if `anchor` is set to *free*.'\n        ].join(' ')\n    },\n    categoryorder: {\n        valType: 'enumerated',\n        values: [\n            'trace', 'category ascending', 'category descending', 'array'\n            /* , 'value ascending', 'value descending'*/ // value ascending / descending to be implemented later\n        ],\n        dflt: 'trace',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Specifies the ordering logic for the case of categorical variables.',\n            'By default, plotly uses *trace*, which specifies the order that is present in the data supplied.',\n            'Set `categoryorder` to *category ascending* or *category descending* if order should be determined by',\n            'the alphanumerical order of the category names.',\n            /* 'Set `categoryorder` to *value ascending* or *value descending* if order should be determined by the',\n            'numerical order of the values.',*/ // // value ascending / descending to be implemented later\n            'Set `categoryorder` to *array* to derive the ordering from the attribute `categoryarray`. If a category',\n            'is not found in the `categoryarray` array, the sorting behavior for that attribute will be identical to',\n            'the *trace* mode. The unspecified categories will follow the categories in `categoryarray`.'\n        ].join(' ')\n    },\n    categoryarray: {\n        valType: 'data_array',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the order in which categories on this axis appear.',\n            'Only has an effect if `categoryorder` is set to *array*.',\n            'Used with `categoryorder`.'\n        ].join(' ')\n    },\n    editType: 'calc',\n\n    _deprecated: {\n        autotick: {\n            valType: 'boolean',\n            role: 'info',\n            editType: 'ticks',\n            description: [\n                'Obsolete.',\n                'Set `tickmode` to *auto* for old `autotick` *true* behavior.',\n                'Set `tickmode` to *linear* for `autotick` *false*.'\n            ].join(' ')\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/layout_attributes.js\n// module id = 20\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar errorBars = module.exports = {};\n\nerrorBars.attributes = require('./attributes');\n\nerrorBars.supplyDefaults = require('./defaults');\n\nerrorBars.calc = require('./calc');\n\nerrorBars.calcFromTrace = function(trace, layout) {\n    var x = trace.x || [],\n        y = trace.y || [],\n        len = x.length || y.length;\n\n    var calcdataMock = new Array(len);\n\n    for(var i = 0; i < len; i++) {\n        calcdataMock[i] = {\n            x: x[i],\n            y: y[i]\n        };\n    }\n\n    calcdataMock[0].trace = trace;\n\n    errorBars.calc({\n        calcdata: [calcdataMock],\n        _fullLayout: layout\n    });\n\n    return calcdataMock;\n};\n\nerrorBars.plot = require('./plot');\n\nerrorBars.style = require('./style');\n\nerrorBars.hoverInfo = function(calcPoint, trace, hoverPoint) {\n    if((trace.error_y || {}).visible) {\n        hoverPoint.yerr = calcPoint.yh - calcPoint.y;\n        if(!trace.error_y.symmetric) hoverPoint.yerrneg = calcPoint.y - calcPoint.ys;\n    }\n    if((trace.error_x || {}).visible) {\n        hoverPoint.xerr = calcPoint.xh - calcPoint.x;\n        if(!trace.error_x.symmetric) hoverPoint.xerrneg = calcPoint.x - calcPoint.xs;\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/errorbars/index.js\n// module id = 21\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Lib = require('../../lib');\nvar dragElement = require('../dragelement');\nvar helpers = require('./helpers');\nvar layoutAttributes = require('./layout_attributes');\n\nmodule.exports = {\n    moduleType: 'component',\n    name: 'fx',\n\n    constants: require('./constants'),\n    schema: {\n        layout: layoutAttributes\n    },\n\n    attributes: require('./attributes'),\n    layoutAttributes: layoutAttributes,\n\n    supplyLayoutGlobalDefaults: require('./layout_global_defaults'),\n    supplyDefaults: require('./defaults'),\n    supplyLayoutDefaults: require('./layout_defaults'),\n\n    calc: require('./calc'),\n\n    getDistanceFunction: helpers.getDistanceFunction,\n    getClosest: helpers.getClosest,\n    inbox: helpers.inbox,\n    quadrature: helpers.quadrature,\n    appendArrayPointValue: helpers.appendArrayPointValue,\n\n    castHoverOption: castHoverOption,\n    castHoverinfo: castHoverinfo,\n\n    hover: require('./hover').hover,\n    unhover: dragElement.unhover,\n\n    loneHover: require('./hover').loneHover,\n    loneUnhover: loneUnhover,\n\n    click: require('./click')\n};\n\nfunction loneUnhover(containerOrSelection) {\n    // duck type whether the arg is a d3 selection because ie9 doesn't\n    // handle instanceof like modern browsers do.\n    var selection = Lib.isD3Selection(containerOrSelection) ?\n            containerOrSelection :\n            d3.select(containerOrSelection);\n\n    selection.selectAll('g.hovertext').remove();\n    selection.selectAll('.spikeline').remove();\n}\n\n// helpers for traces that use Fx.loneHover\n\nfunction castHoverOption(trace, ptNumber, attr) {\n    return Lib.castOption(trace, ptNumber, 'hoverlabel.' + attr);\n}\n\nfunction castHoverinfo(trace, fullLayout, ptNumber) {\n    function _coerce(val) {\n        return Lib.coerceHoverinfo({hoverinfo: val}, {_module: trace._module}, fullLayout);\n    }\n\n    return Lib.castOption(trace, ptNumber, 'hoverinfo', _coerce);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/fx/index.js\n// module id = 22\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n\nmodule.exports = {\n    'Greys': [\n        [0, 'rgb(0,0,0)'], [1, 'rgb(255,255,255)']\n    ],\n\n    'YlGnBu': [\n        [0, 'rgb(8,29,88)'], [0.125, 'rgb(37,52,148)'],\n        [0.25, 'rgb(34,94,168)'], [0.375, 'rgb(29,145,192)'],\n        [0.5, 'rgb(65,182,196)'], [0.625, 'rgb(127,205,187)'],\n        [0.75, 'rgb(199,233,180)'], [0.875, 'rgb(237,248,217)'],\n        [1, 'rgb(255,255,217)']\n    ],\n\n    'Greens': [\n        [0, 'rgb(0,68,27)'], [0.125, 'rgb(0,109,44)'],\n        [0.25, 'rgb(35,139,69)'], [0.375, 'rgb(65,171,93)'],\n        [0.5, 'rgb(116,196,118)'], [0.625, 'rgb(161,217,155)'],\n        [0.75, 'rgb(199,233,192)'], [0.875, 'rgb(229,245,224)'],\n        [1, 'rgb(247,252,245)']\n    ],\n\n    'YlOrRd': [\n        [0, 'rgb(128,0,38)'], [0.125, 'rgb(189,0,38)'],\n        [0.25, 'rgb(227,26,28)'], [0.375, 'rgb(252,78,42)'],\n        [0.5, 'rgb(253,141,60)'], [0.625, 'rgb(254,178,76)'],\n        [0.75, 'rgb(254,217,118)'], [0.875, 'rgb(255,237,160)'],\n        [1, 'rgb(255,255,204)']\n    ],\n\n    'Bluered': [\n        [0, 'rgb(0,0,255)'], [1, 'rgb(255,0,0)']\n    ],\n\n    // modified RdBu based on\n    // www.sandia.gov/~kmorel/documents/ColorMaps/ColorMapsExpanded.pdf\n    'RdBu': [\n        [0, 'rgb(5,10,172)'], [0.35, 'rgb(106,137,247)'],\n        [0.5, 'rgb(190,190,190)'], [0.6, 'rgb(220,170,132)'],\n        [0.7, 'rgb(230,145,90)'], [1, 'rgb(178,10,28)']\n    ],\n\n    // Scale for non-negative numeric values\n    'Reds': [\n        [0, 'rgb(220,220,220)'], [0.2, 'rgb(245,195,157)'],\n        [0.4, 'rgb(245,160,105)'], [1, 'rgb(178,10,28)']\n    ],\n\n    // Scale for non-positive numeric values\n    'Blues': [\n        [0, 'rgb(5,10,172)'], [0.35, 'rgb(40,60,190)'],\n        [0.5, 'rgb(70,100,245)'], [0.6, 'rgb(90,120,245)'],\n        [0.7, 'rgb(106,137,247)'], [1, 'rgb(220,220,220)']\n    ],\n\n    'Picnic': [\n        [0, 'rgb(0,0,255)'], [0.1, 'rgb(51,153,255)'],\n        [0.2, 'rgb(102,204,255)'], [0.3, 'rgb(153,204,255)'],\n        [0.4, 'rgb(204,204,255)'], [0.5, 'rgb(255,255,255)'],\n        [0.6, 'rgb(255,204,255)'], [0.7, 'rgb(255,153,255)'],\n        [0.8, 'rgb(255,102,204)'], [0.9, 'rgb(255,102,102)'],\n        [1, 'rgb(255,0,0)']\n    ],\n\n    'Rainbow': [\n        [0, 'rgb(150,0,90)'], [0.125, 'rgb(0,0,200)'],\n        [0.25, 'rgb(0,25,255)'], [0.375, 'rgb(0,152,255)'],\n        [0.5, 'rgb(44,255,150)'], [0.625, 'rgb(151,255,0)'],\n        [0.75, 'rgb(255,234,0)'], [0.875, 'rgb(255,111,0)'],\n        [1, 'rgb(255,0,0)']\n    ],\n\n    'Portland': [\n        [0, 'rgb(12,51,131)'], [0.25, 'rgb(10,136,186)'],\n        [0.5, 'rgb(242,211,56)'], [0.75, 'rgb(242,143,56)'],\n        [1, 'rgb(217,30,30)']\n    ],\n\n    'Jet': [\n        [0, 'rgb(0,0,131)'], [0.125, 'rgb(0,60,170)'],\n        [0.375, 'rgb(5,255,255)'], [0.625, 'rgb(255,255,0)'],\n        [0.875, 'rgb(250,0,0)'], [1, 'rgb(128,0,0)']\n    ],\n\n    'Hot': [\n        [0, 'rgb(0,0,0)'], [0.3, 'rgb(230,0,0)'],\n        [0.6, 'rgb(255,210,0)'], [1, 'rgb(255,255,255)']\n    ],\n\n    'Blackbody': [\n        [0, 'rgb(0,0,0)'], [0.2, 'rgb(230,0,0)'],\n        [0.4, 'rgb(230,210,0)'], [0.7, 'rgb(255,255,255)'],\n        [1, 'rgb(160,200,255)']\n    ],\n\n    'Earth': [\n        [0, 'rgb(0,0,130)'], [0.1, 'rgb(0,180,180)'],\n        [0.2, 'rgb(40,210,40)'], [0.4, 'rgb(230,230,50)'],\n        [0.6, 'rgb(120,70,20)'], [1, 'rgb(255,255,255)']\n    ],\n\n    'Electric': [\n        [0, 'rgb(0,0,0)'], [0.15, 'rgb(30,0,100)'],\n        [0.4, 'rgb(120,0,100)'], [0.6, 'rgb(160,90,0)'],\n        [0.8, 'rgb(230,200,0)'], [1, 'rgb(255,250,220)']\n    ],\n\n    'Viridis': [\n        [0, '#440154'], [0.06274509803921569, '#48186a'],\n        [0.12549019607843137, '#472d7b'], [0.18823529411764706, '#424086'],\n        [0.25098039215686274, '#3b528b'], [0.3137254901960784, '#33638d'],\n        [0.3764705882352941, '#2c728e'], [0.4392156862745098, '#26828e'],\n        [0.5019607843137255, '#21918c'], [0.5647058823529412, '#1fa088'],\n        [0.6274509803921569, '#28ae80'], [0.6901960784313725, '#3fbc73'],\n        [0.7529411764705882, '#5ec962'], [0.8156862745098039, '#84d44b'],\n        [0.8784313725490196, '#addc30'], [0.9411764705882353, '#d8e219'],\n        [1, '#fde725']\n    ],\n\n    'Cividis': [\n        [0.000000, 'rgb(0,32,76)'], [0.058824, 'rgb(0,42,102)'],\n        [0.117647, 'rgb(0,52,110)'], [0.176471, 'rgb(39,63,108)'],\n        [0.235294, 'rgb(60,74,107)'], [0.294118, 'rgb(76,85,107)'],\n        [0.352941, 'rgb(91,95,109)'], [0.411765, 'rgb(104,106,112)'],\n        [0.470588, 'rgb(117,117,117)'], [0.529412, 'rgb(131,129,120)'],\n        [0.588235, 'rgb(146,140,120)'], [0.647059, 'rgb(161,152,118)'],\n        [0.705882, 'rgb(176,165,114)'], [0.764706, 'rgb(192,177,109)'],\n        [0.823529, 'rgb(209,191,102)'], [0.882353, 'rgb(225,204,92)'],\n        [0.941176, 'rgb(243,219,79)'], [1.000000, 'rgb(255,233,69)']\n    ]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/scales.js\n// module id = 23\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../lib');\nvar extendFlat = Lib.extendFlat;\nvar isPlainObject = Lib.isPlainObject;\n\nvar traceOpts = {\n    valType: 'flaglist',\n    extras: ['none'],\n    flags: ['calc', 'calcIfAutorange', 'clearAxisTypes', 'plot', 'style', 'colorbars'],\n    description: [\n        'trace attributes should include an `editType` string matching this flaglist.',\n        '*calc* is the most extensive: a full `Plotly.plot` starting by clearing `gd.calcdata`',\n        'to force it to be regenerated',\n        '*calcIfAutorange* does a full `Plotly.plot`, but only clears and redoes `gd.calcdata`',\n        'if there is at least one autoranged axis.',\n        '*clearAxisTypes* resets the types of the axes this trace is on, because new data could',\n        'cause the automatic axis type detection to change. Log type will not be cleared, as that',\n        'is never automatically chosen so must have been user-specified.',\n        '*plot* calls `Plotly.plot` but without first clearing `gd.calcdata`.',\n        '*style* only calls `module.style` for all trace modules and redraws the legend.',\n        '*colorbars* only redraws colorbars.'\n    ].join(' ')\n};\n\nvar layoutOpts = {\n    valType: 'flaglist',\n    extras: ['none'],\n    flags: [\n        'calc', 'calcIfAutorange', 'plot', 'legend', 'ticks',\n        'layoutstyle', 'modebar', 'camera', 'arraydraw'\n    ],\n    description: [\n        'layout attributes should include an `editType` string matching this flaglist.',\n        '*calc* is the most extensive: a full `Plotly.plot` starting by clearing `gd.calcdata`',\n        'to force it to be regenerated',\n        '*calcIfAutorange* does a full `Plotly.plot`, but only clears and redoes `gd.calcdata`',\n        'if there is at least one autoranged axis.',\n        '*plot* calls `Plotly.plot` but without first clearing `gd.calcdata`.',\n        '*legend* only redraws the legend.',\n        '*ticks* only redraws axis ticks, labels, and gridlines.',\n        '*layoutstyle* reapplies global and SVG cartesian axis styles.',\n        '*modebar* just updates the modebar.',\n        '*camera* just updates the camera settings for gl3d scenes.',\n        '*arraydraw* allows component arrays to invoke the redraw routines just for the',\n        'component(s) that changed.'\n    ].join(' ')\n};\n\n// flags for inside restyle/relayout include a few extras\n// that shouldn't be used in attributes, to deal with certain\n// combinations and conditionals efficiently\nvar traceEditTypeFlags = traceOpts.flags.slice()\n    .concat(['clearCalc', 'fullReplot']);\n\nvar layoutEditTypeFlags = layoutOpts.flags.slice()\n    .concat('layoutReplot');\n\nmodule.exports = {\n    traces: traceOpts,\n    layout: layoutOpts,\n    /*\n     * default (all false) edit flags for restyle (traces)\n     * creates a new object each call, so the caller can mutate freely\n     */\n    traceFlags: function() { return falseObj(traceEditTypeFlags); },\n\n    /*\n     * default (all false) edit flags for relayout\n     * creates a new object each call, so the caller can mutate freely\n     */\n    layoutFlags: function() { return falseObj(layoutEditTypeFlags); },\n\n    /*\n     * update `flags` with the `editType` values found in `attr`\n     */\n    update: function(flags, attr) {\n        var editType = attr.editType;\n        if(editType && editType !== 'none') {\n            var editTypeParts = editType.split('+');\n            for(var i = 0; i < editTypeParts.length; i++) {\n                flags[editTypeParts[i]] = true;\n            }\n        }\n    },\n\n    overrideAll: overrideAll\n};\n\nfunction falseObj(keys) {\n    var out = {};\n    for(var i = 0; i < keys.length; i++) out[keys[i]] = false;\n    return out;\n}\n\n/**\n * For attributes that are largely copied from elsewhere into a plot type that doesn't\n * support partial redraws - overrides the editType field of all attributes in the object\n *\n * @param {object} attrs: the attributes to override. Will not be mutated.\n * @param {string} editTypeOverride: the new editType to use\n * @param {'nested'|'from-root'} overrideContainers:\n *   - 'nested' will override editType for nested containers but not the root.\n *   - 'from-root' will also override editType of the root container.\n *   Containers below the absolute top level (trace or layout root) DO need an\n *   editType even if they are not `valObject`s themselves (eg `scatter.marker`)\n *   to handle the case where you edit the whole container.\n *\n * @return {object} a new attributes object with `editType` modified as directed\n */\nfunction overrideAll(attrs, editTypeOverride, overrideContainers) {\n    var out = extendFlat({}, attrs);\n    for(var key in out) {\n        var attr = out[key];\n        if(isPlainObject(attr)) {\n            out[key] = overrideOne(attr, editTypeOverride, overrideContainers, key);\n        }\n    }\n    if(overrideContainers === 'from-root') out.editType = editTypeOverride;\n\n    return out;\n}\n\nfunction overrideOne(attr, editTypeOverride, overrideContainers, key) {\n    if(attr.valType) {\n        var out = extendFlat({}, attr);\n        out.editType = editTypeOverride;\n\n        if(Array.isArray(attr.items)) {\n            out.items = new Array(attr.items.length);\n            for(var i = 0; i < attr.items.length; i++) {\n                out.items[i] = overrideOne(attr.items[i], editTypeOverride, 'from-root');\n            }\n        }\n        return out;\n    }\n    else {\n        // don't provide an editType for the _deprecated container\n        return overrideAll(attr, editTypeOverride,\n            (key.charAt(0) === '_') ? 'nested' : 'from-root');\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plot_api/edit_types.js\n// module id = 24\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\n\nvar isValidScale = require('./is_valid_scale');\n\n\nmodule.exports = function hasColorscale(trace, containerStr) {\n    var container = containerStr ?\n            Lib.nestedProperty(trace, containerStr).get() || {} :\n            trace,\n        color = container.color,\n        isArrayWithOneNumber = false;\n\n    if(Array.isArray(color)) {\n        for(var i = 0; i < color.length; i++) {\n            if(isNumeric(color[i])) {\n                isArrayWithOneNumber = true;\n                break;\n            }\n        }\n    }\n\n    return (\n        Lib.isPlainObject(container) && (\n            isArrayWithOneNumber ||\n            container.showscale === true ||\n            (isNumeric(container.cmin) && isNumeric(container.cmax)) ||\n            isValidScale(container.colorscale) ||\n            Lib.isPlainObject(container.colorbar)\n        )\n    );\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/has_colorscale.js\n// module id = 25\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\nexports.xmlns = 'http://www.w3.org/2000/xmlns/';\nexports.svg = 'http://www.w3.org/2000/svg';\nexports.xlink = 'http://www.w3.org/1999/xlink';\n\n// the 'old' d3 quirk got fix in v3.5.7\n// https://github.com/mbostock/d3/commit/a6f66e9dd37f764403fc7c1f26be09ab4af24fed\nexports.svgAttrs = {\n    xmlns: exports.svg,\n    'xmlns:xlink': exports.xlink\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/constants/xmlns_namespaces.js\n// module id = 26\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n// works with our CSS cursor classes (see css/_cursor.scss)\n// to apply cursors to d3 single-element selections.\n// omit cursor to revert to the default.\nmodule.exports = function setCursor(el3, csr) {\n    (el3.attr('class') || '').split(' ').forEach(function(cls) {\n        if(cls.indexOf('cursor-') === 0) el3.classed(cls, false);\n    });\n\n    if(csr) el3.classed('cursor-' + csr, true);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/setcursor.js\n// module id = 27\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../lib');\n\n\n/** Convenience wrapper for making array container logic DRY and consistent\n *\n * @param {object} parentObjIn\n *  user input object where the container in question is linked\n *  (i.e. either a user trace object or the user layout object)\n *\n * @param {object} parentObjOut\n *  full object where the coerced container will be linked\n *  (i.e. either a full trace object or the full layout object)\n *\n * @param {object} opts\n *  options object:\n *   - name {string}\n *      name of the key linking the container in question\n *   - handleItemDefaults {function}\n *      defaults method to be called on each item in the array container in question\n *\n *      Its arguments are:\n *          - itemIn {object} item in user layout\n *          - itemOut {object} item in full layout\n *          - parentObj {object} (as in closure)\n *          - opts {object} (as in closure)\n *          - itemOpts {object}\n *              - itemIsNotPlainObject {boolean}\n * N.B.\n *\n *  - opts is passed to handleItemDefaults so it can also store\n *    links to supplementary data (e.g. fullData for layout components)\n *\n */\nmodule.exports = function handleArrayContainerDefaults(parentObjIn, parentObjOut, opts) {\n    var name = opts.name;\n\n    var previousContOut = parentObjOut[name];\n\n    var contIn = Lib.isArray(parentObjIn[name]) ? parentObjIn[name] : [],\n        contOut = parentObjOut[name] = [],\n        i;\n\n    for(i = 0; i < contIn.length; i++) {\n        var itemIn = contIn[i],\n            itemOut = {},\n            itemOpts = {};\n\n        if(!Lib.isPlainObject(itemIn)) {\n            itemOpts.itemIsNotPlainObject = true;\n            itemIn = {};\n        }\n\n        opts.handleItemDefaults(itemIn, itemOut, parentObjOut, opts, itemOpts);\n\n        itemOut._input = itemIn;\n        itemOut._index = i;\n\n        contOut.push(itemOut);\n    }\n\n    // in case this array gets its defaults rebuilt independent of the whole layout,\n    // relink the private keys just for this array.\n    if(Lib.isArray(previousContOut)) {\n        var len = Math.min(previousContOut.length, contOut.length);\n        for(i = 0; i < len; i++) {\n            Lib.relinkPrivateKeys(contOut[i], previousContOut[i]);\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/array_container_defaults.js\n// module id = 28\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/* eslint-disable no-console */\n\nvar config = require('../plot_api/plot_config');\n\nvar loggers = module.exports = {};\n\n/**\n * ------------------------------------------\n * debugging tools\n * ------------------------------------------\n */\n\nloggers.log = function() {\n    if(config.logging > 1) {\n        var messages = ['LOG:'];\n\n        for(var i = 0; i < arguments.length; i++) {\n            messages.push(arguments[i]);\n        }\n\n        apply(console.trace || console.log, messages);\n    }\n};\n\nloggers.warn = function() {\n    if(config.logging > 0) {\n        var messages = ['WARN:'];\n\n        for(var i = 0; i < arguments.length; i++) {\n            messages.push(arguments[i]);\n        }\n\n        apply(console.trace || console.log, messages);\n    }\n};\n\nloggers.error = function() {\n    if(config.logging > 0) {\n        var messages = ['ERROR:'];\n\n        for(var i = 0; i < arguments.length; i++) {\n            messages.push(arguments[i]);\n        }\n\n        apply(console.error, messages);\n    }\n};\n\n/*\n * Robust apply, for IE9 where console.log doesn't support\n * apply like other functions do\n */\nfunction apply(f, args) {\n    if(f.apply) {\n        f.apply(f, args);\n    }\n    else {\n        for(var i = 0; i < args.length; i++) {\n            f(args[i]);\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/loggers.js\n// module id = 29\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n// more info: http://stackoverflow.com/questions/18531624/isplainobject-thing\nmodule.exports = function isPlainObject(obj) {\n\n    // We need to be a little less strict in the `imagetest` container because\n    // of how async image requests are handled.\n    //\n    // N.B. isPlainObject(new Constructor()) will return true in `imagetest`\n    if(window && window.process && window.process.versions) {\n        return Object.prototype.toString.call(obj) === '[object Object]';\n    }\n\n    return (\n        Object.prototype.toString.call(obj) === '[object Object]' &&\n        Object.getPrototypeOf(obj) === Object.prototype\n    );\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/is_plain_object.js\n// module id = 30\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fontAttrs = require('./font_attributes');\nvar colorAttrs = require('../components/color/attributes');\n\nvar globalFont = fontAttrs({\n    editType: 'calc',\n    description: [\n        'Sets the global font.',\n        'Note that fonts used in traces and other',\n        'layout components inherit from the global font.'\n    ].join(' ')\n});\nglobalFont.family.dflt = '\"Open Sans\", verdana, arial, sans-serif';\nglobalFont.size.dflt = 12;\nglobalFont.color.dflt = colorAttrs.defaultLine;\n\nmodule.exports = {\n    font: globalFont,\n    title: {\n        valType: 'string',\n        role: 'info',\n        editType: 'layoutstyle',\n        description: [\n            'Sets the plot\\'s title.'\n        ].join(' ')\n    },\n    titlefont: fontAttrs({\n        editType: 'layoutstyle',\n        description: 'Sets the title font.'\n    }),\n    autosize: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: false,\n        // autosize, width, and height get special editType treatment in _relayout\n        // so we can handle noop resizes more efficiently\n        editType: 'none',\n        description: [\n            'Determines whether or not a layout width or height',\n            'that has been left undefined by the user',\n            'is initialized on each relayout.',\n\n            'Note that, regardless of this attribute,',\n            'an undefined layout width or height',\n            'is always initialized on the first call to plot.'\n        ].join(' ')\n    },\n    width: {\n        valType: 'number',\n        role: 'info',\n        min: 10,\n        dflt: 700,\n        editType: 'none',\n        description: [\n            'Sets the plot\\'s width (in px).'\n        ].join(' ')\n    },\n    height: {\n        valType: 'number',\n        role: 'info',\n        min: 10,\n        dflt: 450,\n        editType: 'none',\n        description: [\n            'Sets the plot\\'s height (in px).'\n        ].join(' ')\n    },\n    margin: {\n        l: {\n            valType: 'number',\n            role: 'info',\n            min: 0,\n            dflt: 80,\n            editType: 'calc',\n            description: 'Sets the left margin (in px).'\n        },\n        r: {\n            valType: 'number',\n            role: 'info',\n            min: 0,\n            dflt: 80,\n            editType: 'calc',\n            description: 'Sets the right margin (in px).'\n        },\n        t: {\n            valType: 'number',\n            role: 'info',\n            min: 0,\n            dflt: 100,\n            editType: 'calc',\n            description: 'Sets the top margin (in px).'\n        },\n        b: {\n            valType: 'number',\n            role: 'info',\n            min: 0,\n            dflt: 80,\n            editType: 'calc',\n            description: 'Sets the bottom margin (in px).'\n        },\n        pad: {\n            valType: 'number',\n            role: 'info',\n            min: 0,\n            dflt: 0,\n            editType: 'calc',\n            description: [\n                'Sets the amount of padding (in px)',\n                'between the plotting area and the axis lines'\n            ].join(' ')\n        },\n        autoexpand: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: true,\n            editType: 'calc'\n        },\n        editType: 'calc'\n    },\n    paper_bgcolor: {\n        valType: 'color',\n        role: 'style',\n        dflt: colorAttrs.background,\n        editType: 'plot',\n        description: 'Sets the color of paper where the graph is drawn.'\n    },\n    plot_bgcolor: {\n        // defined here, but set in cartesian.supplyLayoutDefaults\n        // because it needs to know if there are (2D) axes or not\n        valType: 'color',\n        role: 'style',\n        dflt: colorAttrs.background,\n        editType: 'layoutstyle',\n        description: [\n            'Sets the color of plotting area in-between x and y axes.'\n        ].join(' ')\n    },\n    separators: {\n        valType: 'string',\n        role: 'style',\n        editType: 'plot',\n        description: [\n            'Sets the decimal and thousand separators.',\n            'For example, *. * puts a \\'.\\' before decimals and a space',\n            'between thousands. In English locales, dflt is *.,* but',\n            'other locales may alter this default.'\n        ].join(' ')\n    },\n    hidesources: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: false,\n        editType: 'plot',\n        description: [\n            'Determines whether or not a text link citing the data source is',\n            'placed at the bottom-right cored of the figure.',\n            'Has only an effect only on graphs that have been generated via',\n            'forked graphs from the plotly service (at https://plot.ly or on-premise).'\n        ].join(' ')\n    },\n    showlegend: {\n        // handled in legend.supplyLayoutDefaults\n        // but included here because it's not in the legend object\n        valType: 'boolean',\n        role: 'info',\n        editType: 'legend',\n        description: 'Determines whether or not a legend is drawn.'\n    },\n    colorway: {\n        valType: 'colorlist',\n        dflt: colorAttrs.defaults,\n        role: 'style',\n        editType: 'calc',\n        description: 'Sets the default trace colors.'\n    },\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/layout_attributes.js\n// module id = 31\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n\nmodule.exports = {\n    /**\n     * Timing information for interactive elements\n     */\n    SHOW_PLACEHOLDER: 100,\n    HIDE_PLACEHOLDER: 1000,\n\n    // ms between first mousedown and 2nd mouseup to constitute dblclick...\n    // we don't seem to have access to the system setting\n    DBLCLICKDELAY: 300,\n\n    // opacity dimming fraction for points that are not in selection\n    DESELECTDIM: 0.2\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/constants/interactions.js\n// module id = 32\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorAttributes = require('../../components/colorscale/color_attributes');\nvar errorBarAttrs = require('../../components/errorbars/attributes');\nvar colorbarAttrs = require('../../components/colorbar/attributes');\nvar fontAttrs = require('../../plots/font_attributes');\nvar dash = require('../../components/drawing/attributes').dash;\n\nvar Drawing = require('../../components/drawing');\nvar constants = require('./constants');\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nmodule.exports = {\n    x: {\n        valType: 'data_array',\n        editType: 'calc+clearAxisTypes',\n        description: 'Sets the x coordinates.'\n    },\n    x0: {\n        valType: 'any',\n        dflt: 0,\n        role: 'info',\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'Alternate to `x`.',\n            'Builds a linear space of x coordinates.',\n            'Use with `dx`',\n            'where `x0` is the starting coordinate and `dx` the step.'\n        ].join(' ')\n    },\n    dx: {\n        valType: 'number',\n        dflt: 1,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the x coordinate step.',\n            'See `x0` for more info.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'data_array',\n        editType: 'calc+clearAxisTypes',\n        description: 'Sets the y coordinates.'\n    },\n    y0: {\n        valType: 'any',\n        dflt: 0,\n        role: 'info',\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'Alternate to `y`.',\n            'Builds a linear space of y coordinates.',\n            'Use with `dy`',\n            'where `y0` is the starting coordinate and `dy` the step.'\n        ].join(' ')\n    },\n    dy: {\n        valType: 'number',\n        dflt: 1,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the y coordinate step.',\n            'See `y0` for more info.'\n        ].join(' ')\n    },\n    text: {\n        valType: 'string',\n        role: 'info',\n        dflt: '',\n        arrayOk: true,\n        editType: 'calc',\n        description: [\n            'Sets text elements associated with each (x,y) pair.',\n            'If a single string, the same string appears over',\n            'all the data points.',\n            'If an array of string, the items are mapped in order to the',\n            'this trace\\'s (x,y) coordinates.',\n            'If trace `hoverinfo` contains a *text* flag and *hovertext* is not set,',\n            'these elements will be seen in the hover labels.'\n        ].join(' ')\n    },\n    hovertext: {\n        valType: 'string',\n        role: 'info',\n        dflt: '',\n        arrayOk: true,\n        editType: 'style',\n        description: [\n            'Sets hover text elements associated with each (x,y) pair.',\n            'If a single string, the same string appears over',\n            'all the data points.',\n            'If an array of string, the items are mapped in order to the',\n            'this trace\\'s (x,y) coordinates.',\n            'To be seen, trace `hoverinfo` must contain a *text* flag.'\n        ].join(' ')\n    },\n    mode: {\n        valType: 'flaglist',\n        flags: ['lines', 'markers', 'text'],\n        extras: ['none'],\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Determines the drawing mode for this scatter trace.',\n            'If the provided `mode` includes *text* then the `text` elements',\n            'appear at the coordinates. Otherwise, the `text` elements',\n            'appear on hover.',\n            'If there are less than ' + constants.PTS_LINESONLY + ' points,',\n            'then the default is *lines+markers*. Otherwise, *lines*.'\n        ].join(' ')\n    },\n    hoveron: {\n        valType: 'flaglist',\n        flags: ['points', 'fills'],\n        role: 'info',\n        editType: 'style',\n        description: [\n            'Do the hover effects highlight individual points (markers or',\n            'line points) or do they highlight filled regions?',\n            'If the fill is *toself* or *tonext* and there are no markers',\n            'or text, then the default is *fills*, otherwise it is *points*.'\n        ].join(' ')\n    },\n    line: {\n        color: {\n            valType: 'color',\n            role: 'style',\n            editType: 'style',\n            description: 'Sets the line color.'\n        },\n        width: {\n            valType: 'number',\n            min: 0,\n            dflt: 2,\n            role: 'style',\n            editType: 'style',\n            description: 'Sets the line width (in px).'\n        },\n        shape: {\n            valType: 'enumerated',\n            values: ['linear', 'spline', 'hv', 'vh', 'hvh', 'vhv'],\n            dflt: 'linear',\n            role: 'style',\n            editType: 'plot',\n            description: [\n                'Determines the line shape.',\n                'With *spline* the lines are drawn using spline interpolation.',\n                'The other available values correspond to step-wise line shapes.'\n            ].join(' ')\n        },\n        smoothing: {\n            valType: 'number',\n            min: 0,\n            max: 1.3,\n            dflt: 1,\n            role: 'style',\n            editType: 'plot',\n            description: [\n                'Has an effect only if `shape` is set to *spline*',\n                'Sets the amount of smoothing.',\n                '*0* corresponds to no smoothing (equivalent to a *linear* shape).'\n            ].join(' ')\n        },\n        dash: extendFlat({}, dash, {editType: 'style'}),\n        simplify: {\n            valType: 'boolean',\n            dflt: true,\n            role: 'info',\n            editType: 'plot',\n            description: [\n                'Simplifies lines by removing nearly-collinear points. When transitioning',\n                'lines, it may be desirable to disable this so that the number of points',\n                'along the resulting SVG path is unaffected.'\n            ].join(' ')\n        },\n        editType: 'plot'\n    },\n\n    connectgaps: {\n        valType: 'boolean',\n        dflt: false,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Determines whether or not gaps',\n            '(i.e. {nan} or missing values)',\n            'in the provided data arrays are connected.'\n        ].join(' ')\n    },\n    cliponaxis: {\n        valType: 'boolean',\n        dflt: true,\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Determines whether or not markers and text nodes',\n            'are clipped about the subplot axes.',\n            'To show markers and text nodes above axis lines and tick labels,',\n            'make sure to set `xaxis.layer` and `yaxis.layer` to *below traces*.'\n        ].join(' ')\n    },\n\n    fill: {\n        valType: 'enumerated',\n        values: ['none', 'tozeroy', 'tozerox', 'tonexty', 'tonextx', 'toself', 'tonext'],\n        dflt: 'none',\n        role: 'style',\n        editType: 'calc',\n        description: [\n            'Sets the area to fill with a solid color.',\n            'Use with `fillcolor` if not *none*.',\n            '*tozerox* and *tozeroy* fill to x=0 and y=0 respectively.',\n            '*tonextx* and *tonexty* fill between the endpoints of this',\n            'trace and the endpoints of the trace before it, connecting those',\n            'endpoints with straight lines (to make a stacked area graph);',\n            'if there is no trace before it, they behave like *tozerox* and',\n            '*tozeroy*.',\n            '*toself* connects the endpoints of the trace (or each segment',\n            'of the trace if it has gaps) into a closed shape.',\n            '*tonext* fills the space between two traces if one completely',\n            'encloses the other (eg consecutive contour lines), and behaves like',\n            '*toself* if there is no trace before it. *tonext* should not be',\n            'used if one trace does not enclose the other.'\n        ].join(' ')\n    },\n    fillcolor: {\n        valType: 'color',\n        role: 'style',\n        editType: 'style',\n        description: [\n            'Sets the fill color.',\n            'Defaults to a half-transparent variant of the line color,',\n            'marker color, or marker line color, whichever is available.'\n        ].join(' ')\n    },\n    marker: extendFlat({\n        symbol: {\n            valType: 'enumerated',\n            values: Drawing.symbolList,\n            dflt: 'circle',\n            arrayOk: true,\n            role: 'style',\n            editType: 'style',\n            description: [\n                'Sets the marker symbol type.',\n                'Adding 100 is equivalent to appending *-open* to a symbol name.',\n                'Adding 200 is equivalent to appending *-dot* to a symbol name.',\n                'Adding 300 is equivalent to appending *-open-dot*',\n                'or *dot-open* to a symbol name.'\n            ].join(' ')\n        },\n        opacity: {\n            valType: 'number',\n            min: 0,\n            max: 1,\n            arrayOk: true,\n            role: 'style',\n            editType: 'style',\n            description: 'Sets the marker opacity.'\n        },\n        size: {\n            valType: 'number',\n            min: 0,\n            dflt: 6,\n            arrayOk: true,\n            role: 'style',\n            editType: 'calcIfAutorange',\n            description: 'Sets the marker size (in px).'\n        },\n        maxdisplayed: {\n            valType: 'number',\n            min: 0,\n            dflt: 0,\n            role: 'style',\n            editType: 'plot',\n            description: [\n                'Sets a maximum number of points to be drawn on the graph.',\n                '*0* corresponds to no limit.'\n            ].join(' ')\n        },\n        sizeref: {\n            valType: 'number',\n            dflt: 1,\n            role: 'style',\n            editType: 'calc',\n            description: [\n                'Has an effect only if `marker.size` is set to a numerical array.',\n                'Sets the scale factor used to determine the rendered size of',\n                'marker points. Use with `sizemin` and `sizemode`.'\n            ].join(' ')\n        },\n        sizemin: {\n            valType: 'number',\n            min: 0,\n            dflt: 0,\n            role: 'style',\n            editType: 'calc',\n            description: [\n                'Has an effect only if `marker.size` is set to a numerical array.',\n                'Sets the minimum size (in px) of the rendered marker points.'\n            ].join(' ')\n        },\n        sizemode: {\n            valType: 'enumerated',\n            values: ['diameter', 'area'],\n            dflt: 'diameter',\n            role: 'info',\n            editType: 'calc',\n            description: [\n                'Has an effect only if `marker.size` is set to a numerical array.',\n                'Sets the rule for which the data in `size` is converted',\n                'to pixels.'\n            ].join(' ')\n        },\n\n        showscale: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: false,\n            editType: 'calc',\n            description: [\n                'Has an effect only if `marker.color` is set to a numerical array.',\n                'Determines whether or not a colorbar is displayed.'\n            ].join(' ')\n        },\n        colorbar: colorbarAttrs,\n\n        line: extendFlat({\n            width: {\n                valType: 'number',\n                min: 0,\n                arrayOk: true,\n                role: 'style',\n                editType: 'style',\n                description: 'Sets the width (in px) of the lines bounding the marker points.'\n            },\n            editType: 'calc'\n        },\n            colorAttributes('marker.line')\n        ),\n        gradient: {\n            type: {\n                valType: 'enumerated',\n                values: ['radial', 'horizontal', 'vertical', 'none'],\n                arrayOk: true,\n                dflt: 'none',\n                role: 'style',\n                editType: 'calc',\n                description: [\n                    'Sets the type of gradient used to fill the markers'\n                ].join(' ')\n            },\n            color: {\n                valType: 'color',\n                arrayOk: true,\n                role: 'style',\n                editType: 'calc',\n                description: [\n                    'Sets the final color of the gradient fill:',\n                    'the center color for radial, the right for horizontal,',\n                    'or the bottom for vertical.',\n                ].join(' ')\n            },\n            editType: 'calc'\n        },\n        editType: 'calc'\n    },\n        colorAttributes('marker')\n    ),\n    selected: {\n        marker: {\n            opacity: {\n                valType: 'number',\n                min: 0,\n                max: 1,\n                role: 'style',\n                editType: 'style',\n                description: 'Sets the marker opacity of selected points.'\n            },\n            color: {\n                valType: 'color',\n                role: 'style',\n                editType: 'style',\n                description: 'Sets the marker color of selected points.'\n            },\n            size: {\n                valType: 'number',\n                min: 0,\n                role: 'style',\n                editType: 'style',\n                description: 'Sets the marker size of selected points.'\n            },\n            editType: 'style'\n        },\n        textfont: {\n            color: {\n                valType: 'color',\n                role: 'style',\n                editType: 'style',\n                description: 'Sets the text font color of selected points.'\n            },\n            editType: 'style'\n        },\n        editType: 'style'\n    },\n    unselected: {\n        marker: {\n            opacity: {\n                valType: 'number',\n                min: 0,\n                max: 1,\n                role: 'style',\n                editType: 'style',\n                description: 'Sets the marker opacity of unselected points, applied only when a selection exists.'\n            },\n            color: {\n                valType: 'color',\n                role: 'style',\n                editType: 'style',\n                description: 'Sets the marker color of unselected points, applied only when a selection exists.'\n            },\n            size: {\n                valType: 'number',\n                min: 0,\n                role: 'style',\n                editType: 'style',\n                description: 'Sets the marker size of unselected points, applied only when a selection exists.'\n            },\n            editType: 'style'\n        },\n        textfont: {\n            color: {\n                valType: 'color',\n                role: 'style',\n                editType: 'style',\n                description: 'Sets the text font color of unselected points, applied only when a selection exists.'\n            },\n            editType: 'style'\n        },\n        editType: 'style'\n    },\n\n    textposition: {\n        valType: 'enumerated',\n        values: [\n            'top left', 'top center', 'top right',\n            'middle left', 'middle center', 'middle right',\n            'bottom left', 'bottom center', 'bottom right'\n        ],\n        dflt: 'middle center',\n        arrayOk: true,\n        role: 'style',\n        editType: 'calc',\n        description: [\n            'Sets the positions of the `text` elements',\n            'with respects to the (x,y) coordinates.'\n        ].join(' ')\n    },\n    textfont: fontAttrs({\n        editType: 'calc',\n        colorEditType: 'style',\n        arrayOk: true,\n        description: 'Sets the text font.'\n    }),\n\n    r: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'For legacy polar chart only.',\n            'Please switch to *scatterpolar* trace type.',\n            'Sets the radial coordinates.'\n        ].join('')\n    },\n    t: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'For legacy polar chart only.',\n            'Please switch to *scatterpolar* trace type.',\n            'Sets the angular coordinates.'\n        ].join('')\n    },\n\n    error_y: errorBarAttrs,\n    error_x: errorBarAttrs\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/attributes.js\n// module id = 33\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n    // max pixels away from mouse to allow a point to highlight\n    MAXDIST: 20,\n\n    // hover labels for multiple horizontal bars get tilted by this angle\n    YANGLE: 60,\n\n    // size and display constants for hover text\n\n    // pixel size of hover arrows\n    HOVERARROWSIZE: 6,\n    // pixels padding around text\n    HOVERTEXTPAD: 3,\n    // hover font\n    HOVERFONTSIZE: 13,\n    HOVERFONT: 'Arial, sans-serif',\n\n    // minimum time (msec) between hover calls\n    HOVERMINTIME: 50,\n\n    // ID suffix (with fullLayout._uid) for hover events in the throttle cache\n    HOVERID: '-hover'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/fx/constants.js\n// module id = 34\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = require('../src/core');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/lib/core.js\n// module id = 35\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/**\n * This will be transferred over to gd and overridden by\n * config args to Plotly.plot.\n *\n * The defaults are the appropriate settings for plotly.js,\n * so we get the right experience without any config argument.\n */\n\nmodule.exports = {\n\n    // no interactivity, for export or image generation\n    staticPlot: false,\n\n    /*\n     * we can edit titles, move annotations, etc - sets all pieces of `edits`\n     * unless a separate `edits` config item overrides individual parts\n     */\n    editable: false,\n    edits: {\n        /*\n         * annotationPosition: the main anchor of the annotation, which is the\n         * text (if no arrow) or the arrow (which drags the whole thing leaving\n         * the arrow length & direction unchanged)\n         */\n        annotationPosition: false,\n        // just for annotations with arrows, change the length  and direction of the arrow\n        annotationTail: false,\n        annotationText: false,\n        axisTitleText: false,\n        colorbarPosition: false,\n        colorbarTitleText: false,\n        legendPosition: false,\n        // edit the trace name fields from the legend\n        legendText: false,\n        shapePosition: false,\n        // the global `layout.title`\n        titleText: false\n    },\n\n    /*\n     * DO autosize once regardless of layout.autosize\n     * (use default width or height values otherwise)\n     */\n    autosizable: false,\n\n    // set the length of the undo/redo queue\n    queueLength: 0,\n\n    // if we DO autosize, do we fill the container or the screen?\n    fillFrame: false,\n\n    // if we DO autosize, set the frame margins in percents of plot size\n    frameMargins: 0,\n\n    // mousewheel or two-finger scroll zooms the plot\n    scrollZoom: false,\n\n    // double click interaction (false, 'reset', 'autosize' or 'reset+autosize')\n    doubleClick: 'reset+autosize',\n\n    // new users see some hints about interactivity\n    showTips: true,\n\n    // enable axis pan/zoom drag handles\n    showAxisDragHandles: true,\n\n    /*\n     * enable direct range entry at the pan/zoom drag points\n     * (drag handles must be enabled above)\n     */\n    showAxisRangeEntryBoxes: true,\n\n    // link to open this plot in plotly\n    showLink: false,\n\n    // if we show a link, does it contain data or just link to a plotly file?\n    sendData: true,\n\n    // text appearing in the sendData link\n    linkText: 'Edit chart',\n\n    // false or function adding source(s) to linkText <text>\n    showSources: false,\n\n    // display the mode bar (true, false, or 'hover')\n    displayModeBar: 'hover',\n\n    /*\n     * remove mode bar button by name\n     * (see ./components/modebar/buttons.js for the list of names)\n     */\n    modeBarButtonsToRemove: [],\n\n    /*\n     * add mode bar button using config objects\n     * (see ./components/modebar/buttons.js for list of arguments)\n     */\n    modeBarButtonsToAdd: [],\n\n    /*\n     * fully custom mode bar buttons as nested array,\n     * where the outer arrays represents button groups, and\n     * the inner arrays have buttons config objects or names of default buttons\n     * (see ./components/modebar/buttons.js for more info)\n     */\n    modeBarButtons: false,\n\n    // add the plotly logo on the end of the mode bar\n    displaylogo: true,\n\n    // increase the pixel ratio for Gl plot images\n    plotGlPixelRatio: 2,\n\n    /*\n     * background setting function\n     * 'transparent' sets the background `layout.paper_color`\n     * 'opaque' blends bg color with white ensuring an opaque background\n     * or any other custom function of gd\n     */\n    setBackground: 'transparent',\n\n    // URL to topojson files used in geo charts\n    topojsonURL: 'https://cdn.plot.ly/',\n\n    /*\n     * Mapbox access token (required to plot mapbox trace types)\n     * If using an Mapbox Atlas server, set this option to '',\n     * so that plotly.js won't attempt to authenticate to the public Mapbox server.\n     */\n    mapboxAccessToken: null,\n\n    /*\n     * Turn all console logging on or off (errors will be thrown)\n     * This should ONLY be set via Plotly.setPlotConfig\n     * 0: no logs\n     * 1: warnings and errors, but not informational messages\n     * 2: verbose logs\n     */\n    logging: 1,\n\n    /*\n     * Set global transform to be applied to all traces with no\n     * specification needed\n     */\n    globalTransforms: [],\n\n    /*\n     * Which localization should we use?\n     * Should be a string like 'en' or 'en-US'.\n     */\n    locale: 'en-US',\n\n    /*\n     * Localization definitions\n     * Locales can be provided either here (specific to one chart) or globally\n     * by registering them as modules.\n     * Should be an object of objects {locale: {dictionary: {...}, format: {...}}}\n     * {\n     *     da: {\n     *         dictionary: {'Reset axes': 'Nulstil aksler', ...},\n     *         format: {months: [...], shortMonths: [...]}\n     *     },\n     *     ...\n     * }\n     * All parts are optional. When looking for translation or format fields, we\n     * look first for an exact match in a config locale, then in a registered\n     * module. If those fail, we strip off any regionalization ('en-US' -> 'en')\n     * and try each (config, registry) again. The final fallback for translation\n     * is untranslated (which is US English) and for formats is the base English\n     * (the only consequence being the last fallback date format %x is DD/MM/YYYY\n     * instead of MM/DD/YYYY). Currently `grouping` and `currency` are ignored\n     * for our automatic number formatting, but can be used in custom formats.\n     */\n    locales: {}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plot_api/plot_config.js\n// module id = 36\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../registry');\nvar Lib = require('../lib');\n\nvar baseAttributes = require('../plots/attributes');\nvar baseLayoutAttributes = require('../plots/layout_attributes');\nvar frameAttributes = require('../plots/frame_attributes');\nvar animationAttributes = require('../plots/animation_attributes');\n\n// polar attributes are not part of the Registry yet\nvar polarAreaAttrs = require('../plots/polar/legacy/area_attributes');\nvar polarAxisAttrs = require('../plots/polar/legacy/axis_attributes');\n\nvar editTypes = require('./edit_types');\n\nvar extendFlat = Lib.extendFlat;\nvar extendDeepAll = Lib.extendDeepAll;\n\nvar IS_SUBPLOT_OBJ = '_isSubplotObj';\nvar IS_LINKED_TO_ARRAY = '_isLinkedToArray';\nvar ARRAY_ATTR_REGEXPS = '_arrayAttrRegexps';\nvar DEPRECATED = '_deprecated';\nvar UNDERSCORE_ATTRS = [IS_SUBPLOT_OBJ, IS_LINKED_TO_ARRAY, ARRAY_ATTR_REGEXPS, DEPRECATED];\n\nexports.IS_SUBPLOT_OBJ = IS_SUBPLOT_OBJ;\nexports.IS_LINKED_TO_ARRAY = IS_LINKED_TO_ARRAY;\nexports.DEPRECATED = DEPRECATED;\nexports.UNDERSCORE_ATTRS = UNDERSCORE_ATTRS;\n\n/** Outputs the full plotly.js plot schema\n *\n * @return {object}\n *  - defs\n *  - traces\n *  - layout\n *  - transforms\n *  - frames\n *  - animations\n *  - config (coming soon ...)\n */\nexports.get = function() {\n    var traces = {};\n\n    Registry.allTypes.concat('area').forEach(function(type) {\n        traces[type] = getTraceAttributes(type);\n    });\n\n    var transforms = {};\n\n    Object.keys(Registry.transformsRegistry).forEach(function(type) {\n        transforms[type] = getTransformAttributes(type);\n    });\n\n    return {\n        defs: {\n            valObjects: Lib.valObjectMeta,\n            metaKeys: UNDERSCORE_ATTRS.concat(['description', 'role', 'editType', 'impliedEdits']),\n            editType: {\n                traces: editTypes.traces,\n                layout: editTypes.layout\n            },\n            impliedEdits: {\n                description: [\n                    'Sometimes when an attribute is changed, other attributes',\n                    'must be altered as well in order to achieve the intended',\n                    'result. For example, when `range` is specified, it is',\n                    'important to set `autorange` to `false` or the new `range`',\n                    'value would be lost in the redraw. `impliedEdits` is the',\n                    'mechanism to do this: `impliedEdits: {autorange: false}`.',\n                    'Each key is a relative paths to the attribute string to',\n                    'change, using *^* to ascend into the parent container,',\n                    'for example `range[0]` has `impliedEdits: {*^autorange*: false}`.',\n                    'A value of `undefined` means that the attribute will not be',\n                    'changed, but its previous value should be recorded in case',\n                    'we want to reverse this change later. For example, `autorange`',\n                    'has `impliedEdits: {*range[0]*: undefined, *range[1]*:undefined}',\n                    'because the range will likely be changed by redraw.'\n                ].join(' ')\n            }\n        },\n\n        traces: traces,\n        layout: getLayoutAttributes(),\n\n        transforms: transforms,\n\n        frames: getFramesAttributes(),\n        animation: formatAttributes(animationAttributes)\n    };\n};\n\n/**\n * Crawl the attribute tree, recursively calling a callback function\n *\n * @param {object} attrs\n *  The node of the attribute tree (e.g. the root) from which recursion originates\n * @param {Function} callback\n *  A callback function with the signature:\n *          @callback callback\n *          @param {object} attr an attribute\n *          @param {String} attrName name string\n *          @param {object[]} attrs all the attributes\n *          @param {Number} level the recursion level, 0 at the root\n * @param {Number} [specifiedLevel]\n *  The level in the tree, in order to let the callback function detect descend or backtrack,\n *  typically unsupplied (implied 0), just used by the self-recursive call.\n *  The necessity arises because the tree traversal is not controlled by callback return values.\n *  The decision to not use callback return values for controlling tree pruning arose from\n *  the goal of keeping the crawler backwards compatible. Observe that one of the pruning conditions\n *  precedes the callback call.\n * @param {string} [attrString]\n *  the path to the current attribute, as an attribute string (ie 'marker.line')\n *  typically unsupplied, but you may supply it if you want to disambiguate which attrs tree you\n *  are starting from\n *\n * @return {object} transformOut\n *  copy of transformIn that contains attribute defaults\n */\nexports.crawl = function(attrs, callback, specifiedLevel, attrString) {\n    var level = specifiedLevel || 0;\n    attrString = attrString || '';\n\n    Object.keys(attrs).forEach(function(attrName) {\n        var attr = attrs[attrName];\n\n        if(UNDERSCORE_ATTRS.indexOf(attrName) !== -1) return;\n\n        var fullAttrString = (attrString ? attrString + '.' : '') + attrName;\n        callback(attr, attrName, attrs, level, fullAttrString);\n\n        if(exports.isValObject(attr)) return;\n\n        if(Lib.isPlainObject(attr) && attrName !== 'impliedEdits') {\n            exports.crawl(attr, callback, level + 1, fullAttrString);\n        }\n    });\n};\n\n/** Is object a value object (or a container object)?\n *\n * @param {object} obj\n * @return {boolean}\n *  returns true for a valid value object and\n *  false for tree nodes in the attribute hierarchy\n */\nexports.isValObject = function(obj) {\n    return obj && obj.valType !== undefined;\n};\n\n/**\n * Find all data array attributes in a given trace object - including\n * `arrayOk` attributes.\n *\n * @param {object} trace\n *  full trace object that contains a reference to `_module.attributes`\n *\n * @return {array} arrayAttributes\n *  list of array attributes for the given trace\n */\nexports.findArrayAttributes = function(trace) {\n    var arrayAttributes = [];\n    var stack = [];\n\n    function callback(attr, attrName, attrs, level) {\n        stack = stack.slice(0, level).concat([attrName]);\n\n        var splittableAttr = (\n            attr &&\n            (attr.valType === 'data_array' || attr.arrayOk === true) &&\n            !(stack[level - 1] === 'colorbar' && (attrName === 'ticktext' || attrName === 'tickvals'))\n        );\n\n        // Manually exclude 'colorbar.tickvals' and 'colorbar.ticktext' for now\n        // which are declared as `valType: 'data_array'` but scale independently of\n        // the coordinate arrays.\n        //\n        // Down the road, we might want to add a schema field (e.g `uncorrelatedArray: true`)\n        // to distinguish attributes of the likes.\n\n        if(!splittableAttr) return;\n\n        var astr = toAttrString(stack);\n        var val = Lib.nestedProperty(trace, astr).get();\n        if(!Array.isArray(val)) return;\n\n        arrayAttributes.push(astr);\n    }\n\n    function toAttrString(stack) {\n        return stack.join('.');\n    }\n\n    exports.crawl(baseAttributes, callback);\n    if(trace._module && trace._module.attributes) {\n        exports.crawl(trace._module.attributes, callback);\n    }\n\n    if(trace.transforms) {\n        var transforms = trace.transforms;\n\n        for(var i = 0; i < transforms.length; i++) {\n            var transform = transforms[i];\n            var module = transform._module;\n\n            if(module) {\n                stack = ['transforms[' + i + ']'];\n\n                exports.crawl(module.attributes, callback, 1);\n            }\n        }\n    }\n\n    // Look into the fullInput module attributes for array attributes\n    // to make sure that 'custom' array attributes are detected.\n    //\n    // At the moment, we need this block to make sure that\n    // ohlc and candlestick 'open', 'high', 'low', 'close' can be\n    // used with filter and groupby transforms.\n    if(trace._fullInput && trace._fullInput._module && trace._fullInput._module.attributes) {\n        exports.crawl(trace._fullInput._module.attributes, callback);\n        arrayAttributes = Lib.filterUnique(arrayAttributes);\n    }\n\n    return arrayAttributes;\n};\n\n/*\n * Find the valObject for one attribute in an existing trace\n *\n * @param {object} trace\n *  full trace object that contains a reference to `_module.attributes`\n * @param {object} parts\n *  an array of parts, like ['transforms', 1, 'value']\n *  typically from nestedProperty(...).parts\n *\n * @return {object|false}\n *  the valObject for this attribute, or the last found parent\n *  in some cases the innermost valObject will not exist, for example\n *  `valType: 'any'` attributes where we might set a part of the attribute.\n *  In that case, stop at the deepest valObject we *do* find.\n */\nexports.getTraceValObject = function(trace, parts) {\n    var head = parts[0];\n    var i = 1; // index to start recursing from\n    var moduleAttrs, valObject;\n\n    if(head === 'transforms') {\n        if(!Array.isArray(trace.transforms)) return false;\n        var tNum = parts[1];\n        if(!isIndex(tNum) || tNum >= trace.transforms.length) {\n            return false;\n        }\n        moduleAttrs = (Registry.transformsRegistry[trace.transforms[tNum].type] || {}).attributes;\n        valObject = moduleAttrs && moduleAttrs[parts[2]];\n        i = 3; // start recursing only inside the transform\n    }\n    else if(trace.type === 'area') {\n        valObject = polarAreaAttrs[head];\n    }\n    else {\n        // first look in the module for this trace\n        // components have already merged their trace attributes in here\n        var _module = trace._module;\n        if(!_module) _module = (Registry.modules[trace.type || baseAttributes.type.dflt] || {})._module;\n        if(!_module) return false;\n\n        moduleAttrs = _module.attributes;\n        valObject = moduleAttrs && moduleAttrs[head];\n\n        // then look in the subplot attributes\n        if(!valObject) {\n            var subplotModule = _module.basePlotModule;\n            if(subplotModule && subplotModule.attributes) {\n                valObject = subplotModule.attributes[head];\n            }\n        }\n\n        // finally look in the global attributes\n        if(!valObject) valObject = baseAttributes[head];\n    }\n\n    return recurseIntoValObject(valObject, parts, i);\n};\n\n/*\n * Find the valObject for one layout attribute\n *\n * @param {array} parts\n *  an array of parts, like ['annotations', 1, 'x']\n *  typically from nestedProperty(...).parts\n *\n * @return {object|false}\n *  the valObject for this attribute, or the last found parent\n *  in some cases the innermost valObject will not exist, for example\n *  `valType: 'any'` attributes where we might set a part of the attribute.\n *  In that case, stop at the deepest valObject we *do* find.\n */\nexports.getLayoutValObject = function(fullLayout, parts) {\n    var valObject = layoutHeadAttr(fullLayout, parts[0]);\n\n    return recurseIntoValObject(valObject, parts, 1);\n};\n\nfunction layoutHeadAttr(fullLayout, head) {\n    var i, key, _module, attributes;\n\n    // look for attributes of the subplot types used on the plot\n    var basePlotModules = fullLayout._basePlotModules;\n    if(basePlotModules) {\n        var out;\n        for(i = 0; i < basePlotModules.length; i++) {\n            _module = basePlotModules[i];\n            if(_module.attrRegex && _module.attrRegex.test(head)) {\n                // if a module defines overrides, these take precedence\n                // initially this is to allow gl2d different editTypes from svg cartesian\n                if(_module.layoutAttrOverrides) return _module.layoutAttrOverrides;\n\n                // otherwise take the first attributes we find\n                if(!out && _module.layoutAttributes) out = _module.layoutAttributes;\n            }\n\n            // a module can also override the behavior of base (and component) module layout attrs\n            // again see gl2d for initial use case\n            var baseOverrides = _module.baseLayoutAttrOverrides;\n            if(baseOverrides && head in baseOverrides) return baseOverrides[head];\n        }\n        if(out) return out;\n    }\n\n    // look for layout attributes contributed by traces on the plot\n    var modules = fullLayout._modules;\n    if(modules) {\n        for(i = 0; i < modules.length; i++) {\n            attributes = modules[i].layoutAttributes;\n            if(attributes && head in attributes) {\n                return attributes[head];\n            }\n        }\n    }\n\n    /*\n     * Next look in components.\n     * Components that define a schema have already merged this into\n     * base and subplot attribute defs, so ignore these.\n     * Others (older style) all put all their attributes\n     * inside a container matching the module `name`\n     * eg `attributes` (array) or `legend` (object)\n     */\n    for(key in Registry.componentsRegistry) {\n        _module = Registry.componentsRegistry[key];\n        if(!_module.schema && (head === _module.name)) {\n            return _module.layoutAttributes;\n        }\n    }\n\n    if(head in baseLayoutAttributes) return baseLayoutAttributes[head];\n\n    // Polar doesn't populate _modules or _basePlotModules\n    // just fall back on these when the others fail\n    if(head === 'radialaxis' || head === 'angularaxis') {\n        return polarAxisAttrs[head];\n    }\n    return polarAxisAttrs.layout[head] || false;\n}\n\nfunction recurseIntoValObject(valObject, parts, i) {\n    if(!valObject) return false;\n\n    if(valObject._isLinkedToArray) {\n        // skip array index, abort if we try to dive into an array without an index\n        if(isIndex(parts[i])) i++;\n        else if(i < parts.length) return false;\n    }\n\n    // now recurse as far as we can. Occasionally we have an attribute\n    // setting an internal part below what's\n    for(; i < parts.length; i++) {\n        var newValObject = valObject[parts[i]];\n        if(Lib.isPlainObject(newValObject)) valObject = newValObject;\n        else break;\n\n        if(i === parts.length - 1) break;\n\n        if(valObject._isLinkedToArray) {\n            i++;\n            if(!isIndex(parts[i])) return false;\n        }\n        else if(valObject.valType === 'info_array') {\n            i++;\n            var index = parts[i];\n            if(!isIndex(index) || index >= valObject.items.length) return false;\n            valObject = valObject.items[index];\n        }\n    }\n\n    return valObject;\n}\n\nfunction isIndex(val) {\n    return val === Math.round(val) && val >= 0;\n}\n\nfunction getTraceAttributes(type) {\n    var _module, basePlotModule;\n\n    if(type === 'area') {\n        _module = { attributes: polarAreaAttrs };\n        basePlotModule = {};\n    }\n    else {\n        _module = Registry.modules[type]._module,\n        basePlotModule = _module.basePlotModule;\n    }\n\n    var attributes = {};\n\n    // make 'type' the first attribute in the object\n    attributes.type = null;\n\n    // base attributes (same for all trace types)\n    extendDeepAll(attributes, baseAttributes);\n\n    // module attributes\n    extendDeepAll(attributes, _module.attributes);\n\n    // subplot attributes\n    if(basePlotModule.attributes) {\n        extendDeepAll(attributes, basePlotModule.attributes);\n    }\n\n    // 'type' gets overwritten by baseAttributes; reset it here\n    attributes.type = type;\n\n    var out = {\n        meta: _module.meta || {},\n        attributes: formatAttributes(attributes),\n    };\n\n    // trace-specific layout attributes\n    if(_module.layoutAttributes) {\n        var layoutAttributes = {};\n\n        extendDeepAll(layoutAttributes, _module.layoutAttributes);\n        out.layoutAttributes = formatAttributes(layoutAttributes);\n    }\n\n    return out;\n}\n\nfunction getLayoutAttributes() {\n    var layoutAttributes = {};\n    var key, _module;\n\n    // global layout attributes\n    extendDeepAll(layoutAttributes, baseLayoutAttributes);\n\n    // add base plot module layout attributes\n    for(key in Registry.subplotsRegistry) {\n        _module = Registry.subplotsRegistry[key];\n\n        if(!_module.layoutAttributes) continue;\n\n        if(_module.name === 'cartesian') {\n            handleBasePlotModule(layoutAttributes, _module, 'xaxis');\n            handleBasePlotModule(layoutAttributes, _module, 'yaxis');\n        }\n        else {\n            var astr = _module.attr === 'subplot' ? _module.name : _module.attr;\n\n            handleBasePlotModule(layoutAttributes, _module, astr);\n        }\n    }\n\n    // polar layout attributes\n    layoutAttributes = assignPolarLayoutAttrs(layoutAttributes);\n\n    // add registered components layout attributes\n    for(key in Registry.componentsRegistry) {\n        _module = Registry.componentsRegistry[key];\n        var schema = _module.schema;\n\n        /*\n         * Components with defined schema have already been merged in at register time\n         * but a few components define attributes that apply only to xaxis\n         * not yaxis (rangeselector, rangeslider) - delete from y schema.\n         * Note that the input attributes for xaxis/yaxis are the same object\n         * so it's not possible to only add them to xaxis from the start.\n         * If we ever have such asymmetry the other way, or anywhere else,\n         * we will need to extend both this code and mergeComponentAttrsToSubplot\n         * (which will not find yaxis only for example)\n         */\n        if(schema && (schema.subplots || schema.layout)) {\n            var subplots = schema.subplots;\n            if(subplots && subplots.xaxis && !subplots.yaxis) {\n                for(var xkey in subplots.xaxis) delete layoutAttributes.yaxis[xkey];\n            }\n        }\n        // older style without schema need to be explicitly merged in now\n        else if(_module.layoutAttributes) {\n            insertAttrs(layoutAttributes, _module.layoutAttributes, _module.name);\n        }\n    }\n\n    return {\n        layoutAttributes: formatAttributes(layoutAttributes)\n    };\n}\n\nfunction getTransformAttributes(type) {\n    var _module = Registry.transformsRegistry[type];\n    var attributes = extendDeepAll({}, _module.attributes);\n\n    // add registered components transform attributes\n    Object.keys(Registry.componentsRegistry).forEach(function(k) {\n        var _module = Registry.componentsRegistry[k];\n\n        if(_module.schema && _module.schema.transforms && _module.schema.transforms[type]) {\n            Object.keys(_module.schema.transforms[type]).forEach(function(v) {\n                insertAttrs(attributes, _module.schema.transforms[type][v], v);\n            });\n        }\n    });\n\n    return {\n        attributes: formatAttributes(attributes)\n    };\n}\n\nfunction getFramesAttributes() {\n    var attrs = {\n        frames: Lib.extendDeepAll({}, frameAttributes)\n    };\n\n    formatAttributes(attrs);\n\n    return attrs.frames;\n}\n\nfunction formatAttributes(attrs) {\n    mergeValTypeAndRole(attrs);\n    formatArrayContainers(attrs);\n\n    return attrs;\n}\n\nfunction mergeValTypeAndRole(attrs) {\n\n    function makeSrcAttr(attrName) {\n        return {\n            valType: 'string',\n            role: 'info',\n            description: [\n                'Sets the source reference on plot.ly for ',\n                attrName, '.'\n            ].join(' '),\n            editType: 'none'\n        };\n    }\n\n    function callback(attr, attrName, attrs) {\n        if(exports.isValObject(attr)) {\n            if(attr.valType === 'data_array') {\n                // all 'data_array' attrs have role 'data'\n                attr.role = 'data';\n                // all 'data_array' attrs have a corresponding 'src' attr\n                attrs[attrName + 'src'] = makeSrcAttr(attrName);\n            }\n            else if(attr.arrayOk === true) {\n                // all 'arrayOk' attrs have a corresponding 'src' attr\n                attrs[attrName + 'src'] = makeSrcAttr(attrName);\n            }\n        }\n        else if(Lib.isPlainObject(attr)) {\n            // all attrs container objects get role 'object'\n            attr.role = 'object';\n        }\n    }\n\n    exports.crawl(attrs, callback);\n}\n\nfunction formatArrayContainers(attrs) {\n\n    function callback(attr, attrName, attrs) {\n        if(!attr) return;\n\n        var itemName = attr[IS_LINKED_TO_ARRAY];\n\n        if(!itemName) return;\n\n        delete attr[IS_LINKED_TO_ARRAY];\n\n        attrs[attrName] = { items: {} };\n        attrs[attrName].items[itemName] = attr;\n        attrs[attrName].role = 'object';\n    }\n\n    exports.crawl(attrs, callback);\n}\n\nfunction assignPolarLayoutAttrs(layoutAttributes) {\n    extendFlat(layoutAttributes, {\n        radialaxis: polarAxisAttrs.radialaxis,\n        angularaxis: polarAxisAttrs.angularaxis\n    });\n\n    extendFlat(layoutAttributes, polarAxisAttrs.layout);\n\n    return layoutAttributes;\n}\n\nfunction handleBasePlotModule(layoutAttributes, _module, astr) {\n    var np = Lib.nestedProperty(layoutAttributes, astr),\n        attrs = extendDeepAll({}, _module.layoutAttributes);\n\n    attrs[IS_SUBPLOT_OBJ] = true;\n    np.set(attrs);\n}\n\nfunction insertAttrs(baseAttrs, newAttrs, astr) {\n    var np = Lib.nestedProperty(baseAttrs, astr);\n\n    np.set(extendDeepAll(np.get() || {}, newAttrs));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plot_api/plot_schema.js\n// module id = 37\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fxAttrs = require('../components/fx/attributes');\n\nmodule.exports = {\n    type: {\n        valType: 'enumerated',\n        role: 'info',\n        values: [],     // listed dynamically\n        dflt: 'scatter',\n        editType: 'calc+clearAxisTypes'\n    },\n    visible: {\n        valType: 'enumerated',\n        values: [true, false, 'legendonly'],\n        role: 'info',\n        dflt: true,\n        editType: 'calc',\n        description: [\n            'Determines whether or not this trace is visible.',\n            'If *legendonly*, the trace is not drawn,',\n            'but can appear as a legend item',\n            '(provided that the legend itself is visible).'\n        ].join(' ')\n    },\n    showlegend: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        editType: 'style',\n        description: [\n            'Determines whether or not an item corresponding to this',\n            'trace is shown in the legend.'\n        ].join(' ')\n    },\n    legendgroup: {\n        valType: 'string',\n        role: 'info',\n        dflt: '',\n        editType: 'style',\n        description: [\n            'Sets the legend group for this trace.',\n            'Traces part of the same legend group hide/show at the same time',\n            'when toggling legend items.'\n        ].join(' ')\n    },\n    opacity: {\n        valType: 'number',\n        role: 'style',\n        min: 0,\n        max: 1,\n        dflt: 1,\n        editType: 'style',\n        description: 'Sets the opacity of the trace.'\n    },\n    name: {\n        valType: 'string',\n        role: 'info',\n        editType: 'style',\n        description: [\n            'Sets the trace name.',\n            'The trace name appear as the legend item and on hover.'\n        ].join(' ')\n    },\n    uid: {\n        valType: 'string',\n        role: 'info',\n        dflt: '',\n        editType: 'calc'\n    },\n    ids: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Assigns id labels to each datum.',\n            'These ids for object constancy of data points during animation.'\n        ].join(' ')\n    },\n    customdata: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Assigns extra data each datum.',\n            'This may be useful when listening to hover, click and selection events.',\n            'Note that, *scatter* traces also appends customdata items in the markers',\n            'DOM elements'\n        ].join(' ')\n    },\n\n    // N.B. these cannot be 'data_array' as they do not have the same length as\n    // other data arrays and arrayOk attributes in general\n    //\n    // Maybe add another valType:\n    // https://github.com/plotly/plotly.js/issues/1894\n    selectedpoints: {\n        valType: 'any',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Array containing integer indices of selected points.',\n            'Has an effect only for traces that support selections.',\n            'Note that an empty array means an empty selection where the `unselected`',\n            'are turned on for all points, whereas, any other non-array values means no',\n            'selection all where the `selected` and `unselected` styles have no effect.'\n        ].join(' ')\n    },\n\n    hoverinfo: {\n        valType: 'flaglist',\n        role: 'info',\n        flags: ['x', 'y', 'z', 'text', 'name'],\n        extras: ['all', 'none', 'skip'],\n        arrayOk: true,\n        dflt: 'all',\n        editType: 'none',\n        description: [\n            'Determines which trace information appear on hover.',\n            'If `none` or `skip` are set, no information is displayed upon hovering.',\n            'But, if `none` is set, click and hover events are still fired.'\n        ].join(' ')\n    },\n    hoverlabel: fxAttrs.hoverlabel,\n    stream: {\n        token: {\n            valType: 'string',\n            noBlank: true,\n            strict: true,\n            role: 'info',\n            editType: 'calc',\n            description: [\n                'The stream id number links a data trace on a plot with a stream.',\n                'See https://plot.ly/settings for more details.'\n            ].join(' ')\n        },\n        maxpoints: {\n            valType: 'number',\n            min: 0,\n            max: 10000,\n            dflt: 500,\n            role: 'info',\n            editType: 'calc',\n            description: [\n                'Sets the maximum number of points to keep on the plots from an',\n                'incoming stream.',\n                'If `maxpoints` is set to *50*, only the newest 50 points will',\n                'be displayed on the plot.'\n            ].join(' ')\n        },\n        editType: 'calc'\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/attributes.js\n// module id = 38\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar isArray = require('./is_array');\nvar isPlainObject = require('./is_plain_object');\nvar containerArrayMatch = require('../plot_api/container_array_match');\n\n/**\n * convert a string s (such as 'xaxis.range[0]')\n * representing a property of nested object into set and get methods\n * also return the string and object so we don't have to keep track of them\n * allows [-1] for an array index, to set a property inside all elements\n * of an array\n * eg if obj = {arr: [{a: 1}, {a: 2}]}\n * you can do p = nestedProperty(obj, 'arr[-1].a')\n * but you cannot set the array itself this way, to do that\n * just set the whole array.\n * eg if obj = {arr: [1, 2, 3]}\n * you can't do nestedProperty(obj, 'arr[-1]').set(5)\n * but you can do nestedProperty(obj, 'arr').set([5, 5, 5])\n */\nmodule.exports = function nestedProperty(container, propStr) {\n    if(isNumeric(propStr)) propStr = String(propStr);\n    else if(typeof propStr !== 'string' ||\n            propStr.substr(propStr.length - 4) === '[-1]') {\n        throw 'bad property string';\n    }\n\n    var j = 0,\n        propParts = propStr.split('.'),\n        indexed,\n        indices,\n        i;\n\n    // check for parts of the nesting hierarchy that are numbers (ie array elements)\n    while(j < propParts.length) {\n        // look for non-bracket chars, then any number of [##] blocks\n        indexed = String(propParts[j]).match(/^([^\\[\\]]*)((\\[\\-?[0-9]*\\])+)$/);\n        if(indexed) {\n            if(indexed[1]) propParts[j] = indexed[1];\n            // allow propStr to start with bracketed array indices\n            else if(j === 0) propParts.splice(0, 1);\n            else throw 'bad property string';\n\n            indices = indexed[2]\n                .substr(1, indexed[2].length - 2)\n                .split('][');\n\n            for(i = 0; i < indices.length; i++) {\n                j++;\n                propParts.splice(j, 0, Number(indices[i]));\n            }\n        }\n        j++;\n    }\n\n    if(typeof container !== 'object') {\n        return badContainer(container, propStr, propParts);\n    }\n\n    return {\n        set: npSet(container, propParts, propStr),\n        get: npGet(container, propParts),\n        astr: propStr,\n        parts: propParts,\n        obj: container\n    };\n};\n\nfunction npGet(cont, parts) {\n    return function() {\n        var curCont = cont,\n            curPart,\n            allSame,\n            out,\n            i,\n            j;\n\n        for(i = 0; i < parts.length - 1; i++) {\n            curPart = parts[i];\n            if(curPart === -1) {\n                allSame = true;\n                out = [];\n                for(j = 0; j < curCont.length; j++) {\n                    out[j] = npGet(curCont[j], parts.slice(i + 1))();\n                    if(out[j] !== out[0]) allSame = false;\n                }\n                return allSame ? out[0] : out;\n            }\n            if(typeof curPart === 'number' && !isArray(curCont)) {\n                return undefined;\n            }\n            curCont = curCont[curPart];\n            if(typeof curCont !== 'object' || curCont === null) {\n                return undefined;\n            }\n        }\n\n        // only hit this if parts.length === 1\n        if(typeof curCont !== 'object' || curCont === null) return undefined;\n\n        out = curCont[parts[i]];\n        if(out === null) return undefined;\n        return out;\n    };\n}\n\n/*\n * Can this value be deleted? We can delete any empty object (null, undefined, [], {})\n * EXCEPT empty data arrays, {} inside an array, or anything INSIDE an *args* array.\n *\n * Info arrays can be safely deleted, but not deleting them has no ill effects other\n * than leaving a trace or layout object with some cruft in it.\n *\n * Deleting data arrays can change the meaning of the object, as `[]` means there is\n * data for this attribute, it's just empty right now while `undefined` means the data\n * should be filled in with defaults to match other data arrays.\n *\n * `{}` inside an array means \"the default object\" which is clearly different from\n * popping it off the end of the array, or setting it `undefined` inside the array.\n *\n * *args* arrays get passed directly to API methods and we should respect precisely\n * what the user has put there - although if the whole *args* array is empty it's fine\n * to delete that.\n *\n * So we do some simple tests here to find known non-data arrays but don't worry too\n * much about not deleting some arrays that would actually be safe to delete.\n */\nvar INFO_PATTERNS = /(^|\\.)((domain|range)(\\.[xy])?|args|parallels)$/;\nvar ARGS_PATTERN = /(^|\\.)args\\[/;\nfunction isDeletable(val, propStr) {\n    if(!emptyObj(val) ||\n        (isPlainObject(val) && propStr.charAt(propStr.length - 1) === ']') ||\n        (propStr.match(ARGS_PATTERN) && val !== undefined)\n    ) {\n        return false;\n    }\n    if(!isArray(val)) return true;\n\n    if(propStr.match(INFO_PATTERNS)) return true;\n\n    var match = containerArrayMatch(propStr);\n    // if propStr matches the container array itself, index is an empty string\n    // otherwise we've matched something inside the container array, which may\n    // still be a data array.\n    return match && (match.index === '');\n}\n\nfunction npSet(cont, parts, propStr) {\n    return function(val) {\n        var curCont = cont,\n            propPart = '',\n            containerLevels = [[cont, propPart]],\n            toDelete = isDeletable(val, propStr),\n            curPart,\n            i;\n\n        for(i = 0; i < parts.length - 1; i++) {\n            curPart = parts[i];\n\n            if(typeof curPart === 'number' && !isArray(curCont)) {\n                throw 'array index but container is not an array';\n            }\n\n            // handle special -1 array index\n            if(curPart === -1) {\n                toDelete = !setArrayAll(curCont, parts.slice(i + 1), val, propStr);\n                if(toDelete) break;\n                else return;\n            }\n\n            if(!checkNewContainer(curCont, curPart, parts[i + 1], toDelete)) {\n                break;\n            }\n\n            curCont = curCont[curPart];\n\n            if(typeof curCont !== 'object' || curCont === null) {\n                throw 'container is not an object';\n            }\n\n            propPart = joinPropStr(propPart, curPart);\n\n            containerLevels.push([curCont, propPart]);\n        }\n\n        if(toDelete) {\n            if(i === parts.length - 1) delete curCont[parts[i]];\n            pruneContainers(containerLevels);\n        }\n        else curCont[parts[i]] = val;\n    };\n}\n\nfunction joinPropStr(propStr, newPart) {\n    var toAdd = newPart;\n    if(isNumeric(newPart)) toAdd = '[' + newPart + ']';\n    else if(propStr) toAdd = '.' + newPart;\n\n    return propStr + toAdd;\n}\n\n// handle special -1 array index\nfunction setArrayAll(containerArray, innerParts, val, propStr) {\n    var arrayVal = isArray(val),\n        allSet = true,\n        thisVal = val,\n        thisPropStr = propStr.replace('-1', 0),\n        deleteThis = arrayVal ? false : isDeletable(val, thisPropStr),\n        firstPart = innerParts[0],\n        i;\n\n    for(i = 0; i < containerArray.length; i++) {\n        thisPropStr = propStr.replace('-1', i);\n        if(arrayVal) {\n            thisVal = val[i % val.length];\n            deleteThis = isDeletable(thisVal, thisPropStr);\n        }\n        if(deleteThis) allSet = false;\n        if(!checkNewContainer(containerArray, i, firstPart, deleteThis)) {\n            continue;\n        }\n        npSet(containerArray[i], innerParts, propStr.replace('-1', i))(thisVal);\n    }\n    return allSet;\n}\n\n/**\n * make new sub-container as needed.\n * returns false if there's no container and none is needed\n * because we're only deleting an attribute\n */\nfunction checkNewContainer(container, part, nextPart, toDelete) {\n    if(container[part] === undefined) {\n        if(toDelete) return false;\n\n        if(typeof nextPart === 'number') container[part] = [];\n        else container[part] = {};\n    }\n    return true;\n}\n\nfunction pruneContainers(containerLevels) {\n    var i,\n        j,\n        curCont,\n        propPart,\n        keys,\n        remainingKeys;\n    for(i = containerLevels.length - 1; i >= 0; i--) {\n        curCont = containerLevels[i][0];\n        propPart = containerLevels[i][1];\n\n        remainingKeys = false;\n        if(isArray(curCont)) {\n            for(j = curCont.length - 1; j >= 0; j--) {\n                if(isDeletable(curCont[j], joinPropStr(propPart, j))) {\n                    if(remainingKeys) curCont[j] = undefined;\n                    else curCont.pop();\n                }\n                else remainingKeys = true;\n            }\n        }\n        else if(typeof curCont === 'object' && curCont !== null) {\n            keys = Object.keys(curCont);\n            remainingKeys = false;\n            for(j = keys.length - 1; j >= 0; j--) {\n                if(isDeletable(curCont[keys[j]], joinPropStr(propPart, keys[j]))) {\n                    delete curCont[keys[j]];\n                }\n                else remainingKeys = true;\n            }\n        }\n        if(remainingKeys) return;\n    }\n}\n\nfunction emptyObj(obj) {\n    if(obj === undefined || obj === null) return true;\n    if(typeof obj !== 'object') return false; // any plain value\n    if(isArray(obj)) return !obj.length; // []\n    return !Object.keys(obj).length; // {}\n}\n\nfunction badContainer(container, propStr, propParts) {\n    return {\n        set: function() { throw 'bad container'; },\n        get: function() {},\n        astr: propStr,\n        parts: propParts,\n        obj: container\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/nested_property.js\n// module id = 39\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n\nmodule.exports = {\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Determines whether or not this set of error bars is visible.'\n        ].join(' ')\n    },\n    type: {\n        valType: 'enumerated',\n        values: ['percent', 'constant', 'sqrt', 'data'],\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Determines the rule used to generate the error bars.',\n\n            'If *constant`, the bar lengths are of a constant value.',\n            'Set this constant in `value`.',\n\n            'If *percent*, the bar lengths correspond to a percentage of',\n            'underlying data. Set this percentage in `value`.',\n\n            'If *sqrt*, the bar lengths correspond to the sqaure of the',\n            'underlying data.',\n\n            'If *array*, the bar lengths are set with data set `array`.'\n        ].join(' ')\n    },\n    symmetric: {\n        valType: 'boolean',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Determines whether or not the error bars have the same length',\n            'in both direction',\n            '(top/bottom for vertical bars, left/right for horizontal bars.'\n        ].join(' ')\n    },\n    array: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Sets the data corresponding the length of each error bar.',\n            'Values are plotted relative to the underlying data.'\n        ].join(' ')\n    },\n    arrayminus: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Sets the data corresponding the length of each error bar in the',\n            'bottom (left) direction for vertical (horizontal) bars',\n            'Values are plotted relative to the underlying data.'\n        ].join(' ')\n    },\n    value: {\n        valType: 'number',\n        min: 0,\n        dflt: 10,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the value of either the percentage',\n            '(if `type` is set to *percent*) or the constant',\n            '(if `type` is set to *constant*) corresponding to the lengths of',\n            'the error bars.'\n        ].join(' ')\n    },\n    valueminus: {\n        valType: 'number',\n        min: 0,\n        dflt: 10,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the value of either the percentage',\n            '(if `type` is set to *percent*) or the constant',\n            '(if `type` is set to *constant*) corresponding to the lengths of',\n            'the error bars in the',\n            'bottom (left) direction for vertical (horizontal) bars'\n        ].join(' ')\n    },\n    traceref: {\n        valType: 'integer',\n        min: 0,\n        dflt: 0,\n        role: 'info',\n        editType: 'style'\n    },\n    tracerefminus: {\n        valType: 'integer',\n        min: 0,\n        dflt: 0,\n        role: 'info',\n        editType: 'style'\n    },\n    copy_ystyle: {\n        valType: 'boolean',\n        role: 'style',\n        editType: 'plot'\n    },\n    copy_zstyle: {\n        valType: 'boolean',\n        role: 'style',\n        editType: 'style'\n    },\n    color: {\n        valType: 'color',\n        role: 'style',\n        editType: 'style',\n        description: 'Sets the stoke color of the error bars.'\n    },\n    thickness: {\n        valType: 'number',\n        min: 0,\n        dflt: 2,\n        role: 'style',\n        editType: 'style',\n        description: 'Sets the thickness (in px) of the error bars.'\n    },\n    width: {\n        valType: 'number',\n        min: 0,\n        role: 'style',\n        editType: 'plot',\n        description: [\n            'Sets the width (in px) of the cross-bar at both ends',\n            'of the error bars.'\n        ].join(' ')\n    },\n    editType: 'calc',\n\n    _deprecated: {\n        opacity: {\n            valType: 'number',\n            role: 'style',\n            editType: 'style',\n            description: [\n                'Obsolete.',\n                'Use the alpha channel in error bar `color` to set the opacity.'\n            ].join(' ')\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/errorbars/attributes.js\n// module id = 40\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar axesAttrs = require('../../plots/cartesian/layout_attributes');\nvar fontAttrs = require('../../plots/font_attributes');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\n\nmodule.exports = overrideAll({\n// TODO: only right is supported currently\n//     orient: {\n//         valType: 'enumerated',\n//         role: 'info',\n//         values: ['left', 'right', 'top', 'bottom'],\n//         dflt: 'right',\n//         description: [\n//             'Determines which side are the labels on',\n//             '(so left and right make vertical bars, etc.)'\n//         ].join(' ')\n//     },\n    thicknessmode: {\n        valType: 'enumerated',\n        values: ['fraction', 'pixels'],\n        role: 'style',\n        dflt: 'pixels',\n        description: [\n            'Determines whether this color bar\\'s thickness',\n            '(i.e. the measure in the constant color direction)',\n            'is set in units of plot *fraction* or in *pixels*.',\n            'Use `thickness` to set the value.'\n        ].join(' ')\n    },\n    thickness: {\n        valType: 'number',\n        role: 'style',\n        min: 0,\n        dflt: 30,\n        description: [\n            'Sets the thickness of the color bar',\n            'This measure excludes the size of the padding, ticks and labels.'\n        ].join(' ')\n    },\n    lenmode: {\n        valType: 'enumerated',\n        values: ['fraction', 'pixels'],\n        role: 'info',\n        dflt: 'fraction',\n        description: [\n            'Determines whether this color bar\\'s length',\n            '(i.e. the measure in the color variation direction)',\n            'is set in units of plot *fraction* or in *pixels.',\n            'Use `len` to set the value.'\n        ].join(' ')\n    },\n    len: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        role: 'style',\n        description: [\n            'Sets the length of the color bar',\n            'This measure excludes the padding of both ends.',\n            'That is, the color bar length is this length minus the',\n            'padding on both ends.'\n        ].join(' ')\n    },\n    x: {\n        valType: 'number',\n        dflt: 1.02,\n        min: -2,\n        max: 3,\n        role: 'style',\n        description: [\n            'Sets the x position of the color bar (in plot fraction).'\n        ].join(' ')\n    },\n    xanchor: {\n        valType: 'enumerated',\n        values: ['left', 'center', 'right'],\n        dflt: 'left',\n        role: 'style',\n        description: [\n            'Sets this color bar\\'s horizontal position anchor.',\n            'This anchor binds the `x` position to the *left*, *center*',\n            'or *right* of the color bar.'\n        ].join(' ')\n    },\n    xpad: {\n        valType: 'number',\n        role: 'style',\n        min: 0,\n        dflt: 10,\n        description: 'Sets the amount of padding (in px) along the x direction.'\n    },\n    y: {\n        valType: 'number',\n        role: 'style',\n        dflt: 0.5,\n        min: -2,\n        max: 3,\n        description: [\n            'Sets the y position of the color bar (in plot fraction).'\n        ].join(' ')\n    },\n    yanchor: {\n        valType: 'enumerated',\n        values: ['top', 'middle', 'bottom'],\n        role: 'style',\n        dflt: 'middle',\n        description: [\n            'Sets this color bar\\'s vertical position anchor',\n            'This anchor binds the `y` position to the *top*, *middle*',\n            'or *bottom* of the color bar.'\n        ].join(' ')\n    },\n    ypad: {\n        valType: 'number',\n        role: 'style',\n        min: 0,\n        dflt: 10,\n        description: 'Sets the amount of padding (in px) along the y direction.'\n    },\n    // a possible line around the bar itself\n    outlinecolor: axesAttrs.linecolor,\n    outlinewidth: axesAttrs.linewidth,\n    // Should outlinewidth have {dflt: 0} ?\n    // another possible line outside the padding and tick labels\n    bordercolor: axesAttrs.linecolor,\n    borderwidth: {\n        valType: 'number',\n        role: 'style',\n        min: 0,\n        dflt: 0,\n        description: [\n            'Sets the width (in px) or the border enclosing this color bar.'\n        ].join(' ')\n    },\n    bgcolor: {\n        valType: 'color',\n        role: 'style',\n        dflt: 'rgba(0,0,0,0)',\n        description: 'Sets the color of padded area.'\n    },\n    // tick and title properties named and function exactly as in axes\n    tickmode: axesAttrs.tickmode,\n    nticks: axesAttrs.nticks,\n    tick0: axesAttrs.tick0,\n    dtick: axesAttrs.dtick,\n    tickvals: axesAttrs.tickvals,\n    ticktext: axesAttrs.ticktext,\n    ticks: extendFlat({}, axesAttrs.ticks, {dflt: ''}),\n    ticklen: axesAttrs.ticklen,\n    tickwidth: axesAttrs.tickwidth,\n    tickcolor: axesAttrs.tickcolor,\n    showticklabels: axesAttrs.showticklabels,\n    tickfont: fontAttrs({\n        description: 'Sets the color bar\\'s tick label font'\n    }),\n    tickangle: axesAttrs.tickangle,\n    tickformat: axesAttrs.tickformat,\n    tickformatstops: axesAttrs.tickformatstops,\n    tickprefix: axesAttrs.tickprefix,\n    showtickprefix: axesAttrs.showtickprefix,\n    ticksuffix: axesAttrs.ticksuffix,\n    showticksuffix: axesAttrs.showticksuffix,\n    separatethousands: axesAttrs.separatethousands,\n    exponentformat: axesAttrs.exponentformat,\n    showexponent: axesAttrs.showexponent,\n    title: {\n        valType: 'string',\n        role: 'info',\n        description: 'Sets the title of the color bar.'\n    },\n    titlefont: fontAttrs({\n        description: 'Sets this color bar\\'s title font.'\n    }),\n    titleside: {\n        valType: 'enumerated',\n        values: ['right', 'top', 'bottom'],\n        role: 'style',\n        dflt: 'top',\n        description: [\n            'Determines the location of the colorbar title',\n            'with respect to the color bar.'\n        ].join(' ')\n    }\n}, 'colorbars', 'from-root');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorbar/attributes.js\n// module id = 41\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\n\nvar hasColorbar = require('../colorbar/has_colorbar');\nvar colorbarDefaults = require('../colorbar/defaults');\nvar isValidScale = require('./is_valid_scale');\nvar flipScale = require('./flip_scale');\n\n\nmodule.exports = function colorScaleDefaults(traceIn, traceOut, layout, coerce, opts) {\n    var prefix = opts.prefix,\n        cLetter = opts.cLetter,\n        containerStr = prefix.slice(0, prefix.length - 1),\n        containerIn = prefix ?\n            Lib.nestedProperty(traceIn, containerStr).get() || {} :\n            traceIn,\n        containerOut = prefix ?\n            Lib.nestedProperty(traceOut, containerStr).get() || {} :\n            traceOut,\n        minIn = containerIn[cLetter + 'min'],\n        maxIn = containerIn[cLetter + 'max'],\n        sclIn = containerIn.colorscale;\n\n    var validMinMax = isNumeric(minIn) && isNumeric(maxIn) && (minIn < maxIn);\n    coerce(prefix + cLetter + 'auto', !validMinMax);\n    coerce(prefix + cLetter + 'min');\n    coerce(prefix + cLetter + 'max');\n\n    // handles both the trace case (autocolorscale is false by default) and\n    // the marker and marker.line case (autocolorscale is true by default)\n    var autoColorscaleDftl;\n    if(sclIn !== undefined) autoColorscaleDftl = !isValidScale(sclIn);\n    coerce(prefix + 'autocolorscale', autoColorscaleDftl);\n    var sclOut = coerce(prefix + 'colorscale');\n\n    // reversescale is handled at the containerOut level\n    var reverseScale = coerce(prefix + 'reversescale');\n    if(reverseScale) containerOut.colorscale = flipScale(sclOut);\n\n    // ... until Scatter.colorbar can handle marker line colorbars\n    if(prefix === 'marker.line.') return;\n\n    // handle both the trace case where the dflt is listed in attributes and\n    // the marker case where the dflt is determined by hasColorbar\n    var showScaleDftl;\n    if(prefix) showScaleDftl = hasColorbar(containerIn);\n    var showScale = coerce(prefix + 'showscale', showScaleDftl);\n\n    if(showScale) colorbarDefaults(containerIn, containerOut, layout);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/defaults.js\n// module id = 42\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\n/**\n * Determine the position anchor property of x/y xanchor/yanchor components.\n *\n * - values < 1/3 align the low side at that fraction,\n * - values [1/3, 2/3] align the center at that fraction,\n * - values > 2/3 align the right at that fraction.\n */\n\nexports.isRightAnchor = function isRightAnchor(opts) {\n    return (\n        opts.xanchor === 'right' ||\n        (opts.xanchor === 'auto' && opts.x >= 2 / 3)\n    );\n};\n\nexports.isCenterAnchor = function isCenterAnchor(opts) {\n    return (\n        opts.xanchor === 'center' ||\n        (opts.xanchor === 'auto' && opts.x > 1 / 3 && opts.x < 2 / 3)\n    );\n};\n\nexports.isBottomAnchor = function isBottomAnchor(opts) {\n    return (\n        opts.yanchor === 'bottom' ||\n        (opts.yanchor === 'auto' && opts.y <= 1 / 3)\n    );\n};\n\nexports.isMiddleAnchor = function isMiddleAnchor(opts) {\n    return (\n        opts.yanchor === 'middle' ||\n        (opts.yanchor === 'auto' && opts.y > 1 / 3 && opts.y < 2 / 3)\n    );\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/legend/anchor_utils.js\n// module id = 43\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar ARROWPATHS = require('./arrow_paths');\nvar fontAttrs = require('../../plots/font_attributes');\nvar cartesianConstants = require('../../plots/cartesian/constants');\n\n\nmodule.exports = {\n    _isLinkedToArray: 'annotation',\n\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        editType: 'calcIfAutorange',\n        description: [\n            'Determines whether or not this annotation is visible.'\n        ].join(' ')\n    },\n\n    text: {\n        valType: 'string',\n        role: 'info',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the text associated with this annotation.',\n            'Plotly uses a subset of HTML tags to do things like',\n            'newline (<br>), bold (<b></b>), italics (<i></i>),',\n            'hyperlinks (<a href=\\'...\\'></a>). Tags <em>, <sup>, <sub>',\n            '<span> are also supported.'\n        ].join(' ')\n    },\n    textangle: {\n        valType: 'angle',\n        dflt: 0,\n        role: 'style',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the angle at which the `text` is drawn',\n            'with respect to the horizontal.'\n        ].join(' ')\n    },\n    font: fontAttrs({\n        editType: 'calcIfAutorange',\n        colorEditType: 'arraydraw',\n        description: 'Sets the annotation text font.'\n    }),\n    width: {\n        valType: 'number',\n        min: 1,\n        dflt: null,\n        role: 'style',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets an explicit width for the text box. null (default) lets the',\n            'text set the box width. Wider text will be clipped.',\n            'There is no automatic wrapping; use <br> to start a new line.'\n        ].join(' ')\n    },\n    height: {\n        valType: 'number',\n        min: 1,\n        dflt: null,\n        role: 'style',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets an explicit height for the text box. null (default) lets the',\n            'text set the box height. Taller text will be clipped.'\n        ].join(' ')\n    },\n    opacity: {\n        valType: 'number',\n        min: 0,\n        max: 1,\n        dflt: 1,\n        role: 'style',\n        editType: 'arraydraw',\n        description: 'Sets the opacity of the annotation (text + arrow).'\n    },\n    align: {\n        valType: 'enumerated',\n        values: ['left', 'center', 'right'],\n        dflt: 'center',\n        role: 'style',\n        editType: 'arraydraw',\n        description: [\n            'Sets the horizontal alignment of the `text` within the box.',\n            'Has an effect only if `text` spans more two or more lines',\n            '(i.e. `text` contains one or more <br> HTML tags) or if an',\n            'explicit width is set to override the text width.'\n        ].join(' ')\n    },\n    valign: {\n        valType: 'enumerated',\n        values: ['top', 'middle', 'bottom'],\n        dflt: 'middle',\n        role: 'style',\n        editType: 'arraydraw',\n        description: [\n            'Sets the vertical alignment of the `text` within the box.',\n            'Has an effect only if an explicit height is set to override',\n            'the text height.'\n        ].join(' ')\n    },\n    bgcolor: {\n        valType: 'color',\n        dflt: 'rgba(0,0,0,0)',\n        role: 'style',\n        editType: 'arraydraw',\n        description: 'Sets the background color of the annotation.'\n    },\n    bordercolor: {\n        valType: 'color',\n        dflt: 'rgba(0,0,0,0)',\n        role: 'style',\n        editType: 'arraydraw',\n        description: [\n            'Sets the color of the border enclosing the annotation `text`.'\n        ].join(' ')\n    },\n    borderpad: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        role: 'style',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the padding (in px) between the `text`',\n            'and the enclosing border.'\n        ].join(' ')\n    },\n    borderwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        role: 'style',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the width (in px) of the border enclosing',\n            'the annotation `text`.'\n        ].join(' ')\n    },\n    // arrow\n    showarrow: {\n        valType: 'boolean',\n        dflt: true,\n        role: 'style',\n        editType: 'calcIfAutorange',\n        description: [\n            'Determines whether or not the annotation is drawn with an arrow.',\n            'If *true*, `text` is placed near the arrow\\'s tail.',\n            'If *false*, `text` lines up with the `x` and `y` provided.'\n        ].join(' ')\n    },\n    arrowcolor: {\n        valType: 'color',\n        role: 'style',\n        editType: 'arraydraw',\n        description: 'Sets the color of the annotation arrow.'\n    },\n    arrowhead: {\n        valType: 'integer',\n        min: 0,\n        max: ARROWPATHS.length,\n        dflt: 1,\n        role: 'style',\n        editType: 'arraydraw',\n        description: 'Sets the end annotation arrow head style.'\n    },\n    startarrowhead: {\n        valType: 'integer',\n        min: 0,\n        max: ARROWPATHS.length,\n        dflt: 1,\n        role: 'style',\n        editType: 'arraydraw',\n        description: 'Sets the start annotation arrow head style.'\n    },\n    arrowside: {\n        valType: 'flaglist',\n        flags: ['end', 'start'],\n        extras: ['none'],\n        dflt: 'end',\n        role: 'style',\n        editType: 'arraydraw',\n        description: 'Sets the annotation arrow head position.'\n    },\n    arrowsize: {\n        valType: 'number',\n        min: 0.3,\n        dflt: 1,\n        role: 'style',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the size of the end annotation arrow head, relative to `arrowwidth`.',\n            'A value of 1 (default) gives a head about 3x as wide as the line.'\n        ].join(' ')\n    },\n    startarrowsize: {\n        valType: 'number',\n        min: 0.3,\n        dflt: 1,\n        role: 'style',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the size of the start annotation arrow head, relative to `arrowwidth`.',\n            'A value of 1 (default) gives a head about 3x as wide as the line.'\n        ].join(' ')\n    },\n    arrowwidth: {\n        valType: 'number',\n        min: 0.1,\n        role: 'style',\n        editType: 'calcIfAutorange',\n        description: 'Sets the width (in px) of annotation arrow line.'\n    },\n    standoff: {\n        valType: 'number',\n        min: 0,\n        dflt: 0,\n        role: 'style',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets a distance, in pixels, to move the end arrowhead away from the',\n            'position it is pointing at, for example to point at the edge of',\n            'a marker independent of zoom. Note that this shortens the arrow',\n            'from the `ax` / `ay` vector, in contrast to `xshift` / `yshift`',\n            'which moves everything by this amount.'\n        ].join(' ')\n    },\n    startstandoff: {\n        valType: 'number',\n        min: 0,\n        dflt: 0,\n        role: 'style',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets a distance, in pixels, to move the start arrowhead away from the',\n            'position it is pointing at, for example to point at the edge of',\n            'a marker independent of zoom. Note that this shortens the arrow',\n            'from the `ax` / `ay` vector, in contrast to `xshift` / `yshift`',\n            'which moves everything by this amount.'\n        ].join(' ')\n    },\n    ax: {\n        valType: 'any',\n        role: 'info',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the x component of the arrow tail about the arrow head.',\n            'If `axref` is `pixel`, a positive (negative) ',\n            'component corresponds to an arrow pointing',\n            'from right to left (left to right).',\n            'If `axref` is an axis, this is an absolute value on that axis,',\n            'like `x`, NOT a relative value.'\n        ].join(' ')\n    },\n    ay: {\n        valType: 'any',\n        role: 'info',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the y component of the arrow tail about the arrow head.',\n            'If `ayref` is `pixel`, a positive (negative) ',\n            'component corresponds to an arrow pointing',\n            'from bottom to top (top to bottom).',\n            'If `ayref` is an axis, this is an absolute value on that axis,',\n            'like `y`, NOT a relative value.'\n        ].join(' ')\n    },\n    axref: {\n        valType: 'enumerated',\n        dflt: 'pixel',\n        values: [\n            'pixel',\n            cartesianConstants.idRegex.x.toString()\n        ],\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Indicates in what terms the tail of the annotation (ax,ay) ',\n            'is specified. If `pixel`, `ax` is a relative offset in pixels ',\n            'from `x`. If set to an x axis id (e.g. *x* or *x2*), `ax` is ',\n            'specified in the same terms as that axis. This is useful ',\n            'for trendline annotations which should continue to indicate ',\n            'the correct trend when zoomed.'\n        ].join(' ')\n    },\n    ayref: {\n        valType: 'enumerated',\n        dflt: 'pixel',\n        values: [\n            'pixel',\n            cartesianConstants.idRegex.y.toString()\n        ],\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Indicates in what terms the tail of the annotation (ax,ay) ',\n            'is specified. If `pixel`, `ay` is a relative offset in pixels ',\n            'from `y`. If set to a y axis id (e.g. *y* or *y2*), `ay` is ',\n            'specified in the same terms as that axis. This is useful ',\n            'for trendline annotations which should continue to indicate ',\n            'the correct trend when zoomed.'\n        ].join(' ')\n    },\n    // positioning\n    xref: {\n        valType: 'enumerated',\n        values: [\n            'paper',\n            cartesianConstants.idRegex.x.toString()\n        ],\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the annotation\\'s x coordinate axis.',\n            'If set to an x axis id (e.g. *x* or *x2*), the `x` position',\n            'refers to an x coordinate',\n            'If set to *paper*, the `x` position refers to the distance from',\n            'the left side of the plotting area in normalized coordinates',\n            'where 0 (1) corresponds to the left (right) side.'\n        ].join(' ')\n    },\n    x: {\n        valType: 'any',\n        role: 'info',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the annotation\\'s x position.',\n            'If the axis `type` is *log*, then you must take the',\n            'log of your desired range.',\n            'If the axis `type` is *date*, it should be date strings,',\n            'like date data, though Date objects and unix milliseconds',\n            'will be accepted and converted to strings.',\n            'If the axis `type` is *category*, it should be numbers,',\n            'using the scale where each category is assigned a serial',\n            'number from zero in the order it appears.'\n        ].join(' ')\n    },\n    xanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'left', 'center', 'right'],\n        dflt: 'auto',\n        role: 'info',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the text box\\'s horizontal position anchor',\n            'This anchor binds the `x` position to the *left*, *center*',\n            'or *right* of the annotation.',\n            'For example, if `x` is set to 1, `xref` to *paper* and',\n            '`xanchor` to *right* then the right-most portion of the',\n            'annotation lines up with the right-most edge of the',\n            'plotting area.',\n            'If *auto*, the anchor is equivalent to *center* for',\n            'data-referenced annotations or if there is an arrow,',\n            'whereas for paper-referenced with no arrow, the anchor picked',\n            'corresponds to the closest side.'\n        ].join(' ')\n    },\n    xshift: {\n        valType: 'number',\n        dflt: 0,\n        role: 'style',\n        editType: 'calcIfAutorange',\n        description: [\n            'Shifts the position of the whole annotation and arrow to the',\n            'right (positive) or left (negative) by this many pixels.'\n        ].join(' ')\n    },\n    yref: {\n        valType: 'enumerated',\n        values: [\n            'paper',\n            cartesianConstants.idRegex.y.toString()\n        ],\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the annotation\\'s y coordinate axis.',\n            'If set to an y axis id (e.g. *y* or *y2*), the `y` position',\n            'refers to an y coordinate',\n            'If set to *paper*, the `y` position refers to the distance from',\n            'the bottom of the plotting area in normalized coordinates',\n            'where 0 (1) corresponds to the bottom (top).'\n        ].join(' ')\n    },\n    y: {\n        valType: 'any',\n        role: 'info',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the annotation\\'s y position.',\n            'If the axis `type` is *log*, then you must take the',\n            'log of your desired range.',\n            'If the axis `type` is *date*, it should be date strings,',\n            'like date data, though Date objects and unix milliseconds',\n            'will be accepted and converted to strings.',\n            'If the axis `type` is *category*, it should be numbers,',\n            'using the scale where each category is assigned a serial',\n            'number from zero in the order it appears.'\n        ].join(' ')\n    },\n    yanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'top', 'middle', 'bottom'],\n        dflt: 'auto',\n        role: 'info',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the text box\\'s vertical position anchor',\n            'This anchor binds the `y` position to the *top*, *middle*',\n            'or *bottom* of the annotation.',\n            'For example, if `y` is set to 1, `yref` to *paper* and',\n            '`yanchor` to *top* then the top-most portion of the',\n            'annotation lines up with the top-most edge of the',\n            'plotting area.',\n            'If *auto*, the anchor is equivalent to *middle* for',\n            'data-referenced annotations or if there is an arrow,',\n            'whereas for paper-referenced with no arrow, the anchor picked',\n            'corresponds to the closest side.'\n        ].join(' ')\n    },\n    yshift: {\n        valType: 'number',\n        dflt: 0,\n        role: 'style',\n        editType: 'calcIfAutorange',\n        description: [\n            'Shifts the position of the whole annotation and arrow up',\n            '(positive) or down (negative) by this many pixels.'\n        ].join(' ')\n    },\n    clicktoshow: {\n        valType: 'enumerated',\n        values: [false, 'onoff', 'onout'],\n        dflt: false,\n        role: 'style',\n        editType: 'arraydraw',\n        description: [\n            'Makes this annotation respond to clicks on the plot.',\n            'If you click a data point that exactly matches the `x` and `y`',\n            'values of this annotation, and it is hidden (visible: false),',\n            'it will appear. In *onoff* mode, you must click the same point',\n            'again to make it disappear, so if you click multiple points,',\n            'you can show multiple annotations. In *onout* mode, a click',\n            'anywhere else in the plot (on another data point or not) will',\n            'hide this annotation.',\n            'If you need to show/hide this annotation in response to different',\n            '`x` or `y` values, you can set `xclick` and/or `yclick`. This is',\n            'useful for example to label the side of a bar. To label markers',\n            'though, `standoff` is preferred over `xclick` and `yclick`.'\n        ].join(' ')\n    },\n    xclick: {\n        valType: 'any',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Toggle this annotation when clicking a data point whose `x` value',\n            'is `xclick` rather than the annotation\\'s `x` value.'\n        ].join(' ')\n    },\n    yclick: {\n        valType: 'any',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Toggle this annotation when clicking a data point whose `y` value',\n            'is `yclick` rather than the annotation\\'s `y` value.'\n        ].join(' ')\n    },\n    hovertext: {\n        valType: 'string',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Sets text to appear when hovering over this annotation.',\n            'If omitted or blank, no hover label will appear.'\n        ].join(' ')\n    },\n    hoverlabel: {\n        bgcolor: {\n            valType: 'color',\n            role: 'style',\n            editType: 'arraydraw',\n            description: [\n                'Sets the background color of the hover label.',\n                'By default uses the annotation\\'s `bgcolor` made opaque,',\n                'or white if it was transparent.'\n            ].join(' ')\n        },\n        bordercolor: {\n            valType: 'color',\n            role: 'style',\n            editType: 'arraydraw',\n            description: [\n                'Sets the border color of the hover label.',\n                'By default uses either dark grey or white, for maximum',\n                'contrast with `hoverlabel.bgcolor`.'\n            ].join(' ')\n        },\n        font: fontAttrs({\n            editType: 'arraydraw',\n            description: [\n                'Sets the hover label text font.',\n                'By default uses the global hover font and size,',\n                'with color from `hoverlabel.bordercolor`.'\n            ].join(' ')\n        }),\n        editType: 'arraydraw'\n    },\n    captureevents: {\n        valType: 'boolean',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Determines whether the annotation text box captures mouse move',\n            'and click events, or allows those events to pass through to data',\n            'points in the plot that may be behind the annotation. By default',\n            '`captureevents` is *false* unless `hovertext` is provided.',\n            'If you use the event `plotly_clickannotation` without `hovertext`',\n            'you must explicitly enable `captureevents`.'\n        ].join(' ')\n    },\n    editType: 'calc',\n\n    _deprecated: {\n        ref: {\n            valType: 'string',\n            role: 'info',\n            editType: 'calc',\n            description: [\n                'Obsolete. Set `xref` and `yref` separately instead.'\n            ].join(' ')\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations/attributes.js\n// module id = 44\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\nmodule.exports = {\n\n    // layout attribute name\n    name: 'sliders',\n\n    // class names\n    containerClassName: 'slider-container',\n    groupClassName: 'slider-group',\n    inputAreaClass: 'slider-input-area',\n    railRectClass: 'slider-rail-rect',\n    railTouchRectClass: 'slider-rail-touch-rect',\n    gripRectClass: 'slider-grip-rect',\n    tickRectClass: 'slider-tick-rect',\n    inputProxyClass: 'slider-input-proxy',\n    labelsClass: 'slider-labels',\n    labelGroupClass: 'slider-label-group',\n    labelClass: 'slider-label',\n    currentValueClass: 'slider-current-value',\n\n    railHeight: 5,\n\n    // DOM attribute name in button group keeping track\n    // of active update menu\n    menuIndexAttrName: 'slider-active-index',\n\n    // id root pass to Plots.autoMargin\n    autoMarginIdRoot: 'slider-',\n\n    // min item width / height\n    minWidth: 30,\n    minHeight: 30,\n\n    // padding around item text\n    textPadX: 40,\n\n    // arrow offset off right edge\n    arrowOffsetX: 4,\n\n    railRadius: 2,\n    railWidth: 5,\n    railBorder: 4,\n    railBorderWidth: 1,\n    railBorderColor: '#bec8d9',\n    railBgColor: '#f8fafc',\n\n    // The distance of the rail from the edge of the touchable area\n    // Slightly less than the step inset because of the curved edges\n    // of the rail\n    railInset: 8,\n\n    // The distance from the extremal tick marks to the edge of the\n    // touchable area. This is basically the same as the grip radius,\n    // but for other styles it wouldn't really need to be.\n    stepInset: 10,\n\n    gripRadius: 10,\n    gripWidth: 20,\n    gripHeight: 20,\n    gripBorder: 20,\n    gripBorderWidth: 1,\n    gripBorderColor: '#bec8d9',\n    gripBgColor: '#f6f8fa',\n    gripBgActiveColor: '#dbdde0',\n\n    labelPadding: 8,\n    labelOffset: 0,\n\n    tickWidth: 1,\n    tickColor: '#333',\n    tickOffset: 25,\n    tickLength: 7,\n\n    minorTickOffset: 25,\n    minorTickColor: '#333',\n    minorTickLength: 4,\n\n    // Extra space below the current value label:\n    currentValuePadding: 8,\n    currentValueInset: 0,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/sliders/constants.js\n// module id = 45\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n// Simple helper functions\n// none of these need any external deps\n\nmodule.exports = function noop() {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/noop.js\n// module id = 46\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\n\nmodule.exports = {\n    hoverlabel: {\n        bgcolor: {\n            valType: 'color',\n            role: 'style',\n            arrayOk: true,\n            editType: 'none',\n            description: [\n                'Sets the background color of the hover labels for this trace'\n            ].join(' ')\n        },\n        bordercolor: {\n            valType: 'color',\n            role: 'style',\n            arrayOk: true,\n            editType: 'none',\n            description: [\n                'Sets the border color of the hover labels for this trace.'\n            ].join(' ')\n        },\n        font: fontAttrs({\n            arrayOk: true,\n            editType: 'none',\n            description: 'Sets the font used in hover labels.'\n        }),\n        namelength: {\n            valType: 'integer',\n            min: -1,\n            arrayOk: true,\n            role: 'style',\n            editType: 'none',\n            description: [\n                'Sets the length (in number of characters) of the trace name in',\n                'the hover labels for this trace. -1 shows the whole name',\n                'regardless of length. 0-3 shows the first 0-3 characters, and',\n                'an integer >3 will show the whole name if it is less than that',\n                'many characters, but if it is longer, will truncate to',\n                '`namelength - 3` characters and add an ellipsis.'\n            ].join(' ')\n        },\n        editType: 'calc'\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/fx/attributes.js\n// module id = 47\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/**\n * Return true for arrays, whether they're untyped or not.\n */\n\n// IE9 fallback\nvar ab = (typeof ArrayBuffer === 'undefined' || !ArrayBuffer.isView) ?\n    {isView: function() { return false; }} :\n    ArrayBuffer;\n\nmodule.exports = function isArray(a) {\n    return Array.isArray(a) || ab.isView(a);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/is_array.js\n// module id = 48\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/**\n * sanitized modulus function that always returns in the range [0, d)\n * rather than (-d, 0] if v is negative\n */\nmodule.exports = function mod(v, d) {\n    var out = v % d;\n    return out < 0 ? out + d : out;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/mod.js\n// module id = 49\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\n/**\n * convert a linear value into a logged value, folding negative numbers into\n * the given range\n */\nmodule.exports = function toLogRange(val, range) {\n    if(val > 0) return Math.log(val) / Math.LN10;\n\n    // move a negative value reference to a log axis - just put the\n    // result at the lowest range value on the plot (or if the range also went negative,\n    // one millionth of the top of the range)\n    var newVal = Math.log(Math.min(range[0], range[1])) / Math.LN10;\n    if(!isNumeric(newVal)) newVal = Math.log(Math.max(range[0], range[1])) / Math.LN10 - 6;\n    return newVal;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/to_log_range.js\n// module id = 50\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar timerCache = {};\n\n/**\n * Throttle a callback. `callback` executes synchronously only if\n * more than `minInterval` milliseconds have already elapsed since the latest\n * call (if any). Otherwise we wait until `minInterval` is over and execute the\n * last callback received while waiting.\n * So the first and last events in a train are always executed (eventually)\n * but some of the events in the middle can be dropped.\n *\n * @param {string} id: an identifier to mark events to throttle together\n * @param {number} minInterval: minimum time, in milliseconds, between\n *   invocations of `callback`\n * @param {function} callback: the function to throttle. `callback` itself\n *   should be a purely synchronous function.\n */\nexports.throttle = function throttle(id, minInterval, callback) {\n    var cache = timerCache[id];\n    var now = Date.now();\n\n    if(!cache) {\n        /*\n         * Throw out old items before making a new one, to prevent the cache\n         * getting overgrown, for example from old plots that have been replaced.\n         * 1 minute age is arbitrary.\n         */\n        for(var idi in timerCache) {\n            if(timerCache[idi].ts < now - 60000) {\n                delete timerCache[idi];\n            }\n        }\n        cache = timerCache[id] = {ts: 0, timer: null};\n    }\n\n    _clearTimeout(cache);\n\n    function exec() {\n        callback();\n        cache.ts = Date.now();\n        if(cache.onDone) {\n            cache.onDone();\n            cache.onDone = null;\n        }\n    }\n\n    if(now > cache.ts + minInterval) {\n        exec();\n        return;\n    }\n\n    cache.timer = setTimeout(function() {\n        exec();\n        cache.timer = null;\n    }, minInterval);\n};\n\nexports.done = function(id) {\n    var cache = timerCache[id];\n    if(!cache || !cache.timer) return Promise.resolve();\n\n    return new Promise(function(resolve) {\n        var previousOnDone = cache.onDone;\n        cache.onDone = function onDone() {\n            if(previousOnDone) previousOnDone();\n            resolve();\n            cache.onDone = null;\n        };\n    });\n};\n\n/**\n * Clear the throttle cache for one or all timers\n * @param {optional string} id:\n *   if provided, clear just this timer\n *   if omitted, clear all timers (mainly useful for testing)\n */\nexports.clear = function(id) {\n    if(id) {\n        _clearTimeout(timerCache[id]);\n        delete timerCache[id];\n    }\n    else {\n        for(var idi in timerCache) exports.clear(idi);\n    }\n};\n\nfunction _clearTimeout(cache) {\n    if(cache && cache.timer !== null) {\n        clearTimeout(cache.timer);\n        cache.timer = null;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/throttle.js\n// module id = 51\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n    mode: {\n        valType: 'enumerated',\n        dflt: 'afterall',\n        role: 'info',\n        values: ['immediate', 'next', 'afterall'],\n        description: [\n            'Describes how a new animate call interacts with currently-running',\n            'animations. If `immediate`, current animations are interrupted and',\n            'the new animation is started. If `next`, the current frame is allowed',\n            'to complete, after which the new animation is started. If `afterall`',\n            'all existing frames are animated to completion before the new animation',\n            'is started.'\n        ].join(' ')\n    },\n    direction: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['forward', 'reverse'],\n        dflt: 'forward',\n        description: [\n            'The direction in which to play the frames triggered by the animation call'\n        ].join(' ')\n    },\n    fromcurrent: {\n        valType: 'boolean',\n        dflt: false,\n        role: 'info',\n        description: [\n            'Play frames starting at the current frame instead of the beginning.'\n        ].join(' ')\n    },\n    frame: {\n        duration: {\n            valType: 'number',\n            role: 'info',\n            min: 0,\n            dflt: 500,\n            description: [\n                'The duration in milliseconds of each frame. If greater than the frame',\n                'duration, it will be limited to the frame duration.'\n            ].join(' ')\n        },\n        redraw: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: true,\n            description: [\n                'Redraw the plot at completion of the transition. This is desirable',\n                'for transitions that include properties that cannot be transitioned,',\n                'but may significantly slow down updates that do not require a full',\n                'redraw of the plot'\n            ].join(' ')\n        },\n    },\n    transition: {\n        duration: {\n            valType: 'number',\n            role: 'info',\n            min: 0,\n            dflt: 500,\n            description: [\n                'The duration of the transition, in milliseconds. If equal to zero,',\n                'updates are synchronous.'\n            ].join(' ')\n        },\n        easing: {\n            valType: 'enumerated',\n            dflt: 'cubic-in-out',\n            values: [\n                'linear',\n                'quad',\n                'cubic',\n                'sin',\n                'exp',\n                'circle',\n                'elastic',\n                'back',\n                'bounce',\n                'linear-in',\n                'quad-in',\n                'cubic-in',\n                'sin-in',\n                'exp-in',\n                'circle-in',\n                'elastic-in',\n                'back-in',\n                'bounce-in',\n                'linear-out',\n                'quad-out',\n                'cubic-out',\n                'sin-out',\n                'exp-out',\n                'circle-out',\n                'elastic-out',\n                'back-out',\n                'bounce-out',\n                'linear-in-out',\n                'quad-in-out',\n                'cubic-in-out',\n                'sin-in-out',\n                'exp-in-out',\n                'circle-in-out',\n                'elastic-in-out',\n                'back-in-out',\n                'bounce-in-out'\n            ],\n            role: 'info',\n            description: 'The easing function used for the transition'\n        },\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/animation_attributes.js\n// module id = 52\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nexports.dash = {\n    valType: 'string',\n    // string type usually doesn't take values... this one should really be\n    // a special type or at least a special coercion function, from the GUI\n    // you only get these values but elsewhere the user can supply a list of\n    // dash lengths in px, and it will be honored\n    values: ['solid', 'dot', 'dash', 'longdash', 'dashdot', 'longdashdot'],\n    dflt: 'solid',\n    role: 'style',\n    editType: 'style',\n    description: [\n        'Sets the dash style of lines. Set to a dash type string',\n        '(*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*)',\n        'or a dash length list in px (eg *5px,10px,2px,2px*).'\n    ].join(' ')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/drawing/attributes.js\n// module id = 53\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar scales = require('./scales');\nvar isValidScaleArray = require('./is_valid_scale_array');\n\n\nmodule.exports = function isValidScale(scl) {\n    if(scales[scl] !== undefined) return true;\n    else return isValidScaleArray(scl);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/is_valid_scale.js\n// module id = 54\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nmodule.exports = function flipScale(scl) {\n    var N = scl.length,\n        sclNew = new Array(N),\n        si;\n\n    for(var i = N - 1, j = 0; i >= 0; i--, j++) {\n        si = scl[i];\n        sclNew[j] = [1 - si[0], si[1]];\n    }\n\n    return sclNew;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/flip_scale.js\n// module id = 55\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar scales = require('./scales');\nvar flipScale = require('./flip_scale');\n\n\nmodule.exports = function calc(trace, vals, containerStr, cLetter) {\n    var container, inputContainer;\n\n    if(containerStr) {\n        container = Lib.nestedProperty(trace, containerStr).get();\n        inputContainer = Lib.nestedProperty(trace._input, containerStr).get();\n    }\n    else {\n        container = trace;\n        inputContainer = trace._input;\n    }\n\n    var autoAttr = cLetter + 'auto',\n        minAttr = cLetter + 'min',\n        maxAttr = cLetter + 'max',\n        auto = container[autoAttr],\n        min = container[minAttr],\n        max = container[maxAttr],\n        scl = container.colorscale;\n\n    if(auto !== false || min === undefined) {\n        min = Lib.aggNums(Math.min, null, vals);\n    }\n\n    if(auto !== false || max === undefined) {\n        max = Lib.aggNums(Math.max, null, vals);\n    }\n\n    if(min === max) {\n        min -= 0.5;\n        max += 0.5;\n    }\n\n    container[minAttr] = min;\n    container[maxAttr] = max;\n\n    inputContainer[minAttr] = min;\n    inputContainer[maxAttr] = max;\n\n    /*\n     * If auto was explicitly false but min or max was missing,\n     * we filled in the missing piece here but later the trace does\n     * not look auto.\n     * Otherwise make sure the trace still looks auto as far as later\n     * changes are concerned.\n     */\n    inputContainer[autoAttr] = (auto !== false ||\n        (min === undefined && max === undefined));\n\n    if(container.autocolorscale) {\n        if(min * max < 0) scl = scales.RdBu;\n        else if(min >= 0) scl = scales.Reds;\n        else scl = scales.Blues;\n\n        // reversescale is handled at the containerOut level\n        inputContainer.colorscale = scl;\n        if(container.reversescale) scl = flipScale(scl);\n        container.colorscale = scl;\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/calc.js\n// module id = 56\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nmodule.exports = {\n    PTS_LINESONLY: 20,\n\n    // fixed parameters of clustering and clipping algorithms\n\n    // fraction of clustering tolerance \"so close we don't even consider it a new point\"\n    minTolerance: 0.2,\n    // how fast does clustering tolerance increase as you get away from the visible region\n    toleranceGrowth: 10,\n\n    // number of viewport sizes away from the visible region\n    // at which we clip all lines to the perimeter\n    maxScreensAway: 20\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/constants.js\n// module id = 57\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\n\nvar attributes = require('./attributes');\n\n\nmodule.exports = function(traceIn, traceOut, defaultColor, opts) {\n    var objName = 'error_' + opts.axis,\n        containerOut = traceOut[objName] = {},\n        containerIn = traceIn[objName] || {};\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(containerIn, containerOut, attributes, attr, dflt);\n    }\n\n    var hasErrorBars = (\n        containerIn.array !== undefined ||\n        containerIn.value !== undefined ||\n        containerIn.type === 'sqrt'\n    );\n\n    var visible = coerce('visible', hasErrorBars);\n\n    if(visible === false) return;\n\n    var type = coerce('type', 'array' in containerIn ? 'data' : 'percent'),\n        symmetric = true;\n\n    if(type !== 'sqrt') {\n        symmetric = coerce('symmetric',\n            !((type === 'data' ? 'arrayminus' : 'valueminus') in containerIn));\n    }\n\n    if(type === 'data') {\n        var array = coerce('array');\n        if(!array) containerOut.array = [];\n        coerce('traceref');\n        if(!symmetric) {\n            var arrayminus = coerce('arrayminus');\n            if(!arrayminus) containerOut.arrayminus = [];\n            coerce('tracerefminus');\n        }\n    }\n    else if(type === 'percent' || type === 'constant') {\n        coerce('value');\n        if(!symmetric) coerce('valueminus');\n    }\n\n    var copyAttr = 'copy_' + opts.inherit + 'style';\n    if(opts.inherit) {\n        var inheritObj = traceOut['error_' + opts.inherit];\n        if((inheritObj || {}).visible) {\n            coerce(copyAttr, !(containerIn.color ||\n                               isNumeric(containerIn.thickness) ||\n                               isNumeric(containerIn.width)));\n        }\n    }\n    if(!opts.inherit || !containerOut[copyAttr]) {\n        coerce('color', defaultColor);\n        coerce('thickness');\n        coerce('width', Registry.traceIs(traceOut, 'gl3d') ? 0 : 4);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/errorbars/defaults.js\n// module id = 58\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\n\nvar Plotly = require('../../plotly');\nvar Plots = require('../../plots/plots');\nvar Lib = require('../../lib');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar interactConstants = require('../../constants/interactions');\n\nvar Titles = module.exports = {};\n\nvar numStripRE = / [XY][0-9]* /;\n\n/**\n * Titles - (re)draw titles on the axes and plot:\n * @param {DOM element} gd - the graphDiv\n * @param {string} titleClass - the css class of this title\n * @param {object} options - how and what to draw\n *      propContainer - the layout object containing `title` and `titlefont`\n *          attributes that apply to this title\n *      propName - the full name of the title property (for Plotly.relayout)\n *      [traceIndex] - include only if this property applies to one trace\n *          (such as a colorbar title) - then editing pipes to Plotly.restyle\n *          instead of Plotly.relayout\n *      placeholder - placeholder text for an empty editable title\n *      [avoid] {object} - include if this title should move to avoid other elements\n *          selection - d3 selection of elements to avoid\n *          side - which direction to move if there is a conflict\n *          [offsetLeft] - if these elements are subject to a translation\n *              wrt the title element\n *          [offsetTop]\n *      attributes {object} - position and alignment attributes\n *          x - pixels\n *          y - pixels\n *          text-anchor - start|middle|end\n *      transform {object} - how to transform the title after positioning\n *          rotate - degrees\n *          offset - shift up/down in the rotated frame (unused?)\n *      containerGroup - if an svg <g> element already exists to hold this\n *          title, include here. Otherwise it will go in fullLayout._infolayer\n *\n *  @return {selection} d3 selection of title container group\n */\nTitles.draw = function(gd, titleClass, options) {\n    var cont = options.propContainer;\n    var prop = options.propName;\n    var placeholder = options.placeholder;\n    var traceIndex = options.traceIndex;\n    var avoid = options.avoid || {};\n    var attributes = options.attributes;\n    var transform = options.transform;\n    var group = options.containerGroup;\n\n    var fullLayout = gd._fullLayout;\n    var titlefont = cont.titlefont || {};\n    var font = titlefont.family;\n    var fontSize = titlefont.size;\n    var fontColor = titlefont.color;\n\n    var opacity = 1;\n    var isplaceholder = false;\n    var txt = (cont.title || '').trim();\n\n    // only make this title editable if we positively identify its property\n    // as one that has editing enabled.\n    var editAttr;\n    if(prop === 'title') editAttr = 'titleText';\n    else if(prop.indexOf('axis') !== -1) editAttr = 'axisTitleText';\n    else if(prop.indexOf('colorbar' !== -1)) editAttr = 'colorbarTitleText';\n    var editable = gd._context.edits[editAttr];\n\n    if(txt === '') opacity = 0;\n    // look for placeholder text while stripping out numbers from eg X2, Y3\n    // this is just for backward compatibility with the old version that had\n    // \"Click to enter X2 title\" and may have gotten saved in some old plots,\n    // we don't want this to show up when these are displayed.\n    else if(txt.replace(numStripRE, ' % ') === placeholder.replace(numStripRE, ' % ')) {\n        opacity = 0.2;\n        isplaceholder = true;\n        if(!editable) txt = '';\n    }\n\n    var elShouldExist = txt || editable;\n\n    if(!group) {\n        group = fullLayout._infolayer.selectAll('.g-' + titleClass)\n            .data([0]);\n        group.enter().append('g')\n            .classed('g-' + titleClass, true);\n    }\n\n    var el = group.selectAll('text')\n        .data(elShouldExist ? [0] : []);\n    el.enter().append('text');\n    el.text(txt)\n        // this is hacky, but convertToTspans uses the class\n        // to determine whether to rotate mathJax...\n        // so we need to clear out any old class and put the\n        // correct one (only relevant for colorbars, at least\n        // for now) - ie don't use .classed\n        .attr('class', titleClass);\n    el.exit().remove();\n\n    if(!elShouldExist) return group;\n\n    function titleLayout(titleEl) {\n        Lib.syncOrAsync([drawTitle, scootTitle], titleEl);\n    }\n\n    function drawTitle(titleEl) {\n        var transformVal;\n\n        if(transform) {\n            transformVal = '';\n            if(transform.rotate) {\n                transformVal += 'rotate(' + [transform.rotate, attributes.x, attributes.y] + ')';\n            }\n            if(transform.offset) {\n                transformVal += 'translate(0, ' + transform.offset + ')';\n            }\n        } else {\n            transformVal = null;\n        }\n\n        titleEl.attr('transform', transformVal);\n\n        titleEl.style({\n            'font-family': font,\n            'font-size': d3.round(fontSize, 2) + 'px',\n            fill: Color.rgb(fontColor),\n            opacity: opacity * Color.opacity(fontColor),\n            'font-weight': Plots.fontWeight\n        })\n        .attr(attributes)\n        .call(svgTextUtils.convertToTspans, gd);\n\n        return Plots.previousPromises(gd);\n    }\n\n    function scootTitle(titleElIn) {\n        var titleGroup = d3.select(titleElIn.node().parentNode);\n\n        if(avoid && avoid.selection && avoid.side && txt) {\n            titleGroup.attr('transform', null);\n\n            // move toward avoid.side (= left, right, top, bottom) if needed\n            // can include pad (pixels, default 2)\n            var shift = 0;\n            var backside = {\n                left: 'right',\n                right: 'left',\n                top: 'bottom',\n                bottom: 'top'\n            }[avoid.side];\n            var shiftSign = (['left', 'top'].indexOf(avoid.side) !== -1) ?\n                    -1 : 1;\n            var pad = isNumeric(avoid.pad) ? avoid.pad : 2;\n            var titlebb = Drawing.bBox(titleGroup.node());\n            var paperbb = {\n                left: 0,\n                top: 0,\n                right: fullLayout.width,\n                bottom: fullLayout.height\n            };\n            var maxshift = avoid.maxShift || (\n                (paperbb[avoid.side] - titlebb[avoid.side]) *\n                ((avoid.side === 'left' || avoid.side === 'top') ? -1 : 1));\n            // Prevent the title going off the paper\n            if(maxshift < 0) shift = maxshift;\n            else {\n                // so we don't have to offset each avoided element,\n                // give the title the opposite offset\n                var offsetLeft = avoid.offsetLeft || 0;\n                var offsetTop = avoid.offsetTop || 0;\n                titlebb.left -= offsetLeft;\n                titlebb.right -= offsetLeft;\n                titlebb.top -= offsetTop;\n                titlebb.bottom -= offsetTop;\n\n                // iterate over a set of elements (avoid.selection)\n                // to avoid collisions with\n                avoid.selection.each(function() {\n                    var avoidbb = Drawing.bBox(this);\n\n                    if(Lib.bBoxIntersect(titlebb, avoidbb, pad)) {\n                        shift = Math.max(shift, shiftSign * (\n                            avoidbb[avoid.side] - titlebb[backside]) + pad);\n                    }\n                });\n                shift = Math.min(maxshift, shift);\n            }\n            if(shift > 0 || maxshift < 0) {\n                var shiftTemplate = {\n                    left: [-shift, 0],\n                    right: [shift, 0],\n                    top: [0, -shift],\n                    bottom: [0, shift]\n                }[avoid.side];\n                titleGroup.attr('transform',\n                    'translate(' + shiftTemplate + ')');\n            }\n        }\n    }\n\n    el.call(titleLayout);\n\n    function setPlaceholder() {\n        opacity = 0;\n        isplaceholder = true;\n        el.text(placeholder)\n            .on('mouseover.opacity', function() {\n                d3.select(this).transition()\n                    .duration(interactConstants.SHOW_PLACEHOLDER).style('opacity', 1);\n            })\n            .on('mouseout.opacity', function() {\n                d3.select(this).transition()\n                    .duration(interactConstants.HIDE_PLACEHOLDER).style('opacity', 0);\n            });\n    }\n\n    if(editable) {\n        if(!txt) setPlaceholder();\n        else el.on('.opacity', null);\n\n        el.call(svgTextUtils.makeEditable, {gd: gd})\n            .on('edit', function(text) {\n                if(traceIndex !== undefined) Plotly.restyle(gd, prop, text, traceIndex);\n                else Plotly.relayout(gd, prop, text);\n            })\n            .on('cancel', function() {\n                this.text(this.attr('data-unformatted'))\n                    .call(titleLayout);\n            })\n            .on('input', function(d) {\n                this.text(d || ' ')\n                    .call(svgTextUtils.positionText, attributes.x, attributes.y);\n            });\n    }\n    el.classed('js-placeholder', isplaceholder);\n\n    return group;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/titles/index.js\n// module id = 59\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n    'undo': {\n        'width': 857.1,\n        'path': 'm857 350q0-87-34-166t-91-137-137-92-166-34q-96 0-183 41t-147 114q-4 6-4 13t5 11l76 77q6 5 14 5 9-1 13-7 41-53 100-82t126-29q58 0 110 23t92 61 61 91 22 111-22 111-61 91-92 61-110 23q-55 0-105-20t-90-57l77-77q17-16 8-38-10-23-33-23h-250q-15 0-25 11t-11 25v250q0 24 22 33 22 10 39-8l72-72q60 57 137 88t159 31q87 0 166-34t137-92 91-137 34-166z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'home': {\n        'width': 928.6,\n        'path': 'm786 296v-267q0-15-11-26t-25-10h-214v214h-143v-214h-214q-15 0-25 10t-11 26v267q0 1 0 2t0 2l321 264 321-264q1-1 1-4z m124 39l-34-41q-5-5-12-6h-2q-7 0-12 3l-386 322-386-322q-7-4-13-4-7 2-12 7l-35 41q-4 5-3 13t6 12l401 334q18 15 42 15t43-15l136-114v109q0 8 5 13t13 5h107q8 0 13-5t5-13v-227l122-102q5-5 6-12t-4-13z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'camera-retro': {\n        'width': 1000,\n        'path': 'm518 386q0 8-5 13t-13 5q-37 0-63-27t-26-63q0-8 5-13t13-5 12 5 5 13q0 23 16 38t38 16q8 0 13 5t5 13z m125-73q0-59-42-101t-101-42-101 42-42 101 42 101 101 42 101-42 42-101z m-572-320h858v71h-858v-71z m643 320q0 89-62 152t-152 62-151-62-63-152 63-151 151-63 152 63 62 151z m-571 358h214v72h-214v-72z m-72-107h858v143h-462l-36-71h-360v-72z m929 143v-714q0-30-21-51t-50-21h-858q-29 0-50 21t-21 51v714q0 30 21 51t50 21h858q29 0 50-21t21-51z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'zoombox': {\n        'width': 1000,\n        'path': 'm1000-25l-250 251c40 63 63 138 63 218 0 224-182 406-407 406-224 0-406-182-406-406s183-406 407-406c80 0 155 22 218 62l250-250 125 125z m-812 250l0 438 437 0 0-438-437 0z m62 375l313 0 0-312-313 0 0 312z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'pan': {\n        'width': 1000,\n        'path': 'm1000 350l-187 188 0-125-250 0 0 250 125 0-188 187-187-187 125 0 0-250-250 0 0 125-188-188 186-187 0 125 252 0 0-250-125 0 187-188 188 188-125 0 0 250 250 0 0-126 187 188z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'zoom_plus': {\n        'width': 1000,\n        'path': 'm1 787l0-875 875 0 0 875-875 0z m687-500l-187 0 0-187-125 0 0 187-188 0 0 125 188 0 0 187 125 0 0-187 187 0 0-125z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'zoom_minus': {\n        'width': 1000,\n        'path': 'm0 788l0-876 875 0 0 876-875 0z m688-500l-500 0 0 125 500 0 0-125z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'autoscale': {\n        'width': 1000,\n        'path': 'm250 850l-187 0-63 0 0-62 0-188 63 0 0 188 187 0 0 62z m688 0l-188 0 0-62 188 0 0-188 62 0 0 188 0 62-62 0z m-875-938l0 188-63 0 0-188 0-62 63 0 187 0 0 62-187 0z m875 188l0-188-188 0 0-62 188 0 62 0 0 62 0 188-62 0z m-125 188l-1 0-93-94-156 156 156 156 92-93 2 0 0 250-250 0 0-2 93-92-156-156-156 156 94 92 0 2-250 0 0-250 0 0 93 93 157-156-157-156-93 94 0 0 0-250 250 0 0 0-94 93 156 157 156-157-93-93 0 0 250 0 0 250z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'tooltip_basic': {\n        'width': 1500,\n        'path': 'm375 725l0 0-375-375 375-374 0-1 1125 0 0 750-1125 0z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'tooltip_compare': {\n        'width': 1125,\n        'path': 'm187 786l0 2-187-188 188-187 0 0 937 0 0 373-938 0z m0-499l0 1-187-188 188-188 0 0 937 0 0 376-938-1z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'plotlylogo': {\n        'width': 1542,\n        'path': 'm0-10h182v-140h-182v140z m228 146h183v-286h-183v286z m225 714h182v-1000h-182v1000z m225-285h182v-715h-182v715z m225 142h183v-857h-183v857z m231-428h182v-429h-182v429z m225-291h183v-138h-183v138z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'z-axis': {\n        'width': 1000,\n        'path': 'm833 5l-17 108v41l-130-65 130-66c0 0 0 38 0 39 0-1 36-14 39-25 4-15-6-22-16-30-15-12-39-16-56-20-90-22-187-23-279-23-261 0-341 34-353 59 3 60 228 110 228 110-140-8-351-35-351-116 0-120 293-142 474-142 155 0 477 22 477 142 0 50-74 79-163 96z m-374 94c-58-5-99-21-99-40 0-24 65-43 144-43 79 0 143 19 143 43 0 19-42 34-98 40v216h87l-132 135-133-135h88v-216z m167 515h-136v1c16 16 31 34 46 52l84 109v54h-230v-71h124v-1c-16-17-28-32-44-51l-89-114v-51h245v72z',\n        'ascent': 850,\n        'descent': -150\n    },\n    '3d_rotate': {\n        'width': 1000,\n        'path': 'm922 660c-5 4-9 7-14 11-359 263-580-31-580-31l-102 28 58-400c0 1 1 1 2 2 118 108 351 249 351 249s-62 27-100 42c88 83 222 183 347 122 16-8 30-17 44-27-2 1-4 2-6 4z m36-329c0 0 64 229-88 296-62 27-124 14-175-11 157-78 225-208 249-266 8-19 11-31 11-31 2 5 6 15 11 32-5-13-8-20-8-20z m-775-239c70-31 117-50 198-32-121 80-199 346-199 346l-96-15-58-12c0 0 55-226 155-287z m603 133l-317-139c0 0 4-4 19-14 7-5 24-15 24-15s-177-147-389 4c235-287 536-112 536-112l31-22 100 299-4-1z m-298-153c6-4 14-9 24-15 0 0-17 10-24 15z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'camera': {\n        'width': 1000,\n        'path': 'm500 450c-83 0-150-67-150-150 0-83 67-150 150-150 83 0 150 67 150 150 0 83-67 150-150 150z m400 150h-120c-16 0-34 13-39 29l-31 93c-6 15-23 28-40 28h-340c-16 0-34-13-39-28l-31-94c-6-15-23-28-40-28h-120c-55 0-100-45-100-100v-450c0-55 45-100 100-100h800c55 0 100 45 100 100v450c0 55-45 100-100 100z m-400-550c-138 0-250 112-250 250 0 138 112 250 250 250 138 0 250-112 250-250 0-138-112-250-250-250z m365 380c-19 0-35 16-35 35 0 19 16 35 35 35 19 0 35-16 35-35 0-19-16-35-35-35z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'movie': {\n        'width': 1000,\n        'path': 'm938 413l-188-125c0 37-17 71-44 94 64 38 107 107 107 187 0 121-98 219-219 219-121 0-219-98-219-219 0-61 25-117 66-156h-115c30 33 49 76 49 125 0 103-84 187-187 187s-188-84-188-187c0-57 26-107 65-141-38-22-65-62-65-109v-250c0-70 56-126 125-126h500c69 0 125 56 125 126l188-126c34 0 62 28 62 63v375c0 35-28 63-62 63z m-750 0c-69 0-125 56-125 125s56 125 125 125 125-56 125-125-56-125-125-125z m406-1c-87 0-157 70-157 157 0 86 70 156 157 156s156-70 156-156-70-157-156-157z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'question': {\n        'width': 857.1,\n        'path': 'm500 82v107q0 8-5 13t-13 5h-107q-8 0-13-5t-5-13v-107q0-8 5-13t13-5h107q8 0 13 5t5 13z m143 375q0 49-31 91t-77 65-95 23q-136 0-207-119-9-14 4-24l74-55q4-4 10-4 9 0 14 7 30 38 48 51 19 14 48 14 27 0 48-15t21-33q0-21-11-34t-38-25q-35-16-65-48t-29-70v-20q0-8 5-13t13-5h107q8 0 13 5t5 13q0 10 12 27t30 28q18 10 28 16t25 19 25 27 16 34 7 45z m214-107q0-117-57-215t-156-156-215-58-216 58-155 156-58 215 58 215 155 156 216 58 215-58 156-156 57-215z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'disk': {\n        'width': 857.1,\n        'path': 'm214-7h429v214h-429v-214z m500 0h72v500q0 8-6 21t-11 20l-157 156q-5 6-19 12t-22 5v-232q0-22-15-38t-38-16h-322q-22 0-37 16t-16 38v232h-72v-714h72v232q0 22 16 38t37 16h465q22 0 38-16t15-38v-232z m-214 518v178q0 8-5 13t-13 5h-107q-7 0-13-5t-5-13v-178q0-8 5-13t13-5h107q7 0 13 5t5 13z m357-18v-518q0-22-15-38t-38-16h-750q-23 0-38 16t-16 38v750q0 22 16 38t38 16h517q23 0 50-12t42-26l156-157q16-15 27-42t11-49z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'lasso': {\n        'width': 1031,\n        'path': 'm1018 538c-36 207-290 336-568 286-277-48-473-256-436-463 10-57 36-108 76-151-13-66 11-137 68-183 34-28 75-41 114-42l-55-70 0 0c-2-1-3-2-4-3-10-14-8-34 5-45 14-11 34-8 45 4 1 1 2 3 2 5l0 0 113 140c16 11 31 24 45 40 4 3 6 7 8 11 48-3 100 0 151 9 278 48 473 255 436 462z m-624-379c-80 14-149 48-197 96 42 42 109 47 156 9 33-26 47-66 41-105z m-187-74c-19 16-33 37-39 60 50-32 109-55 174-68-42-25-95-24-135 8z m360 75c-34-7-69-9-102-8 8 62-16 128-68 170-73 59-175 54-244-5-9 20-16 40-20 61-28 159 121 317 333 354s407-60 434-217c28-159-121-318-333-355z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'selectbox': {\n        'width': 1000,\n        'path': 'm0 850l0-143 143 0 0 143-143 0z m286 0l0-143 143 0 0 143-143 0z m285 0l0-143 143 0 0 143-143 0z m286 0l0-143 143 0 0 143-143 0z m-857-286l0-143 143 0 0 143-143 0z m857 0l0-143 143 0 0 143-143 0z m-857-285l0-143 143 0 0 143-143 0z m857 0l0-143 143 0 0 143-143 0z m-857-286l0-143 143 0 0 143-143 0z m286 0l0-143 143 0 0 143-143 0z m285 0l0-143 143 0 0 143-143 0z m286 0l0-143 143 0 0 143-143 0z',\n        'ascent': 850,\n        'descent': -150\n    },\n    'spikeline': {\n        'width': 1000,\n        'path': 'M512 409c0-57-46-104-103-104-57 0-104 47-104 104 0 57 47 103 104 103 57 0 103-46 103-103z m-327-39l92 0 0 92-92 0z m-185 0l92 0 0 92-92 0z m370-186l92 0 0 93-92 0z m0-184l92 0 0 92-92 0z',\n        'ascent': 850,\n        'descent': -150\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/build/ploticon.js\n// module id = 60\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar toImage = require('../plot_api/to_image');\nvar Lib = require('../lib'); // for isIE\nvar fileSaver = require('./filesaver');\n\n/**\n * @param {object} gd figure Object\n * @param {object} opts option object\n * @param opts.format 'jpeg' | 'png' | 'webp' | 'svg'\n * @param opts.width width of snapshot in px\n * @param opts.height height of snapshot in px\n * @param opts.filename name of file excluding extension\n */\nfunction downloadImage(gd, opts) {\n\n    // check for undefined opts\n    opts = opts || {};\n\n    // default to png\n    opts.format = opts.format || 'png';\n\n    return new Promise(function(resolve, reject) {\n        if(gd._snapshotInProgress) {\n            reject(new Error('Snapshotting already in progress.'));\n        }\n\n        // see comments within svgtoimg for additional\n        //   discussion of problems with IE\n        //   can now draw to canvas, but CORS tainted canvas\n        //   does not allow toDataURL\n        //   svg format will work though\n        if(Lib.isIE() && opts.format !== 'svg') {\n            reject(new Error('Sorry IE does not support downloading from canvas. Try {format:\\'svg\\'} instead.'));\n        }\n\n        gd._snapshotInProgress = true;\n        var promise = toImage(gd, opts);\n\n        var filename = opts.filename || gd.fn || 'newplot';\n        filename += '.' + opts.format;\n\n        promise.then(function(result) {\n            gd._snapshotInProgress = false;\n            return fileSaver(result, filename);\n        }).then(function(name) {\n            resolve(name);\n        }).catch(function(err) {\n            gd._snapshotInProgress = false;\n            reject(err);\n        });\n    });\n}\n\nmodule.exports = downloadImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/snapshot/download.js\n// module id = 61\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nexports.getDelay = function(fullLayout) {\n\n    // polar clears fullLayout._has for some reason\n    if(!fullLayout._has) return 0;\n\n    // maybe we should add a 'gl' (and 'svg') layoutCategory ??\n    return (fullLayout._has('gl3d') || fullLayout._has('gl2d')) ? 500 : 0;\n};\n\nexports.getRedrawFunc = function(gd) {\n    var fullLayout = gd._fullLayout || {};\n    var hasPolar = fullLayout._has && fullLayout._has('polar');\n    var hasLegacyPolar = !hasPolar && gd.data && gd.data[0] && gd.data[0].r;\n\n    // do not work for legacy polar\n    if(hasLegacyPolar) return;\n\n    return function() {\n        (gd.calcdata || []).forEach(function(d) {\n            if(d[0] && d[0].t && d[0].t.cb) d[0].t.cb();\n        });\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/snapshot/helpers.js\n// module id = 62\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Lib = require('../lib');\nvar Drawing = require('../components/drawing');\nvar Color = require('../components/color');\n\nvar xmlnsNamespaces = require('../constants/xmlns_namespaces');\nvar DOUBLEQUOTE_REGEX = /\"/g;\nvar DUMMY_SUB = 'TOBESTRIPPED';\nvar DUMMY_REGEX = new RegExp('(\"' + DUMMY_SUB + ')|(' + DUMMY_SUB + '\")', 'g');\n\nfunction htmlEntityDecode(s) {\n    var hiddenDiv = d3.select('body').append('div').style({display: 'none'}).html('');\n    var replaced = s.replace(/(&[^;]*;)/gi, function(d) {\n        if(d === '&lt;') { return '&#60;'; } // special handling for brackets\n        if(d === '&rt;') { return '&#62;'; }\n        if(d.indexOf('<') !== -1 || d.indexOf('>') !== -1) { return ''; }\n        return hiddenDiv.html(d).text(); // everything else, let the browser decode it to unicode\n    });\n    hiddenDiv.remove();\n    return replaced;\n}\n\nfunction xmlEntityEncode(str) {\n    return str.replace(/&(?!\\w+;|\\#[0-9]+;| \\#x[0-9A-F]+;)/g, '&amp;');\n}\n\nmodule.exports = function toSVG(gd, format, scale) {\n    var fullLayout = gd._fullLayout;\n    var svg = fullLayout._paper;\n    var toppaper = fullLayout._toppaper;\n    var width = fullLayout.width;\n    var height = fullLayout.height;\n    var i;\n\n    // make background color a rect in the svg, then revert after scraping\n    // all other alterations have been dealt with by properly preparing the svg\n    // in the first place... like setting cursors with css classes so we don't\n    // have to remove them, and providing the right namespaces in the svg to\n    // begin with\n    svg.insert('rect', ':first-child')\n        .call(Drawing.setRect, 0, 0, width, height)\n        .call(Color.fill, fullLayout.paper_bgcolor);\n\n    // subplot-specific to-SVG methods\n    // which notably add the contents of the gl-container\n    // into the main svg node\n    var basePlotModules = fullLayout._basePlotModules || [];\n    for(i = 0; i < basePlotModules.length; i++) {\n        var _module = basePlotModules[i];\n\n        if(_module.toSVG) _module.toSVG(gd);\n    }\n\n    // add top items above them assumes everything in toppaper is either\n    // a group or a defs, and if it's empty (like hoverlayer) we can ignore it.\n    if(toppaper) {\n        var nodes = toppaper.node().childNodes;\n\n        // make copy of nodes as childNodes prop gets mutated in loop below\n        var topGroups = Array.prototype.slice.call(nodes);\n\n        for(i = 0; i < topGroups.length; i++) {\n            var topGroup = topGroups[i];\n\n            if(topGroup.childNodes.length) svg.node().appendChild(topGroup);\n        }\n    }\n\n    // remove draglayer for Adobe Illustrator compatibility\n    if(fullLayout._draggers) {\n        fullLayout._draggers.remove();\n    }\n\n    // in case the svg element had an explicit background color, remove this\n    // we want the rect to get the color so it's the right size; svg bg will\n    // fill whatever container it's displayed in regardless of plot size.\n    svg.node().style.background = '';\n\n    svg.selectAll('text')\n        .attr({'data-unformatted': null, 'data-math': null})\n        .each(function() {\n            var txt = d3.select(this);\n\n            // hidden text is pre-formatting mathjax, the browser ignores it\n            // but in a static plot it's useless and it can confuse batik\n            // we've tried to standardize on display:none but make sure we still\n            // catch visibility:hidden if it ever arises\n            if(this.style.visibility === 'hidden' || this.style.display === 'none') {\n                txt.remove();\n                return;\n            }\n            else {\n                // clear other visibility/display values to default\n                // to not potentially confuse non-browser SVG implementations\n                txt.style({visibility: null, display: null});\n            }\n\n            // Font family styles break things because of quotation marks,\n            // so we must remove them *after* the SVG DOM has been serialized\n            // to a string (browsers convert singles back)\n            var ff = this.style.fontFamily;\n            if(ff && ff.indexOf('\"') !== -1) {\n                txt.style('font-family', ff.replace(DOUBLEQUOTE_REGEX, DUMMY_SUB));\n            }\n        });\n\n    svg.selectAll('.point,.scatterpts').each(function() {\n        var pt = d3.select(this);\n        var fill = this.style.fill;\n\n        // similar to font family styles above,\n        // we must remove \" after the SVG DOM has been serialized\n        if(fill && fill.indexOf('url(') !== -1) {\n            pt.style('fill', fill.replace(DOUBLEQUOTE_REGEX, DUMMY_SUB));\n        }\n    });\n\n    if(format === 'pdf' || format === 'eps') {\n        // these formats make the extra line MathJax adds around symbols look super thick in some cases\n        // it looks better if this is removed entirely.\n        svg.selectAll('#MathJax_SVG_glyphs path')\n            .attr('stroke-width', 0);\n    }\n\n    // fix for IE namespacing quirk?\n    // http://stackoverflow.com/questions/19610089/unwanted-namespaces-on-svg-markup-when-using-xmlserializer-in-javascript-with-ie\n    svg.node().setAttributeNS(xmlnsNamespaces.xmlns, 'xmlns', xmlnsNamespaces.svg);\n    svg.node().setAttributeNS(xmlnsNamespaces.xmlns, 'xmlns:xlink', xmlnsNamespaces.xlink);\n\n    if(format === 'svg' && scale) {\n        svg.attr('width', scale * width);\n        svg.attr('height', scale * height);\n        svg.attr('viewBox', '0 0 ' + width + ' ' + height);\n    }\n\n    var s = new window.XMLSerializer().serializeToString(svg.node());\n    s = htmlEntityDecode(s);\n    s = xmlEntityEncode(s);\n\n    // Fix quotations around font strings and gradient URLs\n    s = s.replace(DUMMY_REGEX, '\\'');\n\n    // IE is very strict, so we will need to clean\n    //  svg with the following regex\n    //  yes this is messy, but do not know a better way\n    // Even with this IE will not work due to tainted canvas\n    //  see https://github.com/kangax/fabric.js/issues/1957\n    //      http://stackoverflow.com/questions/18112047/canvas-todataurl-working-in-all-browsers-except-ie10\n    // Leave here just in case the CORS/tainted IE issue gets resolved\n    if(Lib.isIE()) {\n        // replace double quote with single quote\n        s = s.replace(/\"/gi, '\\'');\n        // url in svg are single quoted\n        //   since we changed double to single\n        //   we'll need to change these to double-quoted\n        s = s.replace(/(\\('#)([^']*)('\\))/gi, '(\\\"#$2\\\")');\n        // font names with spaces will be escaped single-quoted\n        //   we'll need to change these to double-quoted\n        s = s.replace(/(\\\\')/gi, '\\\"');\n    }\n\n    return s;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/snapshot/tosvg.js\n// module id = 63\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../lib');\nvar EventEmitter = require('events').EventEmitter;\n\nfunction svgToImg(opts) {\n    var ev = opts.emitter || new EventEmitter();\n\n    var promise = new Promise(function(resolve, reject) {\n        var Image = window.Image;\n        var svg = opts.svg;\n        var format = opts.format || 'png';\n\n        // IE only support svg\n        if(Lib.isIE() && format !== 'svg') {\n            var ieSvgError = new Error('Sorry IE does not support downloading from canvas. Try {format:\\'svg\\'} instead.');\n            reject(ieSvgError);\n            // eventually remove the ev\n            //  in favor of promises\n            if(!opts.promise) {\n                return ev.emit('error', ieSvgError);\n            } else {\n                return promise;\n            }\n        }\n\n        var canvas = opts.canvas;\n        var scale = opts.scale || 1;\n        var w0 = opts.width || 300;\n        var h0 = opts.height || 150;\n        var w1 = scale * w0;\n        var h1 = scale * h0;\n\n        var ctx = canvas.getContext('2d');\n        var img = new Image();\n\n        // for Safari support, eliminate createObjectURL\n        //  this decision could cause problems if content\n        //  is not restricted to svg\n        var url = 'data:image/svg+xml,' + encodeURIComponent(svg);\n\n        canvas.width = w1;\n        canvas.height = h1;\n\n        img.onload = function() {\n            var imgData;\n\n            // don't need to draw to canvas if svg\n            //  save some time and also avoid failure on IE\n            if(format !== 'svg') {\n                ctx.drawImage(img, 0, 0, w1, h1);\n            }\n\n            switch(format) {\n                case 'jpeg':\n                    imgData = canvas.toDataURL('image/jpeg');\n                    break;\n                case 'png':\n                    imgData = canvas.toDataURL('image/png');\n                    break;\n                case 'webp':\n                    imgData = canvas.toDataURL('image/webp');\n                    break;\n                case 'svg':\n                    imgData = url;\n                    break;\n                default:\n                    var errorMsg = 'Image format is not jpeg, png, svg or webp.';\n                    reject(new Error(errorMsg));\n                    // eventually remove the ev\n                    //  in favor of promises\n                    if(!opts.promise) {\n                        return ev.emit('error', errorMsg);\n                    }\n            }\n            resolve(imgData);\n            // eventually remove the ev\n            //  in favor of promises\n            if(!opts.promise) {\n                ev.emit('success', imgData);\n            }\n        };\n\n        img.onerror = function(err) {\n            reject(err);\n            // eventually remove the ev\n            //  in favor of promises\n            if(!opts.promise) {\n                return ev.emit('error', err);\n            }\n        };\n\n        img.src = url;\n    });\n\n    // temporary for backward compatibility\n    //  move to only Promise in 2.0.0\n    //  and eliminate the EventEmitter\n    if(opts.promise) {\n        return promise;\n    }\n\n    return ev;\n}\n\nmodule.exports = svgToImg;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/snapshot/svgtoimg.js\n// module id = 64\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 65\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n/* global jQuery:false */\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Events = {\n\n    init: function(plotObj) {\n\n        /*\n         * If we have already instantiated an emitter for this plot\n         * return early.\n         */\n        if(plotObj._ev instanceof EventEmitter) return plotObj;\n\n        var ev = new EventEmitter();\n        var internalEv = new EventEmitter();\n\n        /*\n         * Assign to plot._ev while we still live in a land\n         * where plot is a DOM element with stuff attached to it.\n         * In the future we can make plot the event emitter itself.\n         */\n        plotObj._ev = ev;\n\n        /*\n         * Create a second event handler that will manage events *internally*.\n         * This allows parts of plotly to respond to thing like relayout without\n         * having to use the user-facing event handler. They cannot peacefully\n         * coexist on the same handler because a user invoking\n         * plotObj.removeAllListeners() would detach internal events, breaking\n         * plotly.\n         */\n        plotObj._internalEv = internalEv;\n\n        /*\n         * Assign bound methods from the ev to the plot object. These methods\n         * will reference the 'this' of plot._ev even though they are methods\n         * of plot. This will keep the event machinery away from the plot object\n         * which currently is often a DOM element but presents an API that will\n         * continue to function when plot becomes an emitter. Not all EventEmitter\n         * methods have been bound to `plot` as some do not currently add value to\n         * the Plotly event API.\n         */\n        plotObj.on = ev.on.bind(ev);\n        plotObj.once = ev.once.bind(ev);\n        plotObj.removeListener = ev.removeListener.bind(ev);\n        plotObj.removeAllListeners = ev.removeAllListeners.bind(ev);\n\n        /*\n         * Create funtions for managing internal events. These are *only* triggered\n         * by the mirroring of external events via the emit function.\n         */\n        plotObj._internalOn = internalEv.on.bind(internalEv);\n        plotObj._internalOnce = internalEv.once.bind(internalEv);\n        plotObj._removeInternalListener = internalEv.removeListener.bind(internalEv);\n        plotObj._removeAllInternalListeners = internalEv.removeAllListeners.bind(internalEv);\n\n        /*\n         * We must wrap emit to continue to support JQuery events. The idea\n         * is to check to see if the user is using JQuery events, if they are\n         * we emit JQuery events to trigger user handlers as well as the EventEmitter\n         * events.\n         */\n        plotObj.emit = function(event, data) {\n            if(typeof jQuery !== 'undefined') {\n                jQuery(plotObj).trigger(event, data);\n            }\n\n            ev.emit(event, data);\n            internalEv.emit(event, data);\n        };\n\n        return plotObj;\n    },\n\n    /*\n     * This function behaves like jQueries triggerHandler. It calls\n     * all handlers for a particular event and returns the return value\n     * of the LAST handler. This function also triggers jQuery's\n     * triggerHandler for backwards compatibility.\n     *\n     * Note: triggerHandler has been recommended for deprecation in v2.0.0,\n     * so the additional behavior of triggerHandler triggering internal events\n     * is deliberate excluded in order to avoid reinforcing more usage.\n     */\n    triggerHandler: function(plotObj, event, data) {\n        var jQueryHandlerValue;\n        var nodeEventHandlerValue;\n        /*\n         * If Jquery exists run all its handlers for this event and\n         * collect the return value of the LAST handler function\n         */\n        if(typeof jQuery !== 'undefined') {\n            jQueryHandlerValue = jQuery(plotObj).triggerHandler(event, data);\n        }\n\n        /*\n         * Now run all the node style event handlers\n         */\n        var ev = plotObj._ev;\n        if(!ev) return jQueryHandlerValue;\n\n        var handlers = ev._events[event];\n        if(!handlers) return jQueryHandlerValue;\n\n        /*\n         * handlers can be function or an array of functions\n         */\n        if(typeof handlers === 'function') handlers = [handlers];\n        var lastHandler = handlers.pop();\n\n        /*\n         * Call all the handlers except the last one.\n         */\n        for(var i = 0; i < handlers.length; i++) {\n            handlers[i](data);\n        }\n\n        /*\n         * Now call the final handler and collect its value\n         */\n        nodeEventHandlerValue = lastHandler(data);\n\n        /*\n         * Return either the jquery handler value if it exists or the\n         * nodeEventHandler value. Jquery event value superceeds nodejs\n         * events for backwards compatability reasons.\n         */\n        return jQueryHandlerValue !== undefined ? jQueryHandlerValue :\n            nodeEventHandlerValue;\n    },\n\n    purge: function(plotObj) {\n        delete plotObj._ev;\n        delete plotObj.on;\n        delete plotObj.once;\n        delete plotObj.removeListener;\n        delete plotObj.removeAllListeners;\n        delete plotObj.emit;\n\n        delete plotObj._ev;\n        delete plotObj._internalEv;\n        delete plotObj._internalOn;\n        delete plotObj._internalOnce;\n        delete plotObj._removeInternalListener;\n        delete plotObj._removeAllInternalListeners;\n\n        return plotObj;\n    }\n\n};\n\nmodule.exports = Events;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/events.js\n// module id = 66\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar constants = require('./constants');\n\n// look for either subplot or xaxis and yaxis attributes\nexports.getSubplot = function getSubplot(trace) {\n    return trace.subplot || (trace.xaxis + trace.yaxis) || trace.geo;\n};\n\n// convenience functions for mapping all relevant axes\nexports.flat = function flat(subplots, v) {\n    var out = new Array(subplots.length);\n    for(var i = 0; i < subplots.length; i++) {\n        out[i] = v;\n    }\n    return out;\n};\n\nexports.p2c = function p2c(axArray, v) {\n    var out = new Array(axArray.length);\n    for(var i = 0; i < axArray.length; i++) {\n        out[i] = axArray[i].p2c(v);\n    }\n    return out;\n};\n\nexports.getDistanceFunction = function getDistanceFunction(mode, dx, dy, dxy) {\n    if(mode === 'closest') return dxy || exports.quadrature(dx, dy);\n    return mode === 'x' ? dx : dy;\n};\n\nexports.getClosest = function getClosest(cd, distfn, pointData) {\n    // do we already have a point number? (array mode only)\n    if(pointData.index !== false) {\n        if(pointData.index >= 0 && pointData.index < cd.length) {\n            pointData.distance = 0;\n        }\n        else pointData.index = false;\n    }\n    else {\n        // apply the distance function to each data point\n        // this is the longest loop... if this bogs down, we may need\n        // to create pre-sorted data (by x or y), not sure how to\n        // do this for 'closest'\n        for(var i = 0; i < cd.length; i++) {\n            var newDistance = distfn(cd[i]);\n            if(newDistance <= pointData.distance) {\n                pointData.index = i;\n                pointData.distance = newDistance;\n            }\n        }\n    }\n    return pointData;\n};\n\n// for bar charts and others with finite-size objects: you must be inside\n// it to see its hover info, so distance is infinite outside.\n// But make distance inside be at least 1/4 MAXDIST, and a little bigger\n// for bigger bars, to prioritize scatter and smaller bars over big bars\n//\n// note that for closest mode, two inbox's will get added in quadrature\n// args are (signed) difference from the two opposite edges\n// count one edge as in, so that over continuous ranges you never get a gap\nexports.inbox = function inbox(v0, v1) {\n    if(v0 * v1 < 0 || v0 === 0) {\n        return constants.MAXDIST * (0.6 - 0.3 / Math.max(3, Math.abs(v0 - v1)));\n    }\n    return Infinity;\n};\n\nexports.quadrature = function quadrature(dx, dy) {\n    return function(di) {\n        var x = dx(di),\n            y = dy(di);\n        return Math.sqrt(x * x + y * y);\n    };\n};\n\n/** Fill event data point object for hover and selection.\n *  Invokes _module.eventData if present.\n *\n * N.B. note that point 'index' corresponds to input data array index\n *  whereas 'number' is its post-transform version.\n *\n * If the hovered/selected pt corresponds to an multiple input points\n * (e.g. for histogram and transformed traces), 'pointNumbers` and 'pointIndices'\n * are include in the event data.\n *\n * @param {object} pt\n * @param {object} trace\n * @param {object} cd\n * @return {object}\n */\nexports.makeEventData = function makeEventData(pt, trace, cd) {\n    // hover uses 'index', select uses 'pointNumber'\n    var pointNumber = 'index' in pt ? pt.index : pt.pointNumber;\n\n    var out = {\n        data: trace._input,\n        fullData: trace,\n        curveNumber: trace.index,\n        pointNumber: pointNumber\n    };\n\n    if(trace._indexToPoints) {\n        var pointIndices = trace._indexToPoints[pointNumber];\n\n        if(pointIndices.length === 1) {\n            out.pointIndex = pointIndices[0];\n        } else {\n            out.pointIndices = pointIndices;\n        }\n    } else {\n        out.pointIndex = pointNumber;\n    }\n\n    if(trace._module.eventData) {\n        out = trace._module.eventData(out, pt, trace, cd, pointNumber);\n    } else {\n        if('xVal' in pt) out.x = pt.xVal;\n        else if('x' in pt) out.x = pt.x;\n\n        if('yVal' in pt) out.y = pt.yVal;\n        else if('y' in pt) out.y = pt.y;\n\n        if(pt.xa) out.xaxis = pt.xa;\n        if(pt.ya) out.yaxis = pt.ya;\n        if(pt.zLabelVal !== undefined) out.z = pt.zLabelVal;\n    }\n\n    exports.appendArrayPointValue(out, trace, pointNumber);\n\n    return out;\n};\n\n/** Appends values inside array attributes corresponding to given point number\n *\n * @param {object} pointData : point data object (gets mutated here)\n * @param {object} trace : full trace object\n * @param {number|Array(number)} pointNumber : point number. May be a length-2 array\n *     [row, col] to dig into 2D arrays\n */\nexports.appendArrayPointValue = function(pointData, trace, pointNumber) {\n    var arrayAttrs = trace._arrayAttrs;\n\n    if(!arrayAttrs) {\n        return;\n    }\n\n    for(var i = 0; i < arrayAttrs.length; i++) {\n        var astr = arrayAttrs[i];\n        var key = getPointKey(astr);\n\n        if(pointData[key] === undefined) {\n            var val = Lib.nestedProperty(trace, astr).get();\n            var pointVal = getPointData(val, pointNumber);\n\n            if(pointVal !== undefined) pointData[key] = pointVal;\n        }\n    }\n};\n\n/**\n * Appends values inside array attributes corresponding to given point number array\n * For use when pointData references a plot entity that arose (or potentially arose)\n * from multiple points in the input data\n *\n * @param {object} pointData : point data object (gets mutated here)\n * @param {object} trace : full trace object\n * @param {Array(number)|Array(Array(number))} pointNumbers : Array of point numbers.\n *     Each entry in the array may itself be a length-2 array [row, col] to dig into 2D arrays\n */\nexports.appendArrayMultiPointValues = function(pointData, trace, pointNumbers) {\n    var arrayAttrs = trace._arrayAttrs;\n\n    if(!arrayAttrs) {\n        return;\n    }\n\n    for(var i = 0; i < arrayAttrs.length; i++) {\n        var astr = arrayAttrs[i];\n        var key = getPointKey(astr);\n\n        if(pointData[key] === undefined) {\n            var val = Lib.nestedProperty(trace, astr).get();\n            var keyVal = new Array(pointNumbers.length);\n\n            for(var j = 0; j < pointNumbers.length; j++) {\n                keyVal[j] = getPointData(val, pointNumbers[j]);\n            }\n            pointData[key] = keyVal;\n        }\n    }\n};\n\nvar pointKeyMap = {\n    ids: 'id',\n    locations: 'location',\n    labels: 'label',\n    values: 'value',\n    'marker.colors': 'color'\n};\n\nfunction getPointKey(astr) {\n    return pointKeyMap[astr] || astr;\n}\n\nfunction getPointData(val, pointNumber) {\n    if(Array.isArray(pointNumber)) {\n        if(Array.isArray(val) && Array.isArray(val[pointNumber[0]])) {\n            return val[pointNumber[0]][pointNumber[1]];\n        }\n    } else {\n        return val[pointNumber];\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/fx/helpers.js\n// module id = 67\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar constants = require('./constants');\n\nvar fontAttrs = require('../../plots/font_attributes')({\n    editType: 'none',\n    description: 'Sets the default hover label font used by all traces on the graph.'\n});\nfontAttrs.family.dflt = constants.HOVERFONT;\nfontAttrs.size.dflt = constants.HOVERFONTSIZE;\n\nmodule.exports = {\n    dragmode: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['zoom', 'pan', 'select', 'lasso', 'orbit', 'turntable'],\n        dflt: 'zoom',\n        editType: 'modebar',\n        description: [\n            'Determines the mode of drag interactions.',\n            '*select* and *lasso* apply only to scatter traces with',\n            'markers or text. *orbit* and *turntable* apply only to',\n            '3D scenes.'\n        ].join(' ')\n    },\n    hovermode: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['x', 'y', 'closest', false],\n        editType: 'modebar',\n        description: 'Determines the mode of hover interactions.'\n    },\n    hoverdistance: {\n        valType: 'integer',\n        min: -1,\n        dflt: 20,\n        role: 'info',\n        editType: 'none',\n        description: [\n            'Sets the default distance (in pixels) to look for data',\n            'to add hover labels (-1 means no cutoff, 0 means no looking for data)'\n        ].join(' ')\n    },\n    spikedistance: {\n        valType: 'integer',\n        min: -1,\n        dflt: 20,\n        role: 'info',\n        editType: 'none',\n        description: [\n            'Sets the default distance (in pixels) to look for data to draw',\n            'spikelines to (-1 means no cutoff, 0 means no looking for data).'\n        ].join(' ')\n    },\n    hoverlabel: {\n        bgcolor: {\n            valType: 'color',\n            role: 'style',\n            editType: 'none',\n            description: [\n                'Sets the background color of all hover labels on graph'\n            ].join(' ')\n        },\n        bordercolor: {\n            valType: 'color',\n            role: 'style',\n            editType: 'none',\n            description: [\n                'Sets the border color of all hover labels on graph.'\n            ].join(' ')\n        },\n        font: fontAttrs,\n        namelength: {\n            valType: 'integer',\n            min: -1,\n            dflt: 15,\n            role: 'style',\n            editType: 'none',\n            description: [\n                'Sets the default length (in number of characters) of the trace name in',\n                'the hover labels for all traces. -1 shows the whole name',\n                'regardless of length. 0-3 shows the first 0-3 characters, and',\n                'an integer >3 will show the whole name if it is less than that',\n                'many characters, but if it is longer, will truncate to',\n                '`namelength - 3` characters and add an ellipsis.'\n            ].join(' ')\n        },\n        editType: 'none'\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/fx/layout_attributes.js\n// module id = 68\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\nvar tinycolor = require('tinycolor2');\n\nvar Lib = require('../../lib');\nvar Events = require('../../lib/events');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar overrideCursor = require('../../lib/override_cursor');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar dragElement = require('../dragelement');\nvar Axes = require('../../plots/cartesian/axes');\nvar Registry = require('../../registry');\n\nvar helpers = require('./helpers');\nvar constants = require('./constants');\n\n// hover labels for multiple horizontal bars get tilted by some angle,\n// then need to be offset differently if they overlap\nvar YANGLE = constants.YANGLE;\nvar YA_RADIANS = Math.PI * YANGLE / 180;\n\n// expansion of projected height\nvar YFACTOR = 1 / Math.sin(YA_RADIANS);\n\n// to make the appropriate post-rotation x offset,\n// you need both x and y offsets\nvar YSHIFTX = Math.cos(YA_RADIANS);\nvar YSHIFTY = Math.sin(YA_RADIANS);\n\n// size and display constants for hover text\nvar HOVERARROWSIZE = constants.HOVERARROWSIZE;\nvar HOVERTEXTPAD = constants.HOVERTEXTPAD;\n\n// fx.hover: highlight data on hover\n// evt can be a mousemove event, or an object with data about what points\n//   to hover on\n//      {xpx,ypx[,hovermode]} - pixel locations from top left\n//          (with optional overriding hovermode)\n//      {xval,yval[,hovermode]} - data values\n//      [{curveNumber,(pointNumber|xval and/or yval)}] -\n//              array of specific points to highlight\n//          pointNumber is a single integer if gd.data[curveNumber] is 1D,\n//              or a two-element array if it's 2D\n//          xval and yval are data values,\n//              1D data may specify either or both,\n//              2D data must specify both\n// subplot is an id string (default \"xy\")\n// makes use of gl.hovermode, which can be:\n//      x (find the points with the closest x values, ie a column),\n//      closest (find the single closest point)\n//    internally there are two more that occasionally get used:\n//      y (pick out a row - only used for multiple horizontal bar charts)\n//      array (used when the user specifies an explicit\n//          array of points to hover on)\n//\n// We wrap the hovers in a timer, to limit their frequency.\n// The actual rendering is done by private function _hover.\nexports.hover = function hover(gd, evt, subplot, noHoverEvent) {\n    gd = Lib.getGraphDiv(gd);\n\n    Lib.throttle(\n        gd._fullLayout._uid + constants.HOVERID,\n        constants.HOVERMINTIME,\n        function() { _hover(gd, evt, subplot, noHoverEvent); }\n    );\n};\n\n/*\n * Draw a single hover item in a pre-existing svg container somewhere\n * hoverItem should have keys:\n *    - x and y (or x0, x1, y0, and y1):\n *      the pixel position to mark, relative to opts.container\n *    - xLabel, yLabel, zLabel, text, and name:\n *      info to go in the label\n *    - color:\n *      the background color for the label.\n *    - idealAlign (optional):\n *      'left' or 'right' for which side of the x/y box to try to put this on first\n *    - borderColor (optional):\n *      color for the border, defaults to strongest contrast with color\n *    - fontFamily (optional):\n *      string, the font for this label, defaults to constants.HOVERFONT\n *    - fontSize (optional):\n *      the label font size, defaults to constants.HOVERFONTSIZE\n *    - fontColor (optional):\n *      defaults to borderColor\n * opts should have keys:\n *    - bgColor:\n *      the background color this is against, used if the trace is\n *      non-opaque, and for the name, which goes outside the box\n *    - container:\n *      a <svg> or <g> element to add the hover label to\n *    - outerContainer:\n *      normally a parent of `container`, sets the bounding box to use to\n *      constrain the hover label and determine whether to show it on the left or right\n */\nexports.loneHover = function loneHover(hoverItem, opts) {\n    var pointData = {\n        color: hoverItem.color || Color.defaultLine,\n        x0: hoverItem.x0 || hoverItem.x || 0,\n        x1: hoverItem.x1 || hoverItem.x || 0,\n        y0: hoverItem.y0 || hoverItem.y || 0,\n        y1: hoverItem.y1 || hoverItem.y || 0,\n        xLabel: hoverItem.xLabel,\n        yLabel: hoverItem.yLabel,\n        zLabel: hoverItem.zLabel,\n        text: hoverItem.text,\n        name: hoverItem.name,\n        idealAlign: hoverItem.idealAlign,\n\n        // optional extra bits of styling\n        borderColor: hoverItem.borderColor,\n        fontFamily: hoverItem.fontFamily,\n        fontSize: hoverItem.fontSize,\n        fontColor: hoverItem.fontColor,\n\n        // filler to make createHoverText happy\n        trace: {\n            index: 0,\n            hoverinfo: ''\n        },\n        xa: {_offset: 0},\n        ya: {_offset: 0},\n        index: 0\n    };\n\n    var container3 = d3.select(opts.container),\n        outerContainer3 = opts.outerContainer ?\n            d3.select(opts.outerContainer) : container3;\n\n    var fullOpts = {\n        hovermode: 'closest',\n        rotateLabels: false,\n        bgColor: opts.bgColor || Color.background,\n        container: container3,\n        outerContainer: outerContainer3,\n        hoverdistance: constants.MAXDIST\n    };\n\n    var hoverLabel = createHoverText([pointData], fullOpts, opts.gd);\n    alignHoverText(hoverLabel, fullOpts.rotateLabels);\n\n    return hoverLabel.node();\n};\n\n// The actual implementation is here:\nfunction _hover(gd, evt, subplot, noHoverEvent) {\n    if(!subplot) subplot = 'xy';\n\n    // if the user passed in an array of subplots,\n    // use those instead of finding overlayed plots\n    var subplots = Array.isArray(subplot) ? subplot : [subplot];\n\n    var fullLayout = gd._fullLayout,\n        plots = fullLayout._plots || [],\n        plotinfo = plots[subplot];\n\n    // list of all overlaid subplots to look at\n    if(plotinfo) {\n        var overlayedSubplots = plotinfo.overlays.map(function(pi) {\n            return pi.id;\n        });\n\n        subplots = subplots.concat(overlayedSubplots);\n    }\n\n    var len = subplots.length,\n        xaArray = new Array(len),\n        yaArray = new Array(len);\n\n    for(var i = 0; i < len; i++) {\n        var spId = subplots[i];\n\n        // 'cartesian' case\n        var plotObj = plots[spId];\n        if(plotObj) {\n\n            // TODO make sure that fullLayout_plots axis refs\n            // get updated properly so that we don't have\n            // to use Axes.getFromId in general.\n\n            xaArray[i] = Axes.getFromId(gd, plotObj.xaxis._id);\n            yaArray[i] = Axes.getFromId(gd, plotObj.yaxis._id);\n            continue;\n        }\n\n        // other subplot types\n        var _subplot = fullLayout[spId]._subplot;\n        xaArray[i] = _subplot.xaxis;\n        yaArray[i] = _subplot.yaxis;\n    }\n\n    var hovermode = evt.hovermode || fullLayout.hovermode;\n\n    if(['x', 'y', 'closest'].indexOf(hovermode) === -1 || !gd.calcdata ||\n            gd.querySelector('.zoombox') || gd._dragging) {\n        return dragElement.unhoverRaw(gd, evt);\n    }\n\n    var hoverdistance = fullLayout.hoverdistance === -1 ? Infinity : fullLayout.hoverdistance;\n    var spikedistance = fullLayout.spikedistance === -1 ? Infinity : fullLayout.spikedistance;\n\n        // hoverData: the set of candidate points we've found to highlight\n    var hoverData = [],\n\n        // searchData: the data to search in. Mostly this is just a copy of\n        // gd.calcdata, filtered to the subplot and overlays we're on\n        // but if a point array is supplied it will be a mapping\n        // of indicated curves\n        searchData = [],\n\n        // [x|y]valArray: the axis values of the hover event\n        // mapped onto each of the currently selected overlaid subplots\n        xvalArray,\n        yvalArray,\n\n        // used in loops\n        itemnum,\n        curvenum,\n        cd,\n        trace,\n        subplotId,\n        subploti,\n        mode,\n        xval,\n        yval,\n        pointData,\n        closedataPreviousLength,\n\n        // spikePoints: the set of candidate points we've found to draw spikes to\n        spikePoints = {\n            hLinePoint: null,\n            vLinePoint: null\n        };\n\n    // Figure out what we're hovering on:\n    // mouse location or user-supplied data\n\n    if(Array.isArray(evt)) {\n        // user specified an array of points to highlight\n        hovermode = 'array';\n        for(itemnum = 0; itemnum < evt.length; itemnum++) {\n            cd = gd.calcdata[evt[itemnum].curveNumber||0];\n            if(cd[0].trace.hoverinfo !== 'skip') {\n                searchData.push(cd);\n            }\n        }\n    }\n    else {\n        for(curvenum = 0; curvenum < gd.calcdata.length; curvenum++) {\n            cd = gd.calcdata[curvenum];\n            trace = cd[0].trace;\n            if(trace.hoverinfo !== 'skip' && subplots.indexOf(helpers.getSubplot(trace)) !== -1) {\n                searchData.push(cd);\n            }\n        }\n\n        // [x|y]px: the pixels (from top left) of the mouse location\n        // on the currently selected plot area\n        // add pointerX|Y property for drawing the spikes in spikesnap 'cursor' situation\n        var hasUserCalledHover = !evt.target,\n            xpx, ypx;\n\n        if(hasUserCalledHover) {\n            if('xpx' in evt) xpx = evt.xpx;\n            else xpx = xaArray[0]._length / 2;\n            evt.pointerX = xpx + xaArray[0]._offset;\n\n            if('ypx' in evt) ypx = evt.ypx;\n            else ypx = yaArray[0]._length / 2;\n            evt.pointerY = ypx + yaArray[0]._offset;\n        }\n        else {\n            // fire the beforehover event and quit if it returns false\n            // note that we're only calling this on real mouse events, so\n            // manual calls to fx.hover will always run.\n            if(Events.triggerHandler(gd, 'plotly_beforehover', evt) === false) {\n                return;\n            }\n\n            var dbb = evt.target.getBoundingClientRect();\n\n            xpx = evt.clientX - dbb.left;\n            ypx = evt.clientY - dbb.top;\n\n            // in case hover was called from mouseout into hovertext,\n            // it's possible you're not actually over the plot anymore\n            if(xpx < 0 || xpx > dbb.width || ypx < 0 || ypx > dbb.height) {\n                return dragElement.unhoverRaw(gd, evt);\n            }\n            evt.pointerX = evt.offsetX;\n            evt.pointerY = evt.offsetY;\n        }\n\n        if('xval' in evt) xvalArray = helpers.flat(subplots, evt.xval);\n        else xvalArray = helpers.p2c(xaArray, xpx);\n\n        if('yval' in evt) yvalArray = helpers.flat(subplots, evt.yval);\n        else yvalArray = helpers.p2c(yaArray, ypx);\n\n        if(!isNumeric(xvalArray[0]) || !isNumeric(yvalArray[0])) {\n            Lib.warn('Fx.hover failed', evt, gd);\n            return dragElement.unhoverRaw(gd, evt);\n        }\n    }\n\n    // the pixel distance to beat as a matching point\n    // in 'x' or 'y' mode this resets for each trace\n    var distance = Infinity;\n\n    // find the closest point in each trace\n    // this is minimum dx and/or dy, depending on mode\n    // and the pixel position for the label (labelXpx, labelYpx)\n    for(curvenum = 0; curvenum < searchData.length; curvenum++) {\n        cd = searchData[curvenum];\n\n        // filter out invisible or broken data\n        if(!cd || !cd[0] || !cd[0].trace || cd[0].trace.visible !== true) continue;\n\n        trace = cd[0].trace;\n\n        // Explicitly bail out for these two. I don't know how to otherwise prevent\n        // the rest of this function from running and failing\n        if(['carpet', 'contourcarpet'].indexOf(trace._module.name) !== -1) continue;\n\n        subplotId = helpers.getSubplot(trace);\n        subploti = subplots.indexOf(subplotId);\n\n        // within one trace mode can sometimes be overridden\n        mode = hovermode;\n\n        // container for new point, also used to pass info into module.hoverPoints\n        pointData = {\n            // trace properties\n            cd: cd,\n            trace: trace,\n            xa: xaArray[subploti],\n            ya: yaArray[subploti],\n            // point properties - override all of these\n            index: false, // point index in trace - only used by plotly.js hoverdata consumers\n            distance: Math.min(distance, hoverdistance), // pixel distance or pseudo-distance\n            color: Color.defaultLine, // trace color\n            name: trace.name,\n            x0: undefined,\n            x1: undefined,\n            y0: undefined,\n            y1: undefined,\n            xLabelVal: undefined,\n            yLabelVal: undefined,\n            zLabelVal: undefined,\n            text: undefined\n        };\n\n        // add ref to subplot object (non-cartesian case)\n        if(fullLayout[subplotId]) {\n            pointData.subplot = fullLayout[subplotId]._subplot;\n        }\n\n        closedataPreviousLength = hoverData.length;\n\n        // for a highlighting array, figure out what\n        // we're searching for with this element\n        if(mode === 'array') {\n            var selection = evt[curvenum];\n            if('pointNumber' in selection) {\n                pointData.index = selection.pointNumber;\n                mode = 'closest';\n            }\n            else {\n                mode = '';\n                if('xval' in selection) {\n                    xval = selection.xval;\n                    mode = 'x';\n                }\n                if('yval' in selection) {\n                    yval = selection.yval;\n                    mode = mode ? 'closest' : 'y';\n                }\n            }\n        }\n        else {\n            xval = xvalArray[subploti];\n            yval = yvalArray[subploti];\n        }\n\n        // Now if there is range to look in, find the points to hover.\n        if(hoverdistance !== 0) {\n            if(trace._module && trace._module.hoverPoints) {\n                var newPoints = trace._module.hoverPoints(pointData, xval, yval, mode, fullLayout._hoverlayer);\n                if(newPoints) {\n                    var newPoint;\n                    for(var newPointNum = 0; newPointNum < newPoints.length; newPointNum++) {\n                        newPoint = newPoints[newPointNum];\n                        if(isNumeric(newPoint.x0) && isNumeric(newPoint.y0)) {\n                            hoverData.push(cleanPoint(newPoint, hovermode));\n                        }\n                    }\n                }\n            }\n            else {\n                Lib.log('Unrecognized trace type in hover:', trace);\n            }\n        }\n\n        // in closest mode, remove any existing (farther) points\n        // and don't look any farther than this latest point (or points, if boxes)\n        if(hovermode === 'closest' && hoverData.length > closedataPreviousLength) {\n            hoverData.splice(0, closedataPreviousLength);\n            distance = hoverData[0].distance;\n        }\n\n        // Now if there is range to look in, find the points to draw the spikelines\n        // Do it only if there is no hoverData\n        if(fullLayout._has('cartesian') && (spikedistance !== 0)) {\n            if(hoverData.length === 0) {\n                pointData.distance = spikedistance;\n                pointData.index = false;\n                var closestPoints = trace._module.hoverPoints(pointData, xval, yval, 'closest', fullLayout._hoverlayer);\n                if(closestPoints) {\n                    var tmpPoint;\n                    var closestVPoints = closestPoints.filter(function(point) {\n                        return point.xa.showspikes;\n                    });\n                    if(closestVPoints.length) {\n                        var closestVPt = closestVPoints[0];\n                        if(isNumeric(closestVPt.x0) && isNumeric(closestVPt.y0)) {\n                            tmpPoint = fillClosestPoint(closestVPt);\n                            if(!spikePoints.vLinePoint || (spikePoints.vLinePoint.distance > tmpPoint.distance)) {\n                                spikePoints.vLinePoint = tmpPoint;\n                            }\n                        }\n                    }\n\n                    var closestHPoints = closestPoints.filter(function(point) {\n                        return point.ya.showspikes;\n                    });\n                    if(closestHPoints.length) {\n                        var closestHPt = closestHPoints[0];\n                        if(isNumeric(closestHPt.x0) && isNumeric(closestHPt.y0)) {\n                            tmpPoint = fillClosestPoint(closestHPt);\n                            if(!spikePoints.hLinePoint || (spikePoints.hLinePoint.distance > tmpPoint.distance)) {\n                                spikePoints.hLinePoint = tmpPoint;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    function selectClosestPoint(pointsData, spikedistance) {\n        if(!pointsData.length) return null;\n        var resultPoint;\n        var pointsDistances = pointsData.map(function(point, index) {\n            var xa = point.xa,\n                ya = point.ya,\n                xpx = xa.c2p(xval),\n                ypx = ya.c2p(yval),\n                dxy = function(point) {\n                    var rad = point.kink,\n                        dx = (point.x1 + point.x0) / 2 - xpx,\n                        dy = (point.y1 + point.y0) / 2 - ypx;\n                    return Math.max(Math.sqrt(dx * dx + dy * dy) - rad, 1 - 3 / rad);\n                };\n            var distance = dxy(point);\n            return {distance: distance, index: index};\n        });\n        pointsDistances = pointsDistances\n            .filter(function(point) {\n                return point.distance <= spikedistance;\n            })\n            .sort(function(a, b) {\n                return a.distance - b.distance;\n            });\n        if(pointsDistances.length) {\n            resultPoint = pointsData[pointsDistances[0].index];\n        } else {\n            resultPoint = null;\n        }\n        return resultPoint;\n    }\n\n    function fillClosestPoint(point) {\n        if(!point) return null;\n        return {\n            xa: point.xa,\n            ya: point.ya,\n            x0: point.x0,\n            x1: point.x1,\n            y0: point.y0,\n            y1: point.y1,\n            distance: point.distance,\n            curveNumber: point.trace.index,\n            color: point.color,\n            pointNumber: point.index\n        };\n    }\n\n    var spikelineOpts = {\n        fullLayout: fullLayout,\n        container: fullLayout._hoverlayer,\n        outerContainer: fullLayout._paperdiv,\n        event: evt\n    };\n    var oldspikepoints = gd._spikepoints,\n        newspikepoints = {\n            vLinePoint: spikePoints.vLinePoint,\n            hLinePoint: spikePoints.hLinePoint\n        };\n    gd._spikepoints = newspikepoints;\n\n    // Now if it is not restricted by spikedistance option, set the points to draw the spikelines\n    if(fullLayout._has('cartesian') && (spikedistance !== 0)) {\n        if(hoverData.length !== 0) {\n            var tmpHPointData = hoverData.filter(function(point) {\n                return point.ya.showspikes;\n            });\n            var tmpHPoint = selectClosestPoint(tmpHPointData, spikedistance);\n            spikePoints.hLinePoint = fillClosestPoint(tmpHPoint);\n\n            var tmpVPointData = hoverData.filter(function(point) {\n                return point.xa.showspikes;\n            });\n            var tmpVPoint = selectClosestPoint(tmpVPointData, spikedistance);\n            spikePoints.vLinePoint = fillClosestPoint(tmpVPoint);\n        }\n    }\n\n    // if hoverData is empty check for the spikes to draw and quit if there are none\n    if(hoverData.length === 0) {\n        var result = dragElement.unhoverRaw(gd, evt);\n        if(fullLayout._has('cartesian') && ((spikePoints.hLinePoint !== null) || (spikePoints.vLinePoint !== null))) {\n            if(spikesChanged(oldspikepoints)) {\n                createSpikelines(spikePoints, spikelineOpts);\n            }\n        }\n        return result;\n    }\n\n    if(fullLayout._has('cartesian')) {\n        if(spikesChanged(oldspikepoints)) {\n            createSpikelines(spikePoints, spikelineOpts);\n        }\n    }\n\n    hoverData.sort(function(d1, d2) { return d1.distance - d2.distance; });\n\n    // lastly, emit custom hover/unhover events\n    var oldhoverdata = gd._hoverdata,\n        newhoverdata = [];\n\n    // pull out just the data that's useful to\n    // other people and send it to the event\n    for(itemnum = 0; itemnum < hoverData.length; itemnum++) {\n        var pt = hoverData[itemnum];\n        newhoverdata.push(helpers.makeEventData(pt, pt.trace, pt.cd));\n    }\n\n    gd._hoverdata = newhoverdata;\n\n    // if there's more than one horz bar trace,\n    // rotate the labels so they don't overlap\n    var rotateLabels = hovermode === 'y' && searchData.length > 1;\n\n    var bgColor = Color.combine(\n        fullLayout.plot_bgcolor || Color.background,\n        fullLayout.paper_bgcolor\n    );\n\n    var labelOpts = {\n        hovermode: hovermode,\n        rotateLabels: rotateLabels,\n        bgColor: bgColor,\n        container: fullLayout._hoverlayer,\n        outerContainer: fullLayout._paperdiv,\n        commonLabelOpts: fullLayout.hoverlabel,\n        hoverdistance: fullLayout.hoverdistance\n    };\n\n    var hoverLabels = createHoverText(hoverData, labelOpts, gd);\n\n    hoverAvoidOverlaps(hoverData, rotateLabels ? 'xa' : 'ya', fullLayout);\n\n    alignHoverText(hoverLabels, rotateLabels);\n\n    // TODO: tagName hack is needed to appease geo.js's hack of using evt.target=true\n    // we should improve the \"fx\" API so other plots can use it without these hack.\n    if(evt.target && evt.target.tagName) {\n        var hasClickToShow = Registry.getComponentMethod('annotations', 'hasClickToShow')(gd, newhoverdata);\n        overrideCursor(d3.select(evt.target), hasClickToShow ? 'pointer' : '');\n    }\n\n    // don't emit events if called manually\n    if(!evt.target || noHoverEvent || !hoverChanged(gd, evt, oldhoverdata)) return;\n\n    if(oldhoverdata) {\n        gd.emit('plotly_unhover', {\n            event: evt,\n            points: oldhoverdata\n        });\n    }\n\n    gd.emit('plotly_hover', {\n        event: evt,\n        points: gd._hoverdata,\n        xaxes: xaArray,\n        yaxes: yaArray,\n        xvals: xvalArray,\n        yvals: yvalArray\n    });\n}\n\nfunction createHoverText(hoverData, opts, gd) {\n    var hovermode = opts.hovermode;\n    var rotateLabels = opts.rotateLabels;\n    var bgColor = opts.bgColor;\n    var container = opts.container;\n    var outerContainer = opts.outerContainer;\n    var commonLabelOpts = opts.commonLabelOpts || {};\n\n    // opts.fontFamily/Size are used for the common label\n    // and as defaults for each hover label, though the individual labels\n    // can override this.\n    var fontFamily = opts.fontFamily || constants.HOVERFONT;\n    var fontSize = opts.fontSize || constants.HOVERFONTSIZE;\n\n    var c0 = hoverData[0];\n    var xa = c0.xa;\n    var ya = c0.ya;\n    var commonAttr = hovermode === 'y' ? 'yLabel' : 'xLabel';\n    var t0 = c0[commonAttr];\n    var t00 = (String(t0) || '').split(' ')[0];\n    var outerContainerBB = outerContainer.node().getBoundingClientRect();\n    var outerTop = outerContainerBB.top;\n    var outerWidth = outerContainerBB.width;\n    var outerHeight = outerContainerBB.height;\n\n    // show the common label, if any, on the axis\n    // never show a common label in array mode,\n    // even if sometimes there could be one\n    var showCommonLabel = c0.distance <= opts.hoverdistance &&\n                          (hovermode === 'x' || hovermode === 'y');\n\n    // all hover traces hoverinfo must contain the hovermode\n    // to have common labels\n    var i, traceHoverinfo;\n    for(i = 0; i < hoverData.length; i++) {\n        traceHoverinfo = hoverData[i].hoverinfo || hoverData[i].trace.hoverinfo;\n        var parts = Array.isArray(traceHoverinfo) ? traceHoverinfo : traceHoverinfo.split('+');\n        if(parts.indexOf('all') === -1 &&\n            parts.indexOf(hovermode) === -1) {\n            showCommonLabel = false;\n            break;\n        }\n    }\n\n    var commonLabel = container.selectAll('g.axistext')\n        .data(showCommonLabel ? [0] : []);\n    commonLabel.enter().append('g')\n        .classed('axistext', true);\n    commonLabel.exit().remove();\n\n    commonLabel.each(function() {\n        var label = d3.select(this),\n            lpath = label.selectAll('path').data([0]),\n            ltext = label.selectAll('text').data([0]);\n\n        lpath.enter().append('path')\n            .style({'stroke-width': '1px'});\n\n        lpath.style({\n            fill: commonLabelOpts.bgcolor || Color.defaultLine,\n            stroke: commonLabelOpts.bordercolor || Color.background,\n        });\n\n        ltext.enter().append('text')\n            // prohibit tex interpretation until we can handle\n            // tex and regular text together\n            .attr('data-notex', 1);\n\n        ltext.text(t0)\n            .call(Drawing.font,\n                commonLabelOpts.font.family || fontFamily,\n                commonLabelOpts.font.size || fontSize,\n                commonLabelOpts.font.color || Color.background\n             )\n            .call(svgTextUtils.positionText, 0, 0)\n            .call(svgTextUtils.convertToTspans, gd);\n\n        label.attr('transform', '');\n\n        var tbb = ltext.node().getBoundingClientRect();\n        if(hovermode === 'x') {\n            ltext.attr('text-anchor', 'middle')\n                .call(svgTextUtils.positionText, 0, (xa.side === 'top' ?\n                    (outerTop - tbb.bottom - HOVERARROWSIZE - HOVERTEXTPAD) :\n                    (outerTop - tbb.top + HOVERARROWSIZE + HOVERTEXTPAD)));\n\n            var topsign = xa.side === 'top' ? '-' : '';\n            lpath.attr('d', 'M0,0' +\n                'L' + HOVERARROWSIZE + ',' + topsign + HOVERARROWSIZE +\n                'H' + (HOVERTEXTPAD + tbb.width / 2) +\n                'v' + topsign + (HOVERTEXTPAD * 2 + tbb.height) +\n                'H-' + (HOVERTEXTPAD + tbb.width / 2) +\n                'V' + topsign + HOVERARROWSIZE + 'H-' + HOVERARROWSIZE + 'Z');\n\n            label.attr('transform', 'translate(' +\n                (xa._offset + (c0.x0 + c0.x1) / 2) + ',' +\n                (ya._offset + (xa.side === 'top' ? 0 : ya._length)) + ')');\n        }\n        else {\n            ltext.attr('text-anchor', ya.side === 'right' ? 'start' : 'end')\n                .call(svgTextUtils.positionText,\n                    (ya.side === 'right' ? 1 : -1) * (HOVERTEXTPAD + HOVERARROWSIZE),\n                    outerTop - tbb.top - tbb.height / 2);\n\n            var leftsign = ya.side === 'right' ? '' : '-';\n            lpath.attr('d', 'M0,0' +\n                'L' + leftsign + HOVERARROWSIZE + ',' + HOVERARROWSIZE +\n                'V' + (HOVERTEXTPAD + tbb.height / 2) +\n                'h' + leftsign + (HOVERTEXTPAD * 2 + tbb.width) +\n                'V-' + (HOVERTEXTPAD + tbb.height / 2) +\n                'H' + leftsign + HOVERARROWSIZE + 'V-' + HOVERARROWSIZE + 'Z');\n\n            label.attr('transform', 'translate(' +\n                (xa._offset + (ya.side === 'right' ? xa._length : 0)) + ',' +\n                (ya._offset + (c0.y0 + c0.y1) / 2) + ')');\n        }\n        // remove the \"close but not quite\" points\n        // because of error bars, only take up to a space\n        hoverData = hoverData.filter(function(d) {\n            return (d.zLabelVal !== undefined) ||\n                (d[commonAttr] || '').split(' ')[0] === t00;\n        });\n    });\n\n    // show all the individual labels\n\n    // first create the objects\n    var hoverLabels = container.selectAll('g.hovertext')\n        .data(hoverData, function(d) {\n            return [d.trace.index, d.index, d.x0, d.y0, d.name, d.attr, d.xa, d.ya || ''].join(',');\n        });\n    hoverLabels.enter().append('g')\n        .classed('hovertext', true)\n        .each(function() {\n            var g = d3.select(this);\n            // trace name label (rect and text.name)\n            g.append('rect')\n                .call(Color.fill, Color.addOpacity(bgColor, 0.8));\n            g.append('text').classed('name', true);\n            // trace data label (path and text.nums)\n            g.append('path')\n                .style('stroke-width', '1px');\n            g.append('text').classed('nums', true)\n                .call(Drawing.font, fontFamily, fontSize);\n        });\n    hoverLabels.exit().remove();\n\n    // then put the text in, position the pointer to the data,\n    // and figure out sizes\n    hoverLabels.each(function(d) {\n        var g = d3.select(this).attr('transform', ''),\n            name = '',\n            text = '';\n\n            // combine possible non-opaque trace color with bgColor\n        var baseColor = Color.opacity(d.color) ? d.color : Color.defaultLine;\n        var traceColor = Color.combine(baseColor, bgColor);\n\n        // find a contrasting color for border and text\n        var contrastColor = d.borderColor || Color.contrast(traceColor);\n\n        // to get custom 'name' labels pass cleanPoint\n        if(d.nameOverride !== undefined) d.name = d.nameOverride;\n\n        if(d.name) {\n            // strip out our pseudo-html elements from d.name (if it exists at all)\n            name = svgTextUtils.plainText(d.name || '');\n\n            var nameLength = Math.round(d.nameLength);\n\n            if(nameLength > -1 && name.length > nameLength) {\n                if(nameLength > 3) name = name.substr(0, nameLength - 3) + '...';\n                else name = name.substr(0, nameLength);\n            }\n        }\n\n        // used by other modules (initially just ternary) that\n        // manage their own hoverinfo independent of cleanPoint\n        // the rest of this will still apply, so such modules\n        // can still put things in (x|y|z)Label, text, and name\n        // and hoverinfo will still determine their visibility\n        if(d.extraText !== undefined) text += d.extraText;\n\n        if(d.zLabel !== undefined) {\n            if(d.xLabel !== undefined) text += 'x: ' + d.xLabel + '<br>';\n            if(d.yLabel !== undefined) text += 'y: ' + d.yLabel + '<br>';\n            text += (text ? 'z: ' : '') + d.zLabel;\n        }\n        else if(showCommonLabel && d[hovermode + 'Label'] === t0) {\n            text = d[(hovermode === 'x' ? 'y' : 'x') + 'Label'] || '';\n        }\n        else if(d.xLabel === undefined) {\n            if(d.yLabel !== undefined) text = d.yLabel;\n        }\n        else if(d.yLabel === undefined) text = d.xLabel;\n        else text = '(' + d.xLabel + ', ' + d.yLabel + ')';\n\n        if(d.text && !Array.isArray(d.text)) {\n            text += (text ? '<br>' : '') + d.text;\n        }\n\n        // if 'text' is empty at this point,\n        // put 'name' in main label and don't show secondary label\n        if(text === '') {\n            // if 'name' is also empty, remove entire label\n            if(name === '') g.remove();\n            text = name;\n        }\n\n        // main label\n        var tx = g.select('text.nums')\n            .call(Drawing.font,\n                d.fontFamily || fontFamily,\n                d.fontSize || fontSize,\n                d.fontColor || contrastColor)\n            .text(text)\n            .attr('data-notex', 1)\n            .call(svgTextUtils.positionText, 0, 0)\n            .call(svgTextUtils.convertToTspans, gd);\n\n        var tx2 = g.select('text.name'),\n            tx2width = 0;\n\n        // secondary label for non-empty 'name'\n        if(name && name !== text) {\n            tx2.call(Drawing.font,\n                    d.fontFamily || fontFamily,\n                    d.fontSize || fontSize,\n                    traceColor)\n                .text(name)\n                .attr('data-notex', 1)\n                .call(svgTextUtils.positionText, 0, 0)\n                .call(svgTextUtils.convertToTspans, gd);\n            tx2width = tx2.node().getBoundingClientRect().width + 2 * HOVERTEXTPAD;\n        }\n        else {\n            tx2.remove();\n            g.select('rect').remove();\n        }\n\n        g.select('path')\n            .style({\n                fill: traceColor,\n                stroke: contrastColor\n            });\n        var tbb = tx.node().getBoundingClientRect(),\n            htx = d.xa._offset + (d.x0 + d.x1) / 2,\n            hty = d.ya._offset + (d.y0 + d.y1) / 2,\n            dx = Math.abs(d.x1 - d.x0),\n            dy = Math.abs(d.y1 - d.y0),\n            txTotalWidth = tbb.width + HOVERARROWSIZE + HOVERTEXTPAD + tx2width,\n            anchorStartOK,\n            anchorEndOK;\n\n        d.ty0 = outerTop - tbb.top;\n        d.bx = tbb.width + 2 * HOVERTEXTPAD;\n        d.by = tbb.height + 2 * HOVERTEXTPAD;\n        d.anchor = 'start';\n        d.txwidth = tbb.width;\n        d.tx2width = tx2width;\n        d.offset = 0;\n\n        if(rotateLabels) {\n            d.pos = htx;\n            anchorStartOK = hty + dy / 2 + txTotalWidth <= outerHeight;\n            anchorEndOK = hty - dy / 2 - txTotalWidth >= 0;\n            if((d.idealAlign === 'top' || !anchorStartOK) && anchorEndOK) {\n                hty -= dy / 2;\n                d.anchor = 'end';\n            } else if(anchorStartOK) {\n                hty += dy / 2;\n                d.anchor = 'start';\n            } else d.anchor = 'middle';\n        }\n        else {\n            d.pos = hty;\n            anchorStartOK = htx + dx / 2 + txTotalWidth <= outerWidth;\n            anchorEndOK = htx - dx / 2 - txTotalWidth >= 0;\n            if((d.idealAlign === 'left' || !anchorStartOK) && anchorEndOK) {\n                htx -= dx / 2;\n                d.anchor = 'end';\n            } else if(anchorStartOK) {\n                htx += dx / 2;\n                d.anchor = 'start';\n            } else d.anchor = 'middle';\n        }\n\n        tx.attr('text-anchor', d.anchor);\n        if(tx2width) tx2.attr('text-anchor', d.anchor);\n        g.attr('transform', 'translate(' + htx + ',' + hty + ')' +\n            (rotateLabels ? 'rotate(' + YANGLE + ')' : ''));\n    });\n\n    return hoverLabels;\n}\n\n// Make groups of touching points, and within each group\n// move each point so that no labels overlap, but the average\n// label position is the same as it was before moving. Indicentally,\n// this is equivalent to saying all the labels are on equal linear\n// springs about their initial position. Initially, each point is\n// its own group, but as we find overlaps we will clump the points.\n//\n// Also, there are hard constraints at the edges of the graphs,\n// that push all groups to the middle so they are visible. I don't\n// know what happens if the group spans all the way from one edge to\n// the other, though it hardly matters - there's just too much\n// information then.\nfunction hoverAvoidOverlaps(hoverData, ax, fullLayout) {\n    var nummoves = 0,\n\n        // make groups of touching points\n        pointgroups = hoverData\n            .map(function(d, i) {\n                var axis = d[ax];\n                return [{\n                    i: i,\n                    dp: 0,\n                    pos: d.pos,\n                    posref: d.posref,\n                    size: d.by * (axis._id.charAt(0) === 'x' ? YFACTOR : 1) / 2,\n                    pmin: 0,\n                    pmax: (axis._id.charAt(0) === 'x' ? fullLayout.width : fullLayout.height)\n                }];\n            })\n            .sort(function(a, b) { return a[0].posref - b[0].posref; }),\n        donepositioning,\n        topOverlap,\n        bottomOverlap,\n        i, j,\n        pti,\n        sumdp;\n\n    function constrainGroup(grp) {\n        var minPt = grp[0],\n            maxPt = grp[grp.length - 1];\n\n        // overlap with the top - positive vals are overlaps\n        topOverlap = minPt.pmin - minPt.pos - minPt.dp + minPt.size;\n\n        // overlap with the bottom - positive vals are overlaps\n        bottomOverlap = maxPt.pos + maxPt.dp + maxPt.size - minPt.pmax;\n\n        // check for min overlap first, so that we always\n        // see the largest labels\n        // allow for .01px overlap, so we don't get an\n        // infinite loop from rounding errors\n        if(topOverlap > 0.01) {\n            for(j = grp.length - 1; j >= 0; j--) grp[j].dp += topOverlap;\n            donepositioning = false;\n        }\n        if(bottomOverlap < 0.01) return;\n        if(topOverlap < -0.01) {\n            // make sure we're not pushing back and forth\n            for(j = grp.length - 1; j >= 0; j--) grp[j].dp -= bottomOverlap;\n            donepositioning = false;\n        }\n        if(!donepositioning) return;\n\n        // no room to fix positioning, delete off-screen points\n\n        // first see how many points we need to delete\n        var deleteCount = 0;\n        for(i = 0; i < grp.length; i++) {\n            pti = grp[i];\n            if(pti.pos + pti.dp + pti.size > minPt.pmax) deleteCount++;\n        }\n\n        // start by deleting points whose data is off screen\n        for(i = grp.length - 1; i >= 0; i--) {\n            if(deleteCount <= 0) break;\n            pti = grp[i];\n\n            // pos has already been constrained to [pmin,pmax]\n            // so look for points close to that to delete\n            if(pti.pos > minPt.pmax - 1) {\n                pti.del = true;\n                deleteCount--;\n            }\n        }\n        for(i = 0; i < grp.length; i++) {\n            if(deleteCount <= 0) break;\n            pti = grp[i];\n\n            // pos has already been constrained to [pmin,pmax]\n            // so look for points close to that to delete\n            if(pti.pos < minPt.pmin + 1) {\n                pti.del = true;\n                deleteCount--;\n\n                // shift the whole group minus into this new space\n                bottomOverlap = pti.size * 2;\n                for(j = grp.length - 1; j >= 0; j--) grp[j].dp -= bottomOverlap;\n            }\n        }\n        // then delete points that go off the bottom\n        for(i = grp.length - 1; i >= 0; i--) {\n            if(deleteCount <= 0) break;\n            pti = grp[i];\n            if(pti.pos + pti.dp + pti.size > minPt.pmax) {\n                pti.del = true;\n                deleteCount--;\n            }\n        }\n    }\n\n    // loop through groups, combining them if they overlap,\n    // until nothing moves\n    while(!donepositioning && nummoves <= hoverData.length) {\n        // to avoid infinite loops, don't move more times\n        // than there are traces\n        nummoves++;\n\n        // assume nothing will move in this iteration,\n        // reverse this if it does\n        donepositioning = true;\n        i = 0;\n        while(i < pointgroups.length - 1) {\n                // the higher (g0) and lower (g1) point group\n            var g0 = pointgroups[i],\n                g1 = pointgroups[i + 1],\n\n                // the lowest point in the higher group (p0)\n                // the highest point in the lower group (p1)\n                p0 = g0[g0.length - 1],\n                p1 = g1[0];\n            topOverlap = p0.pos + p0.dp + p0.size - p1.pos - p1.dp + p1.size;\n\n            // Only group points that lie on the same axes\n            if(topOverlap > 0.01 && (p0.pmin === p1.pmin) && (p0.pmax === p1.pmax)) {\n                // push the new point(s) added to this group out of the way\n                for(j = g1.length - 1; j >= 0; j--) g1[j].dp += topOverlap;\n\n                // add them to the group\n                g0.push.apply(g0, g1);\n                pointgroups.splice(i + 1, 1);\n\n                // adjust for minimum average movement\n                sumdp = 0;\n                for(j = g0.length - 1; j >= 0; j--) sumdp += g0[j].dp;\n                bottomOverlap = sumdp / g0.length;\n                for(j = g0.length - 1; j >= 0; j--) g0[j].dp -= bottomOverlap;\n                donepositioning = false;\n            }\n            else i++;\n        }\n\n        // check if we're going off the plot on either side and fix\n        pointgroups.forEach(constrainGroup);\n    }\n\n    // now put these offsets into hoverData\n    for(i = pointgroups.length - 1; i >= 0; i--) {\n        var grp = pointgroups[i];\n        for(j = grp.length - 1; j >= 0; j--) {\n            var pt = grp[j],\n                hoverPt = hoverData[pt.i];\n            hoverPt.offset = pt.dp;\n            hoverPt.del = pt.del;\n        }\n    }\n}\n\nfunction alignHoverText(hoverLabels, rotateLabels) {\n    // finally set the text positioning relative to the data and draw the\n    // box around it\n    hoverLabels.each(function(d) {\n        var g = d3.select(this);\n        if(d.del) {\n            g.remove();\n            return;\n        }\n        var horzSign = d.anchor === 'end' ? -1 : 1,\n            tx = g.select('text.nums'),\n            alignShift = {start: 1, end: -1, middle: 0}[d.anchor],\n            txx = alignShift * (HOVERARROWSIZE + HOVERTEXTPAD),\n            tx2x = txx + alignShift * (d.txwidth + HOVERTEXTPAD),\n            offsetX = 0,\n            offsetY = d.offset;\n        if(d.anchor === 'middle') {\n            txx -= d.tx2width / 2;\n            tx2x -= d.tx2width / 2;\n        }\n        if(rotateLabels) {\n            offsetY *= -YSHIFTY;\n            offsetX = d.offset * YSHIFTX;\n        }\n\n        g.select('path').attr('d', d.anchor === 'middle' ?\n            // middle aligned: rect centered on data\n            ('M-' + (d.bx / 2) + ',-' + (d.by / 2) + 'h' + d.bx + 'v' + d.by + 'h-' + d.bx + 'Z') :\n            // left or right aligned: side rect with arrow to data\n            ('M0,0L' + (horzSign * HOVERARROWSIZE + offsetX) + ',' + (HOVERARROWSIZE + offsetY) +\n                'v' + (d.by / 2 - HOVERARROWSIZE) +\n                'h' + (horzSign * d.bx) +\n                'v-' + d.by +\n                'H' + (horzSign * HOVERARROWSIZE + offsetX) +\n                'V' + (offsetY - HOVERARROWSIZE) +\n                'Z'));\n\n        tx.call(svgTextUtils.positionText,\n            txx + offsetX, offsetY + d.ty0 - d.by / 2 + HOVERTEXTPAD);\n\n        if(d.tx2width) {\n            g.select('text.name')\n                .call(svgTextUtils.positionText,\n                    tx2x + alignShift * HOVERTEXTPAD + offsetX,\n                    offsetY + d.ty0 - d.by / 2 + HOVERTEXTPAD);\n            g.select('rect')\n                .call(Drawing.setRect,\n                    tx2x + (alignShift - 1) * d.tx2width / 2 + offsetX,\n                    offsetY - d.by / 2 - 1,\n                    d.tx2width, d.by + 2);\n        }\n    });\n}\n\nfunction cleanPoint(d, hovermode) {\n    var index = d.index;\n    var trace = d.trace || {};\n    var cd0 = d.cd[0];\n    var cd = d.cd[index] || {};\n\n    var getVal = Array.isArray(index) ?\n        function(calcKey, traceKey) {\n            return Lib.castOption(cd0, index, calcKey) ||\n                Lib.extractOption({}, trace, '', traceKey);\n        } :\n        function(calcKey, traceKey) {\n            return Lib.extractOption(cd, trace, calcKey, traceKey);\n        };\n\n    function fill(key, calcKey, traceKey) {\n        var val = getVal(calcKey, traceKey);\n        if(val) d[key] = val;\n    }\n\n    fill('hoverinfo', 'hi', 'hoverinfo');\n    fill('color', 'hbg', 'hoverlabel.bgcolor');\n    fill('borderColor', 'hbc', 'hoverlabel.bordercolor');\n    fill('fontFamily', 'htf', 'hoverlabel.font.family');\n    fill('fontSize', 'hts', 'hoverlabel.font.size');\n    fill('fontColor', 'htc', 'hoverlabel.font.color');\n    fill('nameLength', 'hnl', 'hoverlabel.namelength');\n\n    d.posref = hovermode === 'y' ? (d.x0 + d.x1) / 2 : (d.y0 + d.y1) / 2;\n\n    // then constrain all the positions to be on the plot\n    d.x0 = Lib.constrain(d.x0, 0, d.xa._length);\n    d.x1 = Lib.constrain(d.x1, 0, d.xa._length);\n    d.y0 = Lib.constrain(d.y0, 0, d.ya._length);\n    d.y1 = Lib.constrain(d.y1, 0, d.ya._length);\n\n    // and convert the x and y label values into formatted text\n    if(d.xLabelVal !== undefined) {\n        d.xLabel = ('xLabel' in d) ? d.xLabel : Axes.hoverLabelText(d.xa, d.xLabelVal);\n        d.xVal = d.xa.c2d(d.xLabelVal);\n    }\n    if(d.yLabelVal !== undefined) {\n        d.yLabel = ('yLabel' in d) ? d.yLabel : Axes.hoverLabelText(d.ya, d.yLabelVal);\n        d.yVal = d.ya.c2d(d.yLabelVal);\n    }\n\n    // Traces like heatmaps generate the zLabel in their hoverPoints function\n    if(d.zLabelVal !== undefined && d.zLabel === undefined) {\n        d.zLabel = String(d.zLabelVal);\n    }\n\n    // for box means and error bars, add the range to the label\n    if(!isNaN(d.xerr) && !(d.xa.type === 'log' && d.xerr <= 0)) {\n        var xeText = Axes.tickText(d.xa, d.xa.c2l(d.xerr), 'hover').text;\n        if(d.xerrneg !== undefined) {\n            d.xLabel += ' +' + xeText + ' / -' +\n                Axes.tickText(d.xa, d.xa.c2l(d.xerrneg), 'hover').text;\n        }\n        else d.xLabel += ' ± ' + xeText;\n\n        // small distance penalty for error bars, so that if there are\n        // traces with errors and some without, the error bar label will\n        // hoist up to the point\n        if(hovermode === 'x') d.distance += 1;\n    }\n    if(!isNaN(d.yerr) && !(d.ya.type === 'log' && d.yerr <= 0)) {\n        var yeText = Axes.tickText(d.ya, d.ya.c2l(d.yerr), 'hover').text;\n        if(d.yerrneg !== undefined) {\n            d.yLabel += ' +' + yeText + ' / -' +\n                Axes.tickText(d.ya, d.ya.c2l(d.yerrneg), 'hover').text;\n        }\n        else d.yLabel += ' ± ' + yeText;\n\n        if(hovermode === 'y') d.distance += 1;\n    }\n\n    var infomode = d.hoverinfo || d.trace.hoverinfo;\n\n    if(infomode !== 'all') {\n        infomode = Array.isArray(infomode) ? infomode : infomode.split('+');\n        if(infomode.indexOf('x') === -1) d.xLabel = undefined;\n        if(infomode.indexOf('y') === -1) d.yLabel = undefined;\n        if(infomode.indexOf('z') === -1) d.zLabel = undefined;\n        if(infomode.indexOf('text') === -1) d.text = undefined;\n        if(infomode.indexOf('name') === -1) d.name = undefined;\n    }\n\n    return d;\n}\n\nfunction createSpikelines(closestPoints, opts) {\n    var container = opts.container;\n    var fullLayout = opts.fullLayout;\n    var evt = opts.event;\n    var xa,\n        ya;\n\n    var showY = !!closestPoints.hLinePoint;\n    var showX = !!closestPoints.vLinePoint;\n\n    // Remove old spikeline items\n    container.selectAll('.spikeline').remove();\n\n    if(!(showX || showY)) return;\n\n    var contrastColor = Color.combine(fullLayout.plot_bgcolor, fullLayout.paper_bgcolor);\n\n    // Horizontal line (to y-axis)\n    if(showY) {\n        var hLinePoint = closestPoints.hLinePoint,\n            hLinePointX,\n            hLinePointY;\n        xa = hLinePoint && hLinePoint.xa;\n        ya = hLinePoint && hLinePoint.ya;\n        var ySnap = ya.spikesnap;\n\n        if(ySnap === 'cursor') {\n            hLinePointX = evt.pointerX;\n            hLinePointY = evt.pointerY;\n        } else {\n            hLinePointX = xa._offset + (hLinePoint.x0 + hLinePoint.x1) / 2;\n            hLinePointY = ya._offset + (hLinePoint.y0 + hLinePoint.y1) / 2;\n        }\n        var dfltHLineColor = tinycolor.readability(hLinePoint.color, contrastColor) < 1.5 ?\n            Color.contrast(contrastColor) : hLinePoint.color;\n        var yMode = ya.spikemode,\n            yThickness = ya.spikethickness,\n            yColor = ya.spikecolor || dfltHLineColor,\n            yBB = ya._boundingBox,\n            xEdge = ((yBB.left + yBB.right) / 2) < hLinePointX ? yBB.right : yBB.left,\n            xBase,\n            xEndSpike;\n\n        if(yMode.indexOf('toaxis') !== -1 || yMode.indexOf('across') !== -1) {\n            if(yMode.indexOf('toaxis') !== -1) {\n                xBase = xEdge;\n                xEndSpike = hLinePointX;\n            }\n            if(yMode.indexOf('across') !== -1) {\n                xBase = ya._counterSpan[0];\n                xEndSpike = ya._counterSpan[1];\n            }\n\n            // Foreground horizontal line (to y-axis)\n            container.insert('line', ':first-child')\n                .attr({\n                    'x1': xBase,\n                    'x2': xEndSpike,\n                    'y1': hLinePointY,\n                    'y2': hLinePointY,\n                    'stroke-width': yThickness,\n                    'stroke': yColor,\n                    'stroke-dasharray': Drawing.dashStyle(ya.spikedash, yThickness)\n                })\n                .classed('spikeline', true)\n                .classed('crisp', true);\n\n            // Background horizontal Line (to y-axis)\n            container.insert('line', ':first-child')\n                .attr({\n                    'x1': xBase,\n                    'x2': xEndSpike,\n                    'y1': hLinePointY,\n                    'y2': hLinePointY,\n                    'stroke-width': yThickness + 2,\n                    'stroke': contrastColor\n                })\n                .classed('spikeline', true)\n                .classed('crisp', true);\n        }\n        // Y axis marker\n        if(yMode.indexOf('marker') !== -1) {\n            container.insert('circle', ':first-child')\n                .attr({\n                    'cx': xEdge + (ya.side !== 'right' ? yThickness : -yThickness),\n                    'cy': hLinePointY,\n                    'r': yThickness,\n                    'fill': yColor\n                })\n                .classed('spikeline', true);\n        }\n    }\n\n    if(showX) {\n        var vLinePoint = closestPoints.vLinePoint,\n            vLinePointX,\n            vLinePointY;\n\n        xa = vLinePoint && vLinePoint.xa;\n        ya = vLinePoint && vLinePoint.ya;\n        var xSnap = xa.spikesnap;\n\n        if(xSnap === 'cursor') {\n            vLinePointX = evt.pointerX;\n            vLinePointY = evt.pointerY;\n        } else {\n            vLinePointX = xa._offset + (vLinePoint.x0 + vLinePoint.x1) / 2;\n            vLinePointY = ya._offset + (vLinePoint.y0 + vLinePoint.y1) / 2;\n        }\n        var dfltVLineColor = tinycolor.readability(vLinePoint.color, contrastColor) < 1.5 ?\n        Color.contrast(contrastColor) : vLinePoint.color;\n        var xMode = xa.spikemode,\n            xThickness = xa.spikethickness,\n            xColor = xa.spikecolor || dfltVLineColor,\n            xBB = xa._boundingBox,\n            yEdge = ((xBB.top + xBB.bottom) / 2) < vLinePointY ? xBB.bottom : xBB.top,\n            yBase,\n            yEndSpike;\n\n        if(xMode.indexOf('toaxis') !== -1 || xMode.indexOf('across') !== -1) {\n            if(xMode.indexOf('toaxis') !== -1) {\n                yBase = yEdge;\n                yEndSpike = vLinePointY;\n            }\n            if(xMode.indexOf('across') !== -1) {\n                yBase = xa._counterSpan[0];\n                yEndSpike = xa._counterSpan[1];\n            }\n\n            // Foreground vertical line (to x-axis)\n            container.insert('line', ':first-child')\n                .attr({\n                    'x1': vLinePointX,\n                    'x2': vLinePointX,\n                    'y1': yBase,\n                    'y2': yEndSpike,\n                    'stroke-width': xThickness,\n                    'stroke': xColor,\n                    'stroke-dasharray': Drawing.dashStyle(xa.spikedash, xThickness)\n                })\n                .classed('spikeline', true)\n                .classed('crisp', true);\n\n            // Background vertical line (to x-axis)\n            container.insert('line', ':first-child')\n                .attr({\n                    'x1': vLinePointX,\n                    'x2': vLinePointX,\n                    'y1': yBase,\n                    'y2': yEndSpike,\n                    'stroke-width': xThickness + 2,\n                    'stroke': contrastColor\n                })\n                .classed('spikeline', true)\n                .classed('crisp', true);\n        }\n\n        // X axis marker\n        if(xMode.indexOf('marker') !== -1) {\n            container.insert('circle', ':first-child')\n                .attr({\n                    'cx': vLinePointX,\n                    'cy': yEdge - (xa.side !== 'top' ? xThickness : -xThickness),\n                    'r': xThickness,\n                    'fill': xColor\n                })\n                .classed('spikeline', true);\n        }\n    }\n}\n\nfunction hoverChanged(gd, evt, oldhoverdata) {\n    // don't emit any events if nothing changed\n    if(!oldhoverdata || oldhoverdata.length !== gd._hoverdata.length) return true;\n\n    for(var i = oldhoverdata.length - 1; i >= 0; i--) {\n        var oldPt = oldhoverdata[i],\n            newPt = gd._hoverdata[i];\n        if(oldPt.curveNumber !== newPt.curveNumber ||\n                String(oldPt.pointNumber) !== String(newPt.pointNumber)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction spikesChanged(gd, oldspikepoints) {\n    // don't relayout the plot because of new spikelines if spikelines points didn't change\n    if(!oldspikepoints) return true;\n    if(oldspikepoints.vLinePoint !== gd._spikepoints.vLinePoint ||\n        oldspikepoints.hLinePoint !== gd._spikepoints.hLinePoint\n    ) return true;\n    return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/fx/hover.js\n// module id = 69\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar Lib = require('../../lib');\nvar Plots = require('../plots');\nvar getModuleCalcData = require('../get_data').getModuleCalcData;\n\nvar axisIds = require('./axis_ids');\nvar constants = require('./constants');\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\n\nexports.name = 'cartesian';\n\nexports.attr = ['xaxis', 'yaxis'];\n\nexports.idRoot = ['x', 'y'];\n\nexports.idRegex = constants.idRegex;\n\nexports.attrRegex = constants.attrRegex;\n\nexports.attributes = require('./attributes');\n\nexports.layoutAttributes = require('./layout_attributes');\n\nexports.supplyLayoutDefaults = require('./layout_defaults');\n\nexports.transitionAxes = require('./transition_axes');\n\nexports.finalizeSubplots = function(layoutIn, layoutOut) {\n    var subplots = layoutOut._subplots;\n    var xList = subplots.xaxis;\n    var yList = subplots.yaxis;\n    var spSVG = subplots.cartesian;\n    var spAll = spSVG.concat(subplots.gl2d || []);\n    var allX = {};\n    var allY = {};\n    var i, xi, yi;\n\n    for(i = 0; i < spAll.length; i++) {\n        var parts = spAll[i].split('y');\n        allX[parts[0]] = 1;\n        allY['y' + parts[1]] = 1;\n    }\n\n    // check for x axes with no subplot, and make one from the anchor of that x axis\n    for(i = 0; i < xList.length; i++) {\n        xi = xList[i];\n        if(!allX[xi]) {\n            yi = (layoutIn[axisIds.id2name(xi)] || {}).anchor;\n            if(!constants.idRegex.y.test(yi)) yi = 'y';\n            spSVG.push(xi + yi);\n            spAll.push(xi + yi);\n\n            if(!allY[yi]) {\n                allY[yi] = 1;\n                Lib.pushUnique(yList, yi);\n            }\n        }\n    }\n\n    // same for y axes with no subplot\n    for(i = 0; i < yList.length; i++) {\n        yi = yList[i];\n        if(!allY[yi]) {\n            xi = (layoutIn[axisIds.id2name(yi)] || {}).anchor;\n            if(!constants.idRegex.x.test(xi)) xi = 'x';\n            spSVG.push(xi + yi);\n            spAll.push(xi + yi);\n\n            if(!allX[xi]) {\n                allX[xi] = 1;\n                Lib.pushUnique(xList, xi);\n            }\n        }\n    }\n\n    // finally, if we've gotten here we're supposed to show cartesian...\n    // so if there are NO subplots at all, make one from the first\n    // x & y axes in the input layout\n    if(!spAll.length) {\n        var keys = Object.keys(layoutIn);\n        xi = '';\n        yi = '';\n        for(i = 0; i < keys.length; i++) {\n            var ki = keys[i];\n            if(constants.attrRegex.test(ki)) {\n                var axLetter = ki.charAt(0);\n                if(axLetter === 'x') {\n                    if(!xi || (+ki.substr(5) < +xi.substr(5))) {\n                        xi = ki;\n                    }\n                }\n                else if(!yi || (+ki.substr(5) < +yi.substr(5))) {\n                    yi = ki;\n                }\n            }\n        }\n        xi = xi ? axisIds.name2id(xi) : 'x';\n        yi = yi ? axisIds.name2id(yi) : 'y';\n        xList.push(xi);\n        yList.push(yi);\n        spSVG.push(xi + yi);\n    }\n};\n\nexports.plot = function(gd, traces, transitionOpts, makeOnCompleteCallback) {\n    var fullLayout = gd._fullLayout;\n    var subplots = fullLayout._subplots.cartesian;\n    var calcdata = gd.calcdata;\n    var i;\n\n    // If traces is not provided, then it's a complete replot and missing\n    // traces are removed\n    if(!Array.isArray(traces)) {\n        traces = [];\n\n        for(i = 0; i < calcdata.length; i++) {\n            traces.push(i);\n        }\n    }\n\n    // clear gl frame, if any, since we preserve drawing buffer\n    if(fullLayout._glcanvas && fullLayout._glcanvas.size()) {\n        fullLayout._glcanvas.each(function(d) {\n            if(d.regl) {\n                d.regl.clear({\n                    color: true\n                });\n            }\n        });\n    }\n\n    for(i = 0; i < subplots.length; i++) {\n        var subplot = subplots[i],\n            subplotInfo = fullLayout._plots[subplot];\n\n        // Get all calcdata for this subplot:\n        var cdSubplot = [];\n        var pcd;\n\n        for(var j = 0; j < calcdata.length; j++) {\n            var cd = calcdata[j],\n                trace = cd[0].trace;\n\n            // Skip trace if whitelist provided and it's not whitelisted:\n            // if (Array.isArray(traces) && traces.indexOf(i) === -1) continue;\n            if(trace.xaxis + trace.yaxis === subplot) {\n                // XXX: Should trace carpet dependencies. Only replot all carpet plots if the carpet\n                // axis has actually changed:\n                //\n                // If this trace is specifically requested, add it to the list:\n                if(traces.indexOf(trace.index) !== -1 || trace.carpet) {\n                    // Okay, so example: traces 0, 1, and 2 have fill = tonext. You animate\n                    // traces 0 and 2. Trace 1 also needs to be updated, otherwise its fill\n                    // is outdated. So this retroactively adds the previous trace if the\n                    // traces are interdependent.\n                    if(\n                        pcd &&\n                        pcd[0].trace.xaxis + pcd[0].trace.yaxis === subplot &&\n                        ['tonextx', 'tonexty', 'tonext'].indexOf(trace.fill) !== -1 &&\n                        cdSubplot.indexOf(pcd) === -1\n                    ) {\n                        cdSubplot.push(pcd);\n                    }\n\n                    cdSubplot.push(cd);\n                }\n\n                // Track the previous trace on this subplot for the retroactive-add step\n                // above:\n                pcd = cd;\n            }\n        }\n\n        plotOne(gd, subplotInfo, cdSubplot, transitionOpts, makeOnCompleteCallback);\n    }\n};\n\nfunction plotOne(gd, plotinfo, cdSubplot, transitionOpts, makeOnCompleteCallback) {\n    var fullLayout = gd._fullLayout,\n        modules = fullLayout._modules;\n\n    // remove old traces, then redraw everything\n    //\n    // TODO: scatterlayer is manually excluded from this since it knows how\n    // to update instead of fully removing and redrawing every time. The\n    // remaining plot traces should also be able to do this. Once implemented,\n    // we won't need this - which should sometimes be a big speedup.\n    if(plotinfo.plot) {\n        plotinfo.plot.selectAll('g:not(.scatterlayer)').selectAll('g.trace').remove();\n    }\n\n    // plot all traces for each module at once\n    for(var j = 0; j < modules.length; j++) {\n        var _module = modules[j];\n\n        // skip over non-cartesian trace modules\n        if(_module.basePlotModule.name !== 'cartesian') continue;\n\n        // plot all traces of this type on this subplot at once\n        var cdModule = getModuleCalcData(cdSubplot, _module);\n\n        if(_module.plot) _module.plot(gd, plotinfo, cdModule, transitionOpts, makeOnCompleteCallback);\n    }\n}\n\nexports.clean = function(newFullData, newFullLayout, oldFullData, oldFullLayout) {\n    var oldModules = oldFullLayout._modules || [],\n        newModules = newFullLayout._modules || [];\n\n    var hadScatter, hasScatter, hadGl, hasGl, i, oldPlots, ids, subplotInfo;\n\n\n    for(i = 0; i < oldModules.length; i++) {\n        if(oldModules[i].name === 'scatter') {\n            hadScatter = true;\n        }\n        break;\n    }\n\n    for(i = 0; i < newModules.length; i++) {\n        if(newModules[i].name === 'scatter') {\n            hasScatter = true;\n            break;\n        }\n    }\n\n    for(i = 0; i < oldModules.length; i++) {\n        if(oldModules[i].name === 'scattergl') {\n            hadGl = true;\n        }\n        break;\n    }\n\n    for(i = 0; i < newModules.length; i++) {\n        if(newModules[i].name === 'scattergl') {\n            hasGl = true;\n            break;\n        }\n    }\n\n    if(hadScatter && !hasScatter) {\n        oldPlots = oldFullLayout._plots;\n        ids = Object.keys(oldPlots || {});\n\n        for(i = 0; i < ids.length; i++) {\n            subplotInfo = oldPlots[ids[i]];\n\n            if(subplotInfo.plot) {\n                subplotInfo.plot.select('g.scatterlayer')\n                    .selectAll('g.trace')\n                    .remove();\n            }\n        }\n\n        oldFullLayout._infolayer.selectAll('g.rangeslider-container')\n            .select('g.scatterlayer')\n            .selectAll('g.trace')\n            .remove();\n    }\n\n    if(hadGl && !hasGl) {\n        oldPlots = oldFullLayout._plots;\n        ids = Object.keys(oldPlots || {});\n\n        for(i = 0; i < ids.length; i++) {\n            subplotInfo = oldPlots[ids[i]];\n\n            if(subplotInfo._scene) {\n                subplotInfo._scene.destroy();\n            }\n        }\n    }\n\n    var oldSubplotList = oldFullLayout._subplots || {};\n    var newSubplotList = newFullLayout._subplots || {xaxis: [], yaxis: []};\n\n    // delete any titles we don't need anymore\n    // check if axis list has changed, and if so clear old titles\n    if(oldSubplotList.xaxis && oldSubplotList.yaxis) {\n        var oldAxIDs = oldSubplotList.xaxis.concat(oldSubplotList.yaxis);\n        var newAxIDs = newSubplotList.xaxis.concat(newSubplotList.yaxis);\n\n        for(i = 0; i < oldAxIDs.length; i++) {\n            if(newAxIDs.indexOf(oldAxIDs[i]) === -1) {\n                oldFullLayout._infolayer.selectAll('.g-' + oldAxIDs[i] + 'title').remove();\n            }\n        }\n    }\n\n    // if we've gotten rid of all cartesian traces, remove all the subplot svg items\n    var hadCartesian = (oldFullLayout._has && oldFullLayout._has('cartesian'));\n    var hasCartesian = (newFullLayout._has && newFullLayout._has('cartesian'));\n\n    if(hadCartesian && !hasCartesian) {\n        purgeSubplotLayers(oldFullLayout._cartesianlayer.selectAll('.subplot'), oldFullLayout);\n        oldFullLayout._defs.selectAll('.axesclip').remove();\n    }\n};\n\nexports.drawFramework = function(gd) {\n    var fullLayout = gd._fullLayout,\n        subplotData = makeSubplotData(gd);\n\n    var subplotLayers = fullLayout._cartesianlayer.selectAll('.subplot')\n        .data(subplotData, Lib.identity);\n\n    subplotLayers.enter().append('g')\n        .attr('class', function(name) { return 'subplot ' + name; });\n\n    subplotLayers.order();\n\n    subplotLayers.exit()\n        .call(purgeSubplotLayers, fullLayout);\n\n    subplotLayers.each(function(name) {\n        var plotinfo = fullLayout._plots[name];\n\n        // keep ref to plot group\n        plotinfo.plotgroup = d3.select(this);\n\n        // initialize list of overlay subplots\n        plotinfo.overlays = [];\n\n        makeSubplotLayer(plotinfo);\n        // fill in list of overlay subplots\n        if(plotinfo.mainplot) {\n            var mainplot = fullLayout._plots[plotinfo.mainplot];\n            mainplot.overlays.push(plotinfo);\n        }\n\n        // make separate drag layers for each subplot,\n        // but append them to paper rather than the plot groups,\n        // so they end up on top of the rest\n        plotinfo.draglayer = joinLayer(fullLayout._draggers, 'g', name);\n    });\n};\n\nexports.rangePlot = function(gd, plotinfo, cdSubplot) {\n    makeSubplotLayer(plotinfo);\n    plotOne(gd, plotinfo, cdSubplot);\n    Plots.style(gd);\n};\n\nfunction makeSubplotData(gd) {\n    var fullLayout = gd._fullLayout,\n        subplots = Object.keys(fullLayout._plots);\n\n    var subplotData = [],\n        overlays = [];\n\n    for(var i = 0; i < subplots.length; i++) {\n        var subplot = subplots[i],\n            plotinfo = fullLayout._plots[subplot];\n\n        var xa = plotinfo.xaxis;\n        var ya = plotinfo.yaxis;\n        var xa2 = xa._mainAxis;\n        var ya2 = ya._mainAxis;\n\n        var mainplot = xa2._id + ya2._id;\n        if(mainplot !== subplot && subplots.indexOf(mainplot) !== -1) {\n            plotinfo.mainplot = mainplot;\n            plotinfo.mainplotinfo = fullLayout._plots[mainplot];\n            overlays.push(subplot);\n        }\n        else {\n            subplotData.push(subplot);\n        }\n    }\n\n    // main subplots before overlays\n    subplotData = subplotData.concat(overlays);\n\n    return subplotData;\n}\n\nfunction makeSubplotLayer(plotinfo) {\n    var plotgroup = plotinfo.plotgroup;\n    var id = plotinfo.id;\n    var xLayer = constants.layerValue2layerClass[plotinfo.xaxis.layer];\n    var yLayer = constants.layerValue2layerClass[plotinfo.yaxis.layer];\n\n    if(!plotinfo.mainplot) {\n        var backLayer = joinLayer(plotgroup, 'g', 'layer-subplot');\n        plotinfo.shapelayer = joinLayer(backLayer, 'g', 'shapelayer');\n        plotinfo.imagelayer = joinLayer(backLayer, 'g', 'imagelayer');\n\n        plotinfo.gridlayer = joinLayer(plotgroup, 'g', 'gridlayer');\n\n        plotinfo.zerolinelayer = joinLayer(plotgroup, 'g', 'zerolinelayer');\n\n        joinLayer(plotgroup, 'path', 'xlines-below');\n        joinLayer(plotgroup, 'path', 'ylines-below');\n        plotinfo.overlinesBelow = joinLayer(plotgroup, 'g', 'overlines-below');\n\n        joinLayer(plotgroup, 'g', 'xaxislayer-below');\n        joinLayer(plotgroup, 'g', 'yaxislayer-below');\n        plotinfo.overaxesBelow = joinLayer(plotgroup, 'g', 'overaxes-below');\n\n        plotinfo.plot = joinLayer(plotgroup, 'g', 'plot');\n        plotinfo.overplot = joinLayer(plotgroup, 'g', 'overplot');\n\n        joinLayer(plotgroup, 'path', 'xlines-above');\n        joinLayer(plotgroup, 'path', 'ylines-above');\n        plotinfo.overlinesAbove = joinLayer(plotgroup, 'g', 'overlines-above');\n\n        joinLayer(plotgroup, 'g', 'xaxislayer-above');\n        joinLayer(plotgroup, 'g', 'yaxislayer-above');\n        plotinfo.overaxesAbove = joinLayer(plotgroup, 'g', 'overaxes-above');\n\n        // set refs to correct layers as determined by 'axis.layer'\n        plotinfo.xlines = plotgroup.select('.xlines-' + xLayer);\n        plotinfo.ylines = plotgroup.select('.ylines-' + yLayer);\n        plotinfo.xaxislayer = plotgroup.select('.xaxislayer-' + xLayer);\n        plotinfo.yaxislayer = plotgroup.select('.yaxislayer-' + yLayer);\n    }\n    else {\n        var mainplotinfo = plotinfo.mainplotinfo;\n        var mainplotgroup = mainplotinfo.plotgroup;\n        var xId = id + '-x';\n        var yId = id + '-y';\n\n        // now make the components of overlaid subplots\n        // overlays don't have backgrounds, and append all\n        // their other components to the corresponding\n        // extra groups of their main plots.\n\n        plotinfo.gridlayer = mainplotinfo.gridlayer;\n        plotinfo.zerolinelayer = mainplotinfo.zerolinelayer;\n\n        joinLayer(mainplotinfo.overlinesBelow, 'path', xId);\n        joinLayer(mainplotinfo.overlinesBelow, 'path', yId);\n        joinLayer(mainplotinfo.overaxesBelow, 'g', xId);\n        joinLayer(mainplotinfo.overaxesBelow, 'g', yId);\n\n        plotinfo.plot = joinLayer(mainplotinfo.overplot, 'g', id);\n\n        joinLayer(mainplotinfo.overlinesAbove, 'path', xId);\n        joinLayer(mainplotinfo.overlinesAbove, 'path', yId);\n        joinLayer(mainplotinfo.overaxesAbove, 'g', xId);\n        joinLayer(mainplotinfo.overaxesAbove, 'g', yId);\n\n        // set refs to correct layers as determined by 'abovetraces'\n        plotinfo.xlines = mainplotgroup.select('.overlines-' + xLayer).select('.' + xId);\n        plotinfo.ylines = mainplotgroup.select('.overlines-' + yLayer).select('.' + yId);\n        plotinfo.xaxislayer = mainplotgroup.select('.overaxes-' + xLayer).select('.' + xId);\n        plotinfo.yaxislayer = mainplotgroup.select('.overaxes-' + yLayer).select('.' + yId);\n    }\n\n    joinLayer(plotinfo.gridlayer, 'g', plotinfo.xaxis._id, plotinfo.xaxis._id);\n    joinLayer(plotinfo.gridlayer, 'g', plotinfo.yaxis._id, plotinfo.yaxis._id);\n    plotinfo.gridlayer.selectAll('g').sort(axisIds.idSort);\n\n    // common attributes for all subplots, overlays or not\n\n    for(var i = 0; i < constants.traceLayerClasses.length; i++) {\n        joinLayer(plotinfo.plot, 'g', constants.traceLayerClasses[i]);\n    }\n\n    plotinfo.xlines\n        .style('fill', 'none')\n        .classed('crisp', true);\n\n    plotinfo.ylines\n        .style('fill', 'none')\n        .classed('crisp', true);\n}\n\nfunction purgeSubplotLayers(layers, fullLayout) {\n    if(!layers) return;\n\n    var overlayIdsToRemove = {};\n\n    layers.each(function(subplotId) {\n        var plotgroup = d3.select(this);\n        var clipId = 'clip' + fullLayout._uid + subplotId + 'plot';\n\n        plotgroup.remove();\n        fullLayout._draggers.selectAll('g.' + subplotId).remove();\n        fullLayout._defs.select('#' + clipId).remove();\n\n        overlayIdsToRemove[subplotId] = true;\n\n        // do not remove individual axis <clipPath>s here\n        // as other subplots may need them\n    });\n\n    // must remove overlaid subplot trace layers 'manually'\n\n    var subplots = fullLayout._plots;\n    var subplotIds = Object.keys(subplots);\n\n    for(var i = 0; i < subplotIds.length; i++) {\n        var subplotInfo = subplots[subplotIds[i]];\n        var overlays = subplotInfo.overlays || [];\n\n        for(var j = 0; j < overlays.length; j++) {\n            var overlayInfo = overlays[j];\n\n            if(overlayIdsToRemove[overlayInfo.id]) {\n                overlayInfo.plot.selectAll('.trace').remove();\n            }\n        }\n    }\n}\n\nfunction joinLayer(parent, nodeType, className, dataVal) {\n    var layer = parent.selectAll('.' + className)\n        .data([dataVal || 0]);\n\n    layer.enter().append(nodeType)\n        .classed(className, true);\n\n    return layer;\n}\n\nexports.toSVG = function(gd) {\n    var imageRoot = gd._fullLayout._glimages;\n    var root = d3.select(gd).selectAll('.svg-container');\n    var canvases = root.filter(function(d, i) {return i === root.size() - 1;})\n        .selectAll('.gl-canvas-context, .gl-canvas-focus');\n\n    function canvasToImage() {\n        var canvas = this;\n        var imageData = canvas.toDataURL('image/png');\n        var image = imageRoot.append('svg:image');\n\n        image.attr({\n            xmlns: xmlnsNamespaces.svg,\n            'xlink:href': imageData,\n            preserveAspectRatio: 'none',\n            x: 0,\n            y: 0,\n            width: canvas.width,\n            height: canvas.height\n        });\n    }\n\n    canvases.each(canvasToImage);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/index.js\n// module id = 70\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../../registry');\n\n\nexports.legendGetsTrace = function legendGetsTrace(trace) {\n    return trace.visible && Registry.traceIs(trace, 'showLegend');\n};\n\nexports.isGrouped = function isGrouped(legendLayout) {\n    return (legendLayout.traceorder || '').indexOf('grouped') !== -1;\n};\n\nexports.isVertical = function isVertical(legendLayout) {\n    return legendLayout.orientation !== 'h';\n};\n\nexports.isReversed = function isReversed(legendLayout) {\n    return (legendLayout.traceorder || '').indexOf('reversed') !== -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/legend/helpers.js\n// module id = 71\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Plotly = require('../../plotly');\nvar Plots = require('../../plots/plots');\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar Color = require('../color');\nvar Drawing = require('../drawing');\nvar Fx = require('../fx');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar setCursor = require('../../lib/setcursor');\nvar dragElement = require('../dragelement');\n\nvar drawArrowHead = require('./draw_arrow_head');\n\n\n// Annotations are stored in gd.layout.annotations, an array of objects\n// index can point to one item in this array,\n//  or non-numeric to simply add a new one\n//  or -1 to modify all existing\n// opt can be the full options object, or one key (to be set to value)\n//  or undefined to simply redraw\n// if opt is blank, val can be 'add' or a full options object to add a new\n//  annotation at that point in the array, or 'remove' to delete this one\n\nmodule.exports = {\n    draw: draw,\n    drawOne: drawOne,\n    drawRaw: drawRaw\n};\n\n/*\n * draw: draw all annotations without any new modifications\n */\nfunction draw(gd) {\n    var fullLayout = gd._fullLayout;\n\n    fullLayout._infolayer.selectAll('.annotation').remove();\n\n    for(var i = 0; i < fullLayout.annotations.length; i++) {\n        if(fullLayout.annotations[i].visible) {\n            drawOne(gd, i);\n        }\n    }\n\n    return Plots.previousPromises(gd);\n}\n\n/*\n * drawOne: draw a single cartesian or paper-ref annotation, potentially with modifications\n *\n * index (int): the annotation to draw\n */\nfunction drawOne(gd, index) {\n    var fullLayout = gd._fullLayout;\n    var options = fullLayout.annotations[index] || {};\n    var xa = Axes.getFromId(gd, options.xref);\n    var ya = Axes.getFromId(gd, options.yref);\n\n    drawRaw(gd, options, index, false, xa, ya);\n}\n\n/**\n * drawRaw: draw a single annotation, potentially with modifications\n *\n * @param {DOM element} gd\n * @param {object} options : this annotation's fullLayout options\n * @param {integer} index : index in 'annotations' container of the annotation to draw\n * @param {string} subplotId : id of the annotation's subplot\n *  - use false for 2d (i.e. cartesian or paper-ref) annotations\n * @param {object | undefined} xa : full x-axis object to compute subplot pos-to-px\n * @param {object | undefined} ya : ... y-axis\n */\nfunction drawRaw(gd, options, index, subplotId, xa, ya) {\n    var fullLayout = gd._fullLayout;\n    var gs = gd._fullLayout._size;\n    var edits = gd._context.edits;\n\n    var className;\n    var annbase;\n\n    if(subplotId) {\n        className = 'annotation-' + subplotId;\n        annbase = subplotId + '.annotations[' + index + ']';\n    } else {\n        className = 'annotation';\n        annbase = 'annotations[' + index + ']';\n    }\n\n    // remove the existing annotation if there is one\n    fullLayout._infolayer\n        .selectAll('.' + className + '[data-index=\"' + index + '\"]')\n        .remove();\n\n    var annClipID = 'clip' + fullLayout._uid + '_ann' + index;\n\n    // this annotation is gone - quit now after deleting it\n    // TODO: use d3 idioms instead of deleting and redrawing every time\n    if(!options._input || options.visible === false) {\n        d3.selectAll('#' + annClipID).remove();\n        return;\n    }\n\n    // calculated pixel positions\n    // x & y each will get text, head, and tail as appropriate\n    var annPosPx = {x: {}, y: {}},\n        textangle = +options.textangle || 0;\n\n    // create the components\n    // made a single group to contain all, so opacity can work right\n    // with border/arrow together this could handle a whole bunch of\n    // cleanup at this point, but works for now\n    var annGroup = fullLayout._infolayer.append('g')\n        .classed(className, true)\n        .attr('data-index', String(index))\n        .style('opacity', options.opacity);\n\n    // another group for text+background so that they can rotate together\n    var annTextGroup = annGroup.append('g')\n        .classed('annotation-text-g', true);\n\n    var editTextPosition = edits[options.showarrow ? 'annotationTail' : 'annotationPosition'];\n    var textEvents = options.captureevents || edits.annotationText || editTextPosition;\n\n    var annTextGroupInner = annTextGroup.append('g')\n        .style('pointer-events', textEvents ? 'all' : null)\n        .call(setCursor, 'default')\n        .on('click', function() {\n            gd._dragging = false;\n\n            var eventData = {\n                index: index,\n                annotation: options._input,\n                fullAnnotation: options,\n                event: d3.event\n            };\n\n            if(subplotId) {\n                eventData.subplotId = subplotId;\n            }\n\n            gd.emit('plotly_clickannotation', eventData);\n        });\n\n    if(options.hovertext) {\n        annTextGroupInner\n        .on('mouseover', function() {\n            var hoverOptions = options.hoverlabel;\n            var hoverFont = hoverOptions.font;\n            var bBox = this.getBoundingClientRect();\n            var bBoxRef = gd.getBoundingClientRect();\n\n            Fx.loneHover({\n                x0: bBox.left - bBoxRef.left,\n                x1: bBox.right - bBoxRef.left,\n                y: (bBox.top + bBox.bottom) / 2 - bBoxRef.top,\n                text: options.hovertext,\n                color: hoverOptions.bgcolor,\n                borderColor: hoverOptions.bordercolor,\n                fontFamily: hoverFont.family,\n                fontSize: hoverFont.size,\n                fontColor: hoverFont.color\n            }, {\n                container: fullLayout._hoverlayer.node(),\n                outerContainer: fullLayout._paper.node(),\n                gd: gd\n            });\n        })\n        .on('mouseout', function() {\n            Fx.loneUnhover(fullLayout._hoverlayer.node());\n        });\n    }\n\n    var borderwidth = options.borderwidth,\n        borderpad = options.borderpad,\n        borderfull = borderwidth + borderpad;\n\n    var annTextBG = annTextGroupInner.append('rect')\n        .attr('class', 'bg')\n        .style('stroke-width', borderwidth + 'px')\n        .call(Color.stroke, options.bordercolor)\n        .call(Color.fill, options.bgcolor);\n\n    var isSizeConstrained = options.width || options.height;\n\n    var annTextClip = fullLayout._topclips\n        .selectAll('#' + annClipID)\n        .data(isSizeConstrained ? [0] : []);\n\n    annTextClip.enter().append('clipPath')\n        .classed('annclip', true)\n        .attr('id', annClipID)\n      .append('rect');\n    annTextClip.exit().remove();\n\n    var font = options.font;\n\n    var annText = annTextGroupInner.append('text')\n        .classed('annotation-text', true)\n        .text(options.text);\n\n    function textLayout(s) {\n        s.call(Drawing.font, font)\n        .attr({\n            'text-anchor': {\n                left: 'start',\n                right: 'end'\n            }[options.align] || 'middle'\n        });\n\n        svgTextUtils.convertToTspans(s, gd, drawGraphicalElements);\n        return s;\n    }\n\n    function drawGraphicalElements() {\n        // if the text has *only* a link, make the whole box into a link\n        var anchor3 = annText.selectAll('a');\n        if(anchor3.size() === 1 && anchor3.text() === annText.text()) {\n            var wholeLink = annTextGroupInner.insert('a', ':first-child').attr({\n                'xlink:xlink:href': anchor3.attr('xlink:href'),\n                'xlink:xlink:show': anchor3.attr('xlink:show')\n            })\n            .style({cursor: 'pointer'});\n\n            wholeLink.node().appendChild(annTextBG.node());\n        }\n\n        var mathjaxGroup = annTextGroupInner.select('.annotation-text-math-group');\n        var hasMathjax = !mathjaxGroup.empty();\n        var anntextBB = Drawing.bBox(\n                (hasMathjax ? mathjaxGroup : annText).node());\n        var textWidth = anntextBB.width;\n        var textHeight = anntextBB.height;\n        var annWidth = options.width || textWidth;\n        var annHeight = options.height || textHeight;\n        var outerWidth = Math.round(annWidth + 2 * borderfull);\n        var outerHeight = Math.round(annHeight + 2 * borderfull);\n\n\n        // save size in the annotation object for use by autoscale\n        options._w = annWidth;\n        options._h = annHeight;\n\n        function shiftFraction(v, anchor) {\n            if(anchor === 'auto') {\n                if(v < 1 / 3) anchor = 'left';\n                else if(v > 2 / 3) anchor = 'right';\n                else anchor = 'center';\n            }\n            return {\n                center: 0,\n                middle: 0,\n                left: 0.5,\n                bottom: -0.5,\n                right: -0.5,\n                top: 0.5\n            }[anchor];\n        }\n\n        var annotationIsOffscreen = false;\n        var letters = ['x', 'y'];\n\n        for(var i = 0; i < letters.length; i++) {\n            var axLetter = letters[i],\n                axRef = options[axLetter + 'ref'] || axLetter,\n                tailRef = options['a' + axLetter + 'ref'],\n                ax = {x: xa, y: ya}[axLetter],\n                dimAngle = (textangle + (axLetter === 'x' ? 0 : -90)) * Math.PI / 180,\n                // note that these two can be either positive or negative\n                annSizeFromWidth = outerWidth * Math.cos(dimAngle),\n                annSizeFromHeight = outerHeight * Math.sin(dimAngle),\n                // but this one is the positive total size\n                annSize = Math.abs(annSizeFromWidth) + Math.abs(annSizeFromHeight),\n                anchor = options[axLetter + 'anchor'],\n                overallShift = options[axLetter + 'shift'] * (axLetter === 'x' ? 1 : -1),\n                posPx = annPosPx[axLetter],\n                basePx,\n                textPadShift,\n                alignPosition,\n                autoAlignFraction,\n                textShift;\n\n            /*\n             * calculate the *primary* pixel position\n             * which is the arrowhead if there is one,\n             * otherwise the text anchor point\n             */\n            if(ax) {\n                /*\n                 * hide the annotation if it's pointing outside the visible plot\n                 * as long as the axis isn't autoranged - then we need to draw it\n                 * anyway to get its bounding box. When we're dragging, an axis can\n                 * still look autoranged even though it won't be when the drag finishes.\n                 */\n                var posFraction = ax.r2fraction(options[axLetter]);\n                if((gd._dragging || !ax.autorange) && (posFraction < 0 || posFraction > 1)) {\n                    if(tailRef === axRef) {\n                        posFraction = ax.r2fraction(options['a' + axLetter]);\n                        if(posFraction < 0 || posFraction > 1) {\n                            annotationIsOffscreen = true;\n                        }\n                    }\n                    else {\n                        annotationIsOffscreen = true;\n                    }\n\n                    if(annotationIsOffscreen) continue;\n                }\n                basePx = ax._offset + ax.r2p(options[axLetter]);\n                autoAlignFraction = 0.5;\n            }\n            else {\n                if(axLetter === 'x') {\n                    alignPosition = options[axLetter];\n                    basePx = gs.l + gs.w * alignPosition;\n                }\n                else {\n                    alignPosition = 1 - options[axLetter];\n                    basePx = gs.t + gs.h * alignPosition;\n                }\n                autoAlignFraction = options.showarrow ? 0.5 : alignPosition;\n            }\n\n            // now translate this into pixel positions of head, tail, and text\n            // as well as paddings for autorange\n            if(options.showarrow) {\n                posPx.head = basePx;\n\n                var arrowLength = options['a' + axLetter];\n\n                // with an arrow, the text rotates around the anchor point\n                textShift = annSizeFromWidth * shiftFraction(0.5, options.xanchor) -\n                    annSizeFromHeight * shiftFraction(0.5, options.yanchor);\n\n                if(tailRef === axRef) {\n                    posPx.tail = ax._offset + ax.r2p(arrowLength);\n                    // tail is data-referenced: autorange pads the text in px from the tail\n                    textPadShift = textShift;\n                }\n                else {\n                    posPx.tail = basePx + arrowLength;\n                    // tail is specified in px from head, so autorange also pads vs head\n                    textPadShift = textShift + arrowLength;\n                }\n\n                posPx.text = posPx.tail + textShift;\n\n                // constrain pixel/paper referenced so the draggers are at least\n                // partially visible\n                var maxPx = fullLayout[(axLetter === 'x') ? 'width' : 'height'];\n                if(axRef === 'paper') {\n                    posPx.head = Lib.constrain(posPx.head, 1, maxPx - 1);\n                }\n                if(tailRef === 'pixel') {\n                    var shiftPlus = -Math.max(posPx.tail - 3, posPx.text),\n                        shiftMinus = Math.min(posPx.tail + 3, posPx.text) - maxPx;\n                    if(shiftPlus > 0) {\n                        posPx.tail += shiftPlus;\n                        posPx.text += shiftPlus;\n                    }\n                    else if(shiftMinus > 0) {\n                        posPx.tail -= shiftMinus;\n                        posPx.text -= shiftMinus;\n                    }\n                }\n\n                posPx.tail += overallShift;\n                posPx.head += overallShift;\n            }\n            else {\n                // with no arrow, the text rotates and *then* we put the anchor\n                // relative to the new bounding box\n                textShift = annSize * shiftFraction(autoAlignFraction, anchor);\n                textPadShift = textShift;\n                posPx.text = basePx + textShift;\n            }\n\n            posPx.text += overallShift;\n            textShift += overallShift;\n            textPadShift += overallShift;\n\n            // padplus/minus are used by autorange\n            options['_' + axLetter + 'padplus'] = (annSize / 2) + textPadShift;\n            options['_' + axLetter + 'padminus'] = (annSize / 2) - textPadShift;\n\n            // size/shift are used during dragging\n            options['_' + axLetter + 'size'] = annSize;\n            options['_' + axLetter + 'shift'] = textShift;\n        }\n\n        if(annotationIsOffscreen) {\n            annTextGroupInner.remove();\n            return;\n        }\n\n        var xShift = 0;\n        var yShift = 0;\n\n        if(options.align !== 'left') {\n            xShift = (annWidth - textWidth) * (options.align === 'center' ? 0.5 : 1);\n        }\n        if(options.valign !== 'top') {\n            yShift = (annHeight - textHeight) * (options.valign === 'middle' ? 0.5 : 1);\n        }\n\n        if(hasMathjax) {\n            mathjaxGroup.select('svg').attr({\n                x: borderfull + xShift - 1,\n                y: borderfull + yShift\n            })\n            .call(Drawing.setClipUrl, isSizeConstrained ? annClipID : null);\n        }\n        else {\n            var texty = borderfull + yShift - anntextBB.top;\n            var textx = borderfull + xShift - anntextBB.left;\n\n            annText.call(svgTextUtils.positionText, textx, texty)\n                .call(Drawing.setClipUrl, isSizeConstrained ? annClipID : null);\n        }\n\n        annTextClip.select('rect').call(Drawing.setRect, borderfull, borderfull,\n            annWidth, annHeight);\n\n        annTextBG.call(Drawing.setRect, borderwidth / 2, borderwidth / 2,\n            outerWidth - borderwidth, outerHeight - borderwidth);\n\n        annTextGroupInner.call(Drawing.setTranslate,\n            Math.round(annPosPx.x.text - outerWidth / 2),\n            Math.round(annPosPx.y.text - outerHeight / 2));\n\n        /*\n         * rotate text and background\n         * we already calculated the text center position *as rotated*\n         * because we needed that for autoranging anyway, so now whether\n         * we have an arrow or not, we rotate about the text center.\n         */\n        annTextGroup.attr({transform: 'rotate(' + textangle + ',' +\n                            annPosPx.x.text + ',' + annPosPx.y.text + ')'});\n\n        /*\n         * add the arrow\n         * uses options[arrowwidth,arrowcolor,arrowhead] for styling\n         * dx and dy are normally zero, but when you are dragging the textbox\n         * while the head stays put, dx and dy are the pixel offsets\n         */\n        var drawArrow = function(dx, dy) {\n            annGroup\n                .selectAll('.annotation-arrow-g')\n                .remove();\n\n            var headX = annPosPx.x.head,\n                headY = annPosPx.y.head,\n                tailX = annPosPx.x.tail + dx,\n                tailY = annPosPx.y.tail + dy,\n                textX = annPosPx.x.text + dx,\n                textY = annPosPx.y.text + dy,\n\n                // find the edge of the text box, where we'll start the arrow:\n                // create transform matrix to rotate the text box corners\n                transform = Lib.rotationXYMatrix(textangle, textX, textY),\n                applyTransform = Lib.apply2DTransform(transform),\n                applyTransform2 = Lib.apply2DTransform2(transform),\n\n                // calculate and transform bounding box\n                width = +annTextBG.attr('width'),\n                height = +annTextBG.attr('height'),\n                xLeft = textX - 0.5 * width,\n                xRight = xLeft + width,\n                yTop = textY - 0.5 * height,\n                yBottom = yTop + height,\n                edges = [\n                    [xLeft, yTop, xLeft, yBottom],\n                    [xLeft, yBottom, xRight, yBottom],\n                    [xRight, yBottom, xRight, yTop],\n                    [xRight, yTop, xLeft, yTop]\n                ].map(applyTransform2);\n\n            // Remove the line if it ends inside the box.  Use ray\n            // casting for rotated boxes: see which edges intersect a\n            // line from the arrowhead to far away and reduce with xor\n            // to get the parity of the number of intersections.\n            if(edges.reduce(function(a, x) {\n                return a ^\n                    !!Lib.segmentsIntersect(headX, headY, headX + 1e6, headY + 1e6,\n                            x[0], x[1], x[2], x[3]);\n            }, false)) {\n                // no line or arrow - so quit drawArrow now\n                return;\n            }\n\n            edges.forEach(function(x) {\n                var p = Lib.segmentsIntersect(tailX, tailY, headX, headY,\n                            x[0], x[1], x[2], x[3]);\n                if(p) {\n                    tailX = p.x;\n                    tailY = p.y;\n                }\n            });\n\n            var strokewidth = options.arrowwidth,\n                arrowColor = options.arrowcolor,\n                arrowSide = options.arrowside;\n\n            var arrowGroup = annGroup.append('g')\n                .style({opacity: Color.opacity(arrowColor)})\n                .classed('annotation-arrow-g', true);\n\n            var arrow = arrowGroup.append('path')\n                .attr('d', 'M' + tailX + ',' + tailY + 'L' + headX + ',' + headY)\n                .style('stroke-width', strokewidth + 'px')\n                .call(Color.stroke, Color.rgb(arrowColor));\n\n            drawArrowHead(arrow, arrowSide, options);\n\n            // the arrow dragger is a small square right at the head, then a line to the tail,\n            // all expanded by a stroke width of 6px plus the arrow line width\n            if(edits.annotationPosition && arrow.node().parentNode && !subplotId) {\n                var arrowDragHeadX = headX;\n                var arrowDragHeadY = headY;\n                if(options.standoff) {\n                    var arrowLength = Math.sqrt(Math.pow(headX - tailX, 2) + Math.pow(headY - tailY, 2));\n                    arrowDragHeadX += options.standoff * (tailX - headX) / arrowLength;\n                    arrowDragHeadY += options.standoff * (tailY - headY) / arrowLength;\n                }\n                var arrowDrag = arrowGroup.append('path')\n                    .classed('annotation-arrow', true)\n                    .classed('anndrag', true)\n                    .attr({\n                        d: 'M3,3H-3V-3H3ZM0,0L' + (tailX - arrowDragHeadX) + ',' + (tailY - arrowDragHeadY),\n                        transform: 'translate(' + arrowDragHeadX + ',' + arrowDragHeadY + ')'\n                    })\n                    .style('stroke-width', (strokewidth + 6) + 'px')\n                    .call(Color.stroke, 'rgba(0,0,0,0)')\n                    .call(Color.fill, 'rgba(0,0,0,0)');\n\n                var update,\n                    annx0,\n                    anny0;\n\n                // dragger for the arrow & head: translates the whole thing\n                // (head/tail/text) all together\n                dragElement.init({\n                    element: arrowDrag.node(),\n                    gd: gd,\n                    prepFn: function() {\n                        var pos = Drawing.getTranslate(annTextGroupInner);\n\n                        annx0 = pos.x;\n                        anny0 = pos.y;\n                        update = {};\n                        if(xa && xa.autorange) {\n                            update[xa._name + '.autorange'] = true;\n                        }\n                        if(ya && ya.autorange) {\n                            update[ya._name + '.autorange'] = true;\n                        }\n                    },\n                    moveFn: function(dx, dy) {\n                        var annxy0 = applyTransform(annx0, anny0),\n                            xcenter = annxy0[0] + dx,\n                            ycenter = annxy0[1] + dy;\n                        annTextGroupInner.call(Drawing.setTranslate, xcenter, ycenter);\n\n                        update[annbase + '.x'] = xa ?\n                            xa.p2r(xa.r2p(options.x) + dx) :\n                            (options.x + (dx / gs.w));\n                        update[annbase + '.y'] = ya ?\n                            ya.p2r(ya.r2p(options.y) + dy) :\n                            (options.y - (dy / gs.h));\n\n                        if(options.axref === options.xref) {\n                            update[annbase + '.ax'] = xa.p2r(xa.r2p(options.ax) + dx);\n                        }\n\n                        if(options.ayref === options.yref) {\n                            update[annbase + '.ay'] = ya.p2r(ya.r2p(options.ay) + dy);\n                        }\n\n                        arrowGroup.attr('transform', 'translate(' + dx + ',' + dy + ')');\n                        annTextGroup.attr({\n                            transform: 'rotate(' + textangle + ',' +\n                                   xcenter + ',' + ycenter + ')'\n                        });\n                    },\n                    doneFn: function() {\n                        Plotly.relayout(gd, update);\n                        var notesBox = document.querySelector('.js-notes-box-panel');\n                        if(notesBox) notesBox.redraw(notesBox.selectedObj);\n                    }\n                });\n            }\n        };\n\n        if(options.showarrow) drawArrow(0, 0);\n\n        // user dragging the annotation (text, not arrow)\n        if(editTextPosition) {\n            var update,\n                baseTextTransform;\n\n            // dragger for the textbox: if there's an arrow, just drag the\n            // textbox and tail, leave the head untouched\n            dragElement.init({\n                element: annTextGroupInner.node(),\n                gd: gd,\n                prepFn: function() {\n                    baseTextTransform = annTextGroup.attr('transform');\n                    update = {};\n                },\n                moveFn: function(dx, dy) {\n                    var csr = 'pointer';\n                    if(options.showarrow) {\n                        if(options.axref === options.xref) {\n                            update[annbase + '.ax'] = xa.p2r(xa.r2p(options.ax) + dx);\n                        } else {\n                            update[annbase + '.ax'] = options.ax + dx;\n                        }\n\n                        if(options.ayref === options.yref) {\n                            update[annbase + '.ay'] = ya.p2r(ya.r2p(options.ay) + dy);\n                        } else {\n                            update[annbase + '.ay'] = options.ay + dy;\n                        }\n\n                        drawArrow(dx, dy);\n                    }\n                    else if(!subplotId) {\n                        if(xa) update[annbase + '.x'] = options.x + dx / xa._m;\n                        else {\n                            var widthFraction = options._xsize / gs.w,\n                                xLeft = options.x + (options._xshift - options.xshift) / gs.w -\n                                    widthFraction / 2;\n\n                            update[annbase + '.x'] = dragElement.align(xLeft + dx / gs.w,\n                                widthFraction, 0, 1, options.xanchor);\n                        }\n\n                        if(ya) update[annbase + '.y'] = options.y + dy / ya._m;\n                        else {\n                            var heightFraction = options._ysize / gs.h,\n                                yBottom = options.y - (options._yshift + options.yshift) / gs.h -\n                                    heightFraction / 2;\n\n                            update[annbase + '.y'] = dragElement.align(yBottom - dy / gs.h,\n                                heightFraction, 0, 1, options.yanchor);\n                        }\n                        if(!xa || !ya) {\n                            csr = dragElement.getCursor(\n                                xa ? 0.5 : update[annbase + '.x'],\n                                ya ? 0.5 : update[annbase + '.y'],\n                                options.xanchor, options.yanchor\n                            );\n                        }\n                    }\n                    else return;\n\n                    annTextGroup.attr({\n                        transform: 'translate(' + dx + ',' + dy + ')' + baseTextTransform\n                    });\n\n                    setCursor(annTextGroupInner, csr);\n                },\n                doneFn: function() {\n                    setCursor(annTextGroupInner);\n                    Plotly.relayout(gd, update);\n                    var notesBox = document.querySelector('.js-notes-box-panel');\n                    if(notesBox) notesBox.redraw(notesBox.selectedObj);\n                }\n            });\n        }\n    }\n\n    if(edits.annotationText) {\n        annText.call(svgTextUtils.makeEditable, {delegate: annTextGroupInner, gd: gd})\n            .call(textLayout)\n            .on('edit', function(_text) {\n                options.text = _text;\n                this.call(textLayout);\n\n                var update = {};\n                update[annbase + '.text'] = options.text;\n\n                if(xa && xa.autorange) {\n                    update[xa._name + '.autorange'] = true;\n                }\n                if(ya && ya.autorange) {\n                    update[ya._name + '.autorange'] = true;\n                }\n\n                Plotly.relayout(gd, update);\n            });\n    }\n    else annText.call(textLayout);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations/draw.js\n// module id = 72\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\n\n/**\n * Factory function for checking component arrays for subplot references.\n *\n * @param {string} containerArrayName: the top-level array in gd.layout to check\n *   If an item in this container is found that references a cartesian x and/or y axis,\n *   ensure cartesian is marked as a base plot module and record the axes (and subplot\n *   if both refs are axes) in gd._fullLayout\n *\n * @return {function}: with args layoutIn (gd.layout) and layoutOut (gd._fullLayout)\n * as expected of a component includeBasePlot method\n */\nmodule.exports = function makeIncludeComponents(containerArrayName) {\n    return function includeComponents(layoutIn, layoutOut) {\n        var array = layoutIn[containerArrayName];\n        if(!Array.isArray(array)) return;\n\n        var Cartesian = Registry.subplotsRegistry.cartesian;\n        var idRegex = Cartesian.idRegex;\n        var subplots = layoutOut._subplots;\n        var xaList = subplots.xaxis;\n        var yaList = subplots.yaxis;\n        var cartesianList = subplots.cartesian;\n        var hasCartesianOrGL2D = layoutOut._has('cartesian') || layoutOut._has('gl2d');\n\n        for(var i = 0; i < array.length; i++) {\n            var itemi = array[i];\n            if(!Lib.isPlainObject(itemi)) continue;\n\n            var xref = itemi.xref;\n            var yref = itemi.yref;\n\n            var hasXref = idRegex.x.test(xref);\n            var hasYref = idRegex.y.test(yref);\n            if(hasXref || hasYref) {\n                if(!hasCartesianOrGL2D) Lib.pushUnique(layoutOut._basePlotModules, Cartesian);\n\n                var newAxis = false;\n                if(hasXref && xaList.indexOf(xref) === -1) {\n                    xaList.push(xref);\n                    newAxis = true;\n                }\n                if(hasYref && yaList.indexOf(yref) === -1) {\n                    yaList.push(yref);\n                    newAxis = true;\n                }\n\n                /*\n                 * Notice the logic here: only add a subplot for a component if\n                 * it's referencing both x and y axes AND it's creating a new axis\n                 * so for example if your plot already has xy and x2y2, an annotation\n                 * on x2y or xy2 will not create a new subplot.\n                 */\n                if(newAxis && hasXref && hasYref) {\n                    cartesianList.push(xref + yref);\n                }\n            }\n        }\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/include_components.js\n// module id = 73\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar annAtts = require('../annotations/attributes');\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nmodule.exports = overrideAll({\n    _isLinkedToArray: 'annotation',\n\n    visible: annAtts.visible,\n    x: {\n        valType: 'any',\n        role: 'info',\n        description: [\n            'Sets the annotation\\'s x position.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'any',\n        role: 'info',\n        description: [\n            'Sets the annotation\\'s y position.'\n        ].join(' ')\n    },\n    z: {\n        valType: 'any',\n        role: 'info',\n        description: [\n            'Sets the annotation\\'s z position.'\n        ].join(' ')\n    },\n    ax: {\n        valType: 'number',\n        role: 'info',\n        description: [\n            'Sets the x component of the arrow tail about the arrow head (in pixels).'\n        ].join(' ')\n    },\n    ay: {\n        valType: 'number',\n        role: 'info',\n        description: [\n            'Sets the y component of the arrow tail about the arrow head (in pixels).'\n        ].join(' ')\n    },\n\n    xanchor: annAtts.xanchor,\n    xshift: annAtts.xshift,\n    yanchor: annAtts.yanchor,\n    yshift: annAtts.yshift,\n\n    text: annAtts.text,\n    textangle: annAtts.textangle,\n    font: annAtts.font,\n    width: annAtts.width,\n    height: annAtts.height,\n    opacity: annAtts.opacity,\n    align: annAtts.align,\n    valign: annAtts.valign,\n    bgcolor: annAtts.bgcolor,\n    bordercolor: annAtts.bordercolor,\n    borderpad: annAtts.borderpad,\n    borderwidth: annAtts.borderwidth,\n    showarrow: annAtts.showarrow,\n    arrowcolor: annAtts.arrowcolor,\n    arrowhead: annAtts.arrowhead,\n    startarrowhead: annAtts.startarrowhead,\n    arrowside: annAtts.arrowside,\n    arrowsize: annAtts.arrowsize,\n    startarrowsize: annAtts.startarrowsize,\n    arrowwidth: annAtts.arrowwidth,\n    standoff: annAtts.standoff,\n    startstandoff: annAtts.startstandoff,\n    hovertext: annAtts.hovertext,\n    hoverlabel: annAtts.hoverlabel,\n    captureevents: annAtts.captureevents,\n\n    // maybes later?\n    // clicktoshow: annAtts.clicktoshow,\n    // xclick: annAtts.xclick,\n    // yclick: annAtts.yclick,\n\n    // not needed!\n    // axref: 'pixel'\n    // ayref: 'pixel'\n    // xref: 'x'\n    // yref: 'y\n    // zref: 'z'\n}, 'calc', 'from-root');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations3d/attributes.js\n// module id = 74\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n// special position conversion functions... category axis positions can't be\n// specified by their data values, because they don't make a continuous mapping.\n// so these have to be specified in terms of the category serial numbers,\n// but can take fractional values. Other axis types we specify position based on\n// the actual data values.\n// TODO: in V2.0 (when log axis ranges are in data units) range and shape position\n// will be identical, so rangeToShapePosition and shapePositionToRange can be\n// removed entirely.\n\nexports.rangeToShapePosition = function(ax) {\n    return (ax.type === 'log') ? ax.r2d : function(v) { return v; };\n};\n\nexports.shapePositionToRange = function(ax) {\n    return (ax.type === 'log') ? ax.d2r : function(v) { return v; };\n};\n\nexports.decodeDate = function(convertToPx) {\n    return function(v) {\n        if(v.replace) v = v.replace('_', ' ');\n        return convertToPx(v);\n    };\n};\n\nexports.encodeDate = function(convertToDate) {\n    return function(v) { return convertToDate(v).replace(' ', '_'); };\n};\n\nexports.getDataToPixel = function(gd, axis, isVertical) {\n    var gs = gd._fullLayout._size,\n        dataToPixel;\n\n    if(axis) {\n        var d2r = exports.shapePositionToRange(axis);\n\n        dataToPixel = function(v) {\n            return axis._offset + axis.r2p(d2r(v, true));\n        };\n\n        if(axis.type === 'date') dataToPixel = exports.decodeDate(dataToPixel);\n    }\n    else if(isVertical) {\n        dataToPixel = function(v) { return gs.t + gs.h * (1 - v); };\n    }\n    else {\n        dataToPixel = function(v) { return gs.l + gs.w * v; };\n    }\n\n    return dataToPixel;\n};\n\nexports.getPixelToData = function(gd, axis, isVertical) {\n    var gs = gd._fullLayout._size,\n        pixelToData;\n\n    if(axis) {\n        var r2d = exports.rangeToShapePosition(axis);\n        pixelToData = function(p) { return r2d(axis.p2r(p - axis._offset)); };\n    }\n    else if(isVertical) {\n        pixelToData = function(p) { return 1 - (p - gs.t) / gs.h; };\n    }\n    else {\n        pixelToData = function(p) { return (p - gs.l) / gs.w; };\n    }\n\n    return pixelToData;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/shapes/helpers.js\n// module id = 75\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\nmodule.exports = {\n\n    // layout attribute name\n    name: 'updatemenus',\n\n    // class names\n    containerClassName: 'updatemenu-container',\n    headerGroupClassName: 'updatemenu-header-group',\n    headerClassName: 'updatemenu-header',\n    headerArrowClassName: 'updatemenu-header-arrow',\n    dropdownButtonGroupClassName: 'updatemenu-dropdown-button-group',\n    dropdownButtonClassName: 'updatemenu-dropdown-button',\n    buttonClassName: 'updatemenu-button',\n    itemRectClassName: 'updatemenu-item-rect',\n    itemTextClassName: 'updatemenu-item-text',\n\n    // DOM attribute name in button group keeping track\n    // of active update menu\n    menuIndexAttrName: 'updatemenu-active-index',\n\n    // id root pass to Plots.autoMargin\n    autoMarginIdRoot: 'updatemenu-',\n\n    // options when 'active: -1'\n    blankHeaderOpts: { label: '  ' },\n\n    // min item width / height\n    minWidth: 30,\n    minHeight: 30,\n\n    // padding around item text\n    textPadX: 24,\n    arrowPadX: 16,\n\n    // item rect radii\n    rx: 2,\n    ry: 2,\n\n    // item  text x offset off left edge\n    textOffsetX: 12,\n\n    // item  text y offset (w.r.t. middle)\n    textOffsetY: 3,\n\n    // arrow offset off right edge\n    arrowOffsetX: 4,\n\n    // gap between header and buttons\n    gapButtonHeader: 5,\n\n    // gap between between buttons\n    gapButton: 2,\n\n    // color given to active buttons\n    activeColor: '#F4FAFF',\n\n    // color given to hovered buttons\n    hoverColor: '#F4FAFF',\n\n    // symbol for menu open arrow\n    arrowSymbol: {\n        left: '◄',\n        right: '►',\n        up: '▲',\n        down: '▼'\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/updatemenus/constants.js\n// module id = 76\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorAttributes = require('../color/attributes');\n\nmodule.exports = {\n    bgcolor: {\n        valType: 'color',\n        dflt: colorAttributes.background,\n        role: 'style',\n        editType: 'calc',\n        description: 'Sets the background color of the range slider.'\n    },\n    bordercolor: {\n        valType: 'color',\n        dflt: colorAttributes.defaultLine,\n        role: 'style',\n        editType: 'calc',\n        description: 'Sets the border color of the range slider.'\n    },\n    borderwidth: {\n        valType: 'integer',\n        dflt: 0,\n        min: 0,\n        role: 'style',\n        editType: 'calc',\n        description: 'Sets the border color of the range slider.'\n    },\n    autorange: {\n        valType: 'boolean',\n        dflt: true,\n        role: 'style',\n        editType: 'calc',\n        description: [\n            'Determines whether or not the range slider range is',\n            'computed in relation to the input data.',\n            'If `range` is provided, then `autorange` is set to *false*.'\n        ].join(' ')\n    },\n    range: {\n        valType: 'info_array',\n        role: 'info',\n        items: [\n            {valType: 'any', editType: 'calc'},\n            {valType: 'any', editType: 'calc'}\n        ],\n        editType: 'calc',\n        description: [\n            'Sets the range of the range slider.',\n            'If not set, defaults to the full xaxis range.',\n            'If the axis `type` is *log*, then you must take the',\n            'log of your desired range.',\n            'If the axis `type` is *date*, it should be date strings,',\n            'like date data, though Date objects and unix milliseconds',\n            'will be accepted and converted to strings.',\n            'If the axis `type` is *category*, it should be numbers,',\n            'using the scale where each category is assigned a serial',\n            'number from zero in the order it appears.'\n        ].join(' ')\n    },\n    thickness: {\n        valType: 'number',\n        dflt: 0.15,\n        min: 0,\n        max: 1,\n        role: 'style',\n        editType: 'calc',\n        description: [\n            'The height of the range slider as a fraction of the',\n            'total plot area height.'\n        ].join(' ')\n    },\n    visible: {\n        valType: 'boolean',\n        dflt: true,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Determines whether or not the range slider will be visible.',\n            'If visible, perpendicular axes will be set to `fixedrange`'\n        ].join(' ')\n    },\n    editType: 'calc'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/rangeslider/attributes.js\n// module id = 77\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar colorAttrs = require('../color/attributes');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar buttonAttrs = require('./button_attributes');\n\nbuttonAttrs = extendFlat(buttonAttrs, {\n    _isLinkedToArray: 'button',\n\n    description: [\n        'Sets the specifications for each buttons.',\n        'By default, a range selector comes with no buttons.'\n    ].join(' ')\n});\n\nmodule.exports = {\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Determines whether or not this range selector is visible.',\n            'Note that range selectors are only available for x axes of',\n            '`type` set to or auto-typed to *date*.'\n        ].join(' ')\n    },\n\n    buttons: buttonAttrs,\n\n    x: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the x position (in normalized coordinates) of the range selector.'\n    },\n    xanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'left', 'center', 'right'],\n        dflt: 'left',\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Sets the range selector\\'s horizontal position anchor.',\n            'This anchor binds the `x` position to the *left*, *center*',\n            'or *right* of the range selector.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the y position (in normalized coordinates) of the range selector.'\n    },\n    yanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'top', 'middle', 'bottom'],\n        dflt: 'bottom',\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Sets the range selector\\'s vertical position anchor',\n            'This anchor binds the `y` position to the *top*, *middle*',\n            'or *bottom* of the range selector.'\n        ].join(' ')\n    },\n\n    font: fontAttrs({\n        editType: 'plot',\n        description: 'Sets the font of the range selector button text.'\n    }),\n\n    bgcolor: {\n        valType: 'color',\n        dflt: colorAttrs.lightLine,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the background color of the range selector buttons.'\n    },\n    activecolor: {\n        valType: 'color',\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the background color of the active range selector button.'\n    },\n    bordercolor: {\n        valType: 'color',\n        dflt: colorAttrs.defaultLine,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the color of the border enclosing the range selector.'\n    },\n    borderwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: 0,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the width (in px) of the border enclosing the range selector.'\n    },\n    editType: 'plot'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/rangeselector/attributes.js\n// module id = 78\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar scatterAttrs = require('../scatter/attributes');\nvar colorAttributes = require('../../components/colorscale/color_attributes');\nvar errorBarAttrs = require('../../components/errorbars/attributes');\nvar colorbarAttrs = require('../../components/colorbar/attributes');\nvar fontAttrs = require('../../plots/font_attributes');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar textFontAttrs = fontAttrs({\n    editType: 'calc',\n    arrayOk: true,\n    description: ''\n});\n\nvar scatterMarkerAttrs = scatterAttrs.marker;\nvar scatterMarkerLineAttrs = scatterMarkerAttrs.line;\n\nvar markerLineWidth = extendFlat({},\n    scatterMarkerLineAttrs.width, { dflt: 0 });\n\nvar markerLine = extendFlat({\n    width: markerLineWidth,\n    editType: 'calc'\n}, colorAttributes('marker.line'));\n\nvar marker = extendFlat({\n    line: markerLine,\n    editType: 'calc'\n}, colorAttributes('marker'), {\n    showscale: scatterMarkerAttrs.showscale,\n    colorbar: colorbarAttrs,\n    opacity: {\n        valType: 'number',\n        arrayOk: true,\n        dflt: 1,\n        min: 0,\n        max: 1,\n        role: 'style',\n        editType: 'style',\n        description: 'Sets the opacity of the bars.'\n    }\n});\n\nmodule.exports = {\n    x: scatterAttrs.x,\n    x0: scatterAttrs.x0,\n    dx: scatterAttrs.dx,\n    y: scatterAttrs.y,\n    y0: scatterAttrs.y0,\n    dy: scatterAttrs.dy,\n\n    text: scatterAttrs.text,\n    hovertext: scatterAttrs.hovertext,\n\n    textposition: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['inside', 'outside', 'auto', 'none'],\n        dflt: 'none',\n        arrayOk: true,\n        editType: 'calc',\n        description: [\n            'Specifies the location of the `text`.',\n            '*inside* positions `text` inside, next to the bar end',\n            '(rotated and scaled if needed).',\n            '*outside* positions `text` outside, next to the bar end',\n            '(scaled if needed).',\n            '*auto* positions `text` inside or outside',\n            'so that `text` size is maximized.'\n        ].join(' ')\n    },\n\n    textfont: extendFlat({}, textFontAttrs, {\n        description: 'Sets the font used for `text`.'\n    }),\n\n    insidetextfont: extendFlat({}, textFontAttrs, {\n        description: 'Sets the font used for `text` lying inside the bar.'\n    }),\n\n    outsidetextfont: extendFlat({}, textFontAttrs, {\n        description: 'Sets the font used for `text` lying outside the bar.'\n    }),\n\n    constraintext: {\n        valType: 'enumerated',\n        values: ['inside', 'outside', 'both', 'none'],\n        role: 'info',\n        dflt: 'both',\n        editType: 'calc',\n        description: [\n            'Constrain the size of text inside or outside a bar to be no',\n            'larger than the bar itself.'\n        ].join(' ')\n    },\n\n    orientation: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['v', 'h'],\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'Sets the orientation of the bars.',\n            'With *v* (*h*), the value of the each bar spans',\n            'along the vertical (horizontal).'\n        ].join(' ')\n    },\n\n    base: {\n        valType: 'any',\n        dflt: null,\n        arrayOk: true,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets where the bar base is drawn (in position axis units).',\n            'In *stack* or *relative* barmode,',\n            'traces that set *base* will be excluded',\n            'and drawn in *overlay* mode instead.'\n        ].join(' ')\n    },\n\n    offset: {\n        valType: 'number',\n        dflt: null,\n        arrayOk: true,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Shifts the position where the bar is drawn',\n            '(in position axis units).',\n            'In *group* barmode,',\n            'traces that set *offset* will be excluded',\n            'and drawn in *overlay* mode instead.'\n        ].join(' ')\n    },\n\n    width: {\n        valType: 'number',\n        dflt: null,\n        min: 0,\n        arrayOk: true,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the bar width (in position axis units).'\n        ].join(' ')\n    },\n\n    marker: marker,\n\n    selected: {\n        marker: {\n            opacity: scatterAttrs.selected.marker.opacity,\n            color: scatterAttrs.selected.marker.color,\n            editType: 'style'\n        },\n        textfont: scatterAttrs.selected.textfont,\n        editType: 'style'\n    },\n    unselected: {\n        marker: {\n            opacity: scatterAttrs.unselected.marker.opacity,\n            color: scatterAttrs.unselected.marker.color,\n            editType: 'style'\n        },\n        textfont: scatterAttrs.unselected.textfont,\n        editType: 'style'\n    },\n\n    r: scatterAttrs.r,\n    t: scatterAttrs.t,\n\n    error_y: errorBarAttrs,\n    error_x: errorBarAttrs,\n\n    _deprecated: {\n        bardir: {\n            valType: 'enumerated',\n            role: 'info',\n            editType: 'calc',\n            values: ['v', 'h'],\n            description: 'Renamed to `orientation`.'\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/attributes.js\n// module id = 79\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/**\n * Push array with unique items\n *\n * @param {array} array\n *  array to be filled\n * @param {any} item\n *  item to be or not to be inserted\n * @return {array}\n *  ref to array (now possibly containing one more item)\n *\n */\nmodule.exports = function pushUnique(array, item) {\n    if(item instanceof RegExp) {\n        var itemStr = item.toString(),\n            i;\n        for(i = 0; i < array.length; i++) {\n            if(array[i] instanceof RegExp && array[i].toString() === itemStr) {\n                return array;\n            }\n        }\n        array.push(item);\n    }\n    else if(item && array.indexOf(item) === -1) array.push(item);\n\n    return array;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/push_unique.js\n// module id = 80\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../registry');\n\n/*\n * containerArrayMatch: does this attribute string point into a\n * layout container array?\n *\n * @param {String} astr: an attribute string, like *annotations[2].text*\n *\n * @returns {Object | false} Returns false if `astr` doesn't match a container\n *  array. If it does, returns:\n *     {array: {String}, index: {Number}, property: {String}}\n *  ie the attribute string for the array, the index within the array (or ''\n *  if the whole array) and the property within that (or '' if the whole array\n *  or the whole object)\n */\nmodule.exports = function containerArrayMatch(astr) {\n    var rootContainers = Registry.layoutArrayContainers,\n        regexpContainers = Registry.layoutArrayRegexes,\n        rootPart = astr.split('[')[0],\n        arrayStr,\n        match;\n\n    // look for regexp matches first, because they may be nested inside root matches\n    // eg updatemenus[i].buttons is nested inside updatemenus\n    for(var i = 0; i < regexpContainers.length; i++) {\n        match = astr.match(regexpContainers[i]);\n        if(match && match.index === 0) {\n            arrayStr = match[0];\n            break;\n        }\n    }\n\n    // now look for root matches\n    if(!arrayStr) arrayStr = rootContainers[rootContainers.indexOf(rootPart)];\n\n    if(!arrayStr) return false;\n\n    var tail = astr.substr(arrayStr.length);\n    if(!tail) return {array: arrayStr, index: '', property: ''};\n\n    match = tail.match(/^\\[(0|[1-9][0-9]*)\\](\\.(.+))?$/);\n    if(!match) return false;\n\n    return {array: arrayStr, index: Number(match[1]), property: match[3] || ''};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plot_api/container_array_match.js\n// module id = 81\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar scales = require('./scales');\nvar defaultScale = require('./default_scale');\nvar isValidScaleArray = require('./is_valid_scale_array');\n\n\nmodule.exports = function getScale(scl, dflt) {\n    if(!dflt) dflt = defaultScale;\n    if(!scl) return dflt;\n\n    function parseScale() {\n        try {\n            scl = scales[scl] || JSON.parse(scl);\n        }\n        catch(e) {\n            scl = dflt;\n        }\n    }\n\n    if(typeof scl === 'string') {\n        parseScale();\n        // occasionally scl is double-JSON encoded...\n        if(typeof scl === 'string') parseScale();\n    }\n\n    if(!isValidScaleArray(scl)) return dflt;\n    return scl;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/get_scale.js\n// module id = 82\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar scales = require('./scales');\n\n\nmodule.exports = scales.RdBu;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/default_scale.js\n// module id = 83\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar tinycolor = require('tinycolor2');\n\n\nmodule.exports = function isValidScaleArray(scl) {\n    var highestVal = 0;\n\n    if(!Array.isArray(scl) || scl.length < 2) return false;\n\n    if(!scl[0] || !scl[scl.length - 1]) return false;\n\n    if(+scl[0][0] !== 0 || +scl[scl.length - 1][0] !== 1) return false;\n\n    for(var i = 0; i < scl.length; i++) {\n        var si = scl[i];\n\n        if(si.length !== 2 || +si[0] < highestVal || !tinycolor(si[1]).isValid()) {\n            return false;\n        }\n\n        highestVal = +si[0];\n    }\n\n    return true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/is_valid_scale_array.js\n// module id = 84\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n// Simple helper functions\n// none of these need any external deps\n\n/*\n * make a regex for matching counter ids/names ie xaxis, xaxis2, xaxis10...\n *  eg: regexCounter('x')\n * tail is an optional piece after the id\n *  eg regexCounter('scene', '.annotations') for scene2.annotations etc.\n */\nexports.counter = function(head, tail, openEnded) {\n    return new RegExp('^' + head + '([2-9]|[1-9][0-9]+)?' +\n        (tail || '') + (openEnded ? '' : '$'));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/regex.js\n// module id = 85\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar PI = Math.PI;\n\nexports.deg2rad = function(deg) {\n    return deg / 180 * PI;\n};\n\nexports.rad2deg = function(rad) {\n    return rad / PI * 180;\n};\n\nexports.wrap360 = function(deg) {\n    var out = deg % 360;\n    return out < 0 ? out + 360 : out;\n};\n\nexports.wrap180 = function(deg) {\n    if(Math.abs(deg) > 180) deg -= Math.round(deg / 360) * 360;\n    return deg;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/angles.js\n// module id = 86\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar loggers = require('./loggers');\n\n// don't trust floating point equality - fraction of bin size to call\n// \"on the line\" and ensure that they go the right way specified by\n// linelow\nvar roundingError = 1e-9;\n\n\n/**\n * findBin - find the bin for val - note that it can return outside the\n * bin range any pos. or neg. integer for linear bins, or -1 or\n * bins.length-1 for explicit.\n * bins is either an object {start,size,end} or an array length #bins+1\n * bins can be either increasing or decreasing but must be monotonic\n * for linear bins, we can just calculate. For listed bins, run a binary\n * search linelow (truthy) says the bin boundary should be attributed to\n * the lower bin rather than the default upper bin\n */\nexports.findBin = function(val, bins, linelow) {\n    if(isNumeric(bins.start)) {\n        return linelow ?\n            Math.ceil((val - bins.start) / bins.size - roundingError) - 1 :\n            Math.floor((val - bins.start) / bins.size + roundingError);\n    }\n    else {\n        var n1 = 0;\n        var n2 = bins.length;\n        var c = 0;\n        var binSize = (n2 > 1) ? (bins[n2 - 1] - bins[0]) / (n2 - 1) : 1;\n        var n, test;\n        if(binSize >= 0) {\n            test = linelow ? lessThan : lessOrEqual;\n        } else {\n            test = linelow ? greaterOrEqual : greaterThan;\n        }\n        val += binSize * roundingError * (linelow ? -1 : 1) * (binSize >= 0 ? 1 : -1);\n        // c is just to avoid infinite loops if there's an error\n        while(n1 < n2 && c++ < 100) {\n            n = Math.floor((n1 + n2) / 2);\n            if(test(bins[n], val)) n1 = n + 1;\n            else n2 = n;\n        }\n        if(c > 90) loggers.log('Long binary search...');\n        return n1 - 1;\n    }\n};\n\nfunction lessThan(a, b) { return a < b; }\nfunction lessOrEqual(a, b) { return a <= b; }\nfunction greaterThan(a, b) { return a > b; }\nfunction greaterOrEqual(a, b) { return a >= b; }\n\nexports.sorterAsc = function(a, b) { return a - b; };\nexports.sorterDes = function(a, b) { return b - a; };\n\n/**\n * find distinct values in an array, lumping together ones that appear to\n * just be off by a rounding error\n * return the distinct values and the minimum difference between any two\n */\nexports.distinctVals = function(valsIn) {\n    var vals = valsIn.slice();  // otherwise we sort the original array...\n    vals.sort(exports.sorterAsc);\n\n    var l = vals.length - 1,\n        minDiff = (vals[l] - vals[0]) || 1,\n        errDiff = minDiff / (l || 1) / 10000,\n        v2 = [vals[0]];\n\n    for(var i = 0; i < l; i++) {\n        // make sure values aren't just off by a rounding error\n        if(vals[i + 1] > vals[i] + errDiff) {\n            minDiff = Math.min(minDiff, vals[i + 1] - vals[i]);\n            v2.push(vals[i + 1]);\n        }\n    }\n\n    return {vals: v2, minDiff: minDiff};\n};\n\n/**\n * return the smallest element from (sorted) array arrayIn that's bigger than val,\n * or (reverse) the largest element smaller than val\n * used to find the best tick given the minimum (non-rounded) tick\n * particularly useful for date/time where things are not powers of 10\n * binary search is probably overkill here...\n */\nexports.roundUp = function(val, arrayIn, reverse) {\n    var low = 0,\n        high = arrayIn.length - 1,\n        mid,\n        c = 0,\n        dlow = reverse ? 0 : 1,\n        dhigh = reverse ? 1 : 0,\n        rounded = reverse ? Math.ceil : Math.floor;\n    // c is just to avoid infinite loops if there's an error\n    while(low < high && c++ < 100) {\n        mid = rounded((low + high) / 2);\n        if(arrayIn[mid] <= val) low = mid + dlow;\n        else high = mid - dhigh;\n    }\n    return arrayIn[low];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/search.js\n// module id = 87\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\nexports.init2dArray = function(rowLength, colLength) {\n    var array = new Array(rowLength);\n    for(var i = 0; i < rowLength; i++) array[i] = new Array(colLength);\n    return array;\n};\n\n/**\n * transpose a (possibly ragged) 2d array z. inspired by\n * http://stackoverflow.com/questions/17428587/\n * transposing-a-2d-array-in-javascript\n */\nexports.transposeRagged = function(z) {\n    var maxlen = 0,\n        zlen = z.length,\n        i,\n        j;\n    // Maximum row length:\n    for(i = 0; i < zlen; i++) maxlen = Math.max(maxlen, z[i].length);\n\n    var t = new Array(maxlen);\n    for(i = 0; i < maxlen; i++) {\n        t[i] = new Array(zlen);\n        for(j = 0; j < zlen; j++) t[i][j] = z[j][i];\n    }\n\n    return t;\n};\n\n// our own dot function so that we don't need to include numeric\nexports.dot = function(x, y) {\n    if(!(x.length && y.length) || x.length !== y.length) return null;\n\n    var len = x.length,\n        out,\n        i;\n\n    if(x[0].length) {\n        // mat-vec or mat-mat\n        out = new Array(len);\n        for(i = 0; i < len; i++) out[i] = exports.dot(x[i], y);\n    }\n    else if(y[0].length) {\n        // vec-mat\n        var yTranspose = exports.transposeRagged(y);\n        out = new Array(yTranspose.length);\n        for(i = 0; i < yTranspose.length; i++) out[i] = exports.dot(x, yTranspose[i]);\n    }\n    else {\n        // vec-vec\n        out = 0;\n        for(i = 0; i < len; i++) out += x[i] * y[i];\n    }\n\n    return out;\n};\n\n// translate by (x,y)\nexports.translationMatrix = function(x, y) {\n    return [[1, 0, x], [0, 1, y], [0, 0, 1]];\n};\n\n// rotate by alpha around (0,0)\nexports.rotationMatrix = function(alpha) {\n    var a = alpha * Math.PI / 180;\n    return [[Math.cos(a), -Math.sin(a), 0],\n            [Math.sin(a), Math.cos(a), 0],\n            [0, 0, 1]];\n};\n\n// rotate by alpha around (x,y)\nexports.rotationXYMatrix = function(a, x, y) {\n    return exports.dot(\n        exports.dot(exports.translationMatrix(x, y),\n                    exports.rotationMatrix(a)),\n        exports.translationMatrix(-x, -y));\n};\n\n// applies a 2D transformation matrix to either x and y params or an [x,y] array\nexports.apply2DTransform = function(transform) {\n    return function() {\n        var args = arguments;\n        if(args.length === 3) {\n            args = args[0];\n        }// from map\n        var xy = arguments.length === 1 ? args[0] : [args[0], args[1]];\n        return exports.dot(transform, [xy[0], xy[1], 1]).slice(0, 2);\n    };\n};\n\n// applies a 2D transformation matrix to an [x1,y1,x2,y2] array (to transform a segment)\nexports.apply2DTransform2 = function(transform) {\n    var at = exports.apply2DTransform(transform);\n    return function(xys) {\n        return at(xys.slice(0, 2)).concat(at(xys.slice(2, 4)));\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/matrix.js\n// module id = 88\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/**\n * Allow referencing a graph DOM element either directly\n * or by its id string\n *\n * @param {HTMLDivElement|string} gd: a graph element or its id\n *\n * @returns {HTMLDivElement} the DOM element of the graph\n */\nmodule.exports = function(gd) {\n    var gdElement;\n\n    if(typeof gd === 'string') {\n        gdElement = document.getElementById(gd);\n\n        if(gdElement === null) {\n            throw new Error('No DOM element with id \\'' + gd + '\\' exists on the page.');\n        }\n\n        return gdElement;\n    }\n    else if(gd === null || gd === undefined) {\n        throw new Error('DOM element provided is null or undefined');\n    }\n\n    return gd;  // otherwise assume that gd is a DOM element\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/get_graph_div.js\n// module id = 89\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n    _isLinkedToArray: 'frames_entry',\n\n    group: {\n        valType: 'string',\n        role: 'info',\n        description: [\n            'An identifier that specifies the group to which the frame belongs,',\n            'used by animate to select a subset of frames.'\n        ].join(' ')\n    },\n    name: {\n        valType: 'string',\n        role: 'info',\n        description: 'A label by which to identify the frame'\n    },\n    traces: {\n        valType: 'any',\n        role: 'info',\n        description: [\n            'A list of trace indices that identify the respective traces in the',\n            'data attribute'\n        ].join(' ')\n    },\n    baseframe: {\n        valType: 'string',\n        role: 'info',\n        description: [\n            'The name of the frame into which this frame\\'s properties are merged',\n            'before applying. This is used to unify properties and avoid needing',\n            'to specify the same values for the same properties in multiple frames.'\n        ].join(' ')\n    },\n    data: {\n        valType: 'any',\n        role: 'object',\n        description: [\n            'A list of traces this frame modifies. The format is identical to the',\n            'normal trace definition.'\n        ].join(' ')\n    },\n    layout: {\n        valType: 'any',\n        role: 'object',\n        description: [\n            'Layout properties which this frame modifies. The format is identical',\n            'to the normal layout definition.'\n        ].join(' ')\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/frame_attributes.js\n// module id = 90\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorScaleAttributes = require('./attributes');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar palettes = require('./scales.js');\n\n/*\n * Make all the attributes for a regular colorscale:\n *  color, colorscale, cauto, cmin, cmax, autocolorscale, reversescale\n *\n * @param {string} context:\n *   the container this is in (*marker*, *marker.line* etc)\n * @param {optional string} editTypeOverride:\n *   most of these attributes already require a recalc, but the ones that do not\n *   have editType *style* or *plot* unless you override (presumably with *calc*)\n * @param {optional bool} autoColorDflt:\n *   normally autocolorscale.dflt is `true`, but pass `false` to override\n *\n * @return {object} the finished attributes object\n */\nmodule.exports = function makeColorScaleAttributes(context, editTypeOverride, autoColorDflt) {\n    var contextHead = context ? (context + '.') : '';\n\n    return {\n        color: {\n            valType: 'color',\n            arrayOk: true,\n            role: 'style',\n            editType: editTypeOverride || 'style',\n            description: [\n                'Sets the', context, 'color. It accepts either a specific color',\n                'or an array of numbers that are mapped to the colorscale',\n                'relative to the max and min values of the array or relative to',\n                '`cmin` and `cmax` if set.'\n            ].join(' ')\n        },\n        colorscale: extendFlat({}, colorScaleAttributes.colorscale, {\n            description: [\n                'Sets the colorscale and only has an effect',\n                'if `' + contextHead + 'color` is set to a numerical array.',\n                'The colorscale must be an array containing',\n                'arrays mapping a normalized value to an',\n                'rgb, rgba, hex, hsl, hsv, or named color string.',\n                'At minimum, a mapping for the lowest (0) and highest (1)',\n                'values are required. For example,',\n                '`[[0, \\'rgb(0,0,255)\\', [1, \\'rgb(255,0,0)\\']]`.',\n                'To control the bounds of the colorscale in color space,',\n                'use `' + contextHead + 'cmin` and `' + contextHead + 'cmax`.',\n                'Alternatively, `colorscale` may be a palette name string',\n                'of the following list:',\n                Object.keys(palettes).join(', ')\n            ].join(' ')\n        }),\n        cauto: extendFlat({}, colorScaleAttributes.zauto, {\n            impliedEdits: {cmin: undefined, cmax: undefined},\n            description: [\n                'Has an effect only if `' + contextHead + 'color` is set to a numerical array',\n                'and `cmin`, `cmax` are set by the user. In this case,',\n                'it controls whether the range of colors in `colorscale` is mapped to',\n                'the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax`',\n                'values (`cauto: false`).',\n                'Defaults to `false` when `cmin`, `cmax` are set by the user.'\n            ].join(' ')\n        }),\n        cmax: extendFlat({}, colorScaleAttributes.zmax, {\n            editType: editTypeOverride || colorScaleAttributes.zmax.editType,\n            impliedEdits: {cauto: false},\n            description: [\n                'Has an effect only if `' + contextHead + 'color` is set to a numerical array.',\n                'Sets the upper bound of the color domain.',\n                'Value should be associated to the `' + contextHead + 'color` array index,',\n                'and if set, `' + contextHead + 'cmin` must be set as well.'\n            ].join(' ')\n        }),\n        cmin: extendFlat({}, colorScaleAttributes.zmin, {\n            editType: editTypeOverride || colorScaleAttributes.zmin.editType,\n            impliedEdits: {cauto: false},\n            description: [\n                'Has an effect only if `' + contextHead + 'color` is set to a numerical array.',\n                'Sets the lower bound of the color domain.',\n                'Value should be associated to the `' + contextHead + 'color` array index,',\n                'and if set, `' + contextHead + 'cmax` must be set as well.'\n            ].join(' ')\n        }),\n        autocolorscale: extendFlat({}, colorScaleAttributes.autocolorscale, {\n            description: [\n                'Has an effect only if `' + contextHead + 'color` is set to a numerical array.',\n                'Determines whether the colorscale is a default palette (`autocolorscale: true`)',\n                'or the palette determined by `' + contextHead + 'colorscale`.',\n                'In case `colorscale` is unspecified or `autocolorscale` is true, the default ',\n                'palette will be chosen according to whether numbers in the `color` array are',\n                'all positive, all negative or mixed.'\n            ].join(' '),\n            dflt: autoColorDflt === false ? autoColorDflt : colorScaleAttributes.autocolorscale.dflt\n        }),\n        reversescale: extendFlat({}, colorScaleAttributes.reversescale, {\n            description: [\n                'Has an effect only if `' + contextHead + 'color` is set to a numerical array.',\n                'Reverses the color mapping if true (`cmin` will correspond to the last color',\n                'in the array and `cmax` will correspond to the first color).'\n            ].join(' ')\n        })\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/color_attributes.js\n// module id = 91\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n    zauto: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        editType: 'calc',\n        impliedEdits: {zmin: undefined, zmax: undefined},\n        description: [\n            'Determines the whether or not the color domain is computed',\n            'with respect to the input data.'\n        ].join(' ')\n    },\n    zmin: {\n        valType: 'number',\n        role: 'info',\n        dflt: null,\n        editType: 'plot',\n        impliedEdits: {zauto: false},\n        description: 'Sets the lower bound of color domain.'\n    },\n    zmax: {\n        valType: 'number',\n        role: 'info',\n        dflt: null,\n        editType: 'plot',\n        impliedEdits: {zauto: false},\n        description: 'Sets the upper bound of color domain.'\n    },\n    colorscale: {\n        valType: 'colorscale',\n        role: 'style',\n        editType: 'calc',\n        impliedEdits: {autocolorscale: false},\n        description: [\n            'Sets the colorscale.',\n            'The colorscale must be an array containing',\n            'arrays mapping a normalized value to an',\n            'rgb, rgba, hex, hsl, hsv, or named color string.',\n            'At minimum, a mapping for the lowest (0) and highest (1)',\n            'values are required. For example,',\n            '`[[0, \\'rgb(0,0,255)\\', [1, \\'rgb(255,0,0)\\']]`.',\n            'To control the bounds of the colorscale in z space,',\n            'use zmin and zmax'\n        ].join(' ')\n    },\n    autocolorscale: {\n        valType: 'boolean',\n        role: 'style',\n        dflt: true,  // gets overrode in 'heatmap' & 'surface' for backwards comp.\n        editType: 'calc',\n        impliedEdits: {colorscale: undefined},\n        description: [\n            'Determines whether or not the colorscale is picked using the sign of',\n            'the input z values.'\n        ].join(' ')\n    },\n    reversescale: {\n        valType: 'boolean',\n        role: 'style',\n        dflt: false,\n        editType: 'calc',\n        description: 'Reverses the colorscale.'\n    },\n    showscale: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        editType: 'calc',\n        description: [\n            'Determines whether or not a colorbar is displayed for this trace.'\n        ].join(' ')\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/attributes.js\n// module id = 92\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nexports.scales = require('./scales');\n\nexports.defaultScale = require('./default_scale');\n\nexports.attributes = require('./attributes');\n\nexports.handleDefaults = require('./defaults');\n\nexports.calc = require('./calc');\n\nexports.hasColorscale = require('./has_colorscale');\n\nexports.isValidScale = require('./is_valid_scale');\n\nexports.getScale = require('./get_scale');\n\nexports.flipScale = require('./flip_scale');\n\nexports.extractScale = require('./extract_scale');\n\nexports.makeColorScaleFunc = require('./make_color_scale_func');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/index.js\n// module id = 93\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar Lib = require('../../lib');\nvar ONEDAY = require('../../constants/numerical').ONEDAY;\n\n\nmodule.exports = function handleTickValueDefaults(containerIn, containerOut, coerce, axType) {\n    var tickmodeDefault = 'auto';\n\n    if(containerIn.tickmode === 'array' &&\n            (axType === 'log' || axType === 'date')) {\n        containerIn.tickmode = 'auto';\n    }\n\n    if(Array.isArray(containerIn.tickvals)) tickmodeDefault = 'array';\n    else if(containerIn.dtick) {\n        tickmodeDefault = 'linear';\n    }\n    var tickmode = coerce('tickmode', tickmodeDefault);\n\n    if(tickmode === 'auto') coerce('nticks');\n    else if(tickmode === 'linear') {\n        // dtick is usually a positive number, but there are some\n        // special strings available for log or date axes\n        // default is 1 day for dates, otherwise 1\n        var dtickDflt = (axType === 'date') ? ONEDAY : 1;\n        var dtick = coerce('dtick', dtickDflt);\n        if(isNumeric(dtick)) {\n            containerOut.dtick = (dtick > 0) ? Number(dtick) : dtickDflt;\n        }\n        else if(typeof dtick !== 'string') {\n            containerOut.dtick = dtickDflt;\n        }\n        else {\n            // date and log special cases are all one character plus a number\n            var prefix = dtick.charAt(0),\n                dtickNum = dtick.substr(1);\n\n            dtickNum = isNumeric(dtickNum) ? Number(dtickNum) : 0;\n            if((dtickNum <= 0) || !(\n                    // \"M<n>\" gives ticks every (integer) n months\n                    (axType === 'date' && prefix === 'M' && dtickNum === Math.round(dtickNum)) ||\n                    // \"L<f>\" gives ticks linearly spaced in data (not in position) every (float) f\n                    (axType === 'log' && prefix === 'L') ||\n                    // \"D1\" gives powers of 10 with all small digits between, \"D2\" gives only 2 and 5\n                    (axType === 'log' && prefix === 'D' && (dtickNum === 1 || dtickNum === 2))\n                )) {\n                containerOut.dtick = dtickDflt;\n            }\n        }\n\n        // tick0 can have different valType for different axis types, so\n        // validate that now. Also for dates, change milliseconds to date strings\n        var tick0Dflt = (axType === 'date') ? Lib.dateTick0(containerOut.calendar) : 0;\n        var tick0 = coerce('tick0', tick0Dflt);\n        if(axType === 'date') {\n            containerOut.tick0 = Lib.cleanDate(tick0, tick0Dflt);\n        }\n        // Aside from date axes, dtick must be numeric; D1 and D2 modes ignore tick0 entirely\n        else if(isNumeric(tick0) && dtick !== 'D1' && dtick !== 'D2') {\n            containerOut.tick0 = Number(tick0);\n        }\n        else {\n            containerOut.tick0 = tick0Dflt;\n        }\n    }\n    else {\n        var tickvals = coerce('tickvals');\n        if(tickvals === undefined) containerOut.tickmode = 'auto';\n        else coerce('ticktext');\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/tick_value_defaults.js\n// module id = 94\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar layoutAttributes = require('./layout_attributes');\n\n\n/**\n * options: inherits outerTicks from axes.handleAxisDefaults\n */\nmodule.exports = function handleTickDefaults(containerIn, containerOut, coerce, options) {\n    var tickLen = Lib.coerce2(containerIn, containerOut, layoutAttributes, 'ticklen'),\n        tickWidth = Lib.coerce2(containerIn, containerOut, layoutAttributes, 'tickwidth'),\n        tickColor = Lib.coerce2(containerIn, containerOut, layoutAttributes, 'tickcolor', containerOut.color),\n        showTicks = coerce('ticks', (options.outerTicks || tickLen || tickWidth || tickColor) ? 'outside' : '');\n\n    if(!showTicks) {\n        delete containerOut.ticklen;\n        delete containerOut.tickwidth;\n        delete containerOut.tickcolor;\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/tick_mark_defaults.js\n// module id = 95\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar layoutAttributes = require('./layout_attributes');\n\n/**\n * options: inherits font, outerTicks, noHover from axes.handleAxisDefaults\n */\nmodule.exports = function handleTickLabelDefaults(containerIn, containerOut, coerce, axType, options) {\n    var showAttrDflt = getShowAttrDflt(containerIn);\n\n    var tickPrefix = coerce('tickprefix');\n    if(tickPrefix) coerce('showtickprefix', showAttrDflt);\n\n    var tickSuffix = coerce('ticksuffix', options.tickSuffixDflt);\n    if(tickSuffix) coerce('showticksuffix', showAttrDflt);\n\n    var showTickLabels = coerce('showticklabels');\n    if(showTickLabels) {\n        var font = options.font || {};\n        // as with titlefont.color, inherit axis.color only if one was\n        // explicitly provided\n        var dfltFontColor = (containerOut.color === containerIn.color) ?\n            containerOut.color : font.color;\n        Lib.coerceFont(coerce, 'tickfont', {\n            family: font.family,\n            size: font.size,\n            color: dfltFontColor\n        });\n        coerce('tickangle');\n\n        if(axType !== 'category') {\n            var tickFormat = coerce('tickformat');\n            tickformatstopsDefaults(containerIn, containerOut);\n            if(!tickFormat && axType !== 'date') {\n                coerce('showexponent', showAttrDflt);\n                coerce('exponentformat');\n                coerce('separatethousands');\n            }\n        }\n    }\n\n    if(axType !== 'category' && !options.noHover) coerce('hoverformat');\n};\n\n/*\n * Attributes 'showexponent', 'showtickprefix' and 'showticksuffix'\n * share values.\n *\n * If only 1 attribute is set,\n * the remaining attributes inherit that value.\n *\n * If 2 attributes are set to the same value,\n * the remaining attribute inherits that value.\n *\n * If 2 attributes are set to different values,\n * the remaining is set to its dflt value.\n *\n */\nfunction getShowAttrDflt(containerIn) {\n    var showAttrsAll = ['showexponent',\n            'showtickprefix',\n            'showticksuffix'],\n        showAttrs = showAttrsAll.filter(function(a) {\n            return containerIn[a] !== undefined;\n        }),\n        sameVal = function(a) {\n            return containerIn[a] === containerIn[showAttrs[0]];\n        };\n\n    if(showAttrs.every(sameVal) || showAttrs.length === 1) {\n        return containerIn[showAttrs[0]];\n    }\n}\n\nfunction tickformatstopsDefaults(tickformatIn, tickformatOut) {\n    var valuesIn = tickformatIn.tickformatstops;\n    var valuesOut = tickformatOut.tickformatstops = [];\n\n    if(!Array.isArray(valuesIn)) return;\n\n    var valueIn, valueOut;\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(valueIn, valueOut, layoutAttributes.tickformatstops, attr, dflt);\n    }\n\n    for(var i = 0; i < valuesIn.length; i++) {\n        valueIn = valuesIn[i];\n        valueOut = {};\n\n        coerce('dtickrange');\n        coerce('value');\n\n        valuesOut.push(valueOut);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/tick_label_defaults.js\n// module id = 96\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar cleanNumber = Lib.cleanNumber;\nvar ms2DateTime = Lib.ms2DateTime;\nvar dateTime2ms = Lib.dateTime2ms;\nvar ensureNumber = Lib.ensureNumber;\n\nvar numConstants = require('../../constants/numerical');\nvar FP_SAFE = numConstants.FP_SAFE;\nvar BADNUM = numConstants.BADNUM;\n\nvar constants = require('./constants');\nvar axisIds = require('./axis_ids');\n\nfunction fromLog(v) {\n    return Math.pow(10, v);\n}\n\n/**\n * Define the conversion functions for an axis data is used in 5 ways:\n *\n *  d: data, in whatever form it's provided\n *  c: calcdata: turned into numbers, but not linearized\n *  l: linearized - same as c except for log axes (and other nonlinear\n *      mappings later?) this is used when we need to know if it's\n *      *possible* to show some data on this axis, without caring about\n *      the current range\n *  p: pixel value - mapped to the screen with current size and zoom\n *  r: ranges, tick0, and annotation positions match one of the above\n *     but are handled differently for different types:\n *     - linear and date: data format (d)\n *     - category: calcdata format (c), and will stay that way because\n *       the data format has no continuous mapping\n *     - log: linearized (l) format\n *       TODO: in v2.0 we plan to change it to data format. At that point\n *       shapes will work the same way as ranges, tick0, and annotations\n *       so they can use this conversion too.\n *\n * Creates/updates these conversion functions, and a few more utilities\n * like cleanRange, and makeCalcdata\n *\n * also clears the autorange bounds ._min and ._max\n * and the autotick constraints ._minDtick, ._forceTick0\n */\nmodule.exports = function setConvert(ax, fullLayout) {\n    fullLayout = fullLayout || {};\n\n    var axLetter = (ax._id || 'x').charAt(0);\n\n    // clipMult: how many axis lengths past the edge do we render?\n    // for panning, 1-2 would suffice, but for zooming more is nice.\n    // also, clipping can affect the direction of lines off the edge...\n    var clipMult = 10;\n\n    function toLog(v, clip) {\n        if(v > 0) return Math.log(v) / Math.LN10;\n\n        else if(v <= 0 && clip && ax.range && ax.range.length === 2) {\n            // clip NaN (ie past negative infinity) to clipMult axis\n            // length past the negative edge\n            var r0 = ax.range[0],\n                r1 = ax.range[1];\n            return 0.5 * (r0 + r1 - 3 * clipMult * Math.abs(r0 - r1));\n        }\n\n        else return BADNUM;\n    }\n\n    /*\n     * wrapped dateTime2ms that:\n     * - accepts ms numbers for backward compatibility\n     * - inserts a dummy arg so calendar is the 3rd arg (see notes below).\n     * - defaults to ax.calendar\n     */\n    function dt2ms(v, _, calendar) {\n        // NOTE: Changed this behavior: previously we took any numeric value\n        // to be a ms, even if it was a string that could be a bare year.\n        // Now we convert it as a date if at all possible, and only try\n        // as (local) ms if that fails.\n        var ms = dateTime2ms(v, calendar || ax.calendar);\n        if(ms === BADNUM) {\n            if(isNumeric(v)) ms = dateTime2ms(new Date(+v));\n            else return BADNUM;\n        }\n        return ms;\n    }\n\n    // wrapped ms2DateTime to insert default ax.calendar\n    function ms2dt(v, r, calendar) {\n        return ms2DateTime(v, r, calendar || ax.calendar);\n    }\n\n    function getCategoryName(v) {\n        return ax._categories[Math.round(v)];\n    }\n\n    /*\n     * setCategoryIndex: return the index of category v,\n     * inserting it in the list if it's not already there\n     *\n     * this will enter the categories in the order it\n     * encounters them, ie all the categories from the\n     * first data set, then all the ones from the second\n     * that aren't in the first etc.\n     *\n     * it is assumed that this function is being invoked in the\n     * already sorted category order; otherwise there would be\n     * a disconnect between the array and the index returned\n     */\n    function setCategoryIndex(v) {\n        if(v !== null && v !== undefined) {\n            if(ax._categoriesMap === undefined) {\n                ax._categoriesMap = {};\n            }\n\n            if(ax._categoriesMap[v] !== undefined) {\n                return ax._categoriesMap[v];\n            } else {\n                ax._categories.push(v);\n\n                var curLength = ax._categories.length - 1;\n                ax._categoriesMap[v] = curLength;\n\n                return curLength;\n            }\n        }\n        return BADNUM;\n    }\n\n    function getCategoryIndex(v) {\n        // d2l/d2c variant that that won't add categories but will also\n        // allow numbers to be mapped to the linearized axis positions\n        if(ax._categoriesMap) {\n            var index = ax._categoriesMap[v];\n            if(index !== undefined) return index;\n        }\n\n        if(isNumeric(v)) return +v;\n    }\n\n    function l2p(v) {\n        if(!isNumeric(v)) return BADNUM;\n\n        // include 2 fractional digits on pixel, for PDF zooming etc\n        return d3.round(ax._b + ax._m * v, 2);\n    }\n\n    function p2l(px) { return (px - ax._b) / ax._m; }\n\n    // conversions among c/l/p are fairly simple - do them together for all axis types\n    ax.c2l = (ax.type === 'log') ? toLog : ensureNumber;\n    ax.l2c = (ax.type === 'log') ? fromLog : ensureNumber;\n\n    ax.l2p = l2p;\n    ax.p2l = p2l;\n\n    ax.c2p = (ax.type === 'log') ? function(v, clip) { return l2p(toLog(v, clip)); } : l2p;\n    ax.p2c = (ax.type === 'log') ? function(px) { return fromLog(p2l(px)); } : p2l;\n\n    /*\n     * now type-specific conversions for **ALL** other combinations\n     * they're all written out, instead of being combinations of each other, for\n     * both clarity and speed.\n     */\n    if(['linear', '-'].indexOf(ax.type) !== -1) {\n        // all are data vals, but d and r need cleaning\n        ax.d2r = ax.r2d = ax.d2c = ax.r2c = ax.d2l = ax.r2l = cleanNumber;\n        ax.c2d = ax.c2r = ax.l2d = ax.l2r = ensureNumber;\n\n        ax.d2p = ax.r2p = function(v) { return ax.l2p(cleanNumber(v)); };\n        ax.p2d = ax.p2r = p2l;\n\n        ax.cleanPos = ensureNumber;\n    }\n    else if(ax.type === 'log') {\n        // d and c are data vals, r and l are logged (but d and r need cleaning)\n        ax.d2r = ax.d2l = function(v, clip) { return toLog(cleanNumber(v), clip); };\n        ax.r2d = ax.r2c = function(v) { return fromLog(cleanNumber(v)); };\n\n        ax.d2c = ax.r2l = cleanNumber;\n        ax.c2d = ax.l2r = ensureNumber;\n\n        ax.c2r = toLog;\n        ax.l2d = fromLog;\n\n        ax.d2p = function(v, clip) { return ax.l2p(ax.d2r(v, clip)); };\n        ax.p2d = function(px) { return fromLog(p2l(px)); };\n\n        ax.r2p = function(v) { return ax.l2p(cleanNumber(v)); };\n        ax.p2r = p2l;\n\n        ax.cleanPos = ensureNumber;\n    }\n    else if(ax.type === 'date') {\n        // r and d are date strings, l and c are ms\n\n        /*\n         * Any of these functions with r and d on either side, calendar is the\n         * **3rd** argument. log has reserved the second argument.\n         *\n         * Unless you need the special behavior of the second arg (ms2DateTime\n         * uses this to limit precision, toLog uses true to clip negatives\n         * to offscreen low rather than undefined), it's safe to pass 0.\n         */\n        ax.d2r = ax.r2d = Lib.identity;\n\n        ax.d2c = ax.r2c = ax.d2l = ax.r2l = dt2ms;\n        ax.c2d = ax.c2r = ax.l2d = ax.l2r = ms2dt;\n\n        ax.d2p = ax.r2p = function(v, _, calendar) { return ax.l2p(dt2ms(v, 0, calendar)); };\n        ax.p2d = ax.p2r = function(px, r, calendar) { return ms2dt(p2l(px), r, calendar); };\n\n        ax.cleanPos = function(v) { return Lib.cleanDate(v, BADNUM, ax.calendar); };\n    }\n    else if(ax.type === 'category') {\n        // d is categories (string)\n        // c and l are indices (numbers)\n        // r is categories or numbers\n\n        ax.d2c = ax.d2l = setCategoryIndex;\n        ax.r2d = ax.c2d = ax.l2d = getCategoryName;\n\n        ax.d2r = ax.d2l_noadd = getCategoryIndex;\n\n        ax.r2c = function(v) {\n            var index = getCategoryIndex(v);\n            return index !== undefined ? index : ax.fraction2r(0.5);\n        };\n\n        ax.l2r = ax.c2r = ensureNumber;\n        ax.r2l = getCategoryIndex;\n\n        ax.d2p = function(v) { return ax.l2p(ax.r2c(v)); };\n        ax.p2d = function(px) { return getCategoryName(p2l(px)); };\n        ax.r2p = ax.d2p;\n        ax.p2r = p2l;\n\n        ax.cleanPos = function(v) {\n            if(typeof v === 'string' && v !== '') return v;\n            return ensureNumber(v);\n        };\n    }\n\n    // find the range value at the specified (linear) fraction of the axis\n    ax.fraction2r = function(v) {\n        var rl0 = ax.r2l(ax.range[0]),\n            rl1 = ax.r2l(ax.range[1]);\n        return ax.l2r(rl0 + v * (rl1 - rl0));\n    };\n\n    // find the fraction of the range at the specified range value\n    ax.r2fraction = function(v) {\n        var rl0 = ax.r2l(ax.range[0]),\n            rl1 = ax.r2l(ax.range[1]);\n        return (ax.r2l(v) - rl0) / (rl1 - rl0);\n    };\n\n    /*\n     * cleanRange: make sure range is a couplet of valid & distinct values\n     * keep numbers away from the limits of floating point numbers,\n     * and dates away from the ends of our date system (+/- 9999 years)\n     *\n     * optional param rangeAttr: operate on a different attribute, like\n     * ax._r, rather than ax.range\n     */\n    ax.cleanRange = function(rangeAttr, opts) {\n        if(!opts) opts = {};\n        if(!rangeAttr) rangeAttr = 'range';\n\n        var range = Lib.nestedProperty(ax, rangeAttr).get();\n        var i, dflt;\n\n        if(ax.type === 'date') dflt = Lib.dfltRange(ax.calendar);\n        else if(axLetter === 'y') dflt = constants.DFLTRANGEY;\n        else dflt = opts.dfltRange || constants.DFLTRANGEX;\n\n        // make sure we don't later mutate the defaults\n        dflt = dflt.slice();\n\n        if(!range || range.length !== 2) {\n            Lib.nestedProperty(ax, rangeAttr).set(dflt);\n            return;\n        }\n\n        if(ax.type === 'date') {\n            // check if milliseconds or js date objects are provided for range\n            // and convert to date strings\n            range[0] = Lib.cleanDate(range[0], BADNUM, ax.calendar);\n            range[1] = Lib.cleanDate(range[1], BADNUM, ax.calendar);\n        }\n\n        for(i = 0; i < 2; i++) {\n            if(ax.type === 'date') {\n                if(!Lib.isDateTime(range[i], ax.calendar)) {\n                    ax[rangeAttr] = dflt;\n                    break;\n                }\n\n                if(ax.r2l(range[0]) === ax.r2l(range[1])) {\n                    // split by +/- 1 second\n                    var linCenter = Lib.constrain(ax.r2l(range[0]),\n                        Lib.MIN_MS + 1000, Lib.MAX_MS - 1000);\n                    range[0] = ax.l2r(linCenter - 1000);\n                    range[1] = ax.l2r(linCenter + 1000);\n                    break;\n                }\n            }\n            else {\n                if(!isNumeric(range[i])) {\n                    if(isNumeric(range[1 - i])) {\n                        range[i] = range[1 - i] * (i ? 10 : 0.1);\n                    }\n                    else {\n                        ax[rangeAttr] = dflt;\n                        break;\n                    }\n                }\n\n                if(range[i] < -FP_SAFE) range[i] = -FP_SAFE;\n                else if(range[i] > FP_SAFE) range[i] = FP_SAFE;\n\n                if(range[0] === range[1]) {\n                    // somewhat arbitrary: split by 1 or 1ppm, whichever is bigger\n                    var inc = Math.max(1, Math.abs(range[0] * 1e-6));\n                    range[0] -= inc;\n                    range[1] += inc;\n                }\n            }\n        }\n    };\n\n    // set scaling to pixels\n    ax.setScale = function(usePrivateRange) {\n        var gs = fullLayout._size;\n\n        // TODO cleaner way to handle this case\n        if(!ax._categories) ax._categories = [];\n        // Add a map to optimize the performance of category collection\n        if(!ax._categoriesMap) ax._categoriesMap = {};\n\n        // make sure we have a domain (pull it in from the axis\n        // this one is overlaying if necessary)\n        if(ax.overlaying) {\n            var ax2 = axisIds.getFromId({ _fullLayout: fullLayout }, ax.overlaying);\n            ax.domain = ax2.domain;\n        }\n\n        // While transitions are occuring, occurring, we get a double-transform\n        // issue if we transform the drawn layer *and* use the new axis range to\n        // draw the data. This allows us to construct setConvert using the pre-\n        // interaction values of the range:\n        var rangeAttr = (usePrivateRange && ax._r) ? '_r' : 'range',\n            calendar = ax.calendar;\n        ax.cleanRange(rangeAttr);\n\n        var rl0 = ax.r2l(ax[rangeAttr][0], calendar),\n            rl1 = ax.r2l(ax[rangeAttr][1], calendar);\n\n        if(axLetter === 'y') {\n            ax._offset = gs.t + (1 - ax.domain[1]) * gs.h;\n            ax._length = gs.h * (ax.domain[1] - ax.domain[0]);\n            ax._m = ax._length / (rl0 - rl1);\n            ax._b = -ax._m * rl1;\n        }\n        else {\n            ax._offset = gs.l + ax.domain[0] * gs.w;\n            ax._length = gs.w * (ax.domain[1] - ax.domain[0]);\n            ax._m = ax._length / (rl1 - rl0);\n            ax._b = -ax._m * rl0;\n        }\n\n        if(!isFinite(ax._m) || !isFinite(ax._b)) {\n            fullLayout._replotting = false;\n            throw new Error('Something went wrong with axis scaling');\n        }\n    };\n\n    // makeCalcdata: takes an x or y array and converts it\n    // to a position on the axis object \"ax\"\n    // inputs:\n    //      trace - a data object from gd.data\n    //      axLetter - a string, either 'x' or 'y', for which item\n    //          to convert (TODO: is this now always the same as\n    //          the first letter of ax._id?)\n    // in case the expected data isn't there, make a list of\n    // integers based on the opposite data\n    ax.makeCalcdata = function(trace, axLetter) {\n        var arrayIn, arrayOut, i;\n\n        var cal = ax.type === 'date' && trace[axLetter + 'calendar'];\n\n        if(axLetter in trace) {\n            arrayIn = trace[axLetter];\n            arrayOut = new Array(arrayIn.length);\n\n            for(i = 0; i < arrayIn.length; i++) {\n                arrayOut[i] = ax.d2c(arrayIn[i], 0, cal);\n            }\n        }\n        else {\n            var v0 = ((axLetter + '0') in trace) ?\n                    ax.d2c(trace[axLetter + '0'], 0, cal) : 0,\n                dv = (trace['d' + axLetter]) ?\n                    Number(trace['d' + axLetter]) : 1;\n\n            // the opposing data, for size if we have x and dx etc\n            arrayIn = trace[{x: 'y', y: 'x'}[axLetter]];\n            arrayOut = new Array(arrayIn.length);\n\n            for(i = 0; i < arrayIn.length; i++) arrayOut[i] = v0 + i * dv;\n        }\n        return arrayOut;\n    };\n\n    ax.isValidRange = function(range) {\n        return (\n            Array.isArray(range) &&\n            range.length === 2 &&\n            isNumeric(ax.r2l(range[0])) &&\n            isNumeric(ax.r2l(range[1]))\n        );\n    };\n\n    ax.isPtWithinRange = function(d, calendar) {\n        var coord = ax.c2l(d[axLetter], null, calendar);\n\n        return (\n            coord >= ax.r2l(ax.range[0]) &&\n            coord <= ax.r2l(ax.range[1])\n        );\n    };\n\n    // for autoranging: arrays of objects:\n    //      {val: axis value, pad: pixel padding}\n    // on the low and high sides\n    ax._min = [];\n    ax._max = [];\n\n    // Propagate localization into the axis so that\n    // methods in Axes can use it w/o having to pass fullLayout\n    // Default (non-d3) number formatting uses separators directly\n    // dates and d3-formatted numbers use the d3 locale\n    // Fall back on default format for dummy axes that don't care about formatting\n    var locale = fullLayout._d3locale;\n    if(ax.type === 'date') {\n        ax._dateFormat = locale ? locale.timeFormat.utc : d3.time.format.utc;\n    }\n    // occasionally we need _numFormat to pass through\n    // even though it won't be needed by this axis\n    ax._separators = fullLayout.separators;\n    ax._numFormat = locale ? locale.numberFormat : d3.format;\n\n    // and for bar charts and box plots: reset forced minimum tick spacing\n    delete ax._minDtick;\n    delete ax._forceTick0;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/set_convert.js\n// module id = 97\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nmodule.exports = function autoType(array, calendar) {\n    if(moreDates(array, calendar)) return 'date';\n    if(category(array)) return 'category';\n    if(linearOK(array)) return 'linear';\n    else return '-';\n};\n\n// is there at least one number in array? If not, we should leave\n// ax.type empty so it can be autoset later\nfunction linearOK(array) {\n    if(!array) return false;\n\n    for(var i = 0; i < array.length; i++) {\n        if(isNumeric(array[i])) return true;\n    }\n\n    return false;\n}\n\n// does the array a have mostly dates rather than numbers?\n// note: some values can be neither (such as blanks, text)\n// 2- or 4-digit integers can be both, so require twice as many\n// dates as non-dates, to exclude cases with mostly 2 & 4 digit\n// numbers and a few dates\nfunction moreDates(a, calendar) {\n    var dcnt = 0,\n        ncnt = 0,\n        // test at most 1000 points, evenly spaced\n        inc = Math.max(1, (a.length - 1) / 1000),\n        ai;\n\n    for(var i = 0; i < a.length; i += inc) {\n        ai = a[Math.round(i)];\n        if(Lib.isDateTime(ai, calendar)) dcnt += 1;\n        if(isNumeric(ai)) ncnt += 1;\n    }\n\n    return (dcnt > ncnt * 2);\n}\n\n// are the (x,y)-values in gd.data mostly text?\n// require twice as many categories as numbers\nfunction category(a) {\n    // test at most 1000 points\n    var inc = Math.max(1, (a.length - 1) / 1000),\n        curvenums = 0,\n        curvecats = 0,\n        ai;\n\n    for(var i = 0; i < a.length; i += inc) {\n        ai = a[Math.round(i)];\n        if(Lib.cleanNumber(ai) !== BADNUM) curvenums++;\n        else if(typeof ai === 'string' && ai !== '' && ai !== 'None') curvecats++;\n    }\n\n    return curvecats > curvenums * 2;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/axis_autotype.js\n// module id = 98\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nexports.manage = require('./manage');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/modebar/index.js\n// module id = 99\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Plotly = require('../plotly');\nvar Lib = require('../lib');\n\nvar helpers = require('../snapshot/helpers');\nvar toSVG = require('../snapshot/tosvg');\nvar svgToImg = require('../snapshot/svgtoimg');\n\nvar attrs = {\n    format: {\n        valType: 'enumerated',\n        values: ['png', 'jpeg', 'webp', 'svg'],\n        dflt: 'png',\n        description: 'Sets the format of exported image.'\n    },\n    width: {\n        valType: 'number',\n        min: 1,\n        description: [\n            'Sets the exported image width.',\n            'Defaults to the value found in `layout.width`'\n        ].join(' ')\n    },\n    height: {\n        valType: 'number',\n        min: 1,\n        description: [\n            'Sets the exported image height.',\n            'Defaults to the value found in `layout.height`'\n        ].join(' ')\n    },\n    scale: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        description: [\n            'Sets a scaling for the generated image.',\n            'If set, all features of a graphs (e.g. text, line width)',\n            'are scaled, unlike simply setting',\n            'a bigger *width* and *height*.'\n        ].join(' ')\n    },\n    setBackground: {\n        valType: 'any',\n        dflt: false,\n        description: [\n            'Sets the image background mode.',\n            'By default, the image background is determined by `layout.paper_bgcolor`,',\n            'the *transparent* mode.',\n            'One might consider setting `setBackground` to *opaque*',\n            'when exporting a *jpeg* image as JPEGs do not support opacity.'\n        ].join(' ')\n    },\n    imageDataOnly: {\n        valType: 'boolean',\n        dflt: false,\n        description: [\n            'Determines whether or not the return value is prefixed by',\n            'the image format\\'s corresponding \\'data:image;\\' spec.'\n        ].join(' ')\n    }\n};\n\nvar IMAGE_URL_PREFIX = /^data:image\\/\\w+;base64,/;\n\n/** Plotly.toImage\n *\n * @param {object | string | HTML div} gd\n *   can either be a data/layout/config object\n *   or an existing graph <div>\n *   or an id to an existing graph <div>\n * @param {object} opts (see above)\n * @return {promise}\n */\nfunction toImage(gd, opts) {\n    opts = opts || {};\n\n    var data;\n    var layout;\n    var config;\n\n    if(Lib.isPlainObject(gd)) {\n        data = gd.data || [];\n        layout = gd.layout || {};\n        config = gd.config || {};\n    } else {\n        gd = Lib.getGraphDiv(gd);\n        data = Lib.extendDeep([], gd.data);\n        layout = Lib.extendDeep({}, gd.layout);\n        config = gd._context;\n    }\n\n    function isImpliedOrValid(attr) {\n        return !(attr in opts) || Lib.validate(opts[attr], attrs[attr]);\n    }\n\n    if(!isImpliedOrValid('width') || !isImpliedOrValid('height')) {\n        throw new Error('Height and width should be pixel values.');\n    }\n\n    if(!isImpliedOrValid('format')) {\n        throw new Error('Image format is not jpeg, png, svg or webp.');\n    }\n\n    var fullOpts = {};\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(opts, fullOpts, attrs, attr, dflt);\n    }\n\n    var format = coerce('format');\n    var width = coerce('width');\n    var height = coerce('height');\n    var scale = coerce('scale');\n    var setBackground = coerce('setBackground');\n    var imageDataOnly = coerce('imageDataOnly');\n\n    // put the cloned div somewhere off screen before attaching to DOM\n    var clonedGd = document.createElement('div');\n    clonedGd.style.position = 'absolute';\n    clonedGd.style.left = '-5000px';\n    document.body.appendChild(clonedGd);\n\n    // extend layout with image options\n    var layoutImage = Lib.extendFlat({}, layout);\n    if(width) layoutImage.width = width;\n    if(height) layoutImage.height = height;\n\n    // extend config for static plot\n    var configImage = Lib.extendFlat({}, config, {\n        staticPlot: true,\n        setBackground: setBackground\n    });\n\n    var redrawFunc = helpers.getRedrawFunc(clonedGd);\n\n    function wait() {\n        return new Promise(function(resolve) {\n            setTimeout(resolve, helpers.getDelay(clonedGd._fullLayout));\n        });\n    }\n\n    function convert() {\n        return new Promise(function(resolve, reject) {\n            var svg = toSVG(clonedGd, format, scale);\n            var width = clonedGd._fullLayout.width;\n            var height = clonedGd._fullLayout.height;\n\n            Plotly.purge(clonedGd);\n            document.body.removeChild(clonedGd);\n\n            if(format === 'svg') {\n                if(imageDataOnly) {\n                    return resolve(svg);\n                } else {\n                    return resolve('data:image/svg+xml,' + encodeURIComponent(svg));\n                }\n            }\n\n            var canvas = document.createElement('canvas');\n            canvas.id = Lib.randstr();\n\n            svgToImg({\n                format: format,\n                width: width,\n                height: height,\n                scale: scale,\n                canvas: canvas,\n                svg: svg,\n                // ask svgToImg to return a Promise\n                //  rather than EventEmitter\n                //  leave EventEmitter for backward\n                //  compatibility\n                promise: true\n            })\n            .then(resolve)\n            .catch(reject);\n        });\n    }\n\n    function urlToImageData(url) {\n        if(imageDataOnly) {\n            return url.replace(IMAGE_URL_PREFIX, '');\n        } else {\n            return url;\n        }\n    }\n\n    return new Promise(function(resolve, reject) {\n        Plotly.plot(clonedGd, data, layoutImage, configImage)\n            .then(redrawFunc)\n            .then(wait)\n            .then(convert)\n            .then(function(url) { resolve(urlToImageData(url)); })\n            .catch(function(err) { reject(err); });\n    });\n}\n\nmodule.exports = toImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plot_api/to_image.js\n// module id = 100\n// module chunks = 0","'use strict'\r\n\r\nvar isBrowser = require('is-browser')\r\nvar hasHover\r\n\r\nif (typeof global.matchMedia === 'function') {\r\n\thasHover = !global.matchMedia('(hover: none)').matches\r\n}\r\nelse {\r\n\thasHover = isBrowser\r\n}\r\n\r\nmodule.exports = hasHover\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/has-hover/index.js\n// module id = 101\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 102\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../lib');\nvar config = require('../plot_api/plot_config');\n\n\n/**\n * Copy arg array *without* removing `undefined` values from objects.\n *\n * @param gd\n * @param args\n * @returns {Array}\n */\nfunction copyArgArray(gd, args) {\n    var copy = [];\n    var arg;\n\n    for(var i = 0; i < args.length; i++) {\n        arg = args[i];\n\n        if(arg === gd) copy[i] = arg;\n        else if(typeof arg === 'object') {\n            copy[i] = Array.isArray(arg) ?\n                Lib.extendDeep([], arg) :\n                Lib.extendDeepAll({}, arg);\n        }\n        else copy[i] = arg;\n    }\n\n    return copy;\n}\n\n\n// -----------------------------------------------------\n// Undo/Redo queue for plots\n// -----------------------------------------------------\n\n\nvar queue = {};\n\n// TODO: disable/enable undo and redo buttons appropriately\n\n/**\n * Add an item to the undoQueue for a graphDiv\n *\n * @param gd\n * @param undoFunc Function undo this operation\n * @param undoArgs Args to supply undoFunc with\n * @param redoFunc Function to redo this operation\n * @param redoArgs Args to supply redoFunc with\n */\nqueue.add = function(gd, undoFunc, undoArgs, redoFunc, redoArgs) {\n    var queueObj,\n        queueIndex;\n\n    // make sure we have the queue and our position in it\n    gd.undoQueue = gd.undoQueue || {index: 0, queue: [], sequence: false};\n    queueIndex = gd.undoQueue.index;\n\n    // if we're already playing an undo or redo, or if this is an auto operation\n    // (like pane resize... any others?) then we don't save this to the undo queue\n    if(gd.autoplay) {\n        if(!gd.undoQueue.inSequence) gd.autoplay = false;\n        return;\n    }\n\n    // if we're not in a sequence or are just starting, we need a new queue item\n    if(!gd.undoQueue.sequence || gd.undoQueue.beginSequence) {\n        queueObj = {undo: {calls: [], args: []}, redo: {calls: [], args: []}};\n        gd.undoQueue.queue.splice(queueIndex, gd.undoQueue.queue.length - queueIndex, queueObj);\n        gd.undoQueue.index += 1;\n    } else {\n        queueObj = gd.undoQueue.queue[queueIndex - 1];\n    }\n    gd.undoQueue.beginSequence = false;\n\n    // we unshift to handle calls for undo in a forward for loop later\n    if(queueObj) {\n        queueObj.undo.calls.unshift(undoFunc);\n        queueObj.undo.args.unshift(undoArgs);\n        queueObj.redo.calls.push(redoFunc);\n        queueObj.redo.args.push(redoArgs);\n    }\n\n    if(gd.undoQueue.queue.length > config.queueLength) {\n        gd.undoQueue.queue.shift();\n        gd.undoQueue.index--;\n    }\n};\n\n/**\n * Begin a sequence of undoQueue changes\n *\n * @param gd\n */\nqueue.startSequence = function(gd) {\n    gd.undoQueue = gd.undoQueue || {index: 0, queue: [], sequence: false};\n    gd.undoQueue.sequence = true;\n    gd.undoQueue.beginSequence = true;\n};\n\n/**\n * Stop a sequence of undoQueue changes\n *\n * Call this *after* you're sure your undo chain has ended\n *\n * @param gd\n */\nqueue.stopSequence = function(gd) {\n    gd.undoQueue = gd.undoQueue || {index: 0, queue: [], sequence: false};\n    gd.undoQueue.sequence = false;\n    gd.undoQueue.beginSequence = false;\n};\n\n/**\n * Move one step back in the undo queue, and undo the object there.\n *\n * @param gd\n */\nqueue.undo = function undo(gd) {\n    var queueObj, i;\n\n    if(gd.framework && gd.framework.isPolar) {\n        gd.framework.undo();\n        return;\n    }\n    if(gd.undoQueue === undefined ||\n            isNaN(gd.undoQueue.index) ||\n            gd.undoQueue.index <= 0) {\n        return;\n    }\n\n    // index is pointing to next *forward* queueObj, point to the one we're undoing\n    gd.undoQueue.index--;\n\n    // get the queueObj for instructions on how to undo\n    queueObj = gd.undoQueue.queue[gd.undoQueue.index];\n\n    // this sequence keeps things from adding to the queue during undo/redo\n    gd.undoQueue.inSequence = true;\n    for(i = 0; i < queueObj.undo.calls.length; i++) {\n        queue.plotDo(gd, queueObj.undo.calls[i], queueObj.undo.args[i]);\n    }\n    gd.undoQueue.inSequence = false;\n    gd.autoplay = false;\n};\n\n/**\n * Redo the current object in the undo, then move forward in the queue.\n *\n * @param gd\n */\nqueue.redo = function redo(gd) {\n    var queueObj, i;\n\n    if(gd.framework && gd.framework.isPolar) {\n        gd.framework.redo();\n        return;\n    }\n    if(gd.undoQueue === undefined ||\n            isNaN(gd.undoQueue.index) ||\n            gd.undoQueue.index >= gd.undoQueue.queue.length) {\n        return;\n    }\n\n    // get the queueObj for instructions on how to undo\n    queueObj = gd.undoQueue.queue[gd.undoQueue.index];\n\n    // this sequence keeps things from adding to the queue during undo/redo\n    gd.undoQueue.inSequence = true;\n    for(i = 0; i < queueObj.redo.calls.length; i++) {\n        queue.plotDo(gd, queueObj.redo.calls[i], queueObj.redo.args[i]);\n    }\n    gd.undoQueue.inSequence = false;\n    gd.autoplay = false;\n\n    // index is pointing to the thing we just redid, move it\n    gd.undoQueue.index++;\n};\n\n/**\n * Called by undo/redo to make the actual changes.\n *\n * Not meant to be called publically, but included for mocking out in tests.\n *\n * @param gd\n * @param func\n * @param args\n */\nqueue.plotDo = function(gd, func, args) {\n    gd.autoplay = true;\n\n    // this *won't* copy gd and it preserves `undefined` properties!\n    args = copyArgArray(gd, args);\n\n    // call the supplied function\n    func.apply(null, args);\n};\n\nmodule.exports = queue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/queue.js\n// module id = 103\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\nvar d3 = require('d3');\nvar Lib = require('../../../lib');\nvar extendDeepAll = Lib.extendDeepAll;\nvar MID_SHIFT = require('../../../constants/alignment').MID_SHIFT;\n\nvar µ = module.exports = { version: '0.2.2' };\n\nµ.Axis = function module() {\n    var config = {\n        data: [],\n        layout: {}\n    }, inputConfig = {}, liveConfig = {};\n    var svg, container, dispatch = d3.dispatch('hover'), radialScale, angularScale;\n    var exports = {};\n    function render(_container) {\n        container = _container || container;\n        var data = config.data;\n        var axisConfig = config.layout;\n        if (typeof container == 'string' || container.nodeName) container = d3.select(container);\n        container.datum(data).each(function(_data, _index) {\n            var dataOriginal = _data.slice();\n            liveConfig = {\n                data: µ.util.cloneJson(dataOriginal),\n                layout: µ.util.cloneJson(axisConfig)\n            };\n            var colorIndex = 0;\n            dataOriginal.forEach(function(d, i) {\n                if (!d.color) {\n                    d.color = axisConfig.defaultColorRange[colorIndex];\n                    colorIndex = (colorIndex + 1) % axisConfig.defaultColorRange.length;\n                }\n                if (!d.strokeColor) {\n                    d.strokeColor = d.geometry === 'LinePlot' ? d.color : d3.rgb(d.color).darker().toString();\n                }\n                liveConfig.data[i].color = d.color;\n                liveConfig.data[i].strokeColor = d.strokeColor;\n                liveConfig.data[i].strokeDash = d.strokeDash;\n                liveConfig.data[i].strokeSize = d.strokeSize;\n            });\n            var data = dataOriginal.filter(function(d, i) {\n                var visible = d.visible;\n                return typeof visible === 'undefined' || visible === true;\n            });\n            var isStacked = false;\n            var dataWithGroupId = data.map(function(d, i) {\n                isStacked = isStacked || typeof d.groupId !== 'undefined';\n                return d;\n            });\n            if (isStacked) {\n                var grouped = d3.nest().key(function(d, i) {\n                    return typeof d.groupId != 'undefined' ? d.groupId : 'unstacked';\n                }).entries(dataWithGroupId);\n                var dataYStack = [];\n                var stacked = grouped.map(function(d, i) {\n                    if (d.key === 'unstacked') return d.values; else {\n                        var prevArray = d.values[0].r.map(function(d, i) {\n                            return 0;\n                        });\n                        d.values.forEach(function(d, i, a) {\n                            d.yStack = [ prevArray ];\n                            dataYStack.push(prevArray);\n                            prevArray = µ.util.sumArrays(d.r, prevArray);\n                        });\n                        return d.values;\n                    }\n                });\n                data = d3.merge(stacked);\n            }\n            data.forEach(function(d, i) {\n                d.t = Array.isArray(d.t[0]) ? d.t : [ d.t ];\n                d.r = Array.isArray(d.r[0]) ? d.r : [ d.r ];\n            });\n            var radius = Math.min(axisConfig.width - axisConfig.margin.left - axisConfig.margin.right, axisConfig.height - axisConfig.margin.top - axisConfig.margin.bottom) / 2;\n            radius = Math.max(10, radius);\n            var chartCenter = [ axisConfig.margin.left + radius, axisConfig.margin.top + radius ];\n            var extent;\n            if (isStacked) {\n                var highestStackedValue = d3.max(µ.util.sumArrays(µ.util.arrayLast(data).r[0], µ.util.arrayLast(dataYStack)));\n                extent = [ 0, highestStackedValue ];\n            } else extent = d3.extent(µ.util.flattenArray(data.map(function(d, i) {\n                return d.r;\n            })));\n            if (axisConfig.radialAxis.domain != µ.DATAEXTENT) extent[0] = 0;\n            radialScale = d3.scale.linear().domain(axisConfig.radialAxis.domain != µ.DATAEXTENT && axisConfig.radialAxis.domain ? axisConfig.radialAxis.domain : extent).range([ 0, radius ]);\n            liveConfig.layout.radialAxis.domain = radialScale.domain();\n            var angularDataMerged = µ.util.flattenArray(data.map(function(d, i) {\n                return d.t;\n            }));\n            var isOrdinal = typeof angularDataMerged[0] === 'string';\n            var ticks;\n            if (isOrdinal) {\n                angularDataMerged = µ.util.deduplicate(angularDataMerged);\n                ticks = angularDataMerged.slice();\n                angularDataMerged = d3.range(angularDataMerged.length);\n                data = data.map(function(d, i) {\n                    var result = d;\n                    d.t = [ angularDataMerged ];\n                    if (isStacked) result.yStack = d.yStack;\n                    return result;\n                });\n            }\n            var hasOnlyLineOrDotPlot = data.filter(function(d, i) {\n                return d.geometry === 'LinePlot' || d.geometry === 'DotPlot';\n            }).length === data.length;\n            var needsEndSpacing = axisConfig.needsEndSpacing === null ? isOrdinal || !hasOnlyLineOrDotPlot : axisConfig.needsEndSpacing;\n            var useProvidedDomain = axisConfig.angularAxis.domain && axisConfig.angularAxis.domain != µ.DATAEXTENT && !isOrdinal && axisConfig.angularAxis.domain[0] >= 0;\n            var angularDomain = useProvidedDomain ? axisConfig.angularAxis.domain : d3.extent(angularDataMerged);\n            var angularDomainStep = Math.abs(angularDataMerged[1] - angularDataMerged[0]);\n            if (hasOnlyLineOrDotPlot && !isOrdinal) angularDomainStep = 0;\n            var angularDomainWithPadding = angularDomain.slice();\n            if (needsEndSpacing && isOrdinal) angularDomainWithPadding[1] += angularDomainStep;\n            var tickCount = axisConfig.angularAxis.ticksCount || 4;\n            if (tickCount > 8) tickCount = tickCount / (tickCount / 8) + tickCount % 8;\n            if (axisConfig.angularAxis.ticksStep) {\n                tickCount = (angularDomainWithPadding[1] - angularDomainWithPadding[0]) / tickCount;\n            }\n            var angularTicksStep = axisConfig.angularAxis.ticksStep || (angularDomainWithPadding[1] - angularDomainWithPadding[0]) / (tickCount * (axisConfig.minorTicks + 1));\n            if (ticks) angularTicksStep = Math.max(Math.round(angularTicksStep), 1);\n            if (!angularDomainWithPadding[2]) angularDomainWithPadding[2] = angularTicksStep;\n            var angularAxisRange = d3.range.apply(this, angularDomainWithPadding);\n            angularAxisRange = angularAxisRange.map(function(d, i) {\n                return parseFloat(d.toPrecision(12));\n            });\n            angularScale = d3.scale.linear().domain(angularDomainWithPadding.slice(0, 2)).range(axisConfig.direction === 'clockwise' ? [ 0, 360 ] : [ 360, 0 ]);\n            liveConfig.layout.angularAxis.domain = angularScale.domain();\n            liveConfig.layout.angularAxis.endPadding = needsEndSpacing ? angularDomainStep : 0;\n            svg = d3.select(this).select('svg.chart-root');\n            if (typeof svg === 'undefined' || svg.empty()) {\n                var skeleton = \"<svg xmlns='http://www.w3.org/2000/svg' class='chart-root'>' + '<g class='outer-group'>' + '<g class='chart-group'>' + '<circle class='background-circle'></circle>' + '<g class='geometry-group'></g>' + '<g class='radial axis-group'>' + '<circle class='outside-circle'></circle>' + '</g>' + '<g class='angular axis-group'></g>' + '<g class='guides-group'><line></line><circle r='0'></circle></g>' + '</g>' + '<g class='legend-group'></g>' + '<g class='tooltips-group'></g>' + '<g class='title-group'><text></text></g>' + '</g>' + '</svg>\";\n                var doc = new DOMParser().parseFromString(skeleton, 'application/xml');\n                var newSvg = this.appendChild(this.ownerDocument.importNode(doc.documentElement, true));\n                svg = d3.select(newSvg);\n            }\n            svg.select('.guides-group').style({\n                'pointer-events': 'none'\n            });\n            svg.select('.angular.axis-group').style({\n                'pointer-events': 'none'\n            });\n            svg.select('.radial.axis-group').style({\n                'pointer-events': 'none'\n            });\n            var chartGroup = svg.select('.chart-group');\n            var lineStyle = {\n                fill: 'none',\n                stroke: axisConfig.tickColor\n            };\n            var fontStyle = {\n                'font-size': axisConfig.font.size,\n                'font-family': axisConfig.font.family,\n                fill: axisConfig.font.color,\n                'text-shadow': [ '-1px 0px', '1px -1px', '-1px 1px', '1px 1px' ].map(function(d, i) {\n                    return ' ' + d + ' 0 ' + axisConfig.font.outlineColor;\n                }).join(',')\n            };\n            var legendContainer;\n            if (axisConfig.showLegend) {\n                legendContainer = svg.select('.legend-group').attr({\n                    transform: 'translate(' + [ radius, axisConfig.margin.top ] + ')'\n                }).style({\n                    display: 'block'\n                });\n                var elements = data.map(function(d, i) {\n                    var datumClone = µ.util.cloneJson(d);\n                    datumClone.symbol = d.geometry === 'DotPlot' ? d.dotType || 'circle' : d.geometry != 'LinePlot' ? 'square' : 'line';\n                    datumClone.visibleInLegend = typeof d.visibleInLegend === 'undefined' || d.visibleInLegend;\n                    datumClone.color = d.geometry === 'LinePlot' ? d.strokeColor : d.color;\n                    return datumClone;\n                });\n\n                µ.Legend().config({\n                    data: data.map(function(d, i) {\n                        return d.name || 'Element' + i;\n                    }),\n                    legendConfig: extendDeepAll({},\n                        µ.Legend.defaultConfig().legendConfig,\n                        {\n                            container: legendContainer,\n                            elements: elements,\n                            reverseOrder: axisConfig.legend.reverseOrder\n                        }\n                    )\n                })();\n\n                var legendBBox = legendContainer.node().getBBox();\n                radius = Math.min(axisConfig.width - legendBBox.width - axisConfig.margin.left - axisConfig.margin.right, axisConfig.height - axisConfig.margin.top - axisConfig.margin.bottom) / 2;\n                radius = Math.max(10, radius);\n                chartCenter = [ axisConfig.margin.left + radius, axisConfig.margin.top + radius ];\n                radialScale.range([ 0, radius ]);\n                liveConfig.layout.radialAxis.domain = radialScale.domain();\n                legendContainer.attr('transform', 'translate(' + [ chartCenter[0] + radius, chartCenter[1] - radius ] + ')');\n            } else {\n                legendContainer = svg.select('.legend-group').style({\n                    display: 'none'\n                });\n            }\n            svg.attr({\n                width: axisConfig.width,\n                height: axisConfig.height\n            }).style({\n                opacity: axisConfig.opacity\n            });\n            chartGroup.attr('transform', 'translate(' + chartCenter + ')').style({\n                cursor: 'crosshair'\n            });\n            var centeringOffset = [ (axisConfig.width - (axisConfig.margin.left + axisConfig.margin.right + radius * 2 + (legendBBox ? legendBBox.width : 0))) / 2, (axisConfig.height - (axisConfig.margin.top + axisConfig.margin.bottom + radius * 2)) / 2 ];\n            centeringOffset[0] = Math.max(0, centeringOffset[0]);\n            centeringOffset[1] = Math.max(0, centeringOffset[1]);\n            svg.select('.outer-group').attr('transform', 'translate(' + centeringOffset + ')');\n            if (axisConfig.title) {\n                var title = svg.select('g.title-group text').style(fontStyle).text(axisConfig.title);\n                var titleBBox = title.node().getBBox();\n                title.attr({\n                    x: chartCenter[0] - titleBBox.width / 2,\n                    y: chartCenter[1] - radius - 20\n                });\n            }\n            var radialAxis = svg.select('.radial.axis-group');\n            if (axisConfig.radialAxis.gridLinesVisible) {\n                var gridCircles = radialAxis.selectAll('circle.grid-circle').data(radialScale.ticks(5));\n                gridCircles.enter().append('circle').attr({\n                    'class': 'grid-circle'\n                }).style(lineStyle);\n                gridCircles.attr('r', radialScale);\n                gridCircles.exit().remove();\n            }\n            radialAxis.select('circle.outside-circle').attr({\n                r: radius\n            }).style(lineStyle);\n            var backgroundCircle = svg.select('circle.background-circle').attr({\n                r: radius\n            }).style({\n                fill: axisConfig.backgroundColor,\n                stroke: axisConfig.stroke\n            });\n            function currentAngle(d, i) {\n                return angularScale(d) % 360 + axisConfig.orientation;\n            }\n            if (axisConfig.radialAxis.visible) {\n                var axis = d3.svg.axis().scale(radialScale).ticks(5).tickSize(5);\n                radialAxis.call(axis).attr({\n                    transform: 'rotate(' + axisConfig.radialAxis.orientation + ')'\n                });\n                radialAxis.selectAll('.domain').style(lineStyle);\n                radialAxis.selectAll('g>text').text(function(d, i) {\n                    return this.textContent + axisConfig.radialAxis.ticksSuffix;\n                }).style(fontStyle).style({\n                    'text-anchor': 'start'\n                }).attr({\n                    x: 0,\n                    y: 0,\n                    dx: 0,\n                    dy: 0,\n                    transform: function(d, i) {\n                        if (axisConfig.radialAxis.tickOrientation === 'horizontal') {\n                            return 'rotate(' + -axisConfig.radialAxis.orientation + ') translate(' + [ 0, fontStyle['font-size'] ] + ')';\n                        } else return 'translate(' + [ 0, fontStyle['font-size'] ] + ')';\n                    }\n                });\n                radialAxis.selectAll('g>line').style({\n                    stroke: 'black'\n                });\n            }\n            var angularAxis = svg.select('.angular.axis-group').selectAll('g.angular-tick').data(angularAxisRange);\n            var angularAxisEnter = angularAxis.enter().append('g').classed('angular-tick', true);\n            angularAxis.attr({\n                transform: function(d, i) {\n                    return 'rotate(' + currentAngle(d, i) + ')';\n                }\n            }).style({\n                display: axisConfig.angularAxis.visible ? 'block' : 'none'\n            });\n            angularAxis.exit().remove();\n            angularAxisEnter.append('line').classed('grid-line', true).classed('major', function(d, i) {\n                return i % (axisConfig.minorTicks + 1) == 0;\n            }).classed('minor', function(d, i) {\n                return !(i % (axisConfig.minorTicks + 1) == 0);\n            }).style(lineStyle);\n            angularAxisEnter.selectAll('.minor').style({\n                stroke: axisConfig.minorTickColor\n            });\n            angularAxis.select('line.grid-line').attr({\n                x1: axisConfig.tickLength ? radius - axisConfig.tickLength : 0,\n                x2: radius\n            }).style({\n                display: axisConfig.angularAxis.gridLinesVisible ? 'block' : 'none'\n            });\n            angularAxisEnter.append('text').classed('axis-text', true).style(fontStyle);\n            var ticksText = angularAxis.select('text.axis-text').attr({\n                x: radius + axisConfig.labelOffset,\n                dy: MID_SHIFT + 'em',\n                transform: function(d, i) {\n                    var angle = currentAngle(d, i);\n                    var rad = radius + axisConfig.labelOffset;\n                    var orient = axisConfig.angularAxis.tickOrientation;\n                    if (orient == 'horizontal') return 'rotate(' + -angle + ' ' + rad + ' 0)'; else if (orient == 'radial') return angle < 270 && angle > 90 ? 'rotate(180 ' + rad + ' 0)' : null; else return 'rotate(' + (angle <= 180 && angle > 0 ? -90 : 90) + ' ' + rad + ' 0)';\n                }\n            }).style({\n                'text-anchor': 'middle',\n                display: axisConfig.angularAxis.labelsVisible ? 'block' : 'none'\n            }).text(function(d, i) {\n                if (i % (axisConfig.minorTicks + 1) != 0) return '';\n                if (ticks) {\n                    return ticks[d] + axisConfig.angularAxis.ticksSuffix;\n                } else return d + axisConfig.angularAxis.ticksSuffix;\n            }).style(fontStyle);\n            if (axisConfig.angularAxis.rewriteTicks) ticksText.text(function(d, i) {\n                if (i % (axisConfig.minorTicks + 1) != 0) return '';\n                return axisConfig.angularAxis.rewriteTicks(this.textContent, i);\n            });\n            var rightmostTickEndX = d3.max(chartGroup.selectAll('.angular-tick text')[0].map(function(d, i) {\n                return d.getCTM().e + d.getBBox().width;\n            }));\n            legendContainer.attr({\n                transform: 'translate(' + [ radius + rightmostTickEndX, axisConfig.margin.top ] + ')'\n            });\n            var hasGeometry = svg.select('g.geometry-group').selectAll('g').size() > 0;\n            var geometryContainer = svg.select('g.geometry-group').selectAll('g.geometry').data(data);\n            geometryContainer.enter().append('g').attr({\n                'class': function(d, i) {\n                    return 'geometry geometry' + i;\n                }\n            });\n            geometryContainer.exit().remove();\n            if (data[0] || hasGeometry) {\n                var geometryConfigs = [];\n                data.forEach(function(d, i) {\n                    var geometryConfig = {};\n                    geometryConfig.radialScale = radialScale;\n                    geometryConfig.angularScale = angularScale;\n                    geometryConfig.container = geometryContainer.filter(function(dB, iB) {\n                        return iB == i;\n                    });\n                    geometryConfig.geometry = d.geometry;\n                    geometryConfig.orientation = axisConfig.orientation;\n                    geometryConfig.direction = axisConfig.direction;\n                    geometryConfig.index = i;\n                    geometryConfigs.push({\n                        data: d,\n                        geometryConfig: geometryConfig\n                    });\n                });\n                var geometryConfigsGrouped = d3.nest().key(function(d, i) {\n                    return typeof d.data.groupId != 'undefined' || 'unstacked';\n                }).entries(geometryConfigs);\n                var geometryConfigsGrouped2 = [];\n                geometryConfigsGrouped.forEach(function(d, i) {\n                    if (d.key === 'unstacked') geometryConfigsGrouped2 = geometryConfigsGrouped2.concat(d.values.map(function(d, i) {\n                        return [ d ];\n                    })); else geometryConfigsGrouped2.push(d.values);\n                });\n                geometryConfigsGrouped2.forEach(function(d, i) {\n                    var geometry;\n                    if (Array.isArray(d)) geometry = d[0].geometryConfig.geometry; else geometry = d.geometryConfig.geometry;\n                    var finalGeometryConfig = d.map(function(dB, iB) {\n                        return extendDeepAll(µ[geometry].defaultConfig(), dB);\n                    });\n                    µ[geometry]().config(finalGeometryConfig)();\n                });\n            }\n            var guides = svg.select('.guides-group');\n            var tooltipContainer = svg.select('.tooltips-group');\n            var angularTooltip = µ.tooltipPanel().config({\n                container: tooltipContainer,\n                fontSize: 8\n            })();\n            var radialTooltip = µ.tooltipPanel().config({\n                container: tooltipContainer,\n                fontSize: 8\n            })();\n            var geometryTooltip = µ.tooltipPanel().config({\n                container: tooltipContainer,\n                hasTick: true\n            })();\n            var angularValue, radialValue;\n            if (!isOrdinal) {\n                var angularGuideLine = guides.select('line').attr({\n                    x1: 0,\n                    y1: 0,\n                    y2: 0\n                }).style({\n                    stroke: 'grey',\n                    'pointer-events': 'none'\n                });\n                chartGroup.on('mousemove.angular-guide', function(d, i) {\n                    var mouseAngle = µ.util.getMousePos(backgroundCircle).angle;\n                    angularGuideLine.attr({\n                        x2: -radius,\n                        transform: 'rotate(' + mouseAngle + ')'\n                    }).style({\n                        opacity: .5\n                    });\n                    var angleWithOriginOffset = (mouseAngle + 180 + 360 - axisConfig.orientation) % 360;\n                    angularValue = angularScale.invert(angleWithOriginOffset);\n                    var pos = µ.util.convertToCartesian(radius + 12, mouseAngle + 180);\n                    angularTooltip.text(µ.util.round(angularValue)).move([ pos[0] + chartCenter[0], pos[1] + chartCenter[1] ]);\n                }).on('mouseout.angular-guide', function(d, i) {\n                    guides.select('line').style({\n                        opacity: 0\n                    });\n                });\n            }\n            var angularGuideCircle = guides.select('circle').style({\n                stroke: 'grey',\n                fill: 'none'\n            });\n            chartGroup.on('mousemove.radial-guide', function(d, i) {\n                var r = µ.util.getMousePos(backgroundCircle).radius;\n                angularGuideCircle.attr({\n                    r: r\n                }).style({\n                    opacity: .5\n                });\n                radialValue = radialScale.invert(µ.util.getMousePos(backgroundCircle).radius);\n                var pos = µ.util.convertToCartesian(r, axisConfig.radialAxis.orientation);\n                radialTooltip.text(µ.util.round(radialValue)).move([ pos[0] + chartCenter[0], pos[1] + chartCenter[1] ]);\n            }).on('mouseout.radial-guide', function(d, i) {\n                angularGuideCircle.style({\n                    opacity: 0\n                });\n                geometryTooltip.hide();\n                angularTooltip.hide();\n                radialTooltip.hide();\n            });\n            svg.selectAll('.geometry-group .mark').on('mouseover.tooltip', function(d, i) {\n                var el = d3.select(this);\n                var color = this.style.fill;\n                var newColor = 'black';\n                var opacity = this.style.opacity || 1;\n                el.attr({\n                    'data-opacity': opacity\n                });\n                if (color && color !== 'none') {\n                    el.attr({\n                        'data-fill': color\n                    });\n                    newColor = d3.hsl(color).darker().toString();\n                    el.style({\n                        fill: newColor,\n                        opacity: 1\n                    });\n                    var textData = {\n                        t: µ.util.round(d[0]),\n                        r: µ.util.round(d[1])\n                    };\n                    if (isOrdinal) textData.t = ticks[d[0]];\n                    var text = 't: ' + textData.t + ', r: ' + textData.r;\n                    var bbox = this.getBoundingClientRect();\n                    var svgBBox = svg.node().getBoundingClientRect();\n                    var pos = [ bbox.left + bbox.width / 2 - centeringOffset[0] - svgBBox.left, bbox.top + bbox.height / 2 - centeringOffset[1] - svgBBox.top ];\n                    geometryTooltip.config({\n                        color: newColor\n                    }).text(text);\n                    geometryTooltip.move(pos);\n                } else {\n                    color = this.style.stroke || 'black';\n                    el.attr({\n                        'data-stroke': color\n                    });\n                    newColor = d3.hsl(color).darker().toString();\n                    el.style({\n                        stroke: newColor,\n                        opacity: 1\n                    });\n                }\n            }).on('mousemove.tooltip', function(d, i) {\n                if (d3.event.which != 0) return false;\n                if (d3.select(this).attr('data-fill')) geometryTooltip.show();\n            }).on('mouseout.tooltip', function(d, i) {\n                geometryTooltip.hide();\n                var el = d3.select(this);\n                var fillColor = el.attr('data-fill');\n                if (fillColor) el.style({\n                    fill: fillColor,\n                    opacity: el.attr('data-opacity')\n                }); else el.style({\n                    stroke: el.attr('data-stroke'),\n                    opacity: el.attr('data-opacity')\n                });\n            });\n        });\n        return exports;\n    }\n    exports.render = function(_container) {\n        render(_container);\n        return this;\n    };\n    exports.config = function(_x) {\n        if (!arguments.length) return config;\n        var xClone = µ.util.cloneJson(_x);\n        xClone.data.forEach(function(d, i) {\n            if (!config.data[i]) config.data[i] = {};\n            extendDeepAll(config.data[i], µ.Axis.defaultConfig().data[0]);\n            extendDeepAll(config.data[i], d);\n        });\n        extendDeepAll(config.layout, µ.Axis.defaultConfig().layout);\n        extendDeepAll(config.layout, xClone.layout);\n        return this;\n    };\n    exports.getLiveConfig = function() {\n        return liveConfig;\n    };\n    exports.getinputConfig = function() {\n        return inputConfig;\n    };\n    exports.radialScale = function(_x) {\n        return radialScale;\n    };\n    exports.angularScale = function(_x) {\n        return angularScale;\n    };\n    exports.svg = function() {\n        return svg;\n    };\n    d3.rebind(exports, dispatch, 'on');\n    return exports;\n};\n\nµ.Axis.defaultConfig = function(d, i) {\n    var config = {\n        data: [ {\n            t: [ 1, 2, 3, 4 ],\n            r: [ 10, 11, 12, 13 ],\n            name: 'Line1',\n            geometry: 'LinePlot',\n            color: null,\n            strokeDash: 'solid',\n            strokeColor: null,\n            strokeSize: '1',\n            visibleInLegend: true,\n            opacity: 1\n        } ],\n        layout: {\n            defaultColorRange: d3.scale.category10().range(),\n            title: null,\n            height: 450,\n            width: 500,\n            margin: {\n                top: 40,\n                right: 40,\n                bottom: 40,\n                left: 40\n            },\n            font: {\n                size: 12,\n                color: 'gray',\n                outlineColor: 'white',\n                family: 'Tahoma, sans-serif'\n            },\n            direction: 'clockwise',\n            orientation: 0,\n            labelOffset: 10,\n            radialAxis: {\n                domain: null,\n                orientation: -45,\n                ticksSuffix: '',\n                visible: true,\n                gridLinesVisible: true,\n                tickOrientation: 'horizontal',\n                rewriteTicks: null\n            },\n            angularAxis: {\n                domain: [ 0, 360 ],\n                ticksSuffix: '',\n                visible: true,\n                gridLinesVisible: true,\n                labelsVisible: true,\n                tickOrientation: 'horizontal',\n                rewriteTicks: null,\n                ticksCount: null,\n                ticksStep: null\n            },\n            minorTicks: 0,\n            tickLength: null,\n            tickColor: 'silver',\n            minorTickColor: '#eee',\n            backgroundColor: 'none',\n            needsEndSpacing: null,\n            showLegend: true,\n            legend: {\n                reverseOrder: false\n            },\n            opacity: 1\n        }\n    };\n    return config;\n};\n\nµ.util = {};\n\nµ.DATAEXTENT = 'dataExtent';\n\nµ.AREA = 'AreaChart';\n\nµ.LINE = 'LinePlot';\n\nµ.DOT = 'DotPlot';\n\nµ.BAR = 'BarChart';\n\nµ.util._override = function(_objA, _objB) {\n    for (var x in _objA) if (x in _objB) _objB[x] = _objA[x];\n};\n\nµ.util._extend = function(_objA, _objB) {\n    for (var x in _objA) _objB[x] = _objA[x];\n};\n\nµ.util._rndSnd = function() {\n    return Math.random() * 2 - 1 + (Math.random() * 2 - 1) + (Math.random() * 2 - 1);\n};\n\nµ.util.dataFromEquation2 = function(_equation, _step) {\n    var step = _step || 6;\n    var data = d3.range(0, 360 + step, step).map(function(deg, index) {\n        var theta = deg * Math.PI / 180;\n        var radius = _equation(theta);\n        return [ deg, radius ];\n    });\n    return data;\n};\n\nµ.util.dataFromEquation = function(_equation, _step, _name) {\n    var step = _step || 6;\n    var t = [], r = [];\n    d3.range(0, 360 + step, step).forEach(function(deg, index) {\n        var theta = deg * Math.PI / 180;\n        var radius = _equation(theta);\n        t.push(deg);\n        r.push(radius);\n    });\n    var result = {\n        t: t,\n        r: r\n    };\n    if (_name) result.name = _name;\n    return result;\n};\n\nµ.util.ensureArray = function(_val, _count) {\n    if (typeof _val === 'undefined') return null;\n    var arr = [].concat(_val);\n    return d3.range(_count).map(function(d, i) {\n        return arr[i] || arr[0];\n    });\n};\n\nµ.util.fillArrays = function(_obj, _valueNames, _count) {\n    _valueNames.forEach(function(d, i) {\n        _obj[d] = µ.util.ensureArray(_obj[d], _count);\n    });\n    return _obj;\n};\n\nµ.util.cloneJson = function(json) {\n    return JSON.parse(JSON.stringify(json));\n};\n\nµ.util.validateKeys = function(obj, keys) {\n    if (typeof keys === 'string') keys = keys.split('.');\n    var next = keys.shift();\n    return obj[next] && (!keys.length || objHasKeys(obj[next], keys));\n};\n\nµ.util.sumArrays = function(a, b) {\n    return d3.zip(a, b).map(function(d, i) {\n        return d3.sum(d);\n    });\n};\n\nµ.util.arrayLast = function(a) {\n    return a[a.length - 1];\n};\n\nµ.util.arrayEqual = function(a, b) {\n    var i = Math.max(a.length, b.length, 1);\n    while (i-- >= 0 && a[i] === b[i]) ;\n    return i === -2;\n};\n\nµ.util.flattenArray = function(arr) {\n    var r = [];\n    while (!µ.util.arrayEqual(r, arr)) {\n        r = arr;\n        arr = [].concat.apply([], arr);\n    }\n    return arr;\n};\n\nµ.util.deduplicate = function(arr) {\n    return arr.filter(function(v, i, a) {\n        return a.indexOf(v) == i;\n    });\n};\n\nµ.util.convertToCartesian = function(radius, theta) {\n    var thetaRadians = theta * Math.PI / 180;\n    var x = radius * Math.cos(thetaRadians);\n    var y = radius * Math.sin(thetaRadians);\n    return [ x, y ];\n};\n\nµ.util.round = function(_value, _digits) {\n    var digits = _digits || 2;\n    var mult = Math.pow(10, digits);\n    return Math.round(_value * mult) / mult;\n};\n\nµ.util.getMousePos = function(_referenceElement) {\n    var mousePos = d3.mouse(_referenceElement.node());\n    var mouseX = mousePos[0];\n    var mouseY = mousePos[1];\n    var mouse = {};\n    mouse.x = mouseX;\n    mouse.y = mouseY;\n    mouse.pos = mousePos;\n    mouse.angle = (Math.atan2(mouseY, mouseX) + Math.PI) * 180 / Math.PI;\n    mouse.radius = Math.sqrt(mouseX * mouseX + mouseY * mouseY);\n    return mouse;\n};\n\nµ.util.duplicatesCount = function(arr) {\n    var uniques = {}, val;\n    var dups = {};\n    for (var i = 0, len = arr.length; i < len; i++) {\n        val = arr[i];\n        if (val in uniques) {\n            uniques[val]++;\n            dups[val] = uniques[val];\n        } else {\n            uniques[val] = 1;\n        }\n    }\n    return dups;\n};\n\nµ.util.duplicates = function(arr) {\n    return Object.keys(µ.util.duplicatesCount(arr));\n};\n\nµ.util.translator = function(obj, sourceBranch, targetBranch, reverse) {\n    if (reverse) {\n        var targetBranchCopy = targetBranch.slice();\n        targetBranch = sourceBranch;\n        sourceBranch = targetBranchCopy;\n    }\n    var value = sourceBranch.reduce(function(previousValue, currentValue) {\n        if (typeof previousValue != 'undefined') return previousValue[currentValue];\n    }, obj);\n    if (typeof value === 'undefined') return;\n    sourceBranch.reduce(function(previousValue, currentValue, index) {\n        if (typeof previousValue == 'undefined') return;\n        if (index === sourceBranch.length - 1) delete previousValue[currentValue];\n        return previousValue[currentValue];\n    }, obj);\n    targetBranch.reduce(function(previousValue, currentValue, index) {\n        if (typeof previousValue[currentValue] === 'undefined') previousValue[currentValue] = {};\n        if (index === targetBranch.length - 1) previousValue[currentValue] = value;\n        return previousValue[currentValue];\n    }, obj);\n};\n\nµ.PolyChart = function module() {\n    var config = [ µ.PolyChart.defaultConfig() ];\n    var dispatch = d3.dispatch('hover');\n    var dashArray = {\n        solid: 'none',\n        dash: [ 5, 2 ],\n        dot: [ 2, 5 ]\n    };\n    var colorScale;\n    function exports() {\n        var geometryConfig = config[0].geometryConfig;\n        var container = geometryConfig.container;\n        if (typeof container == 'string') container = d3.select(container);\n        container.datum(config).each(function(_config, _index) {\n            var isStack = !!_config[0].data.yStack;\n            var data = _config.map(function(d, i) {\n                if (isStack) return d3.zip(d.data.t[0], d.data.r[0], d.data.yStack[0]); else return d3.zip(d.data.t[0], d.data.r[0]);\n            });\n            var angularScale = geometryConfig.angularScale;\n            var domainMin = geometryConfig.radialScale.domain()[0];\n            var generator = {};\n            generator.bar = function(d, i, pI) {\n                var dataConfig = _config[pI].data;\n                var h = geometryConfig.radialScale(d[1]) - geometryConfig.radialScale(0);\n                var stackTop = geometryConfig.radialScale(d[2] || 0);\n                var w = dataConfig.barWidth;\n                d3.select(this).attr({\n                    'class': 'mark bar',\n                    d: 'M' + [ [ h + stackTop, -w / 2 ], [ h + stackTop, w / 2 ], [ stackTop, w / 2 ], [ stackTop, -w / 2 ] ].join('L') + 'Z',\n                    transform: function(d, i) {\n                        return 'rotate(' + (geometryConfig.orientation + angularScale(d[0])) + ')';\n                    }\n                });\n            };\n            generator.dot = function(d, i, pI) {\n                var stackedData = d[2] ? [ d[0], d[1] + d[2] ] : d;\n                var symbol = d3.svg.symbol().size(_config[pI].data.dotSize).type(_config[pI].data.dotType)(d, i);\n                d3.select(this).attr({\n                    'class': 'mark dot',\n                    d: symbol,\n                    transform: function(d, i) {\n                        var coord = convertToCartesian(getPolarCoordinates(stackedData));\n                        return 'translate(' + [ coord.x, coord.y ] + ')';\n                    }\n                });\n            };\n            var line = d3.svg.line.radial().interpolate(_config[0].data.lineInterpolation).radius(function(d) {\n                return geometryConfig.radialScale(d[1]);\n            }).angle(function(d) {\n                return geometryConfig.angularScale(d[0]) * Math.PI / 180;\n            });\n            generator.line = function(d, i, pI) {\n                var lineData = d[2] ? data[pI].map(function(d, i) {\n                    return [ d[0], d[1] + d[2] ];\n                }) : data[pI];\n                d3.select(this).each(generator['dot']).style({\n                    opacity: function(dB, iB) {\n                        return +_config[pI].data.dotVisible;\n                    },\n                    fill: markStyle.stroke(d, i, pI)\n                }).attr({\n                    'class': 'mark dot'\n                });\n                if (i > 0) return;\n                var lineSelection = d3.select(this.parentNode).selectAll('path.line').data([ 0 ]);\n                lineSelection.enter().insert('path');\n                lineSelection.attr({\n                    'class': 'line',\n                    d: line(lineData),\n                    transform: function(dB, iB) {\n                        return 'rotate(' + (geometryConfig.orientation + 90) + ')';\n                    },\n                    'pointer-events': 'none'\n                }).style({\n                    fill: function(dB, iB) {\n                        return markStyle.fill(d, i, pI);\n                    },\n                    'fill-opacity': 0,\n                    stroke: function(dB, iB) {\n                        return markStyle.stroke(d, i, pI);\n                    },\n                    'stroke-width': function(dB, iB) {\n                        return markStyle['stroke-width'](d, i, pI);\n                    },\n                    'stroke-dasharray': function(dB, iB) {\n                        return markStyle['stroke-dasharray'](d, i, pI);\n                    },\n                    opacity: function(dB, iB) {\n                        return markStyle.opacity(d, i, pI);\n                    },\n                    display: function(dB, iB) {\n                        return markStyle.display(d, i, pI);\n                    }\n                });\n            };\n            var angularRange = geometryConfig.angularScale.range();\n            var triangleAngle = Math.abs(angularRange[1] - angularRange[0]) / data[0].length * Math.PI / 180;\n            var arc = d3.svg.arc().startAngle(function(d) {\n                return -triangleAngle / 2;\n            }).endAngle(function(d) {\n                return triangleAngle / 2;\n            }).innerRadius(function(d) {\n                return geometryConfig.radialScale(domainMin + (d[2] || 0));\n            }).outerRadius(function(d) {\n                return geometryConfig.radialScale(domainMin + (d[2] || 0)) + geometryConfig.radialScale(d[1]);\n            });\n            generator.arc = function(d, i, pI) {\n                d3.select(this).attr({\n                    'class': 'mark arc',\n                    d: arc,\n                    transform: function(d, i) {\n                        return 'rotate(' + (geometryConfig.orientation + angularScale(d[0]) + 90) + ')';\n                    }\n                });\n            };\n            var markStyle = {\n                fill: function(d, i, pI) {\n                    return _config[pI].data.color;\n                },\n                stroke: function(d, i, pI) {\n                    return _config[pI].data.strokeColor;\n                },\n                'stroke-width': function(d, i, pI) {\n                    return _config[pI].data.strokeSize + 'px';\n                },\n                'stroke-dasharray': function(d, i, pI) {\n                    return dashArray[_config[pI].data.strokeDash];\n                },\n                opacity: function(d, i, pI) {\n                    return _config[pI].data.opacity;\n                },\n                display: function(d, i, pI) {\n                    return typeof _config[pI].data.visible === 'undefined' || _config[pI].data.visible ? 'block' : 'none';\n                }\n            };\n            var geometryLayer = d3.select(this).selectAll('g.layer').data(data);\n            geometryLayer.enter().append('g').attr({\n                'class': 'layer'\n            });\n            var geometry = geometryLayer.selectAll('path.mark').data(function(d, i) {\n                return d;\n            });\n            geometry.enter().append('path').attr({\n                'class': 'mark'\n            });\n            geometry.style(markStyle).each(generator[geometryConfig.geometryType]);\n            geometry.exit().remove();\n            geometryLayer.exit().remove();\n            function getPolarCoordinates(d, i) {\n                var r = geometryConfig.radialScale(d[1]);\n                var t = (geometryConfig.angularScale(d[0]) + geometryConfig.orientation) * Math.PI / 180;\n                return {\n                    r: r,\n                    t: t\n                };\n            }\n            function convertToCartesian(polarCoordinates) {\n                var x = polarCoordinates.r * Math.cos(polarCoordinates.t);\n                var y = polarCoordinates.r * Math.sin(polarCoordinates.t);\n                return {\n                    x: x,\n                    y: y\n                };\n            }\n        });\n    }\n    exports.config = function(_x) {\n        if (!arguments.length) return config;\n        _x.forEach(function(d, i) {\n            if (!config[i]) config[i] = {};\n            extendDeepAll(config[i], µ.PolyChart.defaultConfig());\n            extendDeepAll(config[i], d);\n        });\n        return this;\n    };\n    exports.getColorScale = function() {\n        return colorScale;\n    };\n    d3.rebind(exports, dispatch, 'on');\n    return exports;\n};\n\nµ.PolyChart.defaultConfig = function() {\n    var config = {\n        data: {\n            name: 'geom1',\n            t: [ [ 1, 2, 3, 4 ] ],\n            r: [ [ 1, 2, 3, 4 ] ],\n            dotType: 'circle',\n            dotSize: 64,\n            dotVisible: false,\n            barWidth: 20,\n            color: '#ffa500',\n            strokeSize: 1,\n            strokeColor: 'silver',\n            strokeDash: 'solid',\n            opacity: 1,\n            index: 0,\n            visible: true,\n            visibleInLegend: true\n        },\n        geometryConfig: {\n            geometry: 'LinePlot',\n            geometryType: 'arc',\n            direction: 'clockwise',\n            orientation: 0,\n            container: 'body',\n            radialScale: null,\n            angularScale: null,\n            colorScale: d3.scale.category20()\n        }\n    };\n    return config;\n};\n\nµ.BarChart = function module() {\n    return µ.PolyChart();\n};\n\nµ.BarChart.defaultConfig = function() {\n    var config = {\n        geometryConfig: {\n            geometryType: 'bar'\n        }\n    };\n    return config;\n};\n\nµ.AreaChart = function module() {\n    return µ.PolyChart();\n};\n\nµ.AreaChart.defaultConfig = function() {\n    var config = {\n        geometryConfig: {\n            geometryType: 'arc'\n        }\n    };\n    return config;\n};\n\nµ.DotPlot = function module() {\n    return µ.PolyChart();\n};\n\nµ.DotPlot.defaultConfig = function() {\n    var config = {\n        geometryConfig: {\n            geometryType: 'dot',\n            dotType: 'circle'\n        }\n    };\n    return config;\n};\n\nµ.LinePlot = function module() {\n    return µ.PolyChart();\n};\n\nµ.LinePlot.defaultConfig = function() {\n    var config = {\n        geometryConfig: {\n            geometryType: 'line'\n        }\n    };\n    return config;\n};\n\nµ.Legend = function module() {\n    var config = µ.Legend.defaultConfig();\n    var dispatch = d3.dispatch('hover');\n    function exports() {\n        var legendConfig = config.legendConfig;\n        var flattenData = config.data.map(function(d, i) {\n            return [].concat(d).map(function(dB, iB) {\n                var element = extendDeepAll({}, legendConfig.elements[i]);\n                element.name = dB;\n                element.color = [].concat(legendConfig.elements[i].color)[iB];\n                return element;\n            });\n        });\n        var data = d3.merge(flattenData);\n        data = data.filter(function(d, i) {\n            return legendConfig.elements[i] && (legendConfig.elements[i].visibleInLegend || typeof legendConfig.elements[i].visibleInLegend === 'undefined');\n        });\n        if (legendConfig.reverseOrder) data = data.reverse();\n        var container = legendConfig.container;\n        if (typeof container == 'string' || container.nodeName) container = d3.select(container);\n        var colors = data.map(function(d, i) {\n            return d.color;\n        });\n        var lineHeight = legendConfig.fontSize;\n        var isContinuous = legendConfig.isContinuous == null ? typeof data[0] === 'number' : legendConfig.isContinuous;\n        var height = isContinuous ? legendConfig.height : lineHeight * data.length;\n        var legendContainerGroup = container.classed('legend-group', true);\n        var svg = legendContainerGroup.selectAll('svg').data([ 0 ]);\n        var svgEnter = svg.enter().append('svg').attr({\n            width: 300,\n            height: height + lineHeight,\n            xmlns: 'http://www.w3.org/2000/svg',\n            'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n            version: '1.1'\n        });\n        svgEnter.append('g').classed('legend-axis', true);\n        svgEnter.append('g').classed('legend-marks', true);\n        var dataNumbered = d3.range(data.length);\n        var colorScale = d3.scale[isContinuous ? 'linear' : 'ordinal']().domain(dataNumbered).range(colors);\n        var dataScale = d3.scale[isContinuous ? 'linear' : 'ordinal']().domain(dataNumbered)[isContinuous ? 'range' : 'rangePoints']([ 0, height ]);\n        var shapeGenerator = function(_type, _size) {\n            var squareSize = _size * 3;\n            if (_type === 'line') {\n                return 'M' + [ [ -_size / 2, -_size / 12 ], [ _size / 2, -_size / 12 ], [ _size / 2, _size / 12 ], [ -_size / 2, _size / 12 ] ] + 'Z';\n            } else if (d3.svg.symbolTypes.indexOf(_type) != -1) return d3.svg.symbol().type(_type).size(squareSize)(); else return d3.svg.symbol().type('square').size(squareSize)();\n        };\n        if (isContinuous) {\n            var gradient = svg.select('.legend-marks').append('defs').append('linearGradient').attr({\n                id: 'grad1',\n                x1: '0%',\n                y1: '0%',\n                x2: '0%',\n                y2: '100%'\n            }).selectAll('stop').data(colors);\n            gradient.enter().append('stop');\n            gradient.attr({\n                offset: function(d, i) {\n                    return i / (colors.length - 1) * 100 + '%';\n                }\n            }).style({\n                'stop-color': function(d, i) {\n                    return d;\n                }\n            });\n            svg.append('rect').classed('legend-mark', true).attr({\n                height: legendConfig.height,\n                width: legendConfig.colorBandWidth,\n                fill: 'url(#grad1)'\n            });\n        } else {\n            var legendElement = svg.select('.legend-marks').selectAll('path.legend-mark').data(data);\n            legendElement.enter().append('path').classed('legend-mark', true);\n            legendElement.attr({\n                transform: function(d, i) {\n                    return 'translate(' + [ lineHeight / 2, dataScale(i) + lineHeight / 2 ] + ')';\n                },\n                d: function(d, i) {\n                    var symbolType = d.symbol;\n                    return shapeGenerator(symbolType, lineHeight);\n                },\n                fill: function(d, i) {\n                    return colorScale(i);\n                }\n            });\n            legendElement.exit().remove();\n        }\n        var legendAxis = d3.svg.axis().scale(dataScale).orient('right');\n        var axis = svg.select('g.legend-axis').attr({\n            transform: 'translate(' + [ isContinuous ? legendConfig.colorBandWidth : lineHeight, lineHeight / 2 ] + ')'\n        }).call(legendAxis);\n        axis.selectAll('.domain').style({\n            fill: 'none',\n            stroke: 'none'\n        });\n        axis.selectAll('line').style({\n            fill: 'none',\n            stroke: isContinuous ? legendConfig.textColor : 'none'\n        });\n        axis.selectAll('text').style({\n            fill: legendConfig.textColor,\n            'font-size': legendConfig.fontSize\n        }).text(function(d, i) {\n            return data[i].name;\n        });\n        return exports;\n    }\n    exports.config = function(_x) {\n        if (!arguments.length) return config;\n        extendDeepAll(config, _x);\n        return this;\n    };\n    d3.rebind(exports, dispatch, 'on');\n    return exports;\n};\n\nµ.Legend.defaultConfig = function(d, i) {\n    var config = {\n        data: [ 'a', 'b', 'c' ],\n        legendConfig: {\n            elements: [ {\n                symbol: 'line',\n                color: 'red'\n            }, {\n                symbol: 'square',\n                color: 'yellow'\n            }, {\n                symbol: 'diamond',\n                color: 'limegreen'\n            } ],\n            height: 150,\n            colorBandWidth: 30,\n            fontSize: 12,\n            container: 'body',\n            isContinuous: null,\n            textColor: 'grey',\n            reverseOrder: false\n        }\n    };\n    return config;\n};\n\nµ.tooltipPanel = function() {\n    var tooltipEl, tooltipTextEl, backgroundEl;\n    var config = {\n        container: null,\n        hasTick: false,\n        fontSize: 12,\n        color: 'white',\n        padding: 5\n    };\n    var id = 'tooltip-' + µ.tooltipPanel.uid++;\n    var tickSize = 10;\n    var exports = function() {\n        tooltipEl = config.container.selectAll('g.' + id).data([ 0 ]);\n        var tooltipEnter = tooltipEl.enter().append('g').classed(id, true).style({\n            'pointer-events': 'none',\n            display: 'none'\n        });\n        backgroundEl = tooltipEnter.append('path').style({\n            fill: 'white',\n            'fill-opacity': .9\n        }).attr({\n            d: 'M0 0'\n        });\n        tooltipTextEl = tooltipEnter.append('text').attr({\n            dx: config.padding + tickSize,\n            dy: +config.fontSize * .3\n        });\n        return exports;\n    };\n    exports.text = function(_text) {\n        var l = d3.hsl(config.color).l;\n        var strokeColor = l >= .5 ? '#aaa' : 'white';\n        var fillColor = l >= .5 ? 'black' : 'white';\n        var text = _text || '';\n        tooltipTextEl.style({\n            fill: fillColor,\n            'font-size': config.fontSize + 'px'\n        }).text(text);\n        var padding = config.padding;\n        var bbox = tooltipTextEl.node().getBBox();\n        var boxStyle = {\n            fill: config.color,\n            stroke: strokeColor,\n            'stroke-width': '2px'\n        };\n        var backGroundW = bbox.width + padding * 2 + tickSize;\n        var backGroundH = bbox.height + padding * 2;\n        backgroundEl.attr({\n            d: 'M' + [ [ tickSize, -backGroundH / 2 ], [ tickSize, -backGroundH / 4 ], [ config.hasTick ? 0 : tickSize, 0 ], [ tickSize, backGroundH / 4 ], [ tickSize, backGroundH / 2 ], [ backGroundW, backGroundH / 2 ], [ backGroundW, -backGroundH / 2 ] ].join('L') + 'Z'\n        }).style(boxStyle);\n        tooltipEl.attr({\n            transform: 'translate(' + [ tickSize, -backGroundH / 2 + padding * 2 ] + ')'\n        });\n        tooltipEl.style({\n            display: 'block'\n        });\n        return exports;\n    };\n    exports.move = function(_pos) {\n        if (!tooltipEl) return;\n        tooltipEl.attr({\n            transform: 'translate(' + [ _pos[0], _pos[1] ] + ')'\n        }).style({\n            display: 'block'\n        });\n        return exports;\n    };\n    exports.hide = function() {\n        if (!tooltipEl) return;\n        tooltipEl.style({\n            display: 'none'\n        });\n        return exports;\n    };\n    exports.show = function() {\n        if (!tooltipEl) return;\n        tooltipEl.style({\n            display: 'block'\n        });\n        return exports;\n    };\n    exports.config = function(_x) {\n        extendDeepAll(config, _x);\n        return exports;\n    };\n    return exports;\n};\n\nµ.tooltipPanel.uid = 1;\n\nµ.adapter = {};\n\nµ.adapter.plotly = function module() {\n    var exports = {};\n    exports.convert = function(_inputConfig, reverse) {\n        var outputConfig = {};\n        if (_inputConfig.data) {\n            outputConfig.data = _inputConfig.data.map(function(d, i) {\n                var r = extendDeepAll({}, d);\n                var toTranslate = [\n                    [ r, [ 'marker', 'color' ], [ 'color' ] ],\n                    [ r, [ 'marker', 'opacity' ], [ 'opacity' ] ],\n                    [ r, [ 'marker', 'line', 'color' ], [ 'strokeColor' ] ],\n                    [ r, [ 'marker', 'line', 'dash' ], [ 'strokeDash' ] ],\n                    [ r, [ 'marker', 'line', 'width' ], [ 'strokeSize' ] ],\n                    [ r, [ 'marker', 'symbol' ], [ 'dotType' ] ],\n                    [ r, [ 'marker', 'size' ], [ 'dotSize' ] ],\n                    [ r, [ 'marker', 'barWidth' ], [ 'barWidth' ] ],\n                    [ r, [ 'line', 'interpolation' ], [ 'lineInterpolation' ] ],\n                    [ r, [ 'showlegend' ], [ 'visibleInLegend' ] ]\n                ];\n                toTranslate.forEach(function(d, i) {\n                    µ.util.translator.apply(null, d.concat(reverse));\n                });\n\n                if (!reverse) delete r.marker;\n                if (reverse) delete r.groupId;\n                if (!reverse) {\n                    if (r.type === 'scatter') {\n                        if (r.mode === 'lines') r.geometry = 'LinePlot'; else if (r.mode === 'markers') r.geometry = 'DotPlot'; else if (r.mode === 'lines+markers') {\n                            r.geometry = 'LinePlot';\n                            r.dotVisible = true;\n                        }\n                    } else if (r.type === 'area') r.geometry = 'AreaChart'; else if (r.type === 'bar') r.geometry = 'BarChart';\n                    delete r.mode;\n                    delete r.type;\n                } else {\n                    if (r.geometry === 'LinePlot') {\n                        r.type = 'scatter';\n                        if (r.dotVisible === true) {\n                            delete r.dotVisible;\n                            r.mode = 'lines+markers';\n                        } else r.mode = 'lines';\n                    } else if (r.geometry === 'DotPlot') {\n                        r.type = 'scatter';\n                        r.mode = 'markers';\n                    } else if (r.geometry === 'AreaChart') r.type = 'area'; else if (r.geometry === 'BarChart') r.type = 'bar';\n                    delete r.geometry;\n                }\n                return r;\n            });\n            if (!reverse && _inputConfig.layout && _inputConfig.layout.barmode === 'stack') {\n                var duplicates = µ.util.duplicates(outputConfig.data.map(function(d, i) {\n                    return d.geometry;\n                }));\n                outputConfig.data.forEach(function(d, i) {\n                    var idx = duplicates.indexOf(d.geometry);\n                    if (idx != -1) outputConfig.data[i].groupId = idx;\n                });\n            }\n        }\n        if (_inputConfig.layout) {\n            var r = extendDeepAll({}, _inputConfig.layout);\n            var toTranslate = [\n                [ r, [ 'plot_bgcolor' ], [ 'backgroundColor' ] ],\n                [ r, [ 'showlegend' ], [ 'showLegend' ] ],\n                [ r, [ 'radialaxis' ], [ 'radialAxis' ] ],\n                [ r, [ 'angularaxis' ], [ 'angularAxis' ] ],\n                [ r.angularaxis, [ 'showline' ], [ 'gridLinesVisible' ] ],\n                [ r.angularaxis, [ 'showticklabels' ], [ 'labelsVisible' ] ],\n                [ r.angularaxis, [ 'nticks' ], [ 'ticksCount' ] ],\n                [ r.angularaxis, [ 'tickorientation' ], [ 'tickOrientation' ] ],\n                [ r.angularaxis, [ 'ticksuffix' ], [ 'ticksSuffix' ] ],\n                [ r.angularaxis, [ 'range' ], [ 'domain' ] ],\n                [ r.angularaxis, [ 'endpadding' ], [ 'endPadding' ] ],\n                [ r.radialaxis, [ 'showline' ], [ 'gridLinesVisible' ] ],\n                [ r.radialaxis, [ 'tickorientation' ], [ 'tickOrientation' ] ],\n                [ r.radialaxis, [ 'ticksuffix' ], [ 'ticksSuffix' ] ],\n                [ r.radialaxis, [ 'range' ], [ 'domain' ] ],\n                [ r.angularAxis, [ 'showline' ], [ 'gridLinesVisible' ] ],\n                [ r.angularAxis, [ 'showticklabels' ], [ 'labelsVisible' ] ],\n                [ r.angularAxis, [ 'nticks' ], [ 'ticksCount' ] ],\n                [ r.angularAxis, [ 'tickorientation' ], [ 'tickOrientation' ] ],\n                [ r.angularAxis, [ 'ticksuffix' ], [ 'ticksSuffix' ] ],\n                [ r.angularAxis, [ 'range' ], [ 'domain' ] ],\n                [ r.angularAxis, [ 'endpadding' ], [ 'endPadding' ] ],\n                [ r.radialAxis, [ 'showline' ], [ 'gridLinesVisible' ] ],\n                [ r.radialAxis, [ 'tickorientation' ], [ 'tickOrientation' ] ],\n                [ r.radialAxis, [ 'ticksuffix' ], [ 'ticksSuffix' ] ],\n                [ r.radialAxis, [ 'range' ], [ 'domain' ] ],\n                [ r.font, [ 'outlinecolor' ], [ 'outlineColor' ] ],\n                [ r.legend, [ 'traceorder' ], [ 'reverseOrder' ] ],\n                [ r, [ 'labeloffset' ], [ 'labelOffset' ] ],\n                [ r, [ 'defaultcolorrange' ], [ 'defaultColorRange' ] ]\n            ];\n            toTranslate.forEach(function(d, i) {\n                µ.util.translator.apply(null, d.concat(reverse));\n            });\n\n            if (!reverse) {\n                if (r.angularAxis && typeof r.angularAxis.ticklen !== 'undefined') r.tickLength = r.angularAxis.ticklen;\n                if (r.angularAxis && typeof r.angularAxis.tickcolor !== 'undefined') r.tickColor = r.angularAxis.tickcolor;\n            } else {\n                if (typeof r.tickLength !== 'undefined') {\n                    r.angularaxis.ticklen = r.tickLength;\n                    delete r.tickLength;\n                }\n                if (r.tickColor) {\n                    r.angularaxis.tickcolor = r.tickColor;\n                    delete r.tickColor;\n                }\n            }\n            if (r.legend && typeof r.legend.reverseOrder != 'boolean') {\n                r.legend.reverseOrder = r.legend.reverseOrder != 'normal';\n            }\n            if (r.legend && typeof r.legend.traceorder == 'boolean') {\n                r.legend.traceorder = r.legend.traceorder ? 'reversed' : 'normal';\n                delete r.legend.reverseOrder;\n            }\n            if (r.margin && typeof r.margin.t != 'undefined') {\n                var source = [ 't', 'r', 'b', 'l', 'pad' ];\n                var target = [ 'top', 'right', 'bottom', 'left', 'pad' ];\n                var margin = {};\n                d3.entries(r.margin).forEach(function(dB, iB) {\n                    margin[target[source.indexOf(dB.key)]] = dB.value;\n                });\n                r.margin = margin;\n            }\n            if (reverse) {\n                delete r.needsEndSpacing;\n                delete r.minorTickColor;\n                delete r.minorTicks;\n                delete r.angularaxis.ticksCount;\n                delete r.angularaxis.ticksCount;\n                delete r.angularaxis.ticksStep;\n                delete r.angularaxis.rewriteTicks;\n                delete r.angularaxis.nticks;\n                delete r.radialaxis.ticksCount;\n                delete r.radialaxis.ticksCount;\n                delete r.radialaxis.ticksStep;\n                delete r.radialaxis.rewriteTicks;\n                delete r.radialaxis.nticks;\n            }\n            outputConfig.layout = r;\n        }\n        return outputConfig;\n    };\n    return exports;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/polar/legacy/micropolar.js\n// module id = 104\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Fx = require('../../components/fx');\nvar dragElement = require('../../components/dragelement');\n\nvar constants = require('./constants');\nvar makeDragBox = require('./dragbox').makeDragBox;\n\nmodule.exports = function initInteractions(gd) {\n    var fullLayout = gd._fullLayout;\n\n    if((!fullLayout._has('cartesian') && !fullLayout._has('gl2d')) || gd._context.staticPlot) return;\n\n    var subplots = Object.keys(fullLayout._plots || {}).sort(function(a, b) {\n        // sort overlays last, then by x axis number, then y axis number\n        if((fullLayout._plots[a].mainplot && true) ===\n            (fullLayout._plots[b].mainplot && true)) {\n            var aParts = a.split('y'),\n                bParts = b.split('y');\n            return (aParts[0] === bParts[0]) ?\n                (Number(aParts[1] || 1) - Number(bParts[1] || 1)) :\n                (Number(aParts[0] || 1) - Number(bParts[0] || 1));\n        }\n        return fullLayout._plots[a].mainplot ? 1 : -1;\n    });\n\n    subplots.forEach(function(subplot) {\n        var plotinfo = fullLayout._plots[subplot];\n\n        var xa = plotinfo.xaxis;\n        var ya = plotinfo.yaxis;\n\n        var DRAGGERSIZE = constants.DRAGGERSIZE;\n\n        // main and corner draggers need not be repeated for\n        // overlaid subplots - these draggers drag them all\n        if(!plotinfo.mainplot) {\n            // main dragger goes over the grids and data, so we use its\n            // mousemove events for all data hover effects\n            var maindrag = makeDragBox(gd, plotinfo, xa._offset, ya._offset,\n                xa._length, ya._length, 'ns', 'ew');\n\n            maindrag.onmousemove = function(evt) {\n                // This is on `gd._fullLayout`, *not* fullLayout because the reference\n                // changes by the time this is called again.\n                gd._fullLayout._rehover = function() {\n                    if(gd._fullLayout._hoversubplot === subplot) {\n                        Fx.hover(gd, evt, subplot);\n                    }\n                };\n\n                Fx.hover(gd, evt, subplot);\n\n                // Note that we have *not* used the cached fullLayout variable here\n                // since that may be outdated when this is called as a callback later on\n                gd._fullLayout._lasthover = maindrag;\n                gd._fullLayout._hoversubplot = subplot;\n            };\n\n            /*\n             * IMPORTANT:\n             * We must check for the presence of the drag cover here.\n             * If we don't, a 'mouseout' event is triggered on the\n             * maindrag before each 'click' event, which has the effect\n             * of clearing the hoverdata; thus, cancelling the click event.\n             */\n            maindrag.onmouseout = function(evt) {\n                if(gd._dragging) return;\n\n                // When the mouse leaves this maindrag, unset the hovered subplot.\n                // This may cause problems if it leaves the subplot directly *onto*\n                // another subplot, but that's a tiny corner case at the moment.\n                gd._fullLayout._hoversubplot = null;\n\n                dragElement.unhover(gd, evt);\n            };\n\n            // corner draggers\n            if(gd._context.showAxisDragHandles) {\n                makeDragBox(gd, plotinfo, xa._offset - DRAGGERSIZE, ya._offset - DRAGGERSIZE,\n                    DRAGGERSIZE, DRAGGERSIZE, 'n', 'w');\n                makeDragBox(gd, plotinfo, xa._offset + xa._length, ya._offset - DRAGGERSIZE,\n                    DRAGGERSIZE, DRAGGERSIZE, 'n', 'e');\n                makeDragBox(gd, plotinfo, xa._offset - DRAGGERSIZE, ya._offset + ya._length,\n                    DRAGGERSIZE, DRAGGERSIZE, 's', 'w');\n                makeDragBox(gd, plotinfo, xa._offset + xa._length, ya._offset + ya._length,\n                    DRAGGERSIZE, DRAGGERSIZE, 's', 'e');\n            }\n        }\n        if(gd._context.showAxisDragHandles) {\n            // x axis draggers - if you have overlaid plots,\n            // these drag each axis separately\n            if(subplot === xa._mainSubplot) {\n                // the y position of the main x axis line\n                var y0 = xa._mainLinePosition;\n                if(xa.side === 'top') y0 -= DRAGGERSIZE;\n                makeDragBox(gd, plotinfo, xa._offset + xa._length * 0.1, y0,\n                    xa._length * 0.8, DRAGGERSIZE, '', 'ew');\n                makeDragBox(gd, plotinfo, xa._offset, y0,\n                    xa._length * 0.1, DRAGGERSIZE, '', 'w');\n                makeDragBox(gd, plotinfo, xa._offset + xa._length * 0.9, y0,\n                    xa._length * 0.1, DRAGGERSIZE, '', 'e');\n            }\n            // y axis draggers\n            if(subplot === ya._mainSubplot) {\n                // the x position of the main y axis line\n                var x0 = ya._mainLinePosition;\n                if(ya.side !== 'right') x0 -= DRAGGERSIZE;\n                makeDragBox(gd, plotinfo, x0, ya._offset + ya._length * 0.1,\n                    DRAGGERSIZE, ya._length * 0.8, 'ns', '');\n                makeDragBox(gd, plotinfo, x0, ya._offset + ya._length * 0.9,\n                    DRAGGERSIZE, ya._length * 0.1, 's', '');\n                makeDragBox(gd, plotinfo, x0, ya._offset,\n                    DRAGGERSIZE, ya._length * 0.1, 'n', '');\n            }\n        }\n    });\n\n    // In case you mousemove over some hovertext, send it to Fx.hover too\n    // we do this so that we can put the hover text in front of everything,\n    // but still be able to interact with everything as if it isn't there\n    var hoverLayer = fullLayout._hoverlayer.node();\n\n    hoverLayer.onmousemove = function(evt) {\n        evt.target = fullLayout._lasthover;\n        Fx.hover(gd, evt, fullLayout._hoversubplot);\n    };\n\n    hoverLayer.onclick = function(evt) {\n        evt.target = fullLayout._lasthover;\n        Fx.click(gd, evt);\n    };\n\n    // also delegate mousedowns... TODO: does this actually work?\n    hoverLayer.onmousedown = function(evt) {\n        fullLayout._lasthover.onmousedown(evt);\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/graph_interact.js\n// module id = 105\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\n\nmodule.exports = function handleHoverLabelDefaults(contIn, contOut, coerce, opts) {\n    opts = opts || {};\n\n    coerce('hoverlabel.bgcolor', opts.bgcolor);\n    coerce('hoverlabel.bordercolor', opts.bordercolor);\n    coerce('hoverlabel.namelength', opts.namelength);\n    Lib.coerceFont(coerce, 'hoverlabel.font', opts.font);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/fx/hoverlabel_defaults.js\n// module id = 106\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar dot = require('./matrix').dot;\nvar BADNUM = require('../constants/numerical').BADNUM;\n\nvar polygon = module.exports = {};\n\n/**\n * Turn an array of [x, y] pairs into a polygon object\n * that can test if points are inside it\n *\n * @param ptsIn Array of [x, y] pairs\n *\n * @returns polygon Object {xmin, xmax, ymin, ymax, pts, contains}\n *      (x|y)(min|max) are the bounding rect of the polygon\n *      pts is the original array, with the first pair repeated at the end\n *      contains is a function: (pt, omitFirstEdge)\n *          pt is the [x, y] pair to test\n *          omitFirstEdge truthy means points exactly on the first edge don't\n *              count. This is for use adding one polygon to another so we\n *              don't double-count the edge where they meet.\n *          returns boolean: is pt inside the polygon (including on its edges)\n */\npolygon.tester = function tester(ptsIn) {\n    if(Array.isArray(ptsIn[0][0])) return polygon.multitester(ptsIn);\n\n    var pts = ptsIn.slice(),\n        xmin = pts[0][0],\n        xmax = xmin,\n        ymin = pts[0][1],\n        ymax = ymin,\n        i;\n\n    pts.push(pts[0]);\n    for(i = 1; i < pts.length; i++) {\n        xmin = Math.min(xmin, pts[i][0]);\n        xmax = Math.max(xmax, pts[i][0]);\n        ymin = Math.min(ymin, pts[i][1]);\n        ymax = Math.max(ymax, pts[i][1]);\n    }\n\n    // do we have a rectangle? Handle this here, so we can use the same\n    // tester for the rectangular case without sacrificing speed\n\n    var isRect = false,\n        rectFirstEdgeTest;\n\n    if(pts.length === 5) {\n        if(pts[0][0] === pts[1][0]) { // vert, horz, vert, horz\n            if(pts[2][0] === pts[3][0] &&\n                    pts[0][1] === pts[3][1] &&\n                    pts[1][1] === pts[2][1]) {\n                isRect = true;\n                rectFirstEdgeTest = function(pt) { return pt[0] === pts[0][0]; };\n            }\n        }\n        else if(pts[0][1] === pts[1][1]) { // horz, vert, horz, vert\n            if(pts[2][1] === pts[3][1] &&\n                    pts[0][0] === pts[3][0] &&\n                    pts[1][0] === pts[2][0]) {\n                isRect = true;\n                rectFirstEdgeTest = function(pt) { return pt[1] === pts[0][1]; };\n            }\n        }\n    }\n\n    function rectContains(pt, omitFirstEdge) {\n        var x = pt[0],\n            y = pt[1];\n\n        if(x === BADNUM || x < xmin || x > xmax || y === BADNUM || y < ymin || y > ymax) {\n            // pt is outside the bounding box of polygon\n            return false;\n        }\n        if(omitFirstEdge && rectFirstEdgeTest(pt)) return false;\n\n        return true;\n    }\n\n    function contains(pt, omitFirstEdge) {\n        var x = pt[0],\n            y = pt[1];\n\n        if(x === BADNUM || x < xmin || x > xmax || y === BADNUM || y < ymin || y > ymax) {\n            // pt is outside the bounding box of polygon\n            return false;\n        }\n\n        var imax = pts.length,\n            x1 = pts[0][0],\n            y1 = pts[0][1],\n            crossings = 0,\n            i,\n            x0,\n            y0,\n            xmini,\n            ycross;\n\n        for(i = 1; i < imax; i++) {\n            // find all crossings of a vertical line upward from pt with\n            // polygon segments\n            // crossings exactly at xmax don't count, unless the point is\n            // exactly on the segment, then it counts as inside.\n            x0 = x1;\n            y0 = y1;\n            x1 = pts[i][0];\n            y1 = pts[i][1];\n            xmini = Math.min(x0, x1);\n\n            // outside the bounding box of this segment, it's only a crossing\n            // if it's below the box.\n            if(x < xmini || x > Math.max(x0, x1) || y > Math.max(y0, y1)) {\n                continue;\n            }\n            else if(y < Math.min(y0, y1)) {\n                // don't count the left-most point of the segment as a crossing\n                // because we don't want to double-count adjacent crossings\n                // UNLESS the polygon turns past vertical at exactly this x\n                // Note that this is repeated below, but we can't factor it out\n                // because\n                if(x !== xmini) crossings++;\n            }\n            // inside the bounding box, check the actual line intercept\n            else {\n                // vertical segment - we know already that the point is exactly\n                // on the segment, so mark the crossing as exactly at the point.\n                if(x1 === x0) ycross = y;\n                // any other angle\n                else ycross = y0 + (x - x0) * (y1 - y0) / (x1 - x0);\n\n                // exactly on the edge: counts as inside the polygon, unless it's the\n                // first edge and we're omitting it.\n                if(y === ycross) {\n                    if(i === 1 && omitFirstEdge) return false;\n                    return true;\n                }\n\n                if(y <= ycross && x !== xmini) crossings++;\n            }\n        }\n\n        // if we've gotten this far, odd crossings means inside, even is outside\n        return crossings % 2 === 1;\n    }\n\n    // detect if poly is degenerate\n    var degenerate = true;\n    var lastPt = pts[0];\n    for(i = 1; i < pts.length; i++) {\n        if(lastPt[0] !== pts[i][0] || lastPt[1] !== pts[i][1]) {\n            degenerate = false;\n            break;\n        }\n    }\n\n    return {\n        xmin: xmin,\n        xmax: xmax,\n        ymin: ymin,\n        ymax: ymax,\n        pts: pts,\n        contains: isRect ? rectContains : contains,\n        isRect: isRect,\n        degenerate: degenerate\n    };\n};\n\n/**\n * Test multiple polygons\n */\npolygon.multitester = function multitester(list) {\n    var testers = [],\n        xmin = list[0][0][0],\n        xmax = xmin,\n        ymin = list[0][0][1],\n        ymax = ymin;\n\n    for(var i = 0; i < list.length; i++) {\n        var tester = polygon.tester(list[i]);\n        tester.subtract = list[i].subtract;\n        testers.push(tester);\n        xmin = Math.min(xmin, tester.xmin);\n        xmax = Math.max(xmax, tester.xmax);\n        ymin = Math.min(ymin, tester.ymin);\n        ymax = Math.max(ymax, tester.ymax);\n    }\n\n    function contains(pt, arg) {\n        var yes = false;\n        for(var i = 0; i < testers.length; i++) {\n            if(testers[i].contains(pt, arg)) {\n                // if contained by subtract polygon - exclude the point\n                yes = testers[i].subtract === false;\n            }\n        }\n\n        return yes;\n    }\n\n    return {\n        xmin: xmin,\n        xmax: xmax,\n        ymin: ymin,\n        ymax: ymax,\n        pts: [],\n        contains: contains,\n        isRect: false,\n        degenerate: false\n    };\n};\n\n/**\n * Test if a segment of a points array is bent or straight\n *\n * @param pts Array of [x, y] pairs\n * @param start the index of the proposed start of the straight section\n * @param end the index of the proposed end point\n * @param tolerance the max distance off the line connecting start and end\n *      before the line counts as bent\n * @returns boolean: true means this segment is bent, false means straight\n */\nvar isBent = polygon.isSegmentBent = function isBent(pts, start, end, tolerance) {\n    var startPt = pts[start],\n        segment = [pts[end][0] - startPt[0], pts[end][1] - startPt[1]],\n        segmentSquared = dot(segment, segment),\n        segmentLen = Math.sqrt(segmentSquared),\n        unitPerp = [-segment[1] / segmentLen, segment[0] / segmentLen],\n        i,\n        part,\n        partParallel;\n\n    for(i = start + 1; i < end; i++) {\n        part = [pts[i][0] - startPt[0], pts[i][1] - startPt[1]];\n        partParallel = dot(part, segment);\n\n        if(partParallel < 0 || partParallel > segmentSquared ||\n            Math.abs(dot(part, unitPerp)) > tolerance) return true;\n    }\n    return false;\n};\n\n/**\n * Make a filtering polygon, to minimize the number of segments\n *\n * @param pts Array of [x, y] pairs (must start with at least 1 pair)\n * @param tolerance the maximum deviation from straight allowed for\n *      removing points to simplify the polygon\n *\n * @returns Object {addPt, raw, filtered}\n *      addPt is a function(pt: [x, y] pair) to add a raw point and\n *          continue filtering\n *      raw is all the input points\n *      filtered is the resulting filtered Array of [x, y] pairs\n */\npolygon.filter = function filter(pts, tolerance) {\n    var ptsFiltered = [pts[0]],\n        doneRawIndex = 0,\n        doneFilteredIndex = 0;\n\n    function addPt(pt) {\n        pts.push(pt);\n        var prevFilterLen = ptsFiltered.length,\n            iLast = doneRawIndex;\n        ptsFiltered.splice(doneFilteredIndex + 1);\n\n        for(var i = iLast + 1; i < pts.length; i++) {\n            if(i === pts.length - 1 || isBent(pts, iLast, i + 1, tolerance)) {\n                ptsFiltered.push(pts[i]);\n                if(ptsFiltered.length < prevFilterLen - 2) {\n                    doneRawIndex = i;\n                    doneFilteredIndex = ptsFiltered.length - 1;\n                }\n                iLast = i;\n            }\n        }\n    }\n\n    if(pts.length > 1) {\n        var lastPt = pts.pop();\n        addPt(lastPt);\n    }\n\n    return {\n        addPt: addPt,\n        raw: pts,\n        filtered: ptsFiltered\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/polygon.js\n// module id = 107\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar FROM_BL = require('../../constants/alignment').FROM_BL;\n\nmodule.exports = function scaleZoom(ax, factor, centerFraction) {\n    if(centerFraction === undefined) {\n        centerFraction = FROM_BL[ax.constraintoward || 'center'];\n    }\n\n    var rangeLinear = [ax.r2l(ax.range[0]), ax.r2l(ax.range[1])];\n    var center = rangeLinear[0] + (rangeLinear[1] - rangeLinear[0]) * centerFraction;\n\n    ax.range = ax._input.range = [\n        ax.l2r(center + (rangeLinear[0] - center) * factor),\n        ax.l2r(center + (rangeLinear[1] - center) * factor)\n    ];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/scale_zoom.js\n// module id = 108\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../../registry');\n\n\nmodule.exports = function handleXYDefaults(traceIn, traceOut, layout, coerce) {\n    var len,\n        x = coerce('x'),\n        y = coerce('y');\n\n    var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleTraceDefaults');\n    handleCalendarDefaults(traceIn, traceOut, ['x', 'y'], layout);\n\n    if(x) {\n        if(y) {\n            len = Math.min(x.length, y.length);\n            // TODO: not sure we should do this here... but I think\n            // the way it works in calc is wrong, because it'll delete data\n            // which could be a problem eg in streaming / editing if x and y\n            // come in at different times\n            // so we need to revisit calc before taking this out\n            if(len < x.length) traceOut.x = x.slice(0, len);\n            if(len < y.length) traceOut.y = y.slice(0, len);\n        }\n        else {\n            len = x.length;\n            coerce('y0');\n            coerce('dy');\n        }\n    }\n    else {\n        if(!y) return 0;\n\n        len = traceOut.y.length;\n        coerce('x0');\n        coerce('dx');\n    }\n    return len;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/xy_defaults.js\n// module id = 109\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\n\n\n// arrayOk attributes, merge them into calcdata array\nmodule.exports = function arraysToCalcdata(cd, trace) {\n\n    // so each point knows which index it originally came from\n    for(var i = 0; i < cd.length; i++) cd[i].i = i;\n\n    Lib.mergeArray(trace.text, cd, 'tx');\n    Lib.mergeArray(trace.hovertext, cd, 'htx');\n    Lib.mergeArray(trace.customdata, cd, 'data');\n    Lib.mergeArray(trace.textposition, cd, 'tp');\n    if(trace.textfont) {\n        Lib.mergeArray(trace.textfont.size, cd, 'ts');\n        Lib.mergeArray(trace.textfont.color, cd, 'tc');\n        Lib.mergeArray(trace.textfont.family, cd, 'tf');\n    }\n\n    var marker = trace.marker;\n    if(marker) {\n        Lib.mergeArray(marker.size, cd, 'ms');\n        Lib.mergeArray(marker.opacity, cd, 'mo');\n        Lib.mergeArray(marker.symbol, cd, 'mx');\n        Lib.mergeArray(marker.color, cd, 'mc');\n\n        var markerLine = marker.line;\n        if(marker.line) {\n            Lib.mergeArray(markerLine.color, cd, 'mlc');\n            Lib.mergeArray(markerLine.width, cd, 'mlw');\n        }\n\n        var markerGradient = marker.gradient;\n        if(markerGradient && markerGradient.type !== 'none') {\n            Lib.mergeArray(markerGradient.type, cd, 'mgt');\n            Lib.mergeArray(markerGradient.color, cd, 'mgc');\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/arrays_to_calcdata.js\n// module id = 110\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\n\nmodule.exports = function calcSelection(cd, trace) {\n    if(Array.isArray(trace.selectedpoints)) {\n        Lib.tagSelected(cd, trace);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/calc_selection.js\n// module id = 111\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar Plots = require('../../plots/plots');\nvar Colorscale = require('../../components/colorscale');\nvar drawColorbar = require('../../components/colorbar/draw');\n\n\nmodule.exports = function colorbar(gd, cd) {\n    var trace = cd[0].trace,\n        marker = trace.marker,\n        cbId = 'cb' + trace.uid;\n\n    gd._fullLayout._infolayer.selectAll('.' + cbId).remove();\n\n    // TODO make Colorbar.draw support multiple colorbar per trace\n\n    if((marker === undefined) || !marker.showscale) {\n        Plots.autoMargin(gd, cbId);\n        return;\n    }\n\n    var vals = marker.color,\n        cmin = marker.cmin,\n        cmax = marker.cmax;\n\n    if(!isNumeric(cmin)) cmin = Lib.aggNums(Math.min, null, vals);\n    if(!isNumeric(cmax)) cmax = Lib.aggNums(Math.max, null, vals);\n\n    var cb = cd[0].t.cb = drawColorbar(gd, cbId);\n    var sclFunc = Colorscale.makeColorScaleFunc(\n        Colorscale.extractScale(\n            marker.colorscale,\n            cmin,\n            cmax\n        ),\n        { noNumericCheck: true }\n    );\n\n    cb.fillcolor(sclFunc)\n        .filllevels({start: cmin, end: cmax, size: (cmax - cmin) / 254})\n        .options(marker.colorbar)();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/colorbar.js\n// module id = 112\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\n\nvar layoutAttributes = require('./layout_attributes');\nvar handleTickValueDefaults = require('./tick_value_defaults');\nvar handleTickMarkDefaults = require('./tick_mark_defaults');\nvar handleTickLabelDefaults = require('./tick_label_defaults');\nvar handleCategoryOrderDefaults = require('./category_order_defaults');\nvar handleLineGridDefaults = require('./line_grid_defaults');\nvar setConvert = require('./set_convert');\nvar orderedCategories = require('./ordered_categories');\n\n/**\n * options: object containing:\n *\n *  letter: 'x' or 'y'\n *  title: name of the axis (ie 'Colorbar') to go in default title\n *  font: the default font to inherit\n *  outerTicks: boolean, should ticks default to outside?\n *  showGrid: boolean, should gridlines be shown by default?\n *  noHover: boolean, this axis doesn't support hover effects?\n *  data: the plot data, used to manage categories\n *  bgColor: the plot background color, to calculate default gridline colors\n */\nmodule.exports = function handleAxisDefaults(containerIn, containerOut, coerce, options, layoutOut) {\n    var letter = options.letter;\n    var font = options.font || {};\n\n    var visible = coerce('visible', !options.cheateronly);\n\n    var axType = containerOut.type;\n\n    if(axType === 'date') {\n        var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleDefaults');\n        handleCalendarDefaults(containerIn, containerOut, 'calendar', options.calendar);\n    }\n\n    setConvert(containerOut, layoutOut);\n\n    var autoRange = coerce('autorange', !containerOut.isValidRange(containerIn.range));\n\n    if(autoRange) coerce('rangemode');\n\n    coerce('range');\n    containerOut.cleanRange();\n\n    handleCategoryOrderDefaults(containerIn, containerOut, coerce);\n    containerOut._initialCategories = axType === 'category' ?\n        orderedCategories(letter, containerOut.categoryorder, containerOut.categoryarray, options.data) :\n        [];\n\n    if(!visible) return containerOut;\n\n    var dfltColor = coerce('color');\n    // if axis.color was provided, use it for fonts too; otherwise,\n    // inherit from global font color in case that was provided.\n    var dfltFontColor = (dfltColor === containerIn.color) ? dfltColor : font.color;\n\n    coerce('title', layoutOut._dfltTitle[letter]);\n    Lib.coerceFont(coerce, 'titlefont', {\n        family: font.family,\n        size: Math.round(font.size * 1.2),\n        color: dfltFontColor\n    });\n\n    handleTickValueDefaults(containerIn, containerOut, coerce, axType);\n    handleTickLabelDefaults(containerIn, containerOut, coerce, axType, options);\n    handleTickMarkDefaults(containerIn, containerOut, coerce, options);\n    handleLineGridDefaults(containerIn, containerOut, coerce, {\n        dfltColor: dfltColor,\n        bgColor: options.bgColor,\n        showGrid: options.showGrid,\n        attributes: layoutAttributes\n    });\n\n    if(containerOut.showline || containerOut.ticks) coerce('mirror');\n\n    return containerOut;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/axis_defaults.js\n// module id = 113\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\n\n\nmodule.exports = function handlePositionDefaults(containerIn, containerOut, coerce, options) {\n    var counterAxes = options.counterAxes || [],\n        overlayableAxes = options.overlayableAxes || [],\n        letter = options.letter;\n\n    var anchor = Lib.coerce(containerIn, containerOut, {\n        anchor: {\n            valType: 'enumerated',\n            values: ['free'].concat(counterAxes),\n            dflt: isNumeric(containerIn.position) ? 'free' :\n                (counterAxes[0] || 'free')\n        }\n    }, 'anchor');\n\n    if(anchor === 'free') coerce('position');\n\n    Lib.coerce(containerIn, containerOut, {\n        side: {\n            valType: 'enumerated',\n            values: letter === 'x' ? ['bottom', 'top'] : ['left', 'right'],\n            dflt: letter === 'x' ? 'bottom' : 'left'\n        }\n    }, 'side');\n\n    var overlaying = false;\n    if(overlayableAxes.length) {\n        overlaying = Lib.coerce(containerIn, containerOut, {\n            overlaying: {\n                valType: 'enumerated',\n                values: [false].concat(overlayableAxes),\n                dflt: false\n            }\n        }, 'overlaying');\n    }\n\n    if(!overlaying) {\n        // TODO: right now I'm copying this domain over to overlaying axes\n        // in ax.setscale()... but this means we still need (imperfect) logic\n        // in the axes popover to hide domain for the overlaying axis.\n        // perhaps I should make a private version _domain that all axes get???\n        var domain = coerce('domain');\n        if(domain[0] > domain[1] - 0.01) containerOut.domain = [0, 1];\n        Lib.noneOrAll(containerIn.domain, containerOut.domain, [0, 1]);\n    }\n\n    coerce('layer');\n\n    return containerOut;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/position_defaults.js\n// module id = 114\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\n\n/** Fill hover 'pointData' container with 'correct' hover text value\n *\n * - If trace hoverinfo contains a 'text' flag and hovertext is not set,\n *   the text elements will be seen in the hover labels.\n *\n * - If trace hoverinfo contains a 'text' flag and hovertext is set,\n *   hovertext takes precedence over text\n *   i.e. the hoverinfo elements will be seen in the hover labels\n *\n *  @param {object} calcPt\n *  @param {object} trace\n *  @param {object || array} contOut (mutated here)\n */\nmodule.exports = function fillHoverText(calcPt, trace, contOut) {\n    var fill = Array.isArray(contOut) ?\n        function(v) { contOut.push(v); } :\n        function(v) { contOut.text = v; };\n\n    var htx = Lib.extractOption(calcPt, trace, 'htx', 'hovertext');\n    if(isValid(htx)) return fill(htx);\n\n    var tx = Lib.extractOption(calcPt, trace, 'tx', 'text');\n    if(isValid(tx)) return fill(tx);\n};\n\n// accept all truthy values and 0 (which gets cast to '0' in the hover labels)\nfunction isValid(v) {\n    return v || v === 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/fill_hover_text.js\n// module id = 115\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar colorAttrs = require('../color/attributes');\n\n\nmodule.exports = {\n    bgcolor: {\n        valType: 'color',\n        role: 'style',\n        editType: 'legend',\n        description: 'Sets the legend background color.'\n    },\n    bordercolor: {\n        valType: 'color',\n        dflt: colorAttrs.defaultLine,\n        role: 'style',\n        editType: 'legend',\n        description: 'Sets the color of the border enclosing the legend.'\n    },\n    borderwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: 0,\n        role: 'style',\n        editType: 'legend',\n        description: 'Sets the width (in px) of the border enclosing the legend.'\n    },\n    font: fontAttrs({\n        editType: 'legend',\n        description: 'Sets the font used to text the legend items.'\n    }),\n    orientation: {\n        valType: 'enumerated',\n        values: ['v', 'h'],\n        dflt: 'v',\n        role: 'info',\n        editType: 'legend',\n        description: 'Sets the orientation of the legend.'\n    },\n    traceorder: {\n        valType: 'flaglist',\n        flags: ['reversed', 'grouped'],\n        extras: ['normal'],\n        role: 'style',\n        editType: 'legend',\n        description: [\n            'Determines the order at which the legend items are displayed.',\n\n            'If *normal*, the items are displayed top-to-bottom in the same',\n            'order as the input data.',\n\n            'If *reversed*, the items are displayed in the opposite order',\n            'as *normal*.',\n\n            'If *grouped*, the items are displayed in groups',\n            '(when a trace `legendgroup` is provided).',\n\n            'if *grouped+reversed*, the items are displayed in the opposite order',\n            'as *grouped*.'\n        ].join(' ')\n    },\n    tracegroupgap: {\n        valType: 'number',\n        min: 0,\n        dflt: 10,\n        role: 'style',\n        editType: 'legend',\n        description: [\n            'Sets the amount of vertical space (in px) between legend groups.'\n        ].join(' ')\n    },\n    x: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        dflt: 1.02,\n        role: 'style',\n        editType: 'legend',\n        description: 'Sets the x position (in normalized coordinates) of the legend.'\n    },\n    xanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'left', 'center', 'right'],\n        dflt: 'left',\n        role: 'info',\n        editType: 'legend',\n        description: [\n            'Sets the legend\\'s horizontal position anchor.',\n            'This anchor binds the `x` position to the *left*, *center*',\n            'or *right* of the legend.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        dflt: 1,\n        role: 'style',\n        editType: 'legend',\n        description: 'Sets the y position (in normalized coordinates) of the legend.'\n    },\n    yanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'top', 'middle', 'bottom'],\n        dflt: 'auto',\n        role: 'info',\n        editType: 'legend',\n        description: [\n            'Sets the legend\\'s vertical position anchor',\n            'This anchor binds the `y` position to the *top*, *middle*',\n            'or *bottom* of the legend.'\n        ].join(' ')\n    },\n    editType: 'legend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/legend/attributes.js\n// module id = 116\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\n\nvar subTypes = require('../../traces/scatter/subtypes');\nvar stylePie = require('../../traces/pie/style_one');\n\n\nmodule.exports = function style(s, gd) {\n    s.each(function(d) {\n        var traceGroup = d3.select(this);\n\n        var layers = traceGroup.selectAll('g.layers')\n            .data([0]);\n        layers.enter().append('g')\n            .classed('layers', true);\n        layers.style('opacity', d[0].trace.opacity);\n\n        var fill = layers\n            .selectAll('g.legendfill')\n                .data([d]);\n        fill.enter().append('g')\n            .classed('legendfill', true);\n\n        var line = layers\n            .selectAll('g.legendlines')\n                .data([d]);\n        line.enter().append('g')\n            .classed('legendlines', true);\n\n        var symbol = layers\n            .selectAll('g.legendsymbols')\n                .data([d]);\n        symbol.enter().append('g')\n            .classed('legendsymbols', true);\n\n        symbol.selectAll('g.legendpoints')\n            .data([d])\n          .enter().append('g')\n            .classed('legendpoints', true);\n    })\n    .each(styleBars)\n    .each(styleBoxes)\n    .each(stylePies)\n    .each(styleLines)\n    .each(stylePoints);\n\n    function styleLines(d) {\n        var trace = d[0].trace,\n            showFill = trace.visible && trace.fill && trace.fill !== 'none',\n            showLine = subTypes.hasLines(trace);\n\n        if(trace && trace._module && trace._module.name === 'contourcarpet') {\n            showLine = trace.contours.showlines;\n            showFill = trace.contours.coloring === 'fill';\n        }\n\n        var fill = d3.select(this).select('.legendfill').selectAll('path')\n            .data(showFill ? [d] : []);\n        fill.enter().append('path').classed('js-fill', true);\n        fill.exit().remove();\n        fill.attr('d', 'M5,0h30v6h-30z')\n            .call(Drawing.fillGroupStyle);\n\n        var line = d3.select(this).select('.legendlines').selectAll('path')\n            .data(showLine ? [d] : []);\n        line.enter().append('path').classed('js-line', true)\n            .attr('d', 'M5,0h30');\n        line.exit().remove();\n        line.call(Drawing.lineGroupStyle);\n    }\n\n    function stylePoints(d) {\n        var d0 = d[0],\n            trace = d0.trace,\n            showMarkers = subTypes.hasMarkers(trace),\n            showText = subTypes.hasText(trace),\n            showLines = subTypes.hasLines(trace);\n\n        var dMod, tMod;\n\n        // 'scatter3d' and 'scattergeo' don't use gd.calcdata yet;\n        // use d0.trace to infer arrayOk attributes\n\n        function boundVal(attrIn, arrayToValFn, bounds) {\n            var valIn = Lib.nestedProperty(trace, attrIn).get(),\n                valToBound = (Array.isArray(valIn) && arrayToValFn) ?\n                    arrayToValFn(valIn) : valIn;\n\n            if(bounds) {\n                if(valToBound < bounds[0]) return bounds[0];\n                else if(valToBound > bounds[1]) return bounds[1];\n            }\n            return valToBound;\n        }\n\n        function pickFirst(array) { return array[0]; }\n\n        // constrain text, markers, etc so they'll fit on the legend\n        if(showMarkers || showText || showLines) {\n            var dEdit = {},\n                tEdit = {};\n\n            if(showMarkers) {\n                dEdit.mc = boundVal('marker.color', pickFirst);\n                dEdit.mo = boundVal('marker.opacity', Lib.mean, [0.2, 1]);\n                dEdit.ms = boundVal('marker.size', Lib.mean, [2, 16]);\n                dEdit.mlc = boundVal('marker.line.color', pickFirst);\n                dEdit.mlw = boundVal('marker.line.width', Lib.mean, [0, 5]);\n                tEdit.marker = {\n                    sizeref: 1,\n                    sizemin: 1,\n                    sizemode: 'diameter'\n                };\n            }\n\n            if(showLines) {\n                tEdit.line = {\n                    width: boundVal('line.width', pickFirst, [0, 10])\n                };\n            }\n\n            if(showText) {\n                dEdit.tx = 'Aa';\n                dEdit.tp = boundVal('textposition', pickFirst);\n                dEdit.ts = 10;\n                dEdit.tc = boundVal('textfont.color', pickFirst);\n                dEdit.tf = boundVal('textfont.family', pickFirst);\n            }\n\n            dMod = [Lib.minExtend(d0, dEdit)];\n            tMod = Lib.minExtend(trace, tEdit);\n        }\n\n        var ptgroup = d3.select(this).select('g.legendpoints');\n\n        var pts = ptgroup.selectAll('path.scatterpts')\n            .data(showMarkers ? dMod : []);\n        pts.enter().append('path').classed('scatterpts', true)\n            .attr('transform', 'translate(20,0)');\n        pts.exit().remove();\n        pts.call(Drawing.pointStyle, tMod, gd);\n\n        // 'mrc' is set in pointStyle and used in textPointStyle:\n        // constrain it here\n        if(showMarkers) dMod[0].mrc = 3;\n\n        var txt = ptgroup.selectAll('g.pointtext')\n            .data(showText ? dMod : []);\n        txt.enter()\n            .append('g').classed('pointtext', true)\n                .append('text').attr('transform', 'translate(20,0)');\n        txt.exit().remove();\n        txt.selectAll('text').call(Drawing.textPointStyle, tMod, gd);\n    }\n\n    function styleBars(d) {\n        var trace = d[0].trace,\n            marker = trace.marker || {},\n            markerLine = marker.line || {},\n            barpath = d3.select(this).select('g.legendpoints')\n                .selectAll('path.legendbar')\n                .data(Registry.traceIs(trace, 'bar') ? [d] : []);\n        barpath.enter().append('path').classed('legendbar', true)\n            .attr('d', 'M6,6H-6V-6H6Z')\n            .attr('transform', 'translate(20,0)');\n        barpath.exit().remove();\n        barpath.each(function(d) {\n            var p = d3.select(this),\n                d0 = d[0],\n                w = (d0.mlw + 1 || markerLine.width + 1) - 1;\n\n            p.style('stroke-width', w + 'px')\n                .call(Color.fill, d0.mc || marker.color);\n\n            if(w) {\n                p.call(Color.stroke, d0.mlc || markerLine.color);\n            }\n        });\n    }\n\n    function styleBoxes(d) {\n        var trace = d[0].trace,\n            pts = d3.select(this).select('g.legendpoints')\n                .selectAll('path.legendbox')\n                .data(Registry.traceIs(trace, 'box-violin') && trace.visible ? [d] : []);\n        pts.enter().append('path').classed('legendbox', true)\n            // if we want the median bar, prepend M6,0H-6\n            .attr('d', 'M6,6H-6V-6H6Z')\n            .attr('transform', 'translate(20,0)');\n        pts.exit().remove();\n        pts.each(function() {\n            var w = trace.line.width,\n                p = d3.select(this);\n\n            p.style('stroke-width', w + 'px')\n                .call(Color.fill, trace.fillcolor);\n\n            if(w) {\n                p.call(Color.stroke, trace.line.color);\n            }\n        });\n    }\n\n    function stylePies(d) {\n        var trace = d[0].trace,\n            pts = d3.select(this).select('g.legendpoints')\n                .selectAll('path.legendpie')\n                .data(Registry.traceIs(trace, 'pie') && trace.visible ? [d] : []);\n        pts.enter().append('path').classed('legendpie', true)\n            .attr('d', 'M6,6H-6V-6H6Z')\n            .attr('transform', 'translate(20,0)');\n        pts.exit().remove();\n\n        if(pts.size()) pts.call(stylePie, d[0], trace);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/legend/style.js\n// module id = 117\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/**\n * All paths are tuned for maximum scalability of the arrowhead,\n * ie throughout arrowwidth=0.3..3 the head is joined smoothly\n * to the line, with the line coming from the left and ending at (0, 0).\n *\n * `backoff` is the distance to move the arrowhead and the end of the line,\n * in order that the arrowhead points to the desired place, either at\n * the tip of the arrow or (in the case of circle or square)\n * the center of the symbol.\n *\n * `noRotate`, if truthy, says that this arrowhead should not rotate with the\n * arrow. That's the case for squares, which should always be straight, and\n * circles, for which it's irrelevant.\n */\n\nmodule.exports = [\n    // no arrow\n    {\n        path: '',\n        backoff: 0\n    },\n    // wide with flat back\n    {\n        path: 'M-2.4,-3V3L0.6,0Z',\n        backoff: 0.6\n    },\n    // narrower with flat back\n    {\n        path: 'M-3.7,-2.5V2.5L1.3,0Z',\n        backoff: 1.3\n    },\n    // barbed\n    {\n        path: 'M-4.45,-3L-1.65,-0.2V0.2L-4.45,3L1.55,0Z',\n        backoff: 1.55\n    },\n    // wide line-drawn\n    {\n        path: 'M-2.2,-2.2L-0.2,-0.2V0.2L-2.2,2.2L-1.4,3L1.6,0L-1.4,-3Z',\n        backoff: 1.6\n    },\n    // narrower line-drawn\n    {\n        path: 'M-4.4,-2.1L-0.6,-0.2V0.2L-4.4,2.1L-4,3L2,0L-4,-3Z',\n        backoff: 2\n    },\n    // circle\n    {\n        path: 'M2,0A2,2 0 1,1 0,-2A2,2 0 0,1 2,0Z',\n        backoff: 0,\n        noRotate: true\n    },\n    // square\n    {\n        path: 'M2,2V-2H-2V2Z',\n        backoff: 0,\n        noRotate: true\n    }\n];\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations/arrow_paths.js\n// module id = 118\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../color');\n\n// defaults common to 'annotations' and 'annotations3d'\nmodule.exports = function handleAnnotationCommonDefaults(annIn, annOut, fullLayout, coerce) {\n    coerce('opacity');\n    var bgColor = coerce('bgcolor');\n\n    var borderColor = coerce('bordercolor');\n    var borderOpacity = Color.opacity(borderColor);\n\n    coerce('borderpad');\n\n    var borderWidth = coerce('borderwidth');\n    var showArrow = coerce('showarrow');\n\n    coerce('text', showArrow ? ' ' : fullLayout._dfltTitle.annotation);\n    coerce('textangle');\n    Lib.coerceFont(coerce, 'font', fullLayout.font);\n\n    coerce('width');\n    coerce('align');\n\n    var h = coerce('height');\n    if(h) coerce('valign');\n\n    if(showArrow) {\n        var arrowside = coerce('arrowside');\n        var arrowhead;\n        var arrowsize;\n\n        if(arrowside.indexOf('end') !== -1) {\n            arrowhead = coerce('arrowhead');\n            arrowsize = coerce('arrowsize');\n        }\n\n        if(arrowside.indexOf('start') !== -1) {\n            coerce('startarrowhead', arrowhead);\n            coerce('startarrowsize', arrowsize);\n        }\n        coerce('arrowcolor', borderOpacity ? annOut.bordercolor : Color.defaultLine);\n        coerce('arrowwidth', ((borderOpacity && borderWidth) || 1) * 2);\n        coerce('standoff');\n        coerce('startstandoff');\n\n    }\n\n    var hoverText = coerce('hovertext');\n    var globalHoverLabel = fullLayout.hoverlabel || {};\n\n    if(hoverText) {\n        var hoverBG = coerce('hoverlabel.bgcolor', globalHoverLabel.bgcolor ||\n            (Color.opacity(bgColor) ? Color.rgb(bgColor) : Color.defaultLine)\n        );\n\n        var hoverBorder = coerce('hoverlabel.bordercolor', globalHoverLabel.bordercolor ||\n            Color.contrast(hoverBG)\n        );\n\n        Lib.coerceFont(coerce, 'hoverlabel.font', {\n            family: globalHoverLabel.font.family,\n            size: globalHoverLabel.font.size,\n            color: globalHoverLabel.font.color || hoverBorder\n        });\n    }\n\n    coerce('captureevents', !!hoverText);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations/common_defaults.js\n// module id = 119\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\nmodule.exports = {\n    segmentRE: /[MLHVQCTSZ][^MLHVQCTSZ]*/g,\n    paramRE: /[^\\s,]+/g,\n\n    // which numbers in each path segment are x (or y) values\n    // drawn is which param is a drawn point, as opposed to a\n    // control point (which doesn't count toward autorange.\n    // TODO: this means curved paths could extend beyond the\n    // autorange bounds. This is a bit tricky to get right\n    // unless we revert to bounding boxes, but perhaps there's\n    // a calculation we could do...)\n    paramIsX: {\n        M: {0: true, drawn: 0},\n        L: {0: true, drawn: 0},\n        H: {0: true, drawn: 0},\n        V: {},\n        Q: {0: true, 2: true, drawn: 2},\n        C: {0: true, 2: true, 4: true, drawn: 4},\n        T: {0: true, drawn: 0},\n        S: {0: true, 2: true, drawn: 2},\n        // A: {0: true, 5: true},\n        Z: {}\n    },\n\n    paramIsY: {\n        M: {1: true, drawn: 1},\n        L: {1: true, drawn: 1},\n        H: {},\n        V: {0: true, drawn: 0},\n        Q: {1: true, 3: true, drawn: 3},\n        C: {1: true, 3: true, 5: true, drawn: 5},\n        T: {1: true, drawn: 1},\n        S: {1: true, 3: true, drawn: 5},\n        // A: {1: true, 6: true},\n        Z: {}\n    },\n\n    numParams: {\n        M: 2,\n        L: 2,\n        H: 1,\n        V: 1,\n        Q: 4,\n        C: 6,\n        T: 2,\n        S: 4,\n        // A: 7,\n        Z: 0\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/shapes/constants.js\n// module id = 120\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar annAttrs = require('../annotations/attributes');\nvar scatterLineAttrs = require('../../traces/scatter/attributes').line;\nvar dash = require('../drawing/attributes').dash;\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nmodule.exports = {\n    _isLinkedToArray: 'shape',\n\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        editType: 'calcIfAutorange',\n        description: [\n            'Determines whether or not this shape is visible.'\n        ].join(' ')\n    },\n\n    type: {\n        valType: 'enumerated',\n        values: ['circle', 'rect', 'path', 'line'],\n        role: 'info',\n        editType: 'calcIfAutorange',\n        description: [\n            'Specifies the shape type to be drawn.',\n\n            'If *line*, a line is drawn from (`x0`,`y0`) to (`x1`,`y1`)',\n\n            'If *circle*, a circle is drawn from',\n            '((`x0`+`x1`)/2, (`y0`+`y1`)/2))',\n            'with radius',\n            '(|(`x0`+`x1`)/2 - `x0`|, |(`y0`+`y1`)/2 -`y0`)|)',\n\n            'If *rect*, a rectangle is drawn linking',\n            '(`x0`,`y0`), (`x1`,`y0`), (`x1`,`y1`), (`x0`,`y1`), (`x0`,`y0`)',\n\n            'If *path*, draw a custom SVG path using `path`.'\n        ].join(' ')\n    },\n\n    layer: {\n        valType: 'enumerated',\n        values: ['below', 'above'],\n        dflt: 'above',\n        role: 'info',\n        editType: 'arraydraw',\n        description: 'Specifies whether shapes are drawn below or above traces.'\n    },\n\n    xref: extendFlat({}, annAttrs.xref, {\n        description: [\n            'Sets the shape\\'s x coordinate axis.',\n            'If set to an x axis id (e.g. *x* or *x2*), the `x` position',\n            'refers to an x coordinate',\n            'If set to *paper*, the `x` position refers to the distance from',\n            'the left side of the plotting area in normalized coordinates',\n            'where *0* (*1*) corresponds to the left (right) side.',\n            'If the axis `type` is *log*, then you must take the',\n            'log of your desired range.',\n            'If the axis `type` is *date*, then you must convert',\n            'the date to unix time in milliseconds.'\n        ].join(' ')\n    }),\n    x0: {\n        valType: 'any',\n        role: 'info',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the shape\\'s starting x position.',\n            'See `type` for more info.'\n        ].join(' ')\n    },\n    x1: {\n        valType: 'any',\n        role: 'info',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the shape\\'s end x position.',\n            'See `type` for more info.'\n        ].join(' ')\n    },\n\n    yref: extendFlat({}, annAttrs.yref, {\n        description: [\n            'Sets the annotation\\'s y coordinate axis.',\n            'If set to an y axis id (e.g. *y* or *y2*), the `y` position',\n            'refers to an y coordinate',\n            'If set to *paper*, the `y` position refers to the distance from',\n            'the bottom of the plotting area in normalized coordinates',\n            'where *0* (*1*) corresponds to the bottom (top).'\n        ].join(' ')\n    }),\n    y0: {\n        valType: 'any',\n        role: 'info',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the shape\\'s starting y position.',\n            'See `type` for more info.'\n        ].join(' ')\n    },\n    y1: {\n        valType: 'any',\n        role: 'info',\n        editType: 'calcIfAutorange',\n        description: [\n            'Sets the shape\\'s end y position.',\n            'See `type` for more info.'\n        ].join(' ')\n    },\n\n    path: {\n        valType: 'string',\n        role: 'info',\n        editType: 'calcIfAutorange',\n        description: [\n            'For `type` *path* - a valid SVG path but with the pixel values',\n            'replaced by data values. There are a few restrictions / quirks',\n            'only absolute instructions, not relative. So the allowed segments',\n            'are: M, L, H, V, Q, C, T, S, and Z',\n            'arcs (A) are not allowed because radius rx and ry are relative.',\n\n            'In the future we could consider supporting relative commands,',\n            'but we would have to decide on how to handle date and log axes.',\n            'Note that even as is, Q and C Bezier paths that are smooth on',\n            'linear axes may not be smooth on log, and vice versa.',\n            'no chained \"polybezier\" commands - specify the segment type for',\n            'each one.',\n\n            'On category axes, values are numbers scaled to the serial numbers',\n            'of categories because using the categories themselves there would',\n            'be no way to describe fractional positions',\n            'On data axes: because space and T are both normal components of path',\n            'strings, we can\\'t use either to separate date from time parts.',\n            'Therefore we\\'ll use underscore for this purpose:',\n            '2015-02-21_13:45:56.789'\n        ].join(' ')\n    },\n\n    opacity: {\n        valType: 'number',\n        min: 0,\n        max: 1,\n        dflt: 1,\n        role: 'info',\n        editType: 'arraydraw',\n        description: 'Sets the opacity of the shape.'\n    },\n    line: {\n        color: extendFlat({}, scatterLineAttrs.color, {editType: 'arraydraw'}),\n        width: extendFlat({}, scatterLineAttrs.width, {editType: 'calcIfAutorange'}),\n        dash: extendFlat({}, dash, {editType: 'arraydraw'}),\n        role: 'info',\n        editType: 'calcIfAutorange'\n    },\n    fillcolor: {\n        valType: 'color',\n        dflt: 'rgba(0,0,0,0)',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Sets the color filling the shape\\'s interior.'\n        ].join(' ')\n    },\n    editType: 'arraydraw'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/shapes/attributes.js\n// module id = 121\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar cartesianConstants = require('../../plots/cartesian/constants');\n\n\nmodule.exports = {\n    _isLinkedToArray: 'image',\n\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        editType: 'arraydraw',\n        description: [\n            'Determines whether or not this image is visible.'\n        ].join(' ')\n    },\n\n    source: {\n        valType: 'string',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Specifies the URL of the image to be used.',\n            'The URL must be accessible from the domain where the',\n            'plot code is run, and can be either relative or absolute.'\n\n        ].join(' ')\n    },\n\n    layer: {\n        valType: 'enumerated',\n        values: ['below', 'above'],\n        dflt: 'above',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Specifies whether images are drawn below or above traces.',\n            'When `xref` and `yref` are both set to `paper`,',\n            'image is drawn below the entire plot area.'\n        ].join(' ')\n    },\n\n    sizex: {\n        valType: 'number',\n        role: 'info',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image container size horizontally.',\n            'The image will be sized based on the `position` value.',\n            'When `xref` is set to `paper`, units are sized relative',\n            'to the plot width.'\n        ].join(' ')\n    },\n\n    sizey: {\n        valType: 'number',\n        role: 'info',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image container size vertically.',\n            'The image will be sized based on the `position` value.',\n            'When `yref` is set to `paper`, units are sized relative',\n            'to the plot height.'\n        ].join(' ')\n    },\n\n    sizing: {\n        valType: 'enumerated',\n        values: ['fill', 'contain', 'stretch'],\n        dflt: 'contain',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Specifies which dimension of the image to constrain.'\n        ].join(' ')\n    },\n\n    opacity: {\n        valType: 'number',\n        role: 'info',\n        min: 0,\n        max: 1,\n        dflt: 1,\n        editType: 'arraydraw',\n        description: 'Sets the opacity of the image.'\n    },\n\n    x: {\n        valType: 'any',\n        role: 'info',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image\\'s x position.',\n            'When `xref` is set to `paper`, units are sized relative',\n            'to the plot height.',\n            'See `xref` for more info'\n        ].join(' ')\n    },\n\n    y: {\n        valType: 'any',\n        role: 'info',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image\\'s y position.',\n            'When `yref` is set to `paper`, units are sized relative',\n            'to the plot height.',\n            'See `yref` for more info'\n        ].join(' ')\n    },\n\n    xanchor: {\n        valType: 'enumerated',\n        values: ['left', 'center', 'right'],\n        dflt: 'left',\n        role: 'info',\n        editType: 'arraydraw',\n        description: 'Sets the anchor for the x position'\n    },\n\n    yanchor: {\n        valType: 'enumerated',\n        values: ['top', 'middle', 'bottom'],\n        dflt: 'top',\n        role: 'info',\n        editType: 'arraydraw',\n        description: 'Sets the anchor for the y position.'\n    },\n\n    xref: {\n        valType: 'enumerated',\n        values: [\n            'paper',\n            cartesianConstants.idRegex.x.toString()\n        ],\n        dflt: 'paper',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Sets the images\\'s x coordinate axis.',\n            'If set to a x axis id (e.g. *x* or *x2*), the `x` position',\n            'refers to an x data coordinate',\n            'If set to *paper*, the `x` position refers to the distance from',\n            'the left of plot in normalized coordinates',\n            'where *0* (*1*) corresponds to the left (right).'\n        ].join(' ')\n    },\n\n    yref: {\n        valType: 'enumerated',\n        values: [\n            'paper',\n            cartesianConstants.idRegex.y.toString()\n        ],\n        dflt: 'paper',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Sets the images\\'s y coordinate axis.',\n            'If set to a y axis id (e.g. *y* or *y2*), the `y` position',\n            'refers to a y data coordinate.',\n            'If set to *paper*, the `y` position refers to the distance from',\n            'the bottom of the plot in normalized coordinates',\n            'where *0* (*1*) corresponds to the bottom (top).'\n        ].join(' ')\n    },\n    editType: 'arraydraw'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/images/attributes.js\n// module id = 122\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar colorAttrs = require('../color/attributes');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar padAttrs = require('../../plots/pad_attributes');\n\nvar buttonsAttrs = {\n    _isLinkedToArray: 'button',\n\n    method: {\n        valType: 'enumerated',\n        values: ['restyle', 'relayout', 'animate', 'update', 'skip'],\n        dflt: 'restyle',\n        role: 'info',\n        description: [\n            'Sets the Plotly method to be called on click.',\n            'If the `skip` method is used, the API updatemenu will function as normal',\n            'but will perform no API calls and will not bind automatically to state',\n            'updates. This may be used to create a component interface and attach to',\n            'updatemenu events manually via JavaScript.'\n        ].join(' ')\n    },\n    args: {\n        valType: 'info_array',\n        role: 'info',\n        freeLength: true,\n        items: [\n            {valType: 'any'},\n            {valType: 'any'},\n            {valType: 'any'}\n        ],\n        description: [\n            'Sets the arguments values to be passed to the Plotly',\n            'method set in `method` on click.'\n        ].join(' ')\n    },\n    label: {\n        valType: 'string',\n        role: 'info',\n        dflt: '',\n        description: 'Sets the text label to appear on the button.'\n    },\n    execute: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        description: [\n            'When true, the API method is executed. When false, all other behaviors are the same',\n            'and command execution is skipped. This may be useful when hooking into, for example,',\n            'the `plotly_buttonclicked` method and executing the API command manually without losing',\n            'the benefit of the updatemenu automatically binding to the state of the plot through the',\n            'specification of `method` and `args`.'\n        ].join(' ')\n    }\n};\n\nmodule.exports = overrideAll({\n    _isLinkedToArray: 'updatemenu',\n    _arrayAttrRegexps: [/^updatemenus\\[(0|[1-9][0-9]+)\\]\\.buttons/],\n\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        description: [\n            'Determines whether or not the update menu is visible.'\n        ].join(' ')\n    },\n\n    type: {\n        valType: 'enumerated',\n        values: ['dropdown', 'buttons'],\n        dflt: 'dropdown',\n        role: 'info',\n        description: [\n            'Determines whether the buttons are accessible via a dropdown menu',\n            'or whether the buttons are stacked horizontally or vertically'\n        ].join(' ')\n    },\n\n    direction: {\n        valType: 'enumerated',\n        values: ['left', 'right', 'up', 'down'],\n        dflt: 'down',\n        role: 'info',\n        description: [\n            'Determines the direction in which the buttons are laid out, whether',\n            'in a dropdown menu or a row/column of buttons. For `left` and `up`,',\n            'the buttons will still appear in left-to-right or top-to-bottom order',\n            'respectively.'\n        ].join(' ')\n    },\n\n    active: {\n        valType: 'integer',\n        role: 'info',\n        min: -1,\n        dflt: 0,\n        description: [\n            'Determines which button (by index starting from 0) is',\n            'considered active.'\n        ].join(' ')\n    },\n\n    showactive: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        description: 'Highlights active dropdown item or active button if true.'\n    },\n\n    buttons: buttonsAttrs,\n\n    x: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        dflt: -0.05,\n        role: 'style',\n        description: 'Sets the x position (in normalized coordinates) of the update menu.'\n    },\n    xanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'left', 'center', 'right'],\n        dflt: 'right',\n        role: 'info',\n        description: [\n            'Sets the update menu\\'s horizontal position anchor.',\n            'This anchor binds the `x` position to the *left*, *center*',\n            'or *right* of the range selector.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        dflt: 1,\n        role: 'style',\n        description: 'Sets the y position (in normalized coordinates) of the update menu.'\n    },\n    yanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'top', 'middle', 'bottom'],\n        dflt: 'top',\n        role: 'info',\n        description: [\n            'Sets the update menu\\'s vertical position anchor',\n            'This anchor binds the `y` position to the *top*, *middle*',\n            'or *bottom* of the range selector.'\n        ].join(' ')\n    },\n\n    pad: extendFlat({}, padAttrs, {\n        description: 'Sets the padding around the buttons or dropdown menu.'\n    }),\n\n    font: fontAttrs({\n        description: 'Sets the font of the update menu button text.'\n    }),\n\n    bgcolor: {\n        valType: 'color',\n        role: 'style',\n        description: 'Sets the background color of the update menu buttons.'\n    },\n    bordercolor: {\n        valType: 'color',\n        dflt: colorAttrs.borderLine,\n        role: 'style',\n        description: 'Sets the color of the border enclosing the update menu.'\n    },\n    borderwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        role: 'style',\n        editType: 'arraydraw',\n        description: 'Sets the width (in px) of the border enclosing the update menu.'\n    }\n}, 'arraydraw', 'from-root');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/updatemenus/attributes.js\n// module id = 123\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n// This is used exclusively by components inside component arrays,\n// hence the 'arraydraw' editType. If this ever gets used elsewhere\n// we could generalize it as a function ala font_attributes\nmodule.exports = {\n    t: {\n        valType: 'number',\n        dflt: 0,\n        role: 'style',\n        editType: 'arraydraw',\n        description: 'The amount of padding (in px) along the top of the component.'\n    },\n    r: {\n        valType: 'number',\n        dflt: 0,\n        role: 'style',\n        editType: 'arraydraw',\n        description: 'The amount of padding (in px) on the right side of the component.'\n    },\n    b: {\n        valType: 'number',\n        dflt: 0,\n        role: 'style',\n        editType: 'arraydraw',\n        description: 'The amount of padding (in px) along the bottom of the component.'\n    },\n    l: {\n        valType: 'number',\n        dflt: 0,\n        role: 'style',\n        editType: 'arraydraw',\n        description: 'The amount of padding (in px) on the left side of the component.'\n    },\n    editType: 'arraydraw'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/pad_attributes.js\n// module id = 124\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar padAttrs = require('../../plots/pad_attributes');\nvar extendDeepAll = require('../../lib/extend').extendDeepAll;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar animationAttrs = require('../../plots/animation_attributes');\nvar constants = require('./constants');\n\nvar stepsAttrs = {\n    _isLinkedToArray: 'step',\n\n    method: {\n        valType: 'enumerated',\n        values: ['restyle', 'relayout', 'animate', 'update', 'skip'],\n        dflt: 'restyle',\n        role: 'info',\n        description: [\n            'Sets the Plotly method to be called when the slider value is changed.',\n            'If the `skip` method is used, the API slider will function as normal',\n            'but will perform no API calls and will not bind automatically to state',\n            'updates. This may be used to create a component interface and attach to',\n            'slider events manually via JavaScript.'\n        ].join(' ')\n    },\n    args: {\n        valType: 'info_array',\n        role: 'info',\n        freeLength: true,\n        items: [\n            { valType: 'any' },\n            { valType: 'any' },\n            { valType: 'any' }\n        ],\n        description: [\n            'Sets the arguments values to be passed to the Plotly',\n            'method set in `method` on slide.'\n        ].join(' ')\n    },\n    label: {\n        valType: 'string',\n        role: 'info',\n        description: 'Sets the text label to appear on the slider'\n    },\n    value: {\n        valType: 'string',\n        role: 'info',\n        description: [\n            'Sets the value of the slider step, used to refer to the step programatically.',\n            'Defaults to the slider label if not provided.'\n        ].join(' ')\n    },\n    execute: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        description: [\n            'When true, the API method is executed. When false, all other behaviors are the same',\n            'and command execution is skipped. This may be useful when hooking into, for example,',\n            'the `plotly_sliderchange` method and executing the API command manually without losing',\n            'the benefit of the slider automatically binding to the state of the plot through the',\n            'specification of `method` and `args`.'\n        ].join(' ')\n    }\n};\n\nmodule.exports = overrideAll({\n    _isLinkedToArray: 'slider',\n\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        description: [\n            'Determines whether or not the slider is visible.'\n        ].join(' ')\n    },\n\n    active: {\n        valType: 'number',\n        role: 'info',\n        min: 0,\n        dflt: 0,\n        description: [\n            'Determines which button (by index starting from 0) is',\n            'considered active.'\n        ].join(' ')\n    },\n\n    steps: stepsAttrs,\n\n    lenmode: {\n        valType: 'enumerated',\n        values: ['fraction', 'pixels'],\n        role: 'info',\n        dflt: 'fraction',\n        description: [\n            'Determines whether this slider length',\n            'is set in units of plot *fraction* or in *pixels.',\n            'Use `len` to set the value.'\n        ].join(' ')\n    },\n    len: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        role: 'style',\n        description: [\n            'Sets the length of the slider',\n            'This measure excludes the padding of both ends.',\n            'That is, the slider\\'s length is this length minus the',\n            'padding on both ends.'\n        ].join(' ')\n    },\n    x: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        dflt: 0,\n        role: 'style',\n        description: 'Sets the x position (in normalized coordinates) of the slider.'\n    },\n    pad: extendDeepAll({}, padAttrs, {\n        description: 'Set the padding of the slider component along each side.'\n    }, {t: {dflt: 20}}),\n    xanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'left', 'center', 'right'],\n        dflt: 'left',\n        role: 'info',\n        description: [\n            'Sets the slider\\'s horizontal position anchor.',\n            'This anchor binds the `x` position to the *left*, *center*',\n            'or *right* of the range selector.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        dflt: 0,\n        role: 'style',\n        description: 'Sets the y position (in normalized coordinates) of the slider.'\n    },\n    yanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'top', 'middle', 'bottom'],\n        dflt: 'top',\n        role: 'info',\n        description: [\n            'Sets the slider\\'s vertical position anchor',\n            'This anchor binds the `y` position to the *top*, *middle*',\n            'or *bottom* of the range selector.'\n        ].join(' ')\n    },\n\n    transition: {\n        duration: {\n            valType: 'number',\n            role: 'info',\n            min: 0,\n            dflt: 150,\n            description: 'Sets the duration of the slider transition'\n        },\n        easing: {\n            valType: 'enumerated',\n            values: animationAttrs.transition.easing.values,\n            role: 'info',\n            dflt: 'cubic-in-out',\n            description: 'Sets the easing function of the slider transition'\n        }\n    },\n\n    currentvalue: {\n        visible: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: true,\n            description: [\n                'Shows the currently-selected value above the slider.'\n            ].join(' ')\n        },\n\n        xanchor: {\n            valType: 'enumerated',\n            values: ['left', 'center', 'right'],\n            dflt: 'left',\n            role: 'info',\n            description: [\n                'The alignment of the value readout relative to the length of the slider.'\n            ].join(' ')\n        },\n\n        offset: {\n            valType: 'number',\n            dflt: 10,\n            role: 'info',\n            description: [\n                'The amount of space, in pixels, between the current value label',\n                'and the slider.'\n            ].join(' ')\n        },\n\n        prefix: {\n            valType: 'string',\n            role: 'info',\n            description: 'When currentvalue.visible is true, this sets the prefix of the label.'\n        },\n\n        suffix: {\n            valType: 'string',\n            role: 'info',\n            description: 'When currentvalue.visible is true, this sets the suffix of the label.'\n        },\n\n        font: fontAttrs({\n            description: 'Sets the font of the current value label text.'\n        })\n    },\n\n    font: fontAttrs({\n        description: 'Sets the font of the slider step labels.'\n    }),\n\n    activebgcolor: {\n        valType: 'color',\n        role: 'style',\n        dflt: constants.gripBgActiveColor,\n        description: [\n            'Sets the background color of the slider grip',\n            'while dragging.'\n        ].join(' ')\n    },\n    bgcolor: {\n        valType: 'color',\n        role: 'style',\n        dflt: constants.railBgColor,\n        description: 'Sets the background color of the slider.'\n    },\n    bordercolor: {\n        valType: 'color',\n        dflt: constants.railBorderColor,\n        role: 'style',\n        description: 'Sets the color of the border enclosing the slider.'\n    },\n    borderwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: constants.railBorderWidth,\n        role: 'style',\n        description: 'Sets the width (in px) of the border enclosing the slider.'\n    },\n    ticklen: {\n        valType: 'number',\n        min: 0,\n        dflt: constants.tickLength,\n        role: 'style',\n        description: 'Sets the length in pixels of step tick marks'\n    },\n    tickcolor: {\n        valType: 'color',\n        dflt: constants.tickColor,\n        role: 'style',\n        description: 'Sets the color of the border enclosing the slider.'\n    },\n    tickwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        role: 'style',\n        description: 'Sets the tick width (in px).'\n    },\n    minorticklen: {\n        valType: 'number',\n        min: 0,\n        dflt: constants.minorTickLength,\n        role: 'style',\n        description: 'Sets the length in pixels of minor step tick marks'\n    }\n}, 'arraydraw', 'from-root');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/sliders/attributes.js\n// module id = 125\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n\n    // attribute container name\n    name: 'rangeslider',\n\n    // class names\n\n    containerClassName: 'rangeslider-container',\n    bgClassName: 'rangeslider-bg',\n    rangePlotClassName: 'rangeslider-rangeplot',\n\n    maskMinClassName: 'rangeslider-mask-min',\n    maskMaxClassName: 'rangeslider-mask-max',\n    slideBoxClassName: 'rangeslider-slidebox',\n\n    grabberMinClassName: 'rangeslider-grabber-min',\n    grabAreaMinClassName: 'rangeslider-grabarea-min',\n    handleMinClassName: 'rangeslider-handle-min',\n\n    grabberMaxClassName: 'rangeslider-grabber-max',\n    grabAreaMaxClassName: 'rangeslider-grabarea-max',\n    handleMaxClassName: 'rangeslider-handle-max',\n\n    // style constants\n\n    maskColor: 'rgba(0,0,0,0.4)',\n\n    slideBoxFill: 'transparent',\n    slideBoxCursor: 'ew-resize',\n\n    grabAreaFill: 'transparent',\n    grabAreaCursor: 'col-resize',\n    grabAreaWidth: 10,\n\n    handleWidth: 4,\n    handleRadius: 1,\n    handleStrokeWidth: 1,\n\n    extraPad: 15\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/rangeslider/constants.js\n// module id = 126\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n\nmodule.exports = {\n    step: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['month', 'year', 'day', 'hour', 'minute', 'second', 'all'],\n        dflt: 'month',\n        editType: 'plot',\n        description: [\n            'The unit of measurement that the `count` value will set the range by.'\n        ].join(' ')\n    },\n    stepmode: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['backward', 'todate'],\n        dflt: 'backward',\n        editType: 'plot',\n        description: [\n            'Sets the range update mode.',\n            'If *backward*, the range update shifts the start of range',\n            'back *count* times *step* milliseconds.',\n            'If *todate*, the range update shifts the start of range',\n            'back to the first timestamp from *count* times',\n            '*step* milliseconds back.',\n            'For example, with `step` set to *year* and `count` set to *1*',\n            'the range update shifts the start of the range back to',\n            'January 01 of the current year.',\n            'Month and year *todate* are currently available only',\n            'for the built-in (Gregorian) calendar.'\n        ].join(' ')\n    },\n    count: {\n        valType: 'number',\n        role: 'info',\n        min: 0,\n        dflt: 1,\n        editType: 'plot',\n        description: [\n            'Sets the number of steps to take to update the range.',\n            'Use with `step` to specify the update interval.'\n        ].join(' ')\n    },\n    label: {\n        valType: 'string',\n        role: 'info',\n        editType: 'plot',\n        description: 'Sets the text label to appear on the button.'\n    },\n    editType: 'plot'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/rangeselector/button_attributes.js\n// module id = 127\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n\nmodule.exports = {\n\n    // 'y' position pad above counter axis domain\n    yPad: 0.02,\n\n    // minimum button width (regardless of text size)\n    minButtonWidth: 30,\n\n    // buttons rect radii\n    rx: 3,\n    ry: 3,\n\n    // light fraction used to compute the 'activecolor' default\n    lightAmount: 25,\n    darkAmount: 10\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/rangeselector/constants.js\n// module id = 128\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../lib');\n\nvar extendFlat = Lib.extendFlat;\nvar extendDeep = Lib.extendDeep;\n\n// Put default plotTile layouts here\nfunction cloneLayoutOverride(tileClass) {\n    var override;\n\n    switch(tileClass) {\n        case 'themes__thumb':\n            override = {\n                autosize: true,\n                width: 150,\n                height: 150,\n                title: '',\n                showlegend: false,\n                margin: {l: 5, r: 5, t: 5, b: 5, pad: 0},\n                annotations: []\n            };\n            break;\n\n        case 'thumbnail':\n            override = {\n                title: '',\n                hidesources: true,\n                showlegend: false,\n                borderwidth: 0,\n                bordercolor: '',\n                margin: {l: 1, r: 1, t: 1, b: 1, pad: 0},\n                annotations: []\n            };\n            break;\n\n        default:\n            override = {};\n    }\n\n\n    return override;\n}\n\nfunction keyIsAxis(keyName) {\n    var types = ['xaxis', 'yaxis', 'zaxis'];\n    return (types.indexOf(keyName.slice(0, 5)) > -1);\n}\n\n\nmodule.exports = function clonePlot(graphObj, options) {\n\n    // Polar plot compatibility\n    if(graphObj.framework && graphObj.framework.isPolar) {\n        graphObj = graphObj.framework.getConfig();\n    }\n\n    var i;\n    var oldData = graphObj.data;\n    var oldLayout = graphObj.layout;\n    var newData = extendDeep([], oldData);\n    var newLayout = extendDeep({}, oldLayout, cloneLayoutOverride(options.tileClass));\n    var context = graphObj._context || {};\n\n    if(options.width) newLayout.width = options.width;\n    if(options.height) newLayout.height = options.height;\n\n    if(options.tileClass === 'thumbnail' || options.tileClass === 'themes__thumb') {\n        // kill annotations\n        newLayout.annotations = [];\n        var keys = Object.keys(newLayout);\n\n        for(i = 0; i < keys.length; i++) {\n            if(keyIsAxis(keys[i])) {\n                newLayout[keys[i]].title = '';\n            }\n        }\n\n        // kill colorbar and pie labels\n        for(i = 0; i < newData.length; i++) {\n            var trace = newData[i];\n            trace.showscale = false;\n            if(trace.marker) trace.marker.showscale = false;\n            if(trace.type === 'pie') trace.textposition = 'none';\n        }\n    }\n\n    if(Array.isArray(options.annotations)) {\n        for(i = 0; i < options.annotations.length; i++) {\n            newLayout.annotations.push(options.annotations[i]);\n        }\n    }\n\n    // TODO: does this scene modification really belong here?\n    // If we still need it, can it move into the gl3d module?\n    var sceneIds = Object.keys(newLayout).filter(function(key) {\n        return key.match(/^scene\\d*$/);\n    });\n    if(sceneIds.length) {\n        var axesImageOverride = {};\n        if(options.tileClass === 'thumbnail') {\n            axesImageOverride = {\n                title: '',\n                showaxeslabels: false,\n                showticklabels: false,\n                linetickenable: false\n            };\n        }\n        for(i = 0; i < sceneIds.length; i++) {\n            var scene = newLayout[sceneIds[i]];\n\n            if(!scene.xaxis) {\n                scene.xaxis = {};\n            }\n\n            if(!scene.yaxis) {\n                scene.yaxis = {};\n            }\n\n            if(!scene.zaxis) {\n                scene.zaxis = {};\n            }\n\n            extendFlat(scene.xaxis, axesImageOverride);\n            extendFlat(scene.yaxis, axesImageOverride);\n            extendFlat(scene.zaxis, axesImageOverride);\n\n            // TODO what does this do?\n            scene._scene = null;\n        }\n    }\n\n    var gd = document.createElement('div');\n    if(options.tileClass) gd.className = options.tileClass;\n\n    var plotTile = {\n        gd: gd,\n        td: gd, // for external (image server) compatibility\n        layout: newLayout,\n        data: newData,\n        config: {\n            staticPlot: (options.staticPlot === undefined) ?\n                true :\n                options.staticPlot,\n            plotGlPixelRatio: (options.plotGlPixelRatio === undefined) ?\n                2 :\n                options.plotGlPixelRatio,\n            displaylogo: options.displaylogo || false,\n            showLink: options.showLink || false,\n            showTips: options.showTips || false,\n            mapboxAccessToken: context.mapboxAccessToken\n        }\n    };\n\n    if(options.setBackground !== 'transparent') {\n        plotTile.config.setBackground = options.setBackground || 'opaque';\n    }\n\n    // attaching the default Layout the gd, so you can grab it later\n    plotTile.gd.defaultLayout = cloneLayoutOverride(options.tileClass);\n\n    return plotTile;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/snapshot/cloneplot.js\n// module id = 129\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n\nmodule.exports = {\n    barmode: {\n        valType: 'enumerated',\n        values: ['stack', 'group', 'overlay', 'relative'],\n        dflt: 'group',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Determines how bars at the same location coordinate',\n            'are displayed on the graph.',\n            'With *stack*, the bars are stacked on top of one another',\n            'With *relative*, the bars are stacked on top of one another,',\n            'with negative values below the axis, positive values above',\n            'With *group*, the bars are plotted next to one another',\n            'centered around the shared location.',\n            'With *overlay*, the bars are plotted over one another,',\n            'you might need to an *opacity* to see multiple bars.'\n        ].join(' ')\n    },\n    barnorm: {\n        valType: 'enumerated',\n        values: ['', 'fraction', 'percent'],\n        dflt: '',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the normalization for bar traces on the graph.',\n            'With *fraction*, the value of each bar is divide by the sum of the',\n            'values at the location coordinate.',\n            'With *percent*, the results form *fraction* are presented in percents.'\n        ].join(' ')\n    },\n    bargap: {\n        valType: 'number',\n        min: 0,\n        max: 1,\n        role: 'style',\n        editType: 'calc',\n        description: [\n            'Sets the gap (in plot fraction) between bars of',\n            'adjacent location coordinates.'\n        ].join(' ')\n    },\n    bargroupgap: {\n        valType: 'number',\n        min: 0,\n        max: 1,\n        dflt: 0,\n        role: 'style',\n        editType: 'calc',\n        description: [\n            'Sets the gap (in plot fraction) between bars of',\n            'the same location coordinate.'\n        ].join(' ')\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/layout_attributes.js\n// module id = 130\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar mergeArray = require('../../lib').mergeArray;\n\n\n// arrayOk attributes, merge them into calcdata array\nmodule.exports = function arraysToCalcdata(cd, trace) {\n    for(var i = 0; i < cd.length; i++) cd[i].i = i;\n\n    mergeArray(trace.text, cd, 'tx');\n    mergeArray(trace.hovertext, cd, 'htx');\n\n    var marker = trace.marker;\n    if(marker) {\n        mergeArray(marker.opacity, cd, 'mo');\n        mergeArray(marker.color, cd, 'mc');\n\n        var markerLine = marker.line;\n        if(markerLine) {\n            mergeArray(markerLine.color, cd, 'mlc');\n            mergeArray(markerLine.width, cd, 'mlw');\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/arrays_to_calcdata.js\n// module id = 131\n// module chunks = 0","import Plotly from 'npm/plotly.js/lib/core';\nconst d3 = Plotly.d3;\nexport default class ResponsiveChart{\n\tconstructor(containerEl){\n\n\t\tthis.containerEl = containerEl;\n\t\tthis.el = document.createElement('figure');\n\n\t\tconst WIDTH_IN_PERCENT_OF_PARENT = 100,\n    \t\tHEIGHT_IN_PERCENT_OF_PARENT = 80;\n\n\t\tconst gd3 = d3.select(this.el)\n    \t\t.style({\n        \t\twidth: WIDTH_IN_PERCENT_OF_PARENT + '%',\n        \t\t'margin-left': (100 - WIDTH_IN_PERCENT_OF_PARENT) / 2 + '%',\n\n        \t\theight: HEIGHT_IN_PERCENT_OF_PARENT + 'vh',\n        \t\t'margin-top': (100 - HEIGHT_IN_PERCENT_OF_PARENT) / 2 + 'vh'\n    \t\t});\n\n\t\t\tthis.gd = gd3.node();\n\t\tthis.initEventListeners();\n\t}\n\tinitEventListeners(){\n\t\twindow.addEventListener(\"resize\",(e)=>{\n\t\t\tconsole.log(\"Resize\");\n\t\t\tPlotly.Plots.resize(this.gd);\n\t\t})\n\n\t\twindow.addEventListener(\"orientationchange\", ()=>{\n\t\t    Plotly.Plots.resize(this.gd);\n\t\t});\n\n\t}\n\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/charts/responsive-chart.js\n// module id = 132\n// module chunks = 0","export default class TraceData{\n\tconstructor(groupData,chartProps = {}){\n\t\tlet x = [];\n    \tlet y = [];\n\n\t    groupData.data.forEach( (d)=>{\n\t    \tif(chartProps.orientation=='h'){\n\t\t    \ty.push(d.name);\n\t\t    \tx.push(d.value);\n\t    \t}else{\n\t\t    \ty.push(d.value);\n\t\t    \tx.push(d.name);\n\t    \t}\n\n\t    })\n\t    const _data = {\n\t    \tx,\n\t    \ty,\n\t    \tname: groupData.name\n\t    }\n\t    chartProps = Object.assign({},chartProps);\n\n\t    let chartData = Object.assign(chartProps,_data);\n\t    const entries = Object.entries(chartData);\n\t    entries.forEach( (entry)=>{\n\t    \tthis[entry[0]]=entry[1];\n\t    })\n\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/charts/trace-data.js\n// module id = 133\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 134\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 135\n// module chunks = 0","import {HorizontalBar, VerticalBar} from './charts/bar'\n\nfetch(\"data.json\").then(\n(response)=>{\n  return(response.json())\n\n},\n(error)=>{\n  console.error(\"Error:\",error)\n  throw error;\n}\n).then((data)=>{\n    const verticalEl = document.getElementById('vertical-chart');\n    const horizontalEl = document.getElementById('horizontal-chart');\n \tconst vChart = new VerticalBar(data,verticalEl);\n \tconst hChart = new HorizontalBar(data,horizontalEl);\n \tvChart.render();\n \thChart.render();\n\n    //mainEl.append(chart.render())\n})\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/index.js\n// module id = 136\n// module chunks = 0","/* charts/bar module */\nimport Plotly from 'npm/plotly.js/lib/core';\nimport Bar from 'npm/plotly.js/lib/bar';\nimport HorizontalBar from './horizontal';\nimport VerticalBar from './vertical'\nPlotly.register([\n\tBar\n])\nexport { HorizontalBar };\nexport { VerticalBar };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/charts/bar/index.js\n// module id = 137\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/*\n * Export the plotly.js API methods.\n */\n\nvar Plotly = require('./plotly');\n\n// package version injected by `npm run preprocess`\nexports.version = '1.33.1';\n\n// inject promise polyfill\nrequire('es6-promise').polyfill();\n\n// inject plot css\nrequire('../build/plotcss');\n\n// inject default MathJax config\nrequire('./fonts/mathjax_config');\n\n// plot api\nexports.plot = Plotly.plot;\nexports.newPlot = Plotly.newPlot;\nexports.restyle = Plotly.restyle;\nexports.relayout = Plotly.relayout;\nexports.redraw = Plotly.redraw;\nexports.update = Plotly.update;\nexports.extendTraces = Plotly.extendTraces;\nexports.prependTraces = Plotly.prependTraces;\nexports.addTraces = Plotly.addTraces;\nexports.deleteTraces = Plotly.deleteTraces;\nexports.moveTraces = Plotly.moveTraces;\nexports.purge = Plotly.purge;\nexports.setPlotConfig = require('./plot_api/set_plot_config');\nexports.register = require('./plot_api/register');\nexports.toImage = require('./plot_api/to_image');\nexports.downloadImage = require('./snapshot/download');\nexports.validate = require('./plot_api/validate');\nexports.addFrames = Plotly.addFrames;\nexports.deleteFrames = Plotly.deleteFrames;\nexports.animate = Plotly.animate;\n\n// scatter is the only trace included by default\nexports.register(require('./traces/scatter'));\n\n// register all registrable components modules\nexports.register([\n    require('./components/fx'),\n    require('./components/legend'),\n    require('./components/annotations'),\n    require('./components/annotations3d'),\n    require('./components/shapes'),\n    require('./components/images'),\n    require('./components/updatemenus'),\n    require('./components/sliders'),\n    require('./components/rangeslider'),\n    require('./components/rangeselector')\n]);\n\n// locales en and en-US are required for default behavior\nexports.register([\n    require('./locale-en'),\n    require('./locale-en-us')\n]);\n\n// plot icons\nexports.Icons = require('../build/ploticon');\n\n// unofficial 'beta' plot methods, use at your own risk\nexports.Plots = Plotly.Plots;\nexports.Fx = require('./components/fx');\nexports.Snapshot = require('./snapshot');\nexports.PlotSchema = require('./plot_api/plot_schema');\nexports.Queue = require('./lib/queue');\n\n// export d3 used in the bundle\nexports.d3 = require('d3');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/core.js\n// module id = 138\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar nestedProperty = require('./nested_property');\n\nvar SIMPLE_PROPERTY_REGEX = /^\\w*$/;\n\n// bitmask for deciding what's updated. Sometimes the name needs to be updated,\n// sometimes the value needs to be updated, and sometimes both do. This is just\n// a simple way to track what's updated such that it's a simple OR operation to\n// assimilate new updates.\n//\n// The only exception is the UNSET bit that tracks when we need to explicitly\n// unset and remove the property. This concrn arises because of the special\n// way in which nestedProperty handles null/undefined. When you specify `null`,\n// it prunes any unused items in the tree. I ran into some issues with it getting\n// null vs undefined confused, so UNSET is just a bit that forces the property\n// update to send `null`, removing the property explicitly rather than setting\n// it to undefined.\nvar NONE = 0;\nvar NAME = 1;\nvar VALUE = 2;\nvar BOTH = 3;\nvar UNSET = 4;\n\nmodule.exports = function keyedContainer(baseObj, path, keyName, valueName) {\n    keyName = keyName || 'name';\n    valueName = valueName || 'value';\n    var i, arr;\n    var changeTypes = {};\n\n    if(path && path.length) { arr = nestedProperty(baseObj, path).get();\n    } else {\n        arr = baseObj;\n    }\n\n    path = path || '';\n    arr = arr || [];\n\n    // Construct an index:\n    var indexLookup = {};\n    for(i = 0; i < arr.length; i++) {\n        indexLookup[arr[i][keyName]] = i;\n    }\n\n    var isSimpleValueProp = SIMPLE_PROPERTY_REGEX.test(valueName);\n\n    var obj = {\n        // NB: this does not actually modify the baseObj\n        set: function(name, value) {\n            var changeType = value === null ? UNSET : NONE;\n\n            var idx = indexLookup[name];\n            if(idx === undefined) {\n                changeType = changeType | BOTH;\n                idx = arr.length;\n                indexLookup[name] = idx;\n            } else if(value !== (isSimpleValueProp ? arr[idx][valueName] : nestedProperty(arr[idx], valueName).get())) {\n                changeType = changeType | VALUE;\n            }\n\n            var newValue = arr[idx] = arr[idx] || {};\n            newValue[keyName] = name;\n\n            if(isSimpleValueProp) {\n                newValue[valueName] = value;\n            } else {\n                nestedProperty(newValue, valueName).set(value);\n            }\n\n            // If it's not an unset, force that bit to be unset. This is all related to the fact\n            // that undefined and null are a bit specially implemented in nestedProperties.\n            if(value !== null) {\n                changeType = changeType & ~UNSET;\n            }\n\n            changeTypes[idx] = changeTypes[idx] | changeType;\n\n            return obj;\n        },\n        get: function(name) {\n            var idx = indexLookup[name];\n\n            if(idx === undefined) {\n                return undefined;\n            } else if(isSimpleValueProp) {\n                return arr[idx][valueName];\n            } else {\n                return nestedProperty(arr[idx], valueName).get();\n            }\n        },\n        rename: function(name, newName) {\n            var idx = indexLookup[name];\n\n            if(idx === undefined) return obj;\n            changeTypes[idx] = changeTypes[idx] | NAME;\n\n            indexLookup[newName] = idx;\n            delete indexLookup[name];\n\n            arr[idx][keyName] = newName;\n\n            return obj;\n        },\n        remove: function(name) {\n            var idx = indexLookup[name];\n\n            if(idx === undefined) return obj;\n\n            var object = arr[idx];\n            if(Object.keys(object).length > 2) {\n                // This object contains more than just the key/value, so unset\n                // the value without modifying the entry otherwise:\n                changeTypes[idx] = changeTypes[idx] | VALUE;\n                return obj.set(name, null);\n            }\n\n            if(isSimpleValueProp) {\n                for(i = idx; i < arr.length; i++) {\n                    changeTypes[i] = changeTypes[i] | BOTH;\n                }\n                for(i = idx; i < arr.length; i++) {\n                    indexLookup[arr[i][keyName]]--;\n                }\n                arr.splice(idx, 1);\n                delete(indexLookup[name]);\n            } else {\n                // Perform this update *strictly* so we can check whether the result's\n                // been pruned. If so, it's a removal. If not, it's a value unset only.\n                nestedProperty(object, valueName).set(null);\n\n                // Now check if the top level nested property has any keys left. If so,\n                // the object still has values so we only want to unset the key. If not,\n                // the entire object can be removed since there's no other data.\n                // var topLevelKeys = Object.keys(object[valueName.split('.')[0]] || []);\n\n                changeTypes[idx] = changeTypes[idx] | VALUE | UNSET;\n            }\n\n            return obj;\n        },\n        constructUpdate: function() {\n            var astr, idx;\n            var update = {};\n            var changed = Object.keys(changeTypes);\n            for(var i = 0; i < changed.length; i++) {\n                idx = changed[i];\n                astr = path + '[' + idx + ']';\n                if(arr[idx]) {\n                    if(changeTypes[idx] & NAME) {\n                        update[astr + '.' + keyName] = arr[idx][keyName];\n                    }\n                    if(changeTypes[idx] & VALUE) {\n                        if(isSimpleValueProp) {\n                            update[astr + '.' + valueName] = (changeTypes[idx] & UNSET) ? null : arr[idx][valueName];\n                        } else {\n                            update[astr + '.' + valueName] = (changeTypes[idx] & UNSET) ? null : nestedProperty(arr[idx], valueName).get();\n                        }\n                    }\n                } else {\n                    update[astr] = null;\n                }\n            }\n\n            return update;\n        }\n    };\n\n    return obj;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/keyed_container.js\n// module id = 139\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n// ASCEND: chop off the last nesting level - either [<n>] or .<key> - to ascend\n// the attribute tree. the remaining attrString is in match[1]\nvar ASCEND = /^(.*)(\\.[^\\.\\[\\]]+|\\[\\d\\])$/;\n\n// SIMPLEATTR: is this an un-nested attribute? (no dots or brackets)\nvar SIMPLEATTR = /^[^\\.\\[\\]]+$/;\n\n/*\n * calculate a relative attribute string, similar to a relative path\n *\n * @param {string} baseAttr:\n *   an attribute string, such as 'annotations[3].x'. The \"current location\"\n *   is the attribute string minus the last component ('annotations[3]')\n * @param {string} relativeAttr:\n *   a route to the desired attribute string, using '^' to ascend\n *\n * @return {string} attrString:\n *   for example:\n *     relativeAttr('annotations[3].x', 'y') = 'annotations[3].y'\n *     relativeAttr('annotations[3].x', '^[2].z') = 'annotations[2].z'\n *     relativeAttr('annotations[3].x', '^^margin') = 'margin'\n *     relativeAttr('annotations[3].x', '^^margin.r') = 'margin.r'\n */\nmodule.exports = function(baseAttr, relativeAttr) {\n    while(relativeAttr) {\n        var match = baseAttr.match(ASCEND);\n\n        if(match) baseAttr = match[1];\n        else if(baseAttr.match(SIMPLEATTR)) baseAttr = '';\n        else throw new Error('bad relativeAttr call:' + [baseAttr, relativeAttr]);\n\n        if(relativeAttr.charAt(0) === '^') relativeAttr = relativeAttr.slice(1);\n        else break;\n    }\n\n    if(baseAttr && relativeAttr.charAt(0) !== '[') {\n        return baseAttr + '.' + relativeAttr;\n    }\n    return baseAttr + relativeAttr;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/relative_attr.js\n// module id = 140\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isArray = require('./is_array');\nvar isPlainObject = require('./is_plain_object');\n\n/**\n * Relink private _keys and keys with a function value from one container\n * to the new container.\n * Relink means copying if object is pass-by-value and adding a reference\n * if object is pass-by-ref.\n * This prevents deepCopying massive structures like a webgl context.\n */\nmodule.exports = function relinkPrivateKeys(toContainer, fromContainer) {\n    var keys = Object.keys(fromContainer || {});\n\n    for(var i = 0; i < keys.length; i++) {\n        var k = keys[i],\n            fromVal = fromContainer[k],\n            toVal = toContainer[k];\n\n        if(k.charAt(0) === '_' || typeof fromVal === 'function') {\n\n            // if it already exists at this point, it's something\n            // that we recreate each time around, so ignore it\n            if(k in toContainer) continue;\n\n            toContainer[k] = fromVal;\n        }\n        else if(isArray(fromVal) && isArray(toVal) && isPlainObject(fromVal[0])) {\n\n            // recurse into arrays containers\n            for(var j = 0; j < fromVal.length; j++) {\n                if(isPlainObject(fromVal[j]) && isPlainObject(toVal[j])) {\n                    relinkPrivateKeys(toVal[j], fromVal[j]);\n                }\n            }\n        }\n        else if(isPlainObject(fromVal) && isPlainObject(toVal)) {\n\n            // recurse into objects, but only if they still exist\n            relinkPrivateKeys(toVal, fromVal);\n\n            if(!Object.keys(toVal).length) delete toContainer[k];\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/relink_private.js\n// module id = 141\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/*\n * Ensures an array has the right amount of storage space. If it doesn't\n * exist, it creates an array. If it does exist, it returns it if too\n * short or truncates it in-place.\n *\n * The goal is to just reuse memory to avoid a bit of excessive garbage\n * collection.\n */\nmodule.exports = function ensureArray(out, n) {\n    if(!Array.isArray(out)) out = [];\n\n    // If too long, truncate. (If too short, it will grow\n    // automatically so we don't care about that case)\n    out.length = n;\n\n    return out;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/ensure_array.js\n// module id = 142\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar tinycolor = require('tinycolor2');\n\nvar baseTraceAttrs = require('../plots/attributes');\nvar getColorscale = require('../components/colorscale/get_scale');\nvar colorscaleNames = Object.keys(require('../components/colorscale/scales'));\nvar nestedProperty = require('./nested_property');\nvar counterRegex = require('./regex').counter;\nvar DESELECTDIM = require('../constants/interactions').DESELECTDIM;\nvar wrap180 = require('./angles').wrap180;\n\nexports.valObjectMeta = {\n    data_array: {\n        // You can use *dflt=[] to force said array to exist though.\n        description: [\n            'An {array} of data.',\n            'The value MUST be an {array}, or we ignore it.'\n        ].join(' '),\n        requiredOpts: [],\n        otherOpts: ['dflt'],\n        coerceFunction: function(v, propOut, dflt) {\n            if(Array.isArray(v)) propOut.set(v);\n            else if(dflt !== undefined) propOut.set(dflt);\n        }\n    },\n    enumerated: {\n        description: [\n            'Enumerated value type. The available values are listed',\n            'in `values`.'\n        ].join(' '),\n        requiredOpts: ['values'],\n        otherOpts: ['dflt', 'coerceNumber', 'arrayOk'],\n        coerceFunction: function(v, propOut, dflt, opts) {\n            if(opts.coerceNumber) v = +v;\n            if(opts.values.indexOf(v) === -1) propOut.set(dflt);\n            else propOut.set(v);\n        },\n        validateFunction: function(v, opts) {\n            if(opts.coerceNumber) v = +v;\n\n            var values = opts.values;\n            for(var i = 0; i < values.length; i++) {\n                var k = String(values[i]);\n\n                if((k.charAt(0) === '/' && k.charAt(k.length - 1) === '/')) {\n                    var regex = new RegExp(k.substr(1, k.length - 2));\n                    if(regex.test(v)) return true;\n                } else if(v === values[i]) return true;\n            }\n            return false;\n        }\n    },\n    'boolean': {\n        description: 'A boolean (true/false) value.',\n        requiredOpts: [],\n        otherOpts: ['dflt'],\n        coerceFunction: function(v, propOut, dflt) {\n            if(v === true || v === false) propOut.set(v);\n            else propOut.set(dflt);\n        }\n    },\n    number: {\n        description: [\n            'A number or a numeric value',\n            '(e.g. a number inside a string).',\n            'When applicable, values greater (less) than `max` (`min`)',\n            'are coerced to the `dflt`.'\n        ].join(' '),\n        requiredOpts: [],\n        otherOpts: ['dflt', 'min', 'max', 'arrayOk'],\n        coerceFunction: function(v, propOut, dflt, opts) {\n            if(!isNumeric(v) ||\n                    (opts.min !== undefined && v < opts.min) ||\n                    (opts.max !== undefined && v > opts.max)) {\n                propOut.set(dflt);\n            }\n            else propOut.set(+v);\n        }\n    },\n    integer: {\n        description: [\n            'An integer or an integer inside a string.',\n            'When applicable, values greater (less) than `max` (`min`)',\n            'are coerced to the `dflt`.'\n        ].join(' '),\n        requiredOpts: [],\n        otherOpts: ['dflt', 'min', 'max', 'arrayOk'],\n        coerceFunction: function(v, propOut, dflt, opts) {\n            if(v % 1 || !isNumeric(v) ||\n                    (opts.min !== undefined && v < opts.min) ||\n                    (opts.max !== undefined && v > opts.max)) {\n                propOut.set(dflt);\n            }\n            else propOut.set(+v);\n        }\n    },\n    string: {\n        description: [\n            'A string value.',\n            'Numbers are converted to strings except for attributes with',\n            '`strict` set to true.'\n        ].join(' '),\n        requiredOpts: [],\n        // TODO 'values shouldn't be in there (edge case: 'dash' in Scatter)\n        otherOpts: ['dflt', 'noBlank', 'strict', 'arrayOk', 'values'],\n        coerceFunction: function(v, propOut, dflt, opts) {\n            if(typeof v !== 'string') {\n                var okToCoerce = (typeof v === 'number');\n\n                if(opts.strict === true || !okToCoerce) propOut.set(dflt);\n                else propOut.set(String(v));\n            }\n            else if(opts.noBlank && !v) propOut.set(dflt);\n            else propOut.set(v);\n        }\n    },\n    color: {\n        description: [\n            'A string describing color.',\n            'Supported formats:',\n            '- hex (e.g. \\'#d3d3d3\\')',\n            '- rgb (e.g. \\'rgb(255, 0, 0)\\')',\n            '- rgba (e.g. \\'rgb(255, 0, 0, 0.5)\\')',\n            '- hsl (e.g. \\'hsl(0, 100%, 50%)\\')',\n            '- hsv (e.g. \\'hsv(0, 100%, 100%)\\')',\n            '- named colors (full list: http://www.w3.org/TR/css3-color/#svg-color)'\n        ].join(' '),\n        requiredOpts: [],\n        otherOpts: ['dflt', 'arrayOk'],\n        coerceFunction: function(v, propOut, dflt) {\n            if(tinycolor(v).isValid()) propOut.set(v);\n            else propOut.set(dflt);\n        }\n    },\n    colorlist: {\n        description: [\n            'A list of colors.',\n            'Must be an {array} containing valid colors.',\n        ].join(' '),\n        requiredOpts: [],\n        otherOpts: ['dflt'],\n        coerceFunction: function(v, propOut, dflt) {\n            function isColor(color) {\n                return tinycolor(color).isValid();\n            }\n            if(!Array.isArray(v) || !v.length) propOut.set(dflt);\n            else if(v.every(isColor)) propOut.set(v);\n            else propOut.set(dflt);\n        }\n    },\n    colorscale: {\n        description: [\n            'A Plotly colorscale either picked by a name:',\n            '(any of', colorscaleNames.join(', '), ')',\n            'customized as an {array} of 2-element {arrays} where',\n            'the first element is the normalized color level value',\n            '(starting at *0* and ending at *1*),',\n            'and the second item is a valid color string.'\n        ].join(' '),\n        requiredOpts: [],\n        otherOpts: ['dflt'],\n        coerceFunction: function(v, propOut, dflt) {\n            propOut.set(getColorscale(v, dflt));\n        }\n    },\n    angle: {\n        description: [\n            'A number (in degree) between -180 and 180.'\n        ].join(' '),\n        requiredOpts: [],\n        otherOpts: ['dflt'],\n        coerceFunction: function(v, propOut, dflt) {\n            if(v === 'auto') propOut.set('auto');\n            else if(!isNumeric(v)) propOut.set(dflt);\n            else propOut.set(wrap180(+v));\n        }\n    },\n    subplotid: {\n        description: [\n            'An id string of a subplot type (given by dflt), optionally',\n            'followed by an integer >1. e.g. if dflt=\\'geo\\', we can have',\n            '\\'geo\\', \\'geo2\\', \\'geo3\\', ...'\n        ].join(' '),\n        requiredOpts: ['dflt'],\n        otherOpts: [],\n        coerceFunction: function(v, propOut, dflt) {\n            if(typeof v === 'string' && counterRegex(dflt).test(v)) {\n                propOut.set(v);\n                return;\n            }\n            propOut.set(dflt);\n        },\n        validateFunction: function(v, opts) {\n            var dflt = opts.dflt;\n\n            if(v === dflt) return true;\n            if(typeof v !== 'string') return false;\n            if(counterRegex(dflt).test(v)) return true;\n\n            return false;\n        }\n    },\n    flaglist: {\n        description: [\n            'A string representing a combination of flags',\n            '(order does not matter here).',\n            'Combine any of the available `flags` with *+*.',\n            '(e.g. (\\'lines+markers\\')).',\n            'Values in `extras` cannot be combined.'\n        ].join(' '),\n        requiredOpts: ['flags'],\n        otherOpts: ['dflt', 'extras', 'arrayOk'],\n        coerceFunction: function(v, propOut, dflt, opts) {\n            if(typeof v !== 'string') {\n                propOut.set(dflt);\n                return;\n            }\n            if((opts.extras || []).indexOf(v) !== -1) {\n                propOut.set(v);\n                return;\n            }\n            var vParts = v.split('+'),\n                i = 0;\n            while(i < vParts.length) {\n                var vi = vParts[i];\n                if(opts.flags.indexOf(vi) === -1 || vParts.indexOf(vi) < i) {\n                    vParts.splice(i, 1);\n                }\n                else i++;\n            }\n            if(!vParts.length) propOut.set(dflt);\n            else propOut.set(vParts.join('+'));\n        }\n    },\n    any: {\n        description: 'Any type.',\n        requiredOpts: [],\n        otherOpts: ['dflt', 'values', 'arrayOk'],\n        coerceFunction: function(v, propOut, dflt) {\n            if(v === undefined) propOut.set(dflt);\n            else propOut.set(v);\n        }\n    },\n    info_array: {\n        description: [\n            'An {array} of plot information.'\n        ].join(' '),\n        requiredOpts: ['items'],\n        otherOpts: ['dflt', 'freeLength'],\n        coerceFunction: function(v, propOut, dflt, opts) {\n            if(!Array.isArray(v)) {\n                propOut.set(dflt);\n                return;\n            }\n\n            var items = opts.items,\n                vOut = [];\n            dflt = Array.isArray(dflt) ? dflt : [];\n\n            for(var i = 0; i < items.length; i++) {\n                exports.coerce(v, vOut, items, '[' + i + ']', dflt[i]);\n            }\n\n            propOut.set(vOut);\n        },\n        validateFunction: function(v, opts) {\n            if(!Array.isArray(v)) return false;\n\n            var items = opts.items;\n\n            // when free length is off, input and declared lengths must match\n            if(!opts.freeLength && v.length !== items.length) return false;\n\n            // valid when all input items are valid\n            for(var i = 0; i < v.length; i++) {\n                var isItemValid = exports.validate(v[i], opts.items[i]);\n\n                if(!isItemValid) return false;\n            }\n\n            return true;\n        }\n    }\n};\n\n/**\n * Ensures that container[attribute] has a valid value.\n *\n * attributes[attribute] is an object with possible keys:\n * - valType: data_array, enumerated, boolean, ... as in valObjectMeta\n * - values: (enumerated only) array of allowed vals\n * - min, max: (number, integer only) inclusive bounds on allowed vals\n *      either or both may be omitted\n * - dflt: if attribute is invalid or missing, use this default\n *      if dflt is provided as an argument to lib.coerce it takes precedence\n *      as a convenience, returns the value it finally set\n */\nexports.coerce = function(containerIn, containerOut, attributes, attribute, dflt) {\n    var opts = nestedProperty(attributes, attribute).get(),\n        propIn = nestedProperty(containerIn, attribute),\n        propOut = nestedProperty(containerOut, attribute),\n        v = propIn.get();\n\n    if(dflt === undefined) dflt = opts.dflt;\n\n    /**\n     * arrayOk: value MAY be an array, then we do no value checking\n     * at this point, because it can be more complicated than the\n     * individual form (eg. some array vals can be numbers, even if the\n     * single values must be color strings)\n     */\n    if(opts.arrayOk && Array.isArray(v)) {\n        propOut.set(v);\n        return v;\n    }\n\n    exports.valObjectMeta[opts.valType].coerceFunction(v, propOut, dflt, opts);\n\n    return propOut.get();\n};\n\n/**\n * Variation on coerce\n *\n * Uses coerce to get attribute value if user input is valid,\n * returns attribute default if user input it not valid or\n * returns false if there is no user input.\n */\nexports.coerce2 = function(containerIn, containerOut, attributes, attribute, dflt) {\n    var propIn = nestedProperty(containerIn, attribute),\n        propOut = exports.coerce(containerIn, containerOut, attributes, attribute, dflt),\n        valIn = propIn.get();\n\n    return (valIn !== undefined && valIn !== null) ? propOut : false;\n};\n\n/*\n * Shortcut to coerce the three font attributes\n *\n * 'coerce' is a lib.coerce wrapper with implied first three arguments\n */\nexports.coerceFont = function(coerce, attr, dfltObj) {\n    var out = {};\n\n    dfltObj = dfltObj || {};\n\n    out.family = coerce(attr + '.family', dfltObj.family);\n    out.size = coerce(attr + '.size', dfltObj.size);\n    out.color = coerce(attr + '.color', dfltObj.color);\n\n    return out;\n};\n\n/** Coerce shortcut for 'hoverinfo'\n * handling 1-vs-multi-trace dflt logic\n *\n * @param {object} traceIn : user trace object\n * @param {object} traceOut : full trace object (requires _module ref)\n * @param {object} layoutOut : full layout object (require _dataLength ref)\n * @return {any} : the coerced value\n */\nexports.coerceHoverinfo = function(traceIn, traceOut, layoutOut) {\n    var moduleAttrs = traceOut._module.attributes;\n    var attrs = moduleAttrs.hoverinfo ?\n        {hoverinfo: moduleAttrs.hoverinfo} :\n        baseTraceAttrs;\n\n    var valObj = attrs.hoverinfo;\n    var dflt;\n\n    if(layoutOut._dataLength === 1) {\n        var flags = valObj.dflt === 'all' ?\n            valObj.flags.slice() :\n            valObj.dflt.split('+');\n\n        flags.splice(flags.indexOf('name'), 1);\n        dflt = flags.join('+');\n    }\n\n    return exports.coerce(traceIn, traceOut, attrs, 'hoverinfo', dflt);\n};\n\n/** Coerce shortcut for [un]selected.marker.opacity,\n *  which has special default logic, to ensure that it corresponds to the\n *  default selection behavior while allowing to be overtaken by any other\n *  [un]selected attribute.\n *\n *  N.B. This must be called *after* coercing all the other [un]selected attrs,\n *  to give the intended result.\n *\n * @param {object} traceOut : fullData item\n * @param {function} coerce : lib.coerce wrapper with implied first three arguments\n */\nexports.coerceSelectionMarkerOpacity = function(traceOut, coerce) {\n    if(!traceOut.marker) return;\n\n    var mo = traceOut.marker.opacity;\n    var smoDflt;\n    var usmoDflt;\n\n    // Don't give [un]selected.marker.opacity a default value if\n    // marker.opacity is an array: handle this during style step.\n    //\n    // Only give [un]selected.marker.opacity a default value if you don't\n    // set any other [un]selected attributes.\n    if(!Array.isArray(mo) && !traceOut.selected && !traceOut.unselected) {\n        smoDflt = mo;\n        usmoDflt = DESELECTDIM * mo;\n    }\n\n    coerce('selected.marker.opacity', smoDflt);\n    coerce('unselected.marker.opacity', usmoDflt);\n};\n\nexports.validate = function(value, opts) {\n    var valObjectDef = exports.valObjectMeta[opts.valType];\n\n    if(opts.arrayOk && Array.isArray(value)) return true;\n\n    if(valObjectDef.validateFunction) {\n        return valObjectDef.validateFunction(value, opts);\n    }\n\n    var failed = {},\n        out = failed,\n        propMock = { set: function(v) { out = v; } };\n\n    // 'failed' just something mutable that won't be === anything else\n\n    valObjectDef.coerceFunction(value, propMock, failed, opts);\n    return out !== failed;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/coerce.js\n// module id = 143\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\n\nvar Loggers = require('./loggers');\nvar mod = require('./mod');\n\nvar constants = require('../constants/numerical');\nvar BADNUM = constants.BADNUM;\nvar ONEDAY = constants.ONEDAY;\nvar ONEHOUR = constants.ONEHOUR;\nvar ONEMIN = constants.ONEMIN;\nvar ONESEC = constants.ONESEC;\nvar EPOCHJD = constants.EPOCHJD;\n\nvar Registry = require('../registry');\n\nvar utcFormat = d3.time.format.utc;\n\nvar DATETIME_REGEXP = /^\\s*(-?\\d\\d\\d\\d|\\d\\d)(-(\\d?\\d)(-(\\d?\\d)([ Tt]([01]?\\d|2[0-3])(:([0-5]\\d)(:([0-5]\\d(\\.\\d+)?))?(Z|z|[+\\-]\\d\\d:?\\d\\d)?)?)?)?)?\\s*$/m;\n// special regex for chinese calendars to support yyyy-mmi-dd etc for intercalary months\nvar DATETIME_REGEXP_CN = /^\\s*(-?\\d\\d\\d\\d|\\d\\d)(-(\\d?\\di?)(-(\\d?\\d)([ Tt]([01]?\\d|2[0-3])(:([0-5]\\d)(:([0-5]\\d(\\.\\d+)?))?(Z|z|[+\\-]\\d\\d:?\\d\\d)?)?)?)?)?\\s*$/m;\n\n// for 2-digit years, the first year we map them onto\nvar YFIRST = new Date().getFullYear() - 70;\n\nfunction isWorldCalendar(calendar) {\n    return (\n        calendar &&\n        Registry.componentsRegistry.calendars &&\n        typeof calendar === 'string' && calendar !== 'gregorian'\n    );\n}\n\n/*\n * dateTick0: get the canonical tick for this calendar\n *\n * bool sunday is for week ticks, shift it to a Sunday.\n */\nexports.dateTick0 = function(calendar, sunday) {\n    if(isWorldCalendar(calendar)) {\n        return sunday ?\n            Registry.getComponentMethod('calendars', 'CANONICAL_SUNDAY')[calendar] :\n            Registry.getComponentMethod('calendars', 'CANONICAL_TICK')[calendar];\n    }\n    else {\n        return sunday ? '2000-01-02' : '2000-01-01';\n    }\n};\n\n/*\n * dfltRange: for each calendar, give a valid default range\n */\nexports.dfltRange = function(calendar) {\n    if(isWorldCalendar(calendar)) {\n        return Registry.getComponentMethod('calendars', 'DFLTRANGE')[calendar];\n    }\n    else {\n        return ['2000-01-01', '2001-01-01'];\n    }\n};\n\n// is an object a javascript date?\nexports.isJSDate = function(v) {\n    return typeof v === 'object' && v !== null && typeof v.getTime === 'function';\n};\n\n// The absolute limits of our date-time system\n// This is a little weird: we use MIN_MS and MAX_MS in dateTime2ms\n// but we use dateTime2ms to calculate them (after defining it!)\nvar MIN_MS, MAX_MS;\n\n/**\n * dateTime2ms - turn a date object or string s into milliseconds\n * (relative to 1970-01-01, per javascript standard)\n * optional calendar (string) to use a non-gregorian calendar\n *\n * Returns BADNUM if it doesn't find a date\n *\n * strings should have the form:\n *\n *    -?YYYY-mm-dd<sep>HH:MM:SS.sss<tzInfo>?\n *\n * <sep>: space (our normal standard) or T or t (ISO-8601)\n * <tzInfo>: Z, z, or [+\\-]HH:?MM and we THROW IT AWAY\n * this format comes from https://tools.ietf.org/html/rfc3339#section-5.6\n * but we allow it even with a space as the separator\n *\n * May truncate after any full field, and sss can be any length\n * even >3 digits, though javascript dates truncate to milliseconds,\n * we keep as much as javascript numeric precision can hold, but we only\n * report back up to 100 microsecond precision, because most dates support\n * this precision (close to 1970 support more, very far away support less)\n *\n * Expanded to support negative years to -9999 but you must always\n * give 4 digits, except for 2-digit positive years which we assume are\n * near the present time.\n * Note that we follow ISO 8601:2004: there *is* a year 0, which\n * is 1BC/BCE, and -1===2BC etc.\n *\n * World calendars: not all of these *have* agreed extensions to this full range,\n * if you have another calendar system but want a date range outside its validity,\n * you can use a gregorian date string prefixed with 'G' or 'g'.\n *\n * Where to cut off 2-digit years between 1900s and 2000s?\n * from http://support.microsoft.com/kb/244664:\n *   1930-2029 (the most retro of all...)\n * but in my mac chrome from eg. d=new Date(Date.parse('8/19/50')):\n *   1950-2049\n * by Java, from http://stackoverflow.com/questions/2024273/:\n *   now-80 - now+19\n * or FileMaker Pro, from\n *      http://www.filemaker.com/12help/html/add_view_data.4.21.html:\n *   now-70 - now+29\n * but python strptime etc, via\n *      http://docs.python.org/py3k/library/time.html:\n *   1969-2068 (super forward-looking, but static, not sliding!)\n *\n * lets go with now-70 to now+29, and if anyone runs into this problem\n * they can learn the hard way not to use 2-digit years, as no choice we\n * make now will cover all possibilities. mostly this will all be taken\n * care of in initial parsing, should only be an issue for hand-entered data\n * currently (2016) this range is:\n *   1946-2045\n */\nexports.dateTime2ms = function(s, calendar) {\n    // first check if s is a date object\n    if(exports.isJSDate(s)) {\n        // Convert to the UTC milliseconds that give the same\n        // hours as this date has in the local timezone\n        s = Number(s) - s.getTimezoneOffset() * ONEMIN;\n        if(s >= MIN_MS && s <= MAX_MS) return s;\n        return BADNUM;\n    }\n    // otherwise only accept strings and numbers\n    if(typeof s !== 'string' && typeof s !== 'number') return BADNUM;\n\n    s = String(s);\n\n    var isWorld = isWorldCalendar(calendar);\n\n    // to handle out-of-range dates in international calendars, accept\n    // 'G' as a prefix to force the built-in gregorian calendar.\n    var s0 = s.charAt(0);\n    if(isWorld && (s0 === 'G' || s0 === 'g')) {\n        s = s.substr(1);\n        calendar = '';\n    }\n\n    var isChinese = isWorld && calendar.substr(0, 7) === 'chinese';\n\n    var match = s.match(isChinese ? DATETIME_REGEXP_CN : DATETIME_REGEXP);\n    if(!match) return BADNUM;\n    var y = match[1],\n        m = match[3] || '1',\n        d = Number(match[5] || 1),\n        H = Number(match[7] || 0),\n        M = Number(match[9] || 0),\n        S = Number(match[11] || 0);\n\n    if(isWorld) {\n        // disallow 2-digit years for world calendars\n        if(y.length === 2) return BADNUM;\n        y = Number(y);\n\n        var cDate;\n        try {\n            var calInstance = Registry.getComponentMethod('calendars', 'getCal')(calendar);\n            if(isChinese) {\n                var isIntercalary = m.charAt(m.length - 1) === 'i';\n                m = parseInt(m, 10);\n                cDate = calInstance.newDate(y, calInstance.toMonthIndex(y, m, isIntercalary), d);\n            }\n            else {\n                cDate = calInstance.newDate(y, Number(m), d);\n            }\n        }\n        catch(e) { return BADNUM; } // Invalid ... date\n\n        if(!cDate) return BADNUM;\n\n        return ((cDate.toJD() - EPOCHJD) * ONEDAY) +\n            (H * ONEHOUR) + (M * ONEMIN) + (S * ONESEC);\n    }\n\n    if(y.length === 2) {\n        y = (Number(y) + 2000 - YFIRST) % 100 + YFIRST;\n    }\n    else y = Number(y);\n\n    // new Date uses months from 0; subtract 1 here just so we\n    // don't have to do it again during the validity test below\n    m -= 1;\n\n    // javascript takes new Date(0..99,m,d) to mean 1900-1999, so\n    // to support years 0-99 we need to use setFullYear explicitly\n    // Note that 2000 is a leap year.\n    var date = new Date(Date.UTC(2000, m, d, H, M));\n    date.setUTCFullYear(y);\n\n    if(date.getUTCMonth() !== m) return BADNUM;\n    if(date.getUTCDate() !== d) return BADNUM;\n\n    return date.getTime() + S * ONESEC;\n};\n\nMIN_MS = exports.MIN_MS = exports.dateTime2ms('-9999');\nMAX_MS = exports.MAX_MS = exports.dateTime2ms('9999-12-31 23:59:59.9999');\n\n// is string s a date? (see above)\nexports.isDateTime = function(s, calendar) {\n    return (exports.dateTime2ms(s, calendar) !== BADNUM);\n};\n\n// pad a number with zeroes, to given # of digits before the decimal point\nfunction lpad(val, digits) {\n    return String(val + Math.pow(10, digits)).substr(1);\n}\n\n/**\n * Turn ms into string of the form YYYY-mm-dd HH:MM:SS.ssss\n * Crop any trailing zeros in time, except never stop right after hours\n * (we could choose to crop '-01' from date too but for now we always\n * show the whole date)\n * Optional range r is the data range that applies, also in ms.\n * If rng is big, the later parts of time will be omitted\n */\nvar NINETYDAYS = 90 * ONEDAY;\nvar THREEHOURS = 3 * ONEHOUR;\nvar FIVEMIN = 5 * ONEMIN;\nexports.ms2DateTime = function(ms, r, calendar) {\n    if(typeof ms !== 'number' || !(ms >= MIN_MS && ms <= MAX_MS)) return BADNUM;\n\n    if(!r) r = 0;\n\n    var msecTenths = Math.floor(mod(ms + 0.05, 1) * 10),\n        msRounded = Math.round(ms - msecTenths / 10),\n        dateStr, h, m, s, msec10, d;\n\n    if(isWorldCalendar(calendar)) {\n        var dateJD = Math.floor(msRounded / ONEDAY) + EPOCHJD,\n            timeMs = Math.floor(mod(ms, ONEDAY));\n        try {\n            dateStr = Registry.getComponentMethod('calendars', 'getCal')(calendar)\n                .fromJD(dateJD).formatDate('yyyy-mm-dd');\n        }\n        catch(e) {\n            // invalid date in this calendar - fall back to Gyyyy-mm-dd\n            dateStr = utcFormat('G%Y-%m-%d')(new Date(msRounded));\n        }\n\n        // yyyy does NOT guarantee 4-digit years. YYYY mostly does, but does\n        // other things for a few calendars, so we can't trust it. Just pad\n        // it manually (after the '-' if there is one)\n        if(dateStr.charAt(0) === '-') {\n            while(dateStr.length < 11) dateStr = '-0' + dateStr.substr(1);\n        }\n        else {\n            while(dateStr.length < 10) dateStr = '0' + dateStr;\n        }\n\n        // TODO: if this is faster, we could use this block for extracting\n        // the time components of regular gregorian too\n        h = (r < NINETYDAYS) ? Math.floor(timeMs / ONEHOUR) : 0;\n        m = (r < NINETYDAYS) ? Math.floor((timeMs % ONEHOUR) / ONEMIN) : 0;\n        s = (r < THREEHOURS) ? Math.floor((timeMs % ONEMIN) / ONESEC) : 0;\n        msec10 = (r < FIVEMIN) ? (timeMs % ONESEC) * 10 + msecTenths : 0;\n    }\n    else {\n        d = new Date(msRounded);\n\n        dateStr = utcFormat('%Y-%m-%d')(d);\n\n        // <90 days: add hours and minutes - never *only* add hours\n        h = (r < NINETYDAYS) ? d.getUTCHours() : 0;\n        m = (r < NINETYDAYS) ? d.getUTCMinutes() : 0;\n        // <3 hours: add seconds\n        s = (r < THREEHOURS) ? d.getUTCSeconds() : 0;\n        // <5 minutes: add ms (plus one extra digit, this is msec*10)\n        msec10 = (r < FIVEMIN) ? d.getUTCMilliseconds() * 10 + msecTenths : 0;\n    }\n\n    return includeTime(dateStr, h, m, s, msec10);\n};\n\n// For converting old-style milliseconds to date strings,\n// we use the local timezone rather than UTC like we use\n// everywhere else, both for backward compatibility and\n// because that's how people mostly use javasript date objects.\n// Clip one extra day off our date range though so we can't get\n// thrown beyond the range by the timezone shift.\nexports.ms2DateTimeLocal = function(ms) {\n    if(!(ms >= MIN_MS + ONEDAY && ms <= MAX_MS - ONEDAY)) return BADNUM;\n\n    var msecTenths = Math.floor(mod(ms + 0.05, 1) * 10),\n        d = new Date(Math.round(ms - msecTenths / 10)),\n        dateStr = d3.time.format('%Y-%m-%d')(d),\n        h = d.getHours(),\n        m = d.getMinutes(),\n        s = d.getSeconds(),\n        msec10 = d.getUTCMilliseconds() * 10 + msecTenths;\n\n    return includeTime(dateStr, h, m, s, msec10);\n};\n\nfunction includeTime(dateStr, h, m, s, msec10) {\n    // include each part that has nonzero data in or after it\n    if(h || m || s || msec10) {\n        dateStr += ' ' + lpad(h, 2) + ':' + lpad(m, 2);\n        if(s || msec10) {\n            dateStr += ':' + lpad(s, 2);\n            if(msec10) {\n                var digits = 4;\n                while(msec10 % 10 === 0) {\n                    digits -= 1;\n                    msec10 /= 10;\n                }\n                dateStr += '.' + lpad(msec10, digits);\n            }\n        }\n    }\n    return dateStr;\n}\n\n// normalize date format to date string, in case it starts as\n// a Date object or milliseconds\n// optional dflt is the return value if cleaning fails\nexports.cleanDate = function(v, dflt, calendar) {\n    if(exports.isJSDate(v) || typeof v === 'number') {\n        // do not allow milliseconds (old) or jsdate objects (inherently\n        // described as gregorian dates) with world calendars\n        if(isWorldCalendar(calendar)) {\n            Loggers.error('JS Dates and milliseconds are incompatible with world calendars', v);\n            return dflt;\n        }\n\n        // NOTE: if someone puts in a year as a number rather than a string,\n        // this will mistakenly convert it thinking it's milliseconds from 1970\n        // that is: '2012' -> Jan. 1, 2012, but 2012 -> 2012 epoch milliseconds\n        v = exports.ms2DateTimeLocal(+v);\n        if(!v && dflt !== undefined) return dflt;\n    }\n    else if(!exports.isDateTime(v, calendar)) {\n        Loggers.error('unrecognized date', v);\n        return dflt;\n    }\n    return v;\n};\n\n/*\n *  Date formatting for ticks and hovertext\n */\n\n/*\n * modDateFormat: Support world calendars, and add one item to\n * d3's vocabulary:\n * %{n}f where n is the max number of digits of fractional seconds\n */\nvar fracMatch = /%\\d?f/g;\nfunction modDateFormat(fmt, x, formatter, calendar) {\n\n    fmt = fmt.replace(fracMatch, function(match) {\n        var digits = Math.min(+(match.charAt(1)) || 6, 6),\n            fracSecs = ((x / 1000 % 1) + 2)\n                .toFixed(digits)\n                .substr(2).replace(/0+$/, '') || '0';\n        return fracSecs;\n    });\n\n    var d = new Date(Math.floor(x + 0.05));\n\n    if(isWorldCalendar(calendar)) {\n        try {\n            fmt = Registry.getComponentMethod('calendars', 'worldCalFmt')(fmt, x, calendar);\n        }\n        catch(e) {\n            return 'Invalid';\n        }\n    }\n    return formatter(fmt)(d);\n}\n\n/*\n * formatTime: create a time string from:\n *   x: milliseconds\n *   tr: tickround ('M', 'S', or # digits)\n * only supports UTC times (where every day is 24 hours and 0 is at midnight)\n */\nvar MAXSECONDS = [59, 59.9, 59.99, 59.999, 59.9999];\nfunction formatTime(x, tr) {\n    var timePart = mod(x + 0.05, ONEDAY);\n\n    var timeStr = lpad(Math.floor(timePart / ONEHOUR), 2) + ':' +\n        lpad(mod(Math.floor(timePart / ONEMIN), 60), 2);\n\n    if(tr !== 'M') {\n        if(!isNumeric(tr)) tr = 0; // should only be 'S'\n\n        /*\n         * this is a weird one - and shouldn't come up unless people\n         * monkey with tick0 in weird ways, but we need to do something!\n         * IN PARTICULAR we had better not display garbage (see below)\n         * for numbers we always round to the nearest increment of the\n         * precision we're showing, and this seems like the right way to\n         * handle seconds and milliseconds, as they have a decimal point\n         * and people will interpret that to mean rounding like numbers.\n         * but for larger increments we floor the value: it's always\n         * 2013 until the ball drops on the new year. We could argue about\n         * which field it is where we start rounding (should 12:08:59\n         * round to 12:09 if we're stopping at minutes?) but for now I'll\n         * say we round seconds but floor everything else. BUT that means\n         * we need to never round up to 60 seconds, ie 23:59:60\n         */\n        var sec = Math.min(mod(x / ONESEC, 60), MAXSECONDS[tr]);\n\n        var secStr = (100 + sec).toFixed(tr).substr(1);\n        if(tr > 0) {\n            secStr = secStr.replace(/0+$/, '').replace(/[\\.]$/, '');\n        }\n\n        timeStr += ':' + secStr;\n    }\n    return timeStr;\n}\n\n// TODO: do these strings need to be localized?\n// ie this gives \"Dec 13, 2017\" but some languages may want eg \"13-Dec 2017\"\nvar yearFormatD3 = '%Y';\nvar monthFormatD3 = '%b %Y';\nvar dayFormatD3 = '%b %-d';\nvar yearMonthDayFormatD3 = '%b %-d, %Y';\n\nfunction yearFormatWorld(cDate) { return cDate.formatDate('yyyy'); }\nfunction monthFormatWorld(cDate) { return cDate.formatDate('M yyyy'); }\nfunction dayFormatWorld(cDate) { return cDate.formatDate('M d'); }\nfunction yearMonthDayFormatWorld(cDate) { return cDate.formatDate('M d, yyyy'); }\n\n/*\n * formatDate: turn a date into tick or hover label text.\n *\n *   x: milliseconds, the value to convert\n *   fmt: optional, an explicit format string (d3 format, even for world calendars)\n *   tr: tickround ('y', 'm', 'd', 'M', 'S', or # digits)\n *      used if no explicit fmt is provided\n *   formatter: locale-aware d3 date formatter for standard gregorian calendars\n *      should be the result of exports.getD3DateFormat(gd)\n *   calendar: optional string, the world calendar system to use\n *\n * returns the date/time as a string, potentially with the leading portion\n * on a separate line (after '\\n')\n * Note that this means if you provide an explicit format which includes '\\n'\n * the axis may choose to strip things after it when they don't change from\n * one tick to the next (as it does with automatic formatting)\n */\nexports.formatDate = function(x, fmt, tr, formatter, calendar) {\n    var headStr,\n        dateStr;\n\n    calendar = isWorldCalendar(calendar) && calendar;\n\n    if(fmt) return modDateFormat(fmt, x, formatter, calendar);\n\n    if(calendar) {\n        try {\n            var dateJD = Math.floor((x + 0.05) / ONEDAY) + EPOCHJD,\n                cDate = Registry.getComponentMethod('calendars', 'getCal')(calendar)\n                    .fromJD(dateJD);\n\n            if(tr === 'y') dateStr = yearFormatWorld(cDate);\n            else if(tr === 'm') dateStr = monthFormatWorld(cDate);\n            else if(tr === 'd') {\n                headStr = yearFormatWorld(cDate);\n                dateStr = dayFormatWorld(cDate);\n            }\n            else {\n                headStr = yearMonthDayFormatWorld(cDate);\n                dateStr = formatTime(x, tr);\n            }\n        }\n        catch(e) { return 'Invalid'; }\n    }\n    else {\n        var d = new Date(Math.floor(x + 0.05));\n\n        if(tr === 'y') dateStr = formatter(yearFormatD3)(d);\n        else if(tr === 'm') dateStr = formatter(monthFormatD3)(d);\n        else if(tr === 'd') {\n            headStr = formatter(yearFormatD3)(d);\n            dateStr = formatter(dayFormatD3)(d);\n        }\n        else {\n            headStr = formatter(yearMonthDayFormatD3)(d);\n            dateStr = formatTime(x, tr);\n        }\n    }\n\n    return dateStr + (headStr ? '\\n' + headStr : '');\n};\n\n/*\n * incrementMonth: make a new milliseconds value from the given one,\n * having changed the month\n *\n * special case for world calendars: multiples of 12 are treated as years,\n * even for calendar systems that don't have (always or ever) 12 months/year\n * TODO: perhaps we need a different code for year increments to support this?\n *\n * ms (number): the initial millisecond value\n * dMonth (int): the (signed) number of months to shift\n * calendar (string): the calendar system to use\n *\n * changing month does not (and CANNOT) always preserve day, since\n * months have different lengths. The worst example of this is:\n *   d = new Date(1970,0,31); d.setMonth(1) -> Feb 31 turns into Mar 3\n *\n * But we want to be able to iterate over the last day of each month,\n * regardless of what its number is.\n * So shift 3 days forward, THEN set the new month, then unshift:\n *   1/31 -> 2/28 (or 29) -> 3/31 -> 4/30 -> ...\n *\n * Note that odd behavior still exists if you start from the 26th-28th:\n *   1/28 -> 2/28 -> 3/31\n * but at least you can't shift any dates into the wrong month,\n * and ticks on these days incrementing by month would be very unusual\n */\nvar THREEDAYS = 3 * ONEDAY;\nexports.incrementMonth = function(ms, dMonth, calendar) {\n    calendar = isWorldCalendar(calendar) && calendar;\n\n    // pull time out and operate on pure dates, then add time back at the end\n    // this gives maximum precision - not that we *normally* care if we're\n    // incrementing by month, but better to be safe!\n    var timeMs = mod(ms, ONEDAY);\n    ms = Math.round(ms - timeMs);\n\n    if(calendar) {\n        try {\n            var dateJD = Math.round(ms / ONEDAY) + EPOCHJD,\n                calInstance = Registry.getComponentMethod('calendars', 'getCal')(calendar),\n                cDate = calInstance.fromJD(dateJD);\n\n            if(dMonth % 12) calInstance.add(cDate, dMonth, 'm');\n            else calInstance.add(cDate, dMonth / 12, 'y');\n\n            return (cDate.toJD() - EPOCHJD) * ONEDAY + timeMs;\n        }\n        catch(e) {\n            Loggers.error('invalid ms ' + ms + ' in calendar ' + calendar);\n            // then keep going in gregorian even though the result will be 'Invalid'\n        }\n    }\n\n    var y = new Date(ms + THREEDAYS);\n    return y.setUTCMonth(y.getUTCMonth() + dMonth) + timeMs - THREEDAYS;\n};\n\n/*\n * findExactDates: what fraction of data is exact days, months, or years?\n *\n * data: array of millisecond values\n * calendar (string) the calendar to test against\n */\nexports.findExactDates = function(data, calendar) {\n    var exactYears = 0,\n        exactMonths = 0,\n        exactDays = 0,\n        blankCount = 0,\n        d,\n        di;\n\n    var calInstance = (\n        isWorldCalendar(calendar) &&\n        Registry.getComponentMethod('calendars', 'getCal')(calendar)\n    );\n\n    for(var i = 0; i < data.length; i++) {\n        di = data[i];\n\n        // not date data at all\n        if(!isNumeric(di)) {\n            blankCount ++;\n            continue;\n        }\n\n        // not an exact date\n        if(di % ONEDAY) continue;\n\n        if(calInstance) {\n            try {\n                d = calInstance.fromJD(di / ONEDAY + EPOCHJD);\n                if(d.day() === 1) {\n                    if(d.month() === 1) exactYears++;\n                    else exactMonths++;\n                }\n                else exactDays++;\n            }\n            catch(e) {\n                // invalid date in this calendar - ignore it here.\n            }\n        }\n        else {\n            d = new Date(di);\n            if(d.getUTCDate() === 1) {\n                if(d.getUTCMonth() === 0) exactYears++;\n                else exactMonths++;\n            }\n            else exactDays++;\n        }\n    }\n    exactMonths += exactYears;\n    exactDays += exactMonths;\n\n    var dataCount = data.length - blankCount;\n\n    return {\n        exactYears: exactYears / dataCount,\n        exactMonths: exactMonths / dataCount,\n        exactDays: exactDays / dataCount\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/dates.js\n// module id = 144\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\n\n/**\n * aggNums() returns the result of an aggregate function applied to an array of\n * values, where non-numerical values have been tossed out.\n *\n * @param {function} f - aggregation function (e.g., Math.min)\n * @param {Number} v - initial value (continuing from previous calls)\n *      if there's no continuing value, use null for selector-type\n *      functions (max,min), or 0 for summations\n * @param {Array} a - array to aggregate (may be nested, we will recurse,\n *                    but all elements must have the same dimension)\n * @param {Number} len - maximum length of a to aggregate\n * @return {Number} - result of f applied to a starting from v\n */\nexports.aggNums = function(f, v, a, len) {\n    var i,\n        b;\n    if(!len) len = a.length;\n    if(!isNumeric(v)) v = false;\n    if(Array.isArray(a[0])) {\n        b = new Array(len);\n        for(i = 0; i < len; i++) b[i] = exports.aggNums(f, v, a[i]);\n        a = b;\n    }\n\n    for(i = 0; i < len; i++) {\n        if(!isNumeric(v)) v = a[i];\n        else if(isNumeric(a[i])) v = f(+v, +a[i]);\n    }\n    return v;\n};\n\n/**\n * mean & std dev functions using aggNums, so it handles non-numerics nicely\n * even need to use aggNums instead of .length, to toss out non-numerics\n */\nexports.len = function(data) {\n    return exports.aggNums(function(a) { return a + 1; }, 0, data);\n};\n\nexports.mean = function(data, len) {\n    if(!len) len = exports.len(data);\n    return exports.aggNums(function(a, b) { return a + b; }, 0, data) / len;\n};\n\nexports.variance = function(data, len, mean) {\n    if(!len) len = exports.len(data);\n    if(!isNumeric(mean)) mean = exports.mean(data, len);\n\n    return exports.aggNums(function(a, b) {\n        return a + Math.pow(b - mean, 2);\n    }, 0, data) / len;\n};\n\nexports.stdev = function(data, len, mean) {\n    return Math.sqrt(exports.variance(data, len, mean));\n};\n\n/**\n * interp() computes a percentile (quantile) for a given distribution.\n * We interpolate the distribution (to compute quantiles, we follow method #10 here:\n * http://www.amstat.org/publications/jse/v14n3/langford.html).\n * Typically the index or rank (n * arr.length) may be non-integer.\n * For reference: ends are clipped to the extreme values in the array;\n * For box plots: index you get is half a point too high (see\n * http://en.wikipedia.org/wiki/Percentile#Nearest_rank) but note that this definition\n * indexes from 1 rather than 0, so we subtract 1/2 (instead of add).\n *\n * @param {Array} arr - This array contains the values that make up the distribution.\n * @param {Number} n - Between 0 and 1, n = p/100 is such that we compute the p^th percentile.\n * For example, the 50th percentile (or median) corresponds to n = 0.5\n * @return {Number} - percentile\n */\nexports.interp = function(arr, n) {\n    if(!isNumeric(n)) throw 'n should be a finite number';\n    n = n * arr.length - 0.5;\n    if(n < 0) return arr[0];\n    if(n > arr.length - 1) return arr[arr.length - 1];\n    var frac = n % 1;\n    return frac * arr[Math.ceil(n)] + (1 - frac) * arr[Math.floor(n)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/stats.js\n// module id = 145\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar mod = require('./mod');\n\n/*\n * look for intersection of two line segments\n *   (1->2 and 3->4) - returns array [x,y] if they do, null if not\n */\nexports.segmentsIntersect = segmentsIntersect;\nfunction segmentsIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n    var a = x2 - x1,\n        b = x3 - x1,\n        c = x4 - x3,\n        d = y2 - y1,\n        e = y3 - y1,\n        f = y4 - y3,\n        det = a * f - c * d;\n    // parallel lines? intersection is undefined\n    // ignore the case where they are colinear\n    if(det === 0) return null;\n    var t = (b * f - c * e) / det,\n        u = (b * d - a * e) / det;\n    // segments do not intersect?\n    if(u < 0 || u > 1 || t < 0 || t > 1) return null;\n\n    return {x: x1 + a * t, y: y1 + d * t};\n}\n\n/*\n * find the minimum distance between two line segments (1->2 and 3->4)\n */\nexports.segmentDistance = function segmentDistance(x1, y1, x2, y2, x3, y3, x4, y4) {\n    if(segmentsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)) return 0;\n\n    // the two segments and their lengths squared\n    var x12 = x2 - x1;\n    var y12 = y2 - y1;\n    var x34 = x4 - x3;\n    var y34 = y4 - y3;\n    var l2_12 = x12 * x12 + y12 * y12;\n    var l2_34 = x34 * x34 + y34 * y34;\n\n    // calculate distance squared, then take the sqrt at the very end\n    var dist2 = Math.min(\n        perpDistance2(x12, y12, l2_12, x3 - x1, y3 - y1),\n        perpDistance2(x12, y12, l2_12, x4 - x1, y4 - y1),\n        perpDistance2(x34, y34, l2_34, x1 - x3, y1 - y3),\n        perpDistance2(x34, y34, l2_34, x2 - x3, y2 - y3)\n    );\n\n    return Math.sqrt(dist2);\n};\n\n/*\n * distance squared from segment ab to point c\n * [xab, yab] is the vector b-a\n * [xac, yac] is the vector c-a\n * l2_ab is the length squared of (b-a), just to simplify calculation\n */\nfunction perpDistance2(xab, yab, l2_ab, xac, yac) {\n    var fc_ab = (xac * xab + yac * yab);\n    if(fc_ab < 0) {\n        // point c is closer to point a\n        return xac * xac + yac * yac;\n    }\n    else if(fc_ab > l2_ab) {\n        // point c is closer to point b\n        var xbc = xac - xab;\n        var ybc = yac - yab;\n        return xbc * xbc + ybc * ybc;\n    }\n    else {\n        // perpendicular distance is the shortest\n        var crossProduct = xac * yab - yac * xab;\n        return crossProduct * crossProduct / l2_ab;\n    }\n}\n\n// a very short-term cache for getTextLocation, just because\n// we're often looping over the same locations multiple times\n// invalidated as soon as we look at a different path\nvar locationCache, workingPath, workingTextWidth;\n\n// turn a path and position along it into x, y, and angle for the given text\nexports.getTextLocation = function getTextLocation(path, totalPathLen, positionOnPath, textWidth) {\n    if(path !== workingPath || textWidth !== workingTextWidth) {\n        locationCache = {};\n        workingPath = path;\n        workingTextWidth = textWidth;\n    }\n    if(locationCache[positionOnPath]) {\n        return locationCache[positionOnPath];\n    }\n\n    // for the angle, use points on the path separated by the text width\n    // even though due to curvature, the text will cover a bit more than that\n    var p0 = path.getPointAtLength(mod(positionOnPath - textWidth / 2, totalPathLen));\n    var p1 = path.getPointAtLength(mod(positionOnPath + textWidth / 2, totalPathLen));\n    // note: atan handles 1/0 nicely\n    var theta = Math.atan((p1.y - p0.y) / (p1.x - p0.x));\n    // center the text at 2/3 of the center position plus 1/3 the p0/p1 midpoint\n    // that's the average position of this segment, assuming it's roughly quadratic\n    var pCenter = path.getPointAtLength(mod(positionOnPath, totalPathLen));\n    var x = (pCenter.x * 4 + p0.x + p1.x) / 6;\n    var y = (pCenter.y * 4 + p0.y + p1.y) / 6;\n\n    var out = {x: x, y: y, theta: theta};\n    locationCache[positionOnPath] = out;\n    return out;\n};\n\nexports.clearLocationCache = function() {\n    workingPath = null;\n};\n\n/*\n * Find the segment of `path` that's within the visible area\n * given by `bounds` {left, right, top, bottom}, to within a\n * precision of `buffer` px\n *\n * returns: undefined if nothing is visible, else object:\n * {\n *   min: position where the path first enters bounds, or 0 if it\n *        starts within bounds\n *   max: position where the path last exits bounds, or the path length\n *        if it finishes within bounds\n *   len: max - min, ie the length of visible path\n *   total: the total path length - just included so the caller doesn't\n *        need to call path.getTotalLength() again\n *   isClosed: true iff the start and end points of the path are both visible\n *        and are at the same point\n * }\n *\n * Works by starting from either end and repeatedly finding the distance from\n * that point to the plot area, and if it's outside the plot, moving along the\n * path by that distance (because the plot must be at least that far away on\n * the path). Note that if a path enters, exits, and re-enters the plot, we\n * will not capture this behavior.\n */\nexports.getVisibleSegment = function getVisibleSegment(path, bounds, buffer) {\n    var left = bounds.left;\n    var right = bounds.right;\n    var top = bounds.top;\n    var bottom = bounds.bottom;\n\n    var pMin = 0;\n    var pTotal = path.getTotalLength();\n    var pMax = pTotal;\n\n    var pt0, ptTotal;\n\n    function getDistToPlot(len) {\n        var pt = path.getPointAtLength(len);\n\n        // hold on to the start and end points for `closed`\n        if(len === 0) pt0 = pt;\n        else if(len === pTotal) ptTotal = pt;\n\n        var dx = (pt.x < left) ? left - pt.x : (pt.x > right ? pt.x - right : 0);\n        var dy = (pt.y < top) ? top - pt.y : (pt.y > bottom ? pt.y - bottom : 0);\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    var distToPlot = getDistToPlot(pMin);\n    while(distToPlot) {\n        pMin += distToPlot + buffer;\n        if(pMin > pMax) return;\n        distToPlot = getDistToPlot(pMin);\n    }\n\n    distToPlot = getDistToPlot(pMax);\n    while(distToPlot) {\n        pMax -= distToPlot + buffer;\n        if(pMin > pMax) return;\n        distToPlot = getDistToPlot(pMax);\n    }\n\n    return {\n        min: pMin,\n        max: pMax,\n        len: pMax - pMin,\n        total: pTotal,\n        isClosed: pMin === 0 && pMax === pTotal &&\n            Math.abs(pt0.x - ptTotal.x) < 0.1 &&\n            Math.abs(pt0.y - ptTotal.y) < 0.1\n    };\n};\n\n/**\n * Find point on SVG path corresponding to a given constraint coordinate\n *\n * @param {SVGPathElement} path\n * @param {Number} val : constraint coordinate value\n * @param {String} coord : 'x' or 'y' the constraint coordinate\n * @param {Object} opts :\n *  - {Number} pathLength : supply total path length before hand\n *  - {Number} tolerance\n *  - {Number} iterationLimit\n * @return {SVGPoint}\n */\nexports.findPointOnPath = function findPointOnPath(path, val, coord, opts) {\n    opts = opts || {};\n\n    var pathLength = opts.pathLength || path.getTotalLength();\n    var tolerance = opts.tolerance || 1e-3;\n    var iterationLimit = opts.iterationLimit || 30;\n\n    // if path starts at a val greater than the path tail (like on vertical violins),\n    // we must flip the sign of the computed diff.\n    var mul = path.getPointAtLength(0)[coord] > path.getPointAtLength(pathLength)[coord] ? -1 : 1;\n\n    var i = 0;\n    var b0 = 0;\n    var b1 = pathLength;\n    var mid;\n    var pt;\n    var diff;\n\n    while(i < iterationLimit) {\n        mid = (b0 + b1) / 2;\n        pt = path.getPointAtLength(mid);\n        diff = pt[coord] - val;\n\n        if(Math.abs(diff) < tolerance) {\n            return pt;\n        } else {\n            if(mul * diff > 0) {\n                b1 = mid;\n            } else {\n                b0 = mid;\n            }\n            i++;\n        }\n    }\n    return pt;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/geometry2d.js\n// module id = 146\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../registry');\n\n/**\n * localize: translate a string for the current locale\n *\n * @param {object} gd: the graphDiv for context\n *  gd._context.locale determines the language (& optional region/country)\n *  the dictionary for each locale may either be supplied in\n *  gd._context.locales or globally via Plotly.register\n * @param {string} s: the string to translate\n */\nmodule.exports = function localize(gd, s) {\n    var locale = gd._context.locale;\n\n    /*\n     * Priority of lookup:\n     *     contextDicts[locale],\n     *     registeredDicts[locale],\n     *     contextDicts[baseLocale], (if baseLocale is distinct)\n     *     registeredDicts[baseLocale]\n     * Return the first translation we find.\n     * This way if you have a regionalization you are allowed to specify\n     * only what's different from the base locale, everything else will\n     * fall back on the base.\n     */\n    for(var i = 0; i < 2; i++) {\n        var locales = gd._context.locales;\n        for(var j = 0; j < 2; j++) {\n            var dict = (locales[locale] || {}).dictionary;\n            if(dict) {\n                var out = dict[s];\n                if(out) return out;\n            }\n            locales = Registry.localeRegistry;\n        }\n\n        var baseLocale = locale.split('-')[0];\n        if(baseLocale === locale) break;\n        locale = baseLocale;\n    }\n\n    return s;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/localize.js\n// module id = 147\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\n\nvar NOTEDATA = [];\n\n/**\n * notifier\n * @param {String} text The person's user name\n * @param {Number} [delay=1000] The delay time in milliseconds\n *          or 'long' which provides 2000 ms delay time.\n * @return {undefined} this function does not return a value\n */\nmodule.exports = function(text, displayLength) {\n    if(NOTEDATA.indexOf(text) !== -1) return;\n\n    NOTEDATA.push(text);\n\n    var ts = 1000;\n    if(isNumeric(displayLength)) ts = displayLength;\n    else if(displayLength === 'long') ts = 3000;\n\n    var notifierContainer = d3.select('body')\n        .selectAll('.plotly-notifier')\n        .data([0]);\n    notifierContainer.enter()\n        .append('div')\n        .classed('plotly-notifier', true);\n\n    var notes = notifierContainer.selectAll('.notifier-note').data(NOTEDATA);\n\n    function killNote(transition) {\n        transition\n            .duration(700)\n            .style('opacity', 0)\n            .each('end', function(thisText) {\n                var thisIndex = NOTEDATA.indexOf(thisText);\n                if(thisIndex !== -1) NOTEDATA.splice(thisIndex, 1);\n                d3.select(this).remove();\n            });\n    }\n\n    notes.enter().append('div')\n        .classed('notifier-note', true)\n        .style('opacity', 0)\n        .each(function(thisText) {\n            var note = d3.select(this);\n\n            note.append('button')\n                .classed('notifier-close', true)\n                .html('&times;')\n                .on('click', function() {\n                    note.transition().call(killNote);\n                });\n\n            var p = note.append('p');\n            var lines = thisText.split(/<br\\s*\\/?>/g);\n            for(var i = 0; i < lines.length; i++) {\n                if(i) p.append('br');\n                p.append('span').text(lines[i]);\n            }\n\n            note.transition()\n                    .duration(700)\n                    .style('opacity', 1)\n                .transition()\n                    .delay(ts)\n                    .call(killNote);\n        });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/notifier.js\n// module id = 148\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\n/**\n * Return news array containing only the unique items\n * found in input array.\n *\n * IMPORTANT: Note that items are considered unique\n * if `String({})` is unique. For example;\n *\n *  Lib.filterUnique([ { a: 1 }, { b: 2 } ])\n *\n *  returns [{ a: 1 }]\n *\n * and\n *\n *  Lib.filterUnique([ '1', 1 ])\n *\n *  returns ['1']\n *\n *\n * @param {array} array base array\n * @return {array} new filtered array\n */\nmodule.exports = function filterUnique(array) {\n    var seen = {},\n        out = [],\n        j = 0;\n\n    for(var i = 0; i < array.length; i++) {\n        var item = array[i];\n\n        if(seen[item] !== 1) {\n            seen[item] = 1;\n            out[j++] = item;\n        }\n    }\n\n    return out;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/filter_unique.js\n// module id = 149\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/** Filter out object items with visible !== true\n *  insider array container.\n *\n *  @param {array of objects} container\n *  @return {array of objects} of length <= container\n *\n */\nmodule.exports = function filterVisible(container) {\n    var filterFn = isCalcData(container) ? calcDataFilter : baseFilter;\n    var out = [];\n\n    for(var i = 0; i < container.length; i++) {\n        var item = container[i];\n        if(filterFn(item)) out.push(item);\n    }\n\n    return out;\n};\n\nfunction baseFilter(item) {\n    return item.visible === true;\n}\n\nfunction calcDataFilter(item) {\n    return item[0].trace.visible === true;\n}\n\nfunction isCalcData(cont) {\n    return (\n        Array.isArray(cont) &&\n        Array.isArray(cont[0]) &&\n        cont[0][0] &&\n        cont[0][0].trace\n    );\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/filter_visible.js\n// module id = 150\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar BADNUM = require('../constants/numerical').BADNUM;\n\n// precompile for speed\nvar JUNK = /^['\"%,$#\\s']+|[, ]|['\"%,$#\\s']+$/g;\n\n/**\n * cleanNumber: remove common leading and trailing cruft\n * Always returns either a number or BADNUM.\n */\nmodule.exports = function cleanNumber(v) {\n    if(typeof v === 'string') {\n        v = v.replace(JUNK, '');\n    }\n\n    if(isNumeric(v)) return Number(v);\n\n    return BADNUM;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/clean_number.js\n// module id = 151\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n// Simple helper functions\n// none of these need any external deps\n\nmodule.exports = function identity(d) { return d; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/identity.js\n// module id = 152\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar scatterAttrs = require('../../../traces/scatter/attributes');\nvar scatterMarkerAttrs = scatterAttrs.marker;\n\nmodule.exports = {\n    r: scatterAttrs.r,\n    t: scatterAttrs.t,\n    marker: {\n        color: scatterMarkerAttrs.color,\n        size: scatterMarkerAttrs.size,\n        symbol: scatterMarkerAttrs.symbol,\n        opacity: scatterMarkerAttrs.opacity,\n        editType: 'calc'\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/polar/legacy/area_attributes.js\n// module id = 153\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\n\n\nmodule.exports = function hasColorbar(container) {\n    return Lib.isPlainObject(container.colorbar);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorbar/has_colorbar.js\n// module id = 154\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar handleTickValueDefaults = require('../../plots/cartesian/tick_value_defaults');\nvar handleTickMarkDefaults = require('../../plots/cartesian/tick_mark_defaults');\nvar handleTickLabelDefaults = require('../../plots/cartesian/tick_label_defaults');\n\nvar attributes = require('./attributes');\n\n\nmodule.exports = function colorbarDefaults(containerIn, containerOut, layout) {\n    var colorbarOut = containerOut.colorbar = {},\n        colorbarIn = containerIn.colorbar || {};\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(colorbarIn, colorbarOut, attributes, attr, dflt);\n    }\n\n    var thicknessmode = coerce('thicknessmode');\n    coerce('thickness', (thicknessmode === 'fraction') ?\n        30 / (layout.width - layout.margin.l - layout.margin.r) :\n        30\n    );\n\n    var lenmode = coerce('lenmode');\n    coerce('len', (lenmode === 'fraction') ?\n        1 :\n        layout.height - layout.margin.t - layout.margin.b\n    );\n\n    coerce('x');\n    coerce('xanchor');\n    coerce('xpad');\n    coerce('y');\n    coerce('yanchor');\n    coerce('ypad');\n    Lib.noneOrAll(colorbarIn, colorbarOut, ['x', 'y']);\n\n    coerce('outlinecolor');\n    coerce('outlinewidth');\n    coerce('bordercolor');\n    coerce('borderwidth');\n    coerce('bgcolor');\n\n    handleTickValueDefaults(colorbarIn, colorbarOut, coerce, 'linear');\n\n    handleTickLabelDefaults(colorbarIn, colorbarOut, coerce, 'linear',\n        {outerTicks: false, font: layout.font, noHover: true});\n\n    handleTickMarkDefaults(colorbarIn, colorbarOut, coerce, 'linear',\n        {outerTicks: false, font: layout.font, noHover: true});\n\n    coerce('title', layout._dfltTitle.colorbar);\n    Lib.coerceFont(coerce, 'titlefont', layout.font);\n    coerce('titleside');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorbar/defaults.js\n// module id = 155\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n/**\n * Extract colorscale into numeric domain and color range.\n *\n * @param {array} scl colorscale array of arrays\n * @param {number} cmin minimum color value (used to clamp scale)\n * @param {number} cmax maximum color value (used to clamp scale)\n */\nmodule.exports = function extractScale(scl, cmin, cmax) {\n    var N = scl.length,\n        domain = new Array(N),\n        range = new Array(N);\n\n    for(var i = 0; i < N; i++) {\n        var si = scl[i];\n\n        domain[i] = cmin + si[0] * (cmax - cmin);\n        range[i] = si[1];\n    }\n\n    return {\n        domain: domain,\n        range: range\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/extract_scale.js\n// module id = 156\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar tinycolor = require('tinycolor2');\nvar isNumeric = require('fast-isnumeric');\n\nvar Color = require('../color');\n\n/**\n * General colorscale function generator.\n *\n * @param {object} specs output of Colorscale.extractScale or precomputed domain, range.\n *  - domain {array}\n *  - range {array}\n *\n * @param {object} opts\n *  - noNumericCheck {boolean} if true, scale func bypasses numeric checks\n *  - returnArray {boolean} if true, scale func return 4-item array instead of color strings\n *\n * @return {function}\n */\nmodule.exports = function makeColorScaleFunc(specs, opts) {\n    opts = opts || {};\n\n    var domain = specs.domain,\n        range = specs.range,\n        N = range.length,\n        _range = new Array(N);\n\n    for(var i = 0; i < N; i++) {\n        var rgba = tinycolor(range[i]).toRgb();\n        _range[i] = [rgba.r, rgba.g, rgba.b, rgba.a];\n    }\n\n    var _sclFunc = d3.scale.linear()\n        .domain(domain)\n        .range(_range)\n        .clamp(true);\n\n    var noNumericCheck = opts.noNumericCheck,\n        returnArray = opts.returnArray,\n        sclFunc;\n\n    if(noNumericCheck && returnArray) {\n        sclFunc = _sclFunc;\n    }\n    else if(noNumericCheck) {\n        sclFunc = function(v) {\n            return colorArray2rbga(_sclFunc(v));\n        };\n    }\n    else if(returnArray) {\n        sclFunc = function(v) {\n            if(isNumeric(v)) return _sclFunc(v);\n            else if(tinycolor(v).isValid()) return v;\n            else return Color.defaultLine;\n        };\n    }\n    else {\n        sclFunc = function(v) {\n            if(isNumeric(v)) return colorArray2rbga(_sclFunc(v));\n            else if(tinycolor(v).isValid()) return v;\n            else return Color.defaultLine;\n        };\n    }\n\n    // colorbar draw looks into the d3 scale closure for domain and range\n\n    sclFunc.domain = _sclFunc.domain;\n\n    sclFunc.range = function() { return range; };\n\n    return sclFunc;\n};\n\nfunction colorArray2rbga(colorArray) {\n    var colorObj = {\n        r: colorArray[0],\n        g: colorArray[1],\n        b: colorArray[2],\n        a: colorArray[3]\n    };\n\n    return tinycolor(colorObj).toRgbString();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorscale/make_color_scale_func.js\n// module id = 157\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n// N.B. HTML entities are listed without the leading '&' and trailing ';'\n// https://www.freeformatter.com/html-entities.html\n\nmodule.exports = {\n    entityToUnicode: {\n        'mu': 'μ',\n        '#956': 'μ',\n\n        'amp': '&',\n        '#28': '&',\n\n        'lt': '<',\n        '#60': '<',\n\n        'gt': '>',\n        '#62': '>',\n\n        'nbsp': ' ',\n        '#160': ' ',\n\n        'times': '×',\n        '#215': '×',\n\n        'plusmn': '±',\n        '#177': '±',\n\n        'deg': '°',\n        '#176': '°'\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/constants/string_mappings.js\n// module id = 158\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\n\n// used in the drawing step for 'scatter' and 'scattegeo' and\n// in the convert step for 'scatter3d'\nmodule.exports = function makeBubbleSizeFn(trace) {\n    var marker = trace.marker,\n        sizeRef = marker.sizeref || 1,\n        sizeMin = marker.sizemin || 0;\n\n    // for bubble charts, allow scaling the provided value linearly\n    // and by area or diameter.\n    // Note this only applies to the array-value sizes\n\n    var baseFn = (marker.sizemode === 'area') ?\n            function(v) { return Math.sqrt(v / sizeRef); } :\n            function(v) { return v / sizeRef; };\n\n    // TODO add support for position/negative bubbles?\n    // TODO add 'sizeoffset' attribute?\n    return function(v) {\n        var baseSize = baseFn(v / 2);\n\n        // don't show non-numeric and negative sizes\n        return (isNumeric(baseSize) && (baseSize > 0)) ?\n            Math.max(baseSize, sizeMin) :\n            0;\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/make_bubble_size_func.js\n// module id = 159\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\n/** Marker symbol definitions\n * users can specify markers either by number or name\n * add 100 (or '-open') and you get an open marker\n *  open markers have no fill and use line color as the stroke color\n * add 200 (or '-dot') and you get a dot in the middle\n * add both and you get both\n */\n\nmodule.exports = {\n    circle: {\n        n: 0,\n        f: function(r) {\n            var rs = d3.round(r, 2);\n            return 'M' + rs + ',0A' + rs + ',' + rs + ' 0 1,1 0,-' + rs +\n                'A' + rs + ',' + rs + ' 0 0,1 ' + rs + ',0Z';\n        }\n    },\n    square: {\n        n: 1,\n        f: function(r) {\n            var rs = d3.round(r, 2);\n            return 'M' + rs + ',' + rs + 'H-' + rs + 'V-' + rs + 'H' + rs + 'Z';\n        }\n    },\n    diamond: {\n        n: 2,\n        f: function(r) {\n            var rd = d3.round(r * 1.3, 2);\n            return 'M' + rd + ',0L0,' + rd + 'L-' + rd + ',0L0,-' + rd + 'Z';\n        }\n    },\n    cross: {\n        n: 3,\n        f: function(r) {\n            var rc = d3.round(r * 0.4, 2),\n                rc2 = d3.round(r * 1.2, 2);\n            return 'M' + rc2 + ',' + rc + 'H' + rc + 'V' + rc2 + 'H-' + rc +\n                'V' + rc + 'H-' + rc2 + 'V-' + rc + 'H-' + rc + 'V-' + rc2 +\n                'H' + rc + 'V-' + rc + 'H' + rc2 + 'Z';\n        }\n    },\n    x: {\n        n: 4,\n        f: function(r) {\n            var rx = d3.round(r * 0.8 / Math.sqrt(2), 2),\n                ne = 'l' + rx + ',' + rx,\n                se = 'l' + rx + ',-' + rx,\n                sw = 'l-' + rx + ',-' + rx,\n                nw = 'l-' + rx + ',' + rx;\n            return 'M0,' + rx + ne + se + sw + se + sw + nw + sw + nw + ne + nw + ne + 'Z';\n        }\n    },\n    'triangle-up': {\n        n: 5,\n        f: function(r) {\n            var rt = d3.round(r * 2 / Math.sqrt(3), 2),\n                r2 = d3.round(r / 2, 2),\n                rs = d3.round(r, 2);\n            return 'M-' + rt + ',' + r2 + 'H' + rt + 'L0,-' + rs + 'Z';\n        }\n    },\n    'triangle-down': {\n        n: 6,\n        f: function(r) {\n            var rt = d3.round(r * 2 / Math.sqrt(3), 2),\n                r2 = d3.round(r / 2, 2),\n                rs = d3.round(r, 2);\n            return 'M-' + rt + ',-' + r2 + 'H' + rt + 'L0,' + rs + 'Z';\n        }\n    },\n    'triangle-left': {\n        n: 7,\n        f: function(r) {\n            var rt = d3.round(r * 2 / Math.sqrt(3), 2),\n                r2 = d3.round(r / 2, 2),\n                rs = d3.round(r, 2);\n            return 'M' + r2 + ',-' + rt + 'V' + rt + 'L-' + rs + ',0Z';\n        }\n    },\n    'triangle-right': {\n        n: 8,\n        f: function(r) {\n            var rt = d3.round(r * 2 / Math.sqrt(3), 2),\n                r2 = d3.round(r / 2, 2),\n                rs = d3.round(r, 2);\n            return 'M-' + r2 + ',-' + rt + 'V' + rt + 'L' + rs + ',0Z';\n        }\n    },\n    'triangle-ne': {\n        n: 9,\n        f: function(r) {\n            var r1 = d3.round(r * 0.6, 2),\n                r2 = d3.round(r * 1.2, 2);\n            return 'M-' + r2 + ',-' + r1 + 'H' + r1 + 'V' + r2 + 'Z';\n        }\n    },\n    'triangle-se': {\n        n: 10,\n        f: function(r) {\n            var r1 = d3.round(r * 0.6, 2),\n                r2 = d3.round(r * 1.2, 2);\n            return 'M' + r1 + ',-' + r2 + 'V' + r1 + 'H-' + r2 + 'Z';\n        }\n    },\n    'triangle-sw': {\n        n: 11,\n        f: function(r) {\n            var r1 = d3.round(r * 0.6, 2),\n                r2 = d3.round(r * 1.2, 2);\n            return 'M' + r2 + ',' + r1 + 'H-' + r1 + 'V-' + r2 + 'Z';\n        }\n    },\n    'triangle-nw': {\n        n: 12,\n        f: function(r) {\n            var r1 = d3.round(r * 0.6, 2),\n                r2 = d3.round(r * 1.2, 2);\n            return 'M-' + r1 + ',' + r2 + 'V-' + r1 + 'H' + r2 + 'Z';\n        }\n    },\n    pentagon: {\n        n: 13,\n        f: function(r) {\n            var x1 = d3.round(r * 0.951, 2),\n                x2 = d3.round(r * 0.588, 2),\n                y0 = d3.round(-r, 2),\n                y1 = d3.round(r * -0.309, 2),\n                y2 = d3.round(r * 0.809, 2);\n            return 'M' + x1 + ',' + y1 + 'L' + x2 + ',' + y2 + 'H-' + x2 +\n                'L-' + x1 + ',' + y1 + 'L0,' + y0 + 'Z';\n        }\n    },\n    hexagon: {\n        n: 14,\n        f: function(r) {\n            var y0 = d3.round(r, 2),\n                y1 = d3.round(r / 2, 2),\n                x = d3.round(r * Math.sqrt(3) / 2, 2);\n            return 'M' + x + ',-' + y1 + 'V' + y1 + 'L0,' + y0 +\n                'L-' + x + ',' + y1 + 'V-' + y1 + 'L0,-' + y0 + 'Z';\n        }\n    },\n    hexagon2: {\n        n: 15,\n        f: function(r) {\n            var x0 = d3.round(r, 2),\n                x1 = d3.round(r / 2, 2),\n                y = d3.round(r * Math.sqrt(3) / 2, 2);\n            return 'M-' + x1 + ',' + y + 'H' + x1 + 'L' + x0 +\n                ',0L' + x1 + ',-' + y + 'H-' + x1 + 'L-' + x0 + ',0Z';\n        }\n    },\n    octagon: {\n        n: 16,\n        f: function(r) {\n            var a = d3.round(r * 0.924, 2),\n                b = d3.round(r * 0.383, 2);\n            return 'M-' + b + ',-' + a + 'H' + b + 'L' + a + ',-' + b + 'V' + b +\n                'L' + b + ',' + a + 'H-' + b + 'L-' + a + ',' + b + 'V-' + b + 'Z';\n        }\n    },\n    star: {\n        n: 17,\n        f: function(r) {\n            var rs = r * 1.4,\n                x1 = d3.round(rs * 0.225, 2),\n                x2 = d3.round(rs * 0.951, 2),\n                x3 = d3.round(rs * 0.363, 2),\n                x4 = d3.round(rs * 0.588, 2),\n                y0 = d3.round(-rs, 2),\n                y1 = d3.round(rs * -0.309, 2),\n                y3 = d3.round(rs * 0.118, 2),\n                y4 = d3.round(rs * 0.809, 2),\n                y5 = d3.round(rs * 0.382, 2);\n            return 'M' + x1 + ',' + y1 + 'H' + x2 + 'L' + x3 + ',' + y3 +\n                'L' + x4 + ',' + y4 + 'L0,' + y5 + 'L-' + x4 + ',' + y4 +\n                'L-' + x3 + ',' + y3 + 'L-' + x2 + ',' + y1 + 'H-' + x1 +\n                'L0,' + y0 + 'Z';\n        }\n    },\n    hexagram: {\n        n: 18,\n        f: function(r) {\n            var y = d3.round(r * 0.66, 2),\n                x1 = d3.round(r * 0.38, 2),\n                x2 = d3.round(r * 0.76, 2);\n            return 'M-' + x2 + ',0l-' + x1 + ',-' + y + 'h' + x2 +\n                'l' + x1 + ',-' + y + 'l' + x1 + ',' + y + 'h' + x2 +\n                'l-' + x1 + ',' + y + 'l' + x1 + ',' + y + 'h-' + x2 +\n                'l-' + x1 + ',' + y + 'l-' + x1 + ',-' + y + 'h-' + x2 + 'Z';\n        }\n    },\n    'star-triangle-up': {\n        n: 19,\n        f: function(r) {\n            var x = d3.round(r * Math.sqrt(3) * 0.8, 2),\n                y1 = d3.round(r * 0.8, 2),\n                y2 = d3.round(r * 1.6, 2),\n                rc = d3.round(r * 4, 2),\n                aPart = 'A ' + rc + ',' + rc + ' 0 0 1 ';\n            return 'M-' + x + ',' + y1 + aPart + x + ',' + y1 +\n                aPart + '0,-' + y2 + aPart + '-' + x + ',' + y1 + 'Z';\n        }\n    },\n    'star-triangle-down': {\n        n: 20,\n        f: function(r) {\n            var x = d3.round(r * Math.sqrt(3) * 0.8, 2),\n                y1 = d3.round(r * 0.8, 2),\n                y2 = d3.round(r * 1.6, 2),\n                rc = d3.round(r * 4, 2),\n                aPart = 'A ' + rc + ',' + rc + ' 0 0 1 ';\n            return 'M' + x + ',-' + y1 + aPart + '-' + x + ',-' + y1 +\n                aPart + '0,' + y2 + aPart + x + ',-' + y1 + 'Z';\n        }\n    },\n    'star-square': {\n        n: 21,\n        f: function(r) {\n            var rp = d3.round(r * 1.1, 2),\n                rc = d3.round(r * 2, 2),\n                aPart = 'A ' + rc + ',' + rc + ' 0 0 1 ';\n            return 'M-' + rp + ',-' + rp + aPart + '-' + rp + ',' + rp +\n                aPart + rp + ',' + rp + aPart + rp + ',-' + rp +\n                aPart + '-' + rp + ',-' + rp + 'Z';\n        }\n    },\n    'star-diamond': {\n        n: 22,\n        f: function(r) {\n            var rp = d3.round(r * 1.4, 2),\n                rc = d3.round(r * 1.9, 2),\n                aPart = 'A ' + rc + ',' + rc + ' 0 0 1 ';\n            return 'M-' + rp + ',0' + aPart + '0,' + rp +\n                aPart + rp + ',0' + aPart + '0,-' + rp +\n                aPart + '-' + rp + ',0' + 'Z';\n        }\n    },\n    'diamond-tall': {\n        n: 23,\n        f: function(r) {\n            var x = d3.round(r * 0.7, 2),\n                y = d3.round(r * 1.4, 2);\n            return 'M0,' + y + 'L' + x + ',0L0,-' + y + 'L-' + x + ',0Z';\n        }\n    },\n    'diamond-wide': {\n        n: 24,\n        f: function(r) {\n            var x = d3.round(r * 1.4, 2),\n                y = d3.round(r * 0.7, 2);\n            return 'M0,' + y + 'L' + x + ',0L0,-' + y + 'L-' + x + ',0Z';\n        }\n    },\n    hourglass: {\n        n: 25,\n        f: function(r) {\n            var rs = d3.round(r, 2);\n            return 'M' + rs + ',' + rs + 'H-' + rs + 'L' + rs + ',-' + rs + 'H-' + rs + 'Z';\n        },\n        noDot: true\n    },\n    bowtie: {\n        n: 26,\n        f: function(r) {\n            var rs = d3.round(r, 2);\n            return 'M' + rs + ',' + rs + 'V-' + rs + 'L-' + rs + ',' + rs + 'V-' + rs + 'Z';\n        },\n        noDot: true\n    },\n    'circle-cross': {\n        n: 27,\n        f: function(r) {\n            var rs = d3.round(r, 2);\n            return 'M0,' + rs + 'V-' + rs + 'M' + rs + ',0H-' + rs +\n                'M' + rs + ',0A' + rs + ',' + rs + ' 0 1,1 0,-' + rs +\n                'A' + rs + ',' + rs + ' 0 0,1 ' + rs + ',0Z';\n        },\n        needLine: true,\n        noDot: true\n    },\n    'circle-x': {\n        n: 28,\n        f: function(r) {\n            var rs = d3.round(r, 2),\n                rc = d3.round(r / Math.sqrt(2), 2);\n            return 'M' + rc + ',' + rc + 'L-' + rc + ',-' + rc +\n                'M' + rc + ',-' + rc + 'L-' + rc + ',' + rc +\n                'M' + rs + ',0A' + rs + ',' + rs + ' 0 1,1 0,-' + rs +\n                'A' + rs + ',' + rs + ' 0 0,1 ' + rs + ',0Z';\n        },\n        needLine: true,\n        noDot: true\n    },\n    'square-cross': {\n        n: 29,\n        f: function(r) {\n            var rs = d3.round(r, 2);\n            return 'M0,' + rs + 'V-' + rs + 'M' + rs + ',0H-' + rs +\n                'M' + rs + ',' + rs + 'H-' + rs + 'V-' + rs + 'H' + rs + 'Z';\n        },\n        needLine: true,\n        noDot: true\n    },\n    'square-x': {\n        n: 30,\n        f: function(r) {\n            var rs = d3.round(r, 2);\n            return 'M' + rs + ',' + rs + 'L-' + rs + ',-' + rs +\n                'M' + rs + ',-' + rs + 'L-' + rs + ',' + rs +\n                'M' + rs + ',' + rs + 'H-' + rs + 'V-' + rs + 'H' + rs + 'Z';\n        },\n        needLine: true,\n        noDot: true\n    },\n    'diamond-cross': {\n        n: 31,\n        f: function(r) {\n            var rd = d3.round(r * 1.3, 2);\n            return 'M' + rd + ',0L0,' + rd + 'L-' + rd + ',0L0,-' + rd + 'Z' +\n                'M0,-' + rd + 'V' + rd + 'M-' + rd + ',0H' + rd;\n        },\n        needLine: true,\n        noDot: true\n    },\n    'diamond-x': {\n        n: 32,\n        f: function(r) {\n            var rd = d3.round(r * 1.3, 2),\n                r2 = d3.round(r * 0.65, 2);\n            return 'M' + rd + ',0L0,' + rd + 'L-' + rd + ',0L0,-' + rd + 'Z' +\n                'M-' + r2 + ',-' + r2 + 'L' + r2 + ',' + r2 +\n                'M-' + r2 + ',' + r2 + 'L' + r2 + ',-' + r2;\n        },\n        needLine: true,\n        noDot: true\n    },\n    'cross-thin': {\n        n: 33,\n        f: function(r) {\n            var rc = d3.round(r * 1.4, 2);\n            return 'M0,' + rc + 'V-' + rc + 'M' + rc + ',0H-' + rc;\n        },\n        needLine: true,\n        noDot: true,\n        noFill: true\n    },\n    'x-thin': {\n        n: 34,\n        f: function(r) {\n            var rx = d3.round(r, 2);\n            return 'M' + rx + ',' + rx + 'L-' + rx + ',-' + rx +\n                'M' + rx + ',-' + rx + 'L-' + rx + ',' + rx;\n        },\n        needLine: true,\n        noDot: true,\n        noFill: true\n    },\n    asterisk: {\n        n: 35,\n        f: function(r) {\n            var rc = d3.round(r * 1.2, 2);\n            var rs = d3.round(r * 0.85, 2);\n            return 'M0,' + rc + 'V-' + rc + 'M' + rc + ',0H-' + rc +\n                'M' + rs + ',' + rs + 'L-' + rs + ',-' + rs +\n                'M' + rs + ',-' + rs + 'L-' + rs + ',' + rs;\n        },\n        needLine: true,\n        noDot: true,\n        noFill: true\n    },\n    hash: {\n        n: 36,\n        f: function(r) {\n            var r1 = d3.round(r / 2, 2),\n                r2 = d3.round(r, 2);\n            return 'M' + r1 + ',' + r2 + 'V-' + r2 +\n                'm-' + r2 + ',0V' + r2 +\n                'M' + r2 + ',' + r1 + 'H-' + r2 +\n                'm0,-' + r2 + 'H' + r2;\n        },\n        needLine: true,\n        noFill: true\n    },\n    'y-up': {\n        n: 37,\n        f: function(r) {\n            var x = d3.round(r * 1.2, 2),\n                y0 = d3.round(r * 1.6, 2),\n                y1 = d3.round(r * 0.8, 2);\n            return 'M-' + x + ',' + y1 + 'L0,0M' + x + ',' + y1 + 'L0,0M0,-' + y0 + 'L0,0';\n        },\n        needLine: true,\n        noDot: true,\n        noFill: true\n    },\n    'y-down': {\n        n: 38,\n        f: function(r) {\n            var x = d3.round(r * 1.2, 2),\n                y0 = d3.round(r * 1.6, 2),\n                y1 = d3.round(r * 0.8, 2);\n            return 'M-' + x + ',-' + y1 + 'L0,0M' + x + ',-' + y1 + 'L0,0M0,' + y0 + 'L0,0';\n        },\n        needLine: true,\n        noDot: true,\n        noFill: true\n    },\n    'y-left': {\n        n: 39,\n        f: function(r) {\n            var y = d3.round(r * 1.2, 2),\n                x0 = d3.round(r * 1.6, 2),\n                x1 = d3.round(r * 0.8, 2);\n            return 'M' + x1 + ',' + y + 'L0,0M' + x1 + ',-' + y + 'L0,0M-' + x0 + ',0L0,0';\n        },\n        needLine: true,\n        noDot: true,\n        noFill: true\n    },\n    'y-right': {\n        n: 40,\n        f: function(r) {\n            var y = d3.round(r * 1.2, 2),\n                x0 = d3.round(r * 1.6, 2),\n                x1 = d3.round(r * 0.8, 2);\n            return 'M-' + x1 + ',' + y + 'L0,0M-' + x1 + ',-' + y + 'L0,0M' + x0 + ',0L0,0';\n        },\n        needLine: true,\n        noDot: true,\n        noFill: true\n    },\n    'line-ew': {\n        n: 41,\n        f: function(r) {\n            var rc = d3.round(r * 1.4, 2);\n            return 'M' + rc + ',0H-' + rc;\n        },\n        needLine: true,\n        noDot: true,\n        noFill: true\n    },\n    'line-ns': {\n        n: 42,\n        f: function(r) {\n            var rc = d3.round(r * 1.4, 2);\n            return 'M0,' + rc + 'V-' + rc;\n        },\n        needLine: true,\n        noDot: true,\n        noFill: true\n    },\n    'line-ne': {\n        n: 43,\n        f: function(r) {\n            var rx = d3.round(r, 2);\n            return 'M' + rx + ',-' + rx + 'L-' + rx + ',' + rx;\n        },\n        needLine: true,\n        noDot: true,\n        noFill: true\n    },\n    'line-nw': {\n        n: 44,\n        f: function(r) {\n            var rx = d3.round(r, 2);\n            return 'M' + rx + ',' + rx + 'L-' + rx + ',-' + rx;\n        },\n        needLine: true,\n        noDot: true,\n        noFill: true\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/drawing/symbol_defs.js\n// module id = 160\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar axesAttrs = require('../../cartesian/layout_attributes');\nvar extendFlat = require('../../../lib/extend').extendFlat;\nvar overrideAll = require('../../../plot_api/edit_types').overrideAll;\n\nvar domainAttr = extendFlat({}, axesAttrs.domain, {\n    description: [\n        'Polar chart subplots are not supported yet.',\n        'This key has currently no effect.'\n    ].join(' ')\n});\n\nfunction mergeAttrs(axisName, nonCommonAttrs) {\n    var commonAttrs = {\n        showline: {\n            valType: 'boolean',\n            role: 'style',\n            description: [\n                'Determines whether or not the line bounding this',\n                axisName, 'axis',\n                'will be shown on the figure.'\n            ].join(' ')\n        },\n        showticklabels: {\n            valType: 'boolean',\n            role: 'style',\n            description: [\n                'Determines whether or not the',\n                axisName, 'axis ticks',\n                'will feature tick labels.'\n            ].join(' ')\n        },\n        tickorientation: {\n            valType: 'enumerated',\n            values: ['horizontal', 'vertical'],\n            role: 'style',\n            description: [\n                'Sets the orientation (from the paper perspective)',\n                'of the', axisName, 'axis tick labels.'\n            ].join(' ')\n        },\n        ticklen: {\n            valType: 'number',\n            min: 0,\n            role: 'style',\n            description: [\n                'Sets the length of the tick lines on this', axisName, 'axis.'\n            ].join(' ')\n        },\n        tickcolor: {\n            valType: 'color',\n            role: 'style',\n            description: [\n                'Sets the color of the tick lines on this', axisName, 'axis.'\n            ].join(' ')\n        },\n        ticksuffix: {\n            valType: 'string',\n            role: 'style',\n            description: [\n                'Sets the length of the tick lines on this', axisName, 'axis.'\n            ].join(' ')\n        },\n        endpadding: {\n            valType: 'number',\n            role: 'style'\n        },\n        visible: {\n            valType: 'boolean',\n            role: 'info',\n            description: [\n                'Determines whether or not this axis will be visible.'\n            ].join(' ')\n        }\n    };\n\n    return extendFlat({}, nonCommonAttrs, commonAttrs);\n}\n\nmodule.exports = overrideAll({\n    radialaxis: mergeAttrs('radial', {\n        range: {\n            valType: 'info_array',\n            role: 'info',\n            items: [\n                { valType: 'number' },\n                { valType: 'number' }\n            ],\n            description: [\n                'Defines the start and end point of this radial axis.'\n            ].join(' ')\n        },\n        domain: domainAttr,\n        orientation: {\n            valType: 'number',\n            role: 'style',\n            description: [\n                'Sets the orientation (an angle with respect to the origin)',\n                'of the radial axis.'\n            ].join(' ')\n        }\n    }),\n\n    angularaxis: mergeAttrs('angular', {\n        range: {\n            valType: 'info_array',\n            role: 'info',\n            items: [\n                { valType: 'number', dflt: 0 },\n                { valType: 'number', dflt: 360 }\n            ],\n            description: [\n                'Defines the start and end point of this angular axis.'\n            ].join(' ')\n        },\n        domain: domainAttr\n    }),\n\n    // attributes that appear at layout root\n    layout: {\n        direction: {\n            valType: 'enumerated',\n            values: ['clockwise', 'counterclockwise'],\n            role: 'info',\n            description: [\n                'For polar plots only.',\n                'Sets the direction corresponding to positive angles.'\n            ].join(' ')\n        },\n        orientation: {\n            valType: 'angle',\n            role: 'info',\n            description: [\n                'For polar plots only.',\n                'Rotates the entire polar by the given angle.'\n            ].join(' ')\n        }\n    }\n}, 'plot', 'nested');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/polar/legacy/axis_attributes.js\n// module id = 161\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Registry = require('../../registry');\nvar Axes = require('../../plots/cartesian/axes');\n\nvar makeComputeError = require('./compute_error');\n\n\nmodule.exports = function calc(gd) {\n    var calcdata = gd.calcdata;\n\n    for(var i = 0; i < calcdata.length; i++) {\n        var calcTrace = calcdata[i],\n            trace = calcTrace[0].trace;\n\n        if(!Registry.traceIs(trace, 'errorBarsOK')) continue;\n\n        var xa = Axes.getFromId(gd, trace.xaxis),\n            ya = Axes.getFromId(gd, trace.yaxis);\n\n        calcOneAxis(calcTrace, trace, xa, 'x');\n        calcOneAxis(calcTrace, trace, ya, 'y');\n    }\n};\n\nfunction calcOneAxis(calcTrace, trace, axis, coord) {\n    var opts = trace['error_' + coord] || {},\n        isVisible = (opts.visible && ['linear', 'log'].indexOf(axis.type) !== -1),\n        vals = [];\n\n    if(!isVisible) return;\n\n    var computeError = makeComputeError(opts);\n\n    for(var i = 0; i < calcTrace.length; i++) {\n        var calcPt = calcTrace[i],\n            calcCoord = calcPt[coord];\n\n        if(!isNumeric(axis.c2l(calcCoord))) continue;\n\n        var errors = computeError(calcCoord, i);\n        if(isNumeric(errors[0]) && isNumeric(errors[1])) {\n            var shoe = calcPt[coord + 's'] = calcCoord - errors[0],\n                hat = calcPt[coord + 'h'] = calcCoord + errors[1];\n            vals.push(shoe, hat);\n        }\n    }\n\n    Axes.expand(axis, vals, {padded: true});\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/errorbars/calc.js\n// module id = 162\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\n/**\n * Error bar computing function generator\n *\n * N.B. The generated function does not clean the dataPt entries. Non-numeric\n * entries result in undefined error magnitudes.\n *\n * @param {object} opts error bar attributes\n *\n * @return {function} :\n *      @param {numeric} dataPt data point from where to compute the error magnitude\n *      @param {number} index index of dataPt in its corresponding data array\n *      @return {array}\n *        - error[0] : error magnitude in the negative direction\n *        - error[1] : \" \" \" \" positive \"\n */\nmodule.exports = function makeComputeError(opts) {\n    var type = opts.type,\n        symmetric = opts.symmetric;\n\n    if(type === 'data') {\n        var array = opts.array,\n            arrayminus = opts.arrayminus;\n\n        if(symmetric || arrayminus === undefined) {\n            return function computeError(dataPt, index) {\n                var val = +(array[index]);\n                return [val, val];\n            };\n        }\n        else {\n            return function computeError(dataPt, index) {\n                return [+arrayminus[index], +array[index]];\n            };\n        }\n    }\n    else {\n        var computeErrorValue = makeComputeErrorValue(type, opts.value),\n            computeErrorValueMinus = makeComputeErrorValue(type, opts.valueminus);\n\n        if(symmetric || opts.valueminus === undefined) {\n            return function computeError(dataPt) {\n                var val = computeErrorValue(dataPt);\n                return [val, val];\n            };\n        }\n        else {\n            return function computeError(dataPt) {\n                return [\n                    computeErrorValueMinus(dataPt),\n                    computeErrorValue(dataPt)\n                ];\n            };\n        }\n    }\n};\n\n/**\n * Compute error bar magnitude (for all types except data)\n *\n * @param {string} type error bar type\n * @param {numeric} value error bar value\n *\n * @return {function} :\n *      @param {numeric} dataPt\n */\nfunction makeComputeErrorValue(type, value) {\n    if(type === 'percent') {\n        return function(dataPt) {\n            return Math.abs(dataPt * value / 100);\n        };\n    }\n    if(type === 'constant') {\n        return function() {\n            return Math.abs(value);\n        };\n    }\n    if(type === 'sqrt') {\n        return function(dataPt) {\n            return Math.sqrt(Math.abs(dataPt));\n        };\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/errorbars/compute_error.js\n// module id = 163\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\n\nvar Drawing = require('../drawing');\nvar subTypes = require('../../traces/scatter/subtypes');\n\nmodule.exports = function plot(traces, plotinfo, transitionOpts) {\n    var isNew;\n\n    var xa = plotinfo.xaxis;\n    var ya = plotinfo.yaxis;\n\n    var hasAnimation = transitionOpts && transitionOpts.duration > 0;\n\n    traces.each(function(d) {\n        var trace = d[0].trace,\n            // || {} is in case the trace (specifically scatterternary)\n            // doesn't support error bars at all, but does go through\n            // the scatter.plot mechanics, which calls ErrorBars.plot\n            // internally\n            xObj = trace.error_x || {},\n            yObj = trace.error_y || {};\n\n        var keyFunc;\n\n        if(trace.ids) {\n            keyFunc = function(d) {return d.id;};\n        }\n\n        var sparse = (\n            subTypes.hasMarkers(trace) &&\n            trace.marker.maxdisplayed > 0\n        );\n\n        if(!yObj.visible && !xObj.visible) d = [];\n\n        var errorbars = d3.select(this).selectAll('g.errorbar')\n            .data(d, keyFunc);\n\n        errorbars.exit().remove();\n\n        if(!d.length) return;\n\n        if(!xObj.visible) errorbars.selectAll('path.xerror').remove();\n        if(!yObj.visible) errorbars.selectAll('path.yerror').remove();\n\n        errorbars.style('opacity', 1);\n\n        var enter = errorbars.enter().append('g')\n            .classed('errorbar', true);\n\n        if(hasAnimation) {\n            enter.style('opacity', 0).transition()\n                .duration(transitionOpts.duration)\n                .style('opacity', 1);\n        }\n\n        Drawing.setClipUrl(errorbars, plotinfo.layerClipId);\n\n        errorbars.each(function(d) {\n            var errorbar = d3.select(this);\n            var coords = errorCoords(d, xa, ya);\n\n            if(sparse && !d.vis) return;\n\n            var path;\n\n            if(yObj.visible && isNumeric(coords.x) &&\n                    isNumeric(coords.yh) &&\n                    isNumeric(coords.ys)) {\n                var yw = yObj.width;\n\n                path = 'M' + (coords.x - yw) + ',' +\n                    coords.yh + 'h' + (2 * yw) + // hat\n                    'm-' + yw + ',0V' + coords.ys; // bar\n\n\n                if(!coords.noYS) path += 'm-' + yw + ',0h' + (2 * yw); // shoe\n\n                var yerror = errorbar.select('path.yerror');\n\n                isNew = !yerror.size();\n\n                if(isNew) {\n                    yerror = errorbar.append('path')\n                        .style('vector-effect', 'non-scaling-stroke')\n                        .classed('yerror', true);\n                } else if(hasAnimation) {\n                    yerror = yerror\n                        .transition()\n                            .duration(transitionOpts.duration)\n                            .ease(transitionOpts.easing);\n                }\n\n                yerror.attr('d', path);\n            }\n\n            if(xObj.visible && isNumeric(coords.y) &&\n                    isNumeric(coords.xh) &&\n                    isNumeric(coords.xs)) {\n                var xw = (xObj.copy_ystyle ? yObj : xObj).width;\n\n                path = 'M' + coords.xh + ',' +\n                    (coords.y - xw) + 'v' + (2 * xw) + // hat\n                    'm0,-' + xw + 'H' + coords.xs; // bar\n\n                if(!coords.noXS) path += 'm0,-' + xw + 'v' + (2 * xw); // shoe\n\n                var xerror = errorbar.select('path.xerror');\n\n                isNew = !xerror.size();\n\n                if(isNew) {\n                    xerror = errorbar.append('path')\n                        .style('vector-effect', 'non-scaling-stroke')\n                        .classed('xerror', true);\n                } else if(hasAnimation) {\n                    xerror = xerror\n                        .transition()\n                            .duration(transitionOpts.duration)\n                            .ease(transitionOpts.easing);\n                }\n\n                xerror.attr('d', path);\n            }\n        });\n    });\n};\n\n// compute the coordinates of the error-bar objects\nfunction errorCoords(d, xa, ya) {\n    var out = {\n        x: xa.c2p(d.x),\n        y: ya.c2p(d.y)\n    };\n\n    // calculate the error bar size and hat and shoe locations\n    if(d.yh !== undefined) {\n        out.yh = ya.c2p(d.yh);\n        out.ys = ya.c2p(d.ys);\n\n        // if the shoes go off-scale (ie log scale, error bars past zero)\n        // clip the bar and hide the shoes\n        if(!isNumeric(out.ys)) {\n            out.noYS = true;\n            out.ys = ya.c2p(d.ys, true);\n        }\n    }\n\n    if(d.xh !== undefined) {\n        out.xh = xa.c2p(d.xh);\n        out.xs = xa.c2p(d.xs);\n\n        if(!isNumeric(out.xs)) {\n            out.noXS = true;\n            out.xs = xa.c2p(d.xs, true);\n        }\n    }\n\n    return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/errorbars/plot.js\n// module id = 164\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Color = require('../color');\n\n\nmodule.exports = function style(traces) {\n    traces.each(function(d) {\n        var trace = d[0].trace,\n            yObj = trace.error_y || {},\n            xObj = trace.error_x || {};\n\n        var s = d3.select(this);\n\n        s.selectAll('path.yerror')\n            .style('stroke-width', yObj.thickness + 'px')\n            .call(Color.stroke, yObj.color);\n\n        if(xObj.copy_ystyle) xObj = yObj;\n\n        s.selectAll('path.xerror')\n            .style('stroke-width', xObj.thickness + 'px')\n            .call(Color.stroke, xObj.color);\n    });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/errorbars/style.js\n// module id = 165\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Plotly = require('../plotly');\nvar Lib = require('../lib');\n\n/*\n * Create or update an observer. This function is designed to be\n * idempotent so that it can be called over and over as the component\n * updates, and will attach and detach listeners as needed.\n *\n * @param {optional object} container\n *      An object on which the observer is stored. This is the mechanism\n *      by which it is idempotent. If it already exists, another won't be\n *      added. Each time it's called, the value lookup table is updated.\n * @param {array} commandList\n *      An array of commands, following either `buttons` of `updatemenus`\n *      or `steps` of `sliders`.\n * @param {function} onchange\n *      A listener called when the value is changed. Receives data object\n *      with information about the new state.\n */\nexports.manageCommandObserver = function(gd, container, commandList, onchange) {\n    var ret = {};\n    var enabled = true;\n\n    if(container && container._commandObserver) {\n        ret = container._commandObserver;\n    }\n\n    if(!ret.cache) {\n        ret.cache = {};\n    }\n\n    // Either create or just recompute this:\n    ret.lookupTable = {};\n\n    var binding = exports.hasSimpleAPICommandBindings(gd, commandList, ret.lookupTable);\n\n    if(container && container._commandObserver) {\n        if(!binding) {\n            // If container exists and there are no longer any bindings,\n            // remove existing:\n            if(container._commandObserver.remove) {\n                container._commandObserver.remove();\n                container._commandObserver = null;\n                return ret;\n            }\n        } else {\n            // If container exists and there *are* bindings, then the lookup\n            // table should have been updated and check is already attached,\n            // so there's nothing to be done:\n            return ret;\n\n\n        }\n    }\n\n    // Determine whether there's anything to do for this binding:\n\n    if(binding) {\n        // Build the cache:\n        bindingValueHasChanged(gd, binding, ret.cache);\n\n        ret.check = function check() {\n            if(!enabled) return;\n\n            var update = bindingValueHasChanged(gd, binding, ret.cache);\n\n            if(update.changed && onchange) {\n                // Disable checks for the duration of this command in order to avoid\n                // infinite loops:\n                if(ret.lookupTable[update.value] !== undefined) {\n                    ret.disable();\n                    Promise.resolve(onchange({\n                        value: update.value,\n                        type: binding.type,\n                        prop: binding.prop,\n                        traces: binding.traces,\n                        index: ret.lookupTable[update.value]\n                    })).then(ret.enable, ret.enable);\n                }\n            }\n\n            return update.changed;\n        };\n\n        var checkEvents = [\n            'plotly_relayout',\n            'plotly_redraw',\n            'plotly_restyle',\n            'plotly_update',\n            'plotly_animatingframe',\n            'plotly_afterplot'\n        ];\n\n        for(var i = 0; i < checkEvents.length; i++) {\n            gd._internalOn(checkEvents[i], ret.check);\n        }\n\n        ret.remove = function() {\n            for(var i = 0; i < checkEvents.length; i++) {\n                gd._removeInternalListener(checkEvents[i], ret.check);\n            }\n        };\n    } else {\n        // TODO: It'd be really neat to actually give a *reason* for this, but at least a warning\n        // is a start\n        Lib.log('Unable to automatically bind plot updates to API command');\n\n        ret.lookupTable = {};\n        ret.remove = function() {};\n    }\n\n    ret.disable = function disable() {\n        enabled = false;\n    };\n\n    ret.enable = function enable() {\n        enabled = true;\n    };\n\n    if(container) {\n        container._commandObserver = ret;\n    }\n\n    return ret;\n};\n\n/*\n * This function checks to see if an array of objects containing\n * method and args properties is compatible with automatic two-way\n * binding. The criteria right now are that\n *\n *   1. multiple traces may be affected\n *   2. only one property may be affected\n *   3. the same property must be affected by all commands\n */\nexports.hasSimpleAPICommandBindings = function(gd, commandList, bindingsByValue) {\n    var i;\n    var n = commandList.length;\n\n    var refBinding;\n\n    for(i = 0; i < n; i++) {\n        var binding;\n        var command = commandList[i];\n        var method = command.method;\n        var args = command.args;\n\n        if(!Array.isArray(args)) args = [];\n\n        // If any command has no method, refuse to bind:\n        if(!method) {\n            return false;\n        }\n        var bindings = exports.computeAPICommandBindings(gd, method, args);\n\n        // Right now, handle one and *only* one property being set:\n        if(bindings.length !== 1) {\n            return false;\n        }\n\n        if(!refBinding) {\n            refBinding = bindings[0];\n            if(Array.isArray(refBinding.traces)) {\n                refBinding.traces.sort();\n            }\n        } else {\n            binding = bindings[0];\n            if(binding.type !== refBinding.type) {\n                return false;\n            }\n            if(binding.prop !== refBinding.prop) {\n                return false;\n            }\n            if(Array.isArray(refBinding.traces)) {\n                if(Array.isArray(binding.traces)) {\n                    binding.traces.sort();\n                    for(var j = 0; j < refBinding.traces.length; j++) {\n                        if(refBinding.traces[j] !== binding.traces[j]) {\n                            return false;\n                        }\n                    }\n                } else {\n                    return false;\n                }\n            } else {\n                if(binding.prop !== refBinding.prop) {\n                    return false;\n                }\n            }\n        }\n\n        binding = bindings[0];\n        var value = binding.value;\n        if(Array.isArray(value)) {\n            if(value.length === 1) {\n                value = value[0];\n            } else {\n                return false;\n            }\n        }\n        if(bindingsByValue) {\n            bindingsByValue[value] = i;\n        }\n    }\n\n    return refBinding;\n};\n\nfunction bindingValueHasChanged(gd, binding, cache) {\n    var container, value, obj;\n    var changed = false;\n\n    if(binding.type === 'data') {\n        // If it's data, we need to get a trace. Based on the limited scope\n        // of what we cover, we can just take the first trace from the list,\n        // or otherwise just the first trace:\n        container = gd._fullData[binding.traces !== null ? binding.traces[0] : 0];\n    } else if(binding.type === 'layout') {\n        container = gd._fullLayout;\n    } else {\n        return false;\n    }\n\n    value = Lib.nestedProperty(container, binding.prop).get();\n\n    obj = cache[binding.type] = cache[binding.type] || {};\n\n    if(obj.hasOwnProperty(binding.prop)) {\n        if(obj[binding.prop] !== value) {\n            changed = true;\n        }\n    }\n\n    obj[binding.prop] = value;\n\n    return {\n        changed: changed,\n        value: value\n    };\n}\n\n/*\n * Execute an API command. There's really not much to this; it just provides\n * a common hook so that implementations don't need to be synchronized across\n * multiple components with the ability to invoke API commands.\n *\n * @param {string} method\n *      The name of the plotly command to execute. Must be one of 'animate',\n *      'restyle', 'relayout', 'update'.\n * @param {array} args\n *      A list of arguments passed to the API command\n */\nexports.executeAPICommand = function(gd, method, args) {\n    if(method === 'skip') return Promise.resolve();\n\n    var apiMethod = Plotly[method];\n\n    var allArgs = [gd];\n\n    if(!Array.isArray(args)) args = [];\n\n    for(var i = 0; i < args.length; i++) {\n        allArgs.push(args[i]);\n    }\n\n    return apiMethod.apply(null, allArgs).catch(function(err) {\n        Lib.warn('API call to Plotly.' + method + ' rejected.', err);\n        return Promise.reject(err);\n    });\n};\n\nexports.computeAPICommandBindings = function(gd, method, args) {\n    var bindings;\n\n    if(!Array.isArray(args)) args = [];\n\n    switch(method) {\n        case 'restyle':\n            bindings = computeDataBindings(gd, args);\n            break;\n        case 'relayout':\n            bindings = computeLayoutBindings(gd, args);\n            break;\n        case 'update':\n            bindings = computeDataBindings(gd, [args[0], args[2]])\n                .concat(computeLayoutBindings(gd, [args[1]]));\n            break;\n        case 'animate':\n            bindings = computeAnimateBindings(gd, args);\n            break;\n        default:\n            // This is the case where intelligent logic about what affects\n            // this command is not implemented. It causes no ill effects.\n            // For example, addFrames simply won't bind to a control component.\n            bindings = [];\n    }\n    return bindings;\n};\n\nfunction computeAnimateBindings(gd, args) {\n    // We'll assume that the only relevant modification an animation\n    // makes that's meaningfully tracked is the frame:\n    if(Array.isArray(args[0]) && args[0].length === 1 && ['string', 'number'].indexOf(typeof args[0][0]) !== -1) {\n        return [{type: 'layout', prop: '_currentFrame', value: args[0][0].toString()}];\n    } else {\n        return [];\n    }\n}\n\nfunction computeLayoutBindings(gd, args) {\n    var bindings = [];\n\n    var astr = args[0];\n    var aobj = {};\n    if(typeof astr === 'string') {\n        aobj[astr] = args[1];\n    } else if(Lib.isPlainObject(astr)) {\n        aobj = astr;\n    } else {\n        return bindings;\n    }\n\n    crawl(aobj, function(path, attrName, attr) {\n        bindings.push({type: 'layout', prop: path, value: attr});\n    }, '', 0);\n\n    return bindings;\n}\n\nfunction computeDataBindings(gd, args) {\n    var traces, astr, val, aobj;\n    var bindings = [];\n\n    // Logic copied from Plotly.restyle:\n    astr = args[0];\n    val = args[1];\n    traces = args[2];\n    aobj = {};\n    if(typeof astr === 'string') {\n        aobj[astr] = val;\n    } else if(Lib.isPlainObject(astr)) {\n        // the 3-arg form\n        aobj = astr;\n\n        if(traces === undefined) {\n            traces = val;\n        }\n    } else {\n        return bindings;\n    }\n\n    if(traces === undefined) {\n        // Explicitly assign this to null instead of undefined:\n        traces = null;\n    }\n\n    crawl(aobj, function(path, attrName, attr) {\n        var thisTraces;\n        if(Array.isArray(attr)) {\n            var nAttr = Math.min(attr.length, gd.data.length);\n            if(traces) {\n                nAttr = Math.min(nAttr, traces.length);\n            }\n            thisTraces = [];\n            for(var j = 0; j < nAttr; j++) {\n                thisTraces[j] = traces ? traces[j] : j;\n            }\n        } else {\n            thisTraces = traces ? traces.slice(0) : null;\n        }\n\n        // Convert [7] to just 7 when traces is null:\n        if(thisTraces === null) {\n            if(Array.isArray(attr)) {\n                attr = attr[0];\n            }\n        } else if(Array.isArray(thisTraces)) {\n            if(!Array.isArray(attr)) {\n                var tmp = attr;\n                attr = [];\n                for(var i = 0; i < thisTraces.length; i++) {\n                    attr[i] = tmp;\n                }\n            }\n            attr.length = Math.min(thisTraces.length, attr.length);\n        }\n\n        bindings.push({\n            type: 'data',\n            prop: path,\n            traces: thisTraces,\n            value: attr\n        });\n    }, '', 0);\n\n    return bindings;\n}\n\nfunction crawl(attrs, callback, path, depth) {\n    Object.keys(attrs).forEach(function(attrName) {\n        var attr = attrs[attrName];\n\n        if(attrName[0] === '_') return;\n\n        var thisPath = path + (depth > 0 ? '.' : '') + attrName;\n\n        if(Lib.isPlainObject(attr)) {\n            crawl(attr, callback, thisPath, depth + 1);\n        } else {\n            // Only execute the callback on leaf nodes:\n            callback(thisPath, attrName, attr);\n        }\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/command.js\n// module id = 166\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar axisIds = require('../../plots/cartesian/axis_ids');\nvar scatterSubTypes = require('../../traces/scatter/subtypes');\nvar Registry = require('../../registry');\n\nvar createModeBar = require('./modebar');\nvar modeBarButtons = require('./buttons');\n\n/**\n * ModeBar wrapper around 'create' and 'update',\n * chooses buttons to pass to ModeBar constructor based on\n * plot type and plot config.\n *\n * @param {object} gd main plot object\n *\n */\nmodule.exports = function manageModeBar(gd) {\n    var fullLayout = gd._fullLayout,\n        context = gd._context,\n        modeBar = fullLayout._modeBar;\n\n    if(!context.displayModeBar) {\n        if(modeBar) {\n            modeBar.destroy();\n            delete fullLayout._modeBar;\n        }\n        return;\n    }\n\n    if(!Array.isArray(context.modeBarButtonsToRemove)) {\n        throw new Error([\n            '*modeBarButtonsToRemove* configuration options',\n            'must be an array.'\n        ].join(' '));\n    }\n\n    if(!Array.isArray(context.modeBarButtonsToAdd)) {\n        throw new Error([\n            '*modeBarButtonsToAdd* configuration options',\n            'must be an array.'\n        ].join(' '));\n    }\n\n    var customButtons = context.modeBarButtons;\n    var buttonGroups;\n\n    if(Array.isArray(customButtons) && customButtons.length) {\n        buttonGroups = fillCustomButton(customButtons);\n    }\n    else {\n        buttonGroups = getButtonGroups(\n            gd,\n            context.modeBarButtonsToRemove,\n            context.modeBarButtonsToAdd\n        );\n    }\n\n    if(modeBar) modeBar.update(gd, buttonGroups);\n    else fullLayout._modeBar = createModeBar(gd, buttonGroups);\n};\n\n// logic behind which buttons are displayed by default\nfunction getButtonGroups(gd, buttonsToRemove, buttonsToAdd) {\n    var fullLayout = gd._fullLayout;\n    var fullData = gd._fullData;\n\n    var hasCartesian = fullLayout._has('cartesian');\n    var hasGL3D = fullLayout._has('gl3d');\n    var hasGeo = fullLayout._has('geo');\n    var hasPie = fullLayout._has('pie');\n    var hasGL2D = fullLayout._has('gl2d');\n    var hasTernary = fullLayout._has('ternary');\n    var hasMapbox = fullLayout._has('mapbox');\n    var hasPolar = fullLayout._has('polar');\n\n    var groups = [];\n\n    function addGroup(newGroup) {\n        var out = [];\n\n        for(var i = 0; i < newGroup.length; i++) {\n            var button = newGroup[i];\n            if(buttonsToRemove.indexOf(button) !== -1) continue;\n            out.push(modeBarButtons[button]);\n        }\n\n        groups.push(out);\n    }\n\n    // buttons common to all plot types\n    addGroup(['toImage', 'sendDataToCloud']);\n\n    // graphs with more than one plot types get 'union buttons'\n    // which reset the view or toggle hover labels across all subplots.\n    if((hasCartesian || hasGL2D || hasPie || hasTernary) + hasGeo + hasGL3D > 1) {\n        addGroup(['resetViews', 'toggleHover']);\n        return appendButtonsToGroups(groups, buttonsToAdd);\n    }\n\n    if(hasGL3D) {\n        addGroup(['zoom3d', 'pan3d', 'orbitRotation', 'tableRotation']);\n        addGroup(['resetCameraDefault3d', 'resetCameraLastSave3d']);\n        addGroup(['hoverClosest3d']);\n    }\n\n    var allAxesFixed = areAllAxesFixed(fullLayout),\n        dragModeGroup = [];\n\n    if(((hasCartesian || hasGL2D) && !allAxesFixed) || hasTernary) {\n        dragModeGroup = ['zoom2d', 'pan2d'];\n    }\n    if(hasMapbox || hasGeo) {\n        dragModeGroup = ['pan2d'];\n    }\n    if(hasPolar) {\n        dragModeGroup = ['zoom2d'];\n    }\n    if(isSelectable(fullData)) {\n        dragModeGroup.push('select2d');\n        dragModeGroup.push('lasso2d');\n    }\n    if(dragModeGroup.length) addGroup(dragModeGroup);\n\n    if((hasCartesian || hasGL2D) && !allAxesFixed && !hasTernary) {\n        addGroup(['zoomIn2d', 'zoomOut2d', 'autoScale2d', 'resetScale2d']);\n    }\n\n    if(hasCartesian && hasPie) {\n        addGroup(['toggleHover']);\n    } else if(hasGL2D) {\n        addGroup(['hoverClosestGl2d']);\n    } else if(hasCartesian) {\n        addGroup(['toggleSpikelines', 'hoverClosestCartesian', 'hoverCompareCartesian']);\n    } else if(hasPie) {\n        addGroup(['hoverClosestPie']);\n    } else if(hasMapbox) {\n        addGroup(['resetViewMapbox', 'toggleHover']);\n    } else if(hasGeo) {\n        addGroup(['zoomInGeo', 'zoomOutGeo', 'resetGeo']);\n        addGroup(['hoverClosestGeo']);\n    }\n\n    return appendButtonsToGroups(groups, buttonsToAdd);\n}\n\nfunction areAllAxesFixed(fullLayout) {\n    var axList = axisIds.list({_fullLayout: fullLayout}, null, true);\n\n    for(var i = 0; i < axList.length; i++) {\n        if(!axList[i].fixedrange) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n// look for traces that support selection\n// to be updated as we add more selectPoints handlers\nfunction isSelectable(fullData) {\n    var selectable = false;\n\n    for(var i = 0; i < fullData.length; i++) {\n        if(selectable) break;\n\n        var trace = fullData[i];\n\n        if(!trace._module || !trace._module.selectPoints) continue;\n\n        if(Registry.traceIs(trace, 'scatter-like')) {\n            if(scatterSubTypes.hasMarkers(trace) || scatterSubTypes.hasText(trace)) {\n                selectable = true;\n            }\n        } else if(Registry.traceIs(trace, 'box-violin')) {\n            if(trace.boxpoints === 'all' || trace.points === 'all') {\n                selectable = true;\n            }\n        }\n        // assume that in general if the trace module has selectPoints,\n        // then it's selectable. Scatter is an exception to this because it must\n        // have markers or text, not just be a scatter type.\n        else selectable = true;\n    }\n\n    return selectable;\n}\n\nfunction appendButtonsToGroups(groups, buttons) {\n    if(buttons.length) {\n        if(Array.isArray(buttons[0])) {\n            for(var i = 0; i < buttons.length; i++) {\n                groups.push(buttons[i]);\n            }\n        }\n        else groups.push(buttons);\n    }\n\n    return groups;\n}\n\n// fill in custom buttons referring to default mode bar buttons\nfunction fillCustomButton(customButtons) {\n    for(var i = 0; i < customButtons.length; i++) {\n        var buttonGroup = customButtons[i];\n\n        for(var j = 0; j < buttonGroup.length; j++) {\n            var button = buttonGroup[j];\n\n            if(typeof button === 'string') {\n                if(modeBarButtons[button] !== undefined) {\n                    customButtons[i][j] = modeBarButtons[button];\n                }\n                else {\n                    throw new Error([\n                        '*modeBarButtons* configuration options',\n                        'invalid button name'\n                    ].join(' '));\n                }\n            }\n        }\n    }\n\n    return customButtons;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/modebar/manage.js\n// module id = 167\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Lib = require('../../lib');\nvar Icons = require('../../../build/ploticon');\n\n\n/**\n * UI controller for interactive plots\n * @Class\n * @Param {object} opts\n * @Param {object} opts.buttons    nested arrays of grouped buttons config objects\n * @Param {object} opts.container  container div to append modeBar\n * @Param {object} opts.graphInfo  primary plot object containing data and layout\n */\nfunction ModeBar(opts) {\n    this.container = opts.container;\n    this.element = document.createElement('div');\n\n    this.update(opts.graphInfo, opts.buttons);\n\n    this.container.appendChild(this.element);\n}\n\nvar proto = ModeBar.prototype;\n\n/**\n * Update modeBar (buttons and logo)\n *\n * @param {object} graphInfo  primary plot object containing data and layout\n * @param {array of arrays} buttons nested arrays of grouped buttons to initialize\n *\n */\nproto.update = function(graphInfo, buttons) {\n    this.graphInfo = graphInfo;\n\n    var context = this.graphInfo._context;\n\n    if(context.displayModeBar === 'hover') {\n        this.element.className = 'modebar modebar--hover';\n    }\n    else this.element.className = 'modebar';\n\n    // if buttons or logo have changed, redraw modebar interior\n    var needsNewButtons = !this.hasButtons(buttons),\n        needsNewLogo = (this.hasLogo !== context.displaylogo);\n\n    if(needsNewButtons || needsNewLogo) {\n        this.removeAllButtons();\n\n        this.updateButtons(buttons);\n\n        if(context.displaylogo) {\n            this.element.appendChild(this.getLogo());\n            this.hasLogo = true;\n        }\n    }\n\n    this.updateActiveButton();\n};\n\nproto.updateButtons = function(buttons) {\n    var _this = this;\n\n    this.buttons = buttons;\n    this.buttonElements = [];\n    this.buttonsNames = [];\n\n    this.buttons.forEach(function(buttonGroup) {\n        var group = _this.createGroup();\n\n        buttonGroup.forEach(function(buttonConfig) {\n            var buttonName = buttonConfig.name;\n            if(!buttonName) {\n                throw new Error('must provide button \\'name\\' in button config');\n            }\n            if(_this.buttonsNames.indexOf(buttonName) !== -1) {\n                throw new Error('button name \\'' + buttonName + '\\' is taken');\n            }\n            _this.buttonsNames.push(buttonName);\n\n            var button = _this.createButton(buttonConfig);\n            _this.buttonElements.push(button);\n            group.appendChild(button);\n        });\n\n        _this.element.appendChild(group);\n    });\n};\n\n/**\n * Empty div for containing a group of buttons\n * @Return {HTMLelement}\n */\nproto.createGroup = function() {\n    var group = document.createElement('div');\n    group.className = 'modebar-group';\n\n    return group;\n};\n\n/**\n * Create a new button div and set constant and configurable attributes\n * @Param {object} config (see ./buttons.js for more info)\n * @Return {HTMLelement}\n */\nproto.createButton = function(config) {\n    var _this = this,\n        button = document.createElement('a');\n\n    button.setAttribute('rel', 'tooltip');\n    button.className = 'modebar-btn';\n\n    var title = config.title;\n    if(title === undefined) title = config.name;\n    // for localization: allow title to be a callable that takes gd as arg\n    else if(typeof title === 'function') title = title(this.graphInfo);\n\n    if(title || title === 0) button.setAttribute('data-title', title);\n\n    if(config.attr !== undefined) button.setAttribute('data-attr', config.attr);\n\n    var val = config.val;\n    if(val !== undefined) {\n        if(typeof val === 'function') val = val(this.graphInfo);\n        button.setAttribute('data-val', val);\n    }\n\n    var click = config.click;\n    if(typeof click !== 'function') {\n        throw new Error('must provide button \\'click\\' function in button config');\n    }\n    else {\n        button.addEventListener('click', function(ev) {\n            config.click(_this.graphInfo, ev);\n\n            // only needed for 'hoverClosestGeo' which does not call relayout\n            _this.updateActiveButton(ev.currentTarget);\n        });\n    }\n\n    button.setAttribute('data-toggle', config.toggle || false);\n    if(config.toggle) d3.select(button).classed('active', true);\n\n    button.appendChild(this.createIcon(config.icon || Icons.question, config.name));\n    button.setAttribute('data-gravity', config.gravity || 'n');\n\n    return button;\n};\n\n/**\n * Add an icon to a button\n * @Param {object} thisIcon\n * @Param {number} thisIcon.width\n * @Param {string} thisIcon.path\n * @Return {HTMLelement}\n */\nproto.createIcon = function(thisIcon, name) {\n    var iconHeight = thisIcon.ascent - thisIcon.descent,\n        svgNS = 'http://www.w3.org/2000/svg',\n        icon = document.createElementNS(svgNS, 'svg'),\n        path = document.createElementNS(svgNS, 'path');\n\n    icon.setAttribute('height', '1em');\n    icon.setAttribute('width', (thisIcon.width / iconHeight) + 'em');\n    icon.setAttribute('viewBox', [0, 0, thisIcon.width, iconHeight].join(' '));\n\n    var transform = name === 'toggleSpikelines' ?\n        'matrix(1.5 0 0 -1.5 0 ' + thisIcon.ascent + ')' :\n        'matrix(1 0 0 -1 0 ' + thisIcon.ascent + ')';\n\n    path.setAttribute('d', thisIcon.path);\n    path.setAttribute('transform', transform);\n    icon.appendChild(path);\n\n    return icon;\n};\n\n/**\n * Updates active button with attribute specified in layout\n * @Param {object} graphInfo plot object containing data and layout\n * @Return {HTMLelement}\n */\nproto.updateActiveButton = function(buttonClicked) {\n    var fullLayout = this.graphInfo._fullLayout,\n        dataAttrClicked = (buttonClicked !== undefined) ?\n            buttonClicked.getAttribute('data-attr') :\n            null;\n\n    this.buttonElements.forEach(function(button) {\n        var thisval = button.getAttribute('data-val') || true,\n            dataAttr = button.getAttribute('data-attr'),\n            isToggleButton = (button.getAttribute('data-toggle') === 'true'),\n            button3 = d3.select(button);\n\n        // Use 'data-toggle' and 'buttonClicked' to toggle buttons\n        // that have no one-to-one equivalent in fullLayout\n        if(isToggleButton) {\n            if(dataAttr === dataAttrClicked) {\n                button3.classed('active', !button3.classed('active'));\n            }\n        }\n        else {\n            var val = (dataAttr === null) ?\n                dataAttr :\n                Lib.nestedProperty(fullLayout, dataAttr).get();\n\n            button3.classed('active', val === thisval);\n        }\n\n    });\n};\n\n/**\n * Check if modeBar is configured as button configuration argument\n *\n * @Param {object} buttons 2d array of grouped button config objects\n * @Return {boolean}\n */\nproto.hasButtons = function(buttons) {\n    var currentButtons = this.buttons;\n\n    if(!currentButtons) return false;\n\n    if(buttons.length !== currentButtons.length) return false;\n\n    for(var i = 0; i < buttons.length; ++i) {\n        if(buttons[i].length !== currentButtons[i].length) return false;\n        for(var j = 0; j < buttons[i].length; j++) {\n            if(buttons[i][j].name !== currentButtons[i][j].name) return false;\n        }\n    }\n\n    return true;\n};\n\n/**\n * @return {HTMLDivElement} The logo image wrapped in a group\n */\nproto.getLogo = function() {\n    var group = this.createGroup(),\n        a = document.createElement('a');\n\n    a.href = 'https://plot.ly/';\n    a.target = '_blank';\n    a.setAttribute('data-title', Lib._(this.graphInfo, 'Produced with Plotly'));\n    a.className = 'modebar-btn plotlyjsicon modebar-btn--logo';\n\n    a.appendChild(this.createIcon(Icons.plotlylogo));\n\n    group.appendChild(a);\n    return group;\n};\n\nproto.removeAllButtons = function() {\n    while(this.element.firstChild) {\n        this.element.removeChild(this.element.firstChild);\n    }\n\n    this.hasLogo = false;\n};\n\nproto.destroy = function() {\n    Lib.removeElement(this.container.querySelector('.modebar'));\n};\n\nfunction createModeBar(gd, buttons) {\n    var fullLayout = gd._fullLayout;\n\n    var modeBar = new ModeBar({\n        graphInfo: gd,\n        container: fullLayout._paperdiv.node(),\n        buttons: buttons\n    });\n\n    if(fullLayout._privateplot) {\n        d3.select(modeBar.element).append('span')\n            .classed('badge-private float--left', true)\n            .text('PRIVATE');\n    }\n\n    return modeBar;\n}\n\nmodule.exports = createModeBar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/modebar/modebar.js\n// module id = 168\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Plotly = require('../../plotly');\nvar Plots = require('../../plots/plots');\nvar axisIds = require('../../plots/cartesian/axis_ids');\nvar Lib = require('../../lib');\nvar downloadImage = require('../../snapshot/download');\nvar Icons = require('../../../build/ploticon');\n\n\nvar _ = Lib._;\n\nvar modeBarButtons = module.exports = {};\n\n/**\n * ModeBar buttons configuration\n *\n * @param {string} name\n *      name / id of the buttons (for tracking)\n * @param {string} title\n *      text that appears while hovering over the button,\n *      enter null, false or '' for no hover text\n * @param {string} icon\n *      svg icon object associated with the button\n *      can be linked to Plotly.Icons to use the default plotly icons\n * @param {string} [gravity]\n *      icon positioning\n * @param {function} click\n *      click handler associated with the button, a function of\n *      'gd' (the main graph object) and\n *      'ev' (the event object)\n * @param {string} [attr]\n *      attribute associated with button,\n *      use this with 'val' to keep track of the state\n * @param {*} [val]\n *      initial 'attr' value, can be a function of gd\n * @param {boolean} [toggle]\n *      is the button a toggle button?\n */\n\nmodeBarButtons.toImage = {\n    name: 'toImage',\n    title: function(gd) { return _(gd, 'Download plot as a png'); },\n    icon: Icons.camera,\n    click: function(gd) {\n        var format = 'png';\n\n        Lib.notifier(_(gd, 'Taking snapshot - this may take a few seconds'), 'long');\n\n        if(Lib.isIE()) {\n            Lib.notifier(_(gd, 'IE only supports svg.  Changing format to svg.'), 'long');\n            format = 'svg';\n        }\n\n        downloadImage(gd, {'format': format})\n          .then(function(filename) {\n              Lib.notifier(_(gd, 'Snapshot succeeded') + ' - ' + filename, 'long');\n          })\n          .catch(function() {\n              Lib.notifier(_(gd, 'Sorry, there was a problem downloading your snapshot!'), 'long');\n          });\n    }\n};\n\nmodeBarButtons.sendDataToCloud = {\n    name: 'sendDataToCloud',\n    title: function(gd) { return _(gd, 'Edit in Chart Studio'); },\n    icon: Icons.disk,\n    click: function(gd) {\n        Plots.sendDataToCloud(gd);\n    }\n};\n\nmodeBarButtons.zoom2d = {\n    name: 'zoom2d',\n    title: function(gd) { return _(gd, 'Zoom'); },\n    attr: 'dragmode',\n    val: 'zoom',\n    icon: Icons.zoombox,\n    click: handleCartesian\n};\n\nmodeBarButtons.pan2d = {\n    name: 'pan2d',\n    title: function(gd) { return _(gd, 'Pan'); },\n    attr: 'dragmode',\n    val: 'pan',\n    icon: Icons.pan,\n    click: handleCartesian\n};\n\nmodeBarButtons.select2d = {\n    name: 'select2d',\n    title: function(gd) { return _(gd, 'Box Select'); },\n    attr: 'dragmode',\n    val: 'select',\n    icon: Icons.selectbox,\n    click: handleCartesian\n};\n\nmodeBarButtons.lasso2d = {\n    name: 'lasso2d',\n    title: function(gd) { return _(gd, 'Lasso Select'); },\n    attr: 'dragmode',\n    val: 'lasso',\n    icon: Icons.lasso,\n    click: handleCartesian\n};\n\nmodeBarButtons.zoomIn2d = {\n    name: 'zoomIn2d',\n    title: function(gd) { return _(gd, 'Zoom in'); },\n    attr: 'zoom',\n    val: 'in',\n    icon: Icons.zoom_plus,\n    click: handleCartesian\n};\n\nmodeBarButtons.zoomOut2d = {\n    name: 'zoomOut2d',\n    title: function(gd) { return _(gd, 'Zoom out'); },\n    attr: 'zoom',\n    val: 'out',\n    icon: Icons.zoom_minus,\n    click: handleCartesian\n};\n\nmodeBarButtons.autoScale2d = {\n    name: 'autoScale2d',\n    title: function(gd) { return _(gd, 'Autoscale'); },\n    attr: 'zoom',\n    val: 'auto',\n    icon: Icons.autoscale,\n    click: handleCartesian\n};\n\nmodeBarButtons.resetScale2d = {\n    name: 'resetScale2d',\n    title: function(gd) { return _(gd, 'Reset axes'); },\n    attr: 'zoom',\n    val: 'reset',\n    icon: Icons.home,\n    click: handleCartesian\n};\n\nmodeBarButtons.hoverClosestCartesian = {\n    name: 'hoverClosestCartesian',\n    title: function(gd) { return _(gd, 'Show closest data on hover'); },\n    attr: 'hovermode',\n    val: 'closest',\n    icon: Icons.tooltip_basic,\n    gravity: 'ne',\n    click: handleCartesian\n};\n\nmodeBarButtons.hoverCompareCartesian = {\n    name: 'hoverCompareCartesian',\n    title: function(gd) { return _(gd, 'Compare data on hover'); },\n    attr: 'hovermode',\n    val: function(gd) {\n        return gd._fullLayout._isHoriz ? 'y' : 'x';\n    },\n    icon: Icons.tooltip_compare,\n    gravity: 'ne',\n    click: handleCartesian\n};\n\nfunction handleCartesian(gd, ev) {\n    var button = ev.currentTarget;\n    var astr = button.getAttribute('data-attr');\n    var val = button.getAttribute('data-val') || true;\n    var fullLayout = gd._fullLayout;\n    var aobj = {};\n    var axList = axisIds.list(gd, null, true);\n    var allSpikesEnabled = 'on';\n\n    var ax, i;\n\n    if(astr === 'zoom') {\n        var mag = (val === 'in') ? 0.5 : 2,\n            r0 = (1 + mag) / 2,\n            r1 = (1 - mag) / 2;\n\n        var axName;\n\n        for(i = 0; i < axList.length; i++) {\n            ax = axList[i];\n\n            if(!ax.fixedrange) {\n                axName = ax._name;\n                if(val === 'auto') aobj[axName + '.autorange'] = true;\n                else if(val === 'reset') {\n                    if(ax._rangeInitial === undefined) {\n                        aobj[axName + '.autorange'] = true;\n                    }\n                    else {\n                        var rangeInitial = ax._rangeInitial.slice();\n                        aobj[axName + '.range[0]'] = rangeInitial[0];\n                        aobj[axName + '.range[1]'] = rangeInitial[1];\n                    }\n                    if(ax._showSpikeInitial !== undefined) {\n                        aobj[axName + '.showspikes'] = ax._showSpikeInitial;\n                        if(allSpikesEnabled === 'on' && !ax._showSpikeInitial) {\n                            allSpikesEnabled = 'off';\n                        }\n                    }\n                }\n                else {\n                    var rangeNow = [\n                        ax.r2l(ax.range[0]),\n                        ax.r2l(ax.range[1]),\n                    ];\n\n                    var rangeNew = [\n                        r0 * rangeNow[0] + r1 * rangeNow[1],\n                        r0 * rangeNow[1] + r1 * rangeNow[0]\n                    ];\n\n                    aobj[axName + '.range[0]'] = ax.l2r(rangeNew[0]);\n                    aobj[axName + '.range[1]'] = ax.l2r(rangeNew[1]);\n                }\n            }\n        }\n        fullLayout._cartesianSpikesEnabled = allSpikesEnabled;\n    }\n    else {\n        // if ALL traces have orientation 'h', 'hovermode': 'x' otherwise: 'y'\n        if(astr === 'hovermode' && (val === 'x' || val === 'y')) {\n            val = fullLayout._isHoriz ? 'y' : 'x';\n            button.setAttribute('data-val', val);\n        } else if(astr === 'hovermode' && val === 'closest') {\n            for(i = 0; i < axList.length; i++) {\n                ax = axList[i];\n                if(allSpikesEnabled === 'on' && !ax.showspikes) {\n                    allSpikesEnabled = 'off';\n                }\n            }\n            fullLayout._cartesianSpikesEnabled = allSpikesEnabled;\n        }\n\n        aobj[astr] = val;\n    }\n\n    Plotly.relayout(gd, aobj);\n}\n\nmodeBarButtons.zoom3d = {\n    name: 'zoom3d',\n    title: function(gd) { return _(gd, 'Zoom'); },\n    attr: 'scene.dragmode',\n    val: 'zoom',\n    icon: Icons.zoombox,\n    click: handleDrag3d\n};\n\nmodeBarButtons.pan3d = {\n    name: 'pan3d',\n    title: function(gd) { return _(gd, 'Pan'); },\n    attr: 'scene.dragmode',\n    val: 'pan',\n    icon: Icons.pan,\n    click: handleDrag3d\n};\n\nmodeBarButtons.orbitRotation = {\n    name: 'orbitRotation',\n    title: function(gd) { return _(gd, 'Orbital rotation'); },\n    attr: 'scene.dragmode',\n    val: 'orbit',\n    icon: Icons['3d_rotate'],\n    click: handleDrag3d\n};\n\nmodeBarButtons.tableRotation = {\n    name: 'tableRotation',\n    title: function(gd) { return _(gd, 'Turntable rotation'); },\n    attr: 'scene.dragmode',\n    val: 'turntable',\n    icon: Icons['z-axis'],\n    click: handleDrag3d\n};\n\nfunction handleDrag3d(gd, ev) {\n    var button = ev.currentTarget;\n    var attr = button.getAttribute('data-attr');\n    var val = button.getAttribute('data-val') || true;\n    var sceneIds = gd._fullLayout._subplots.gl3d;\n    var layoutUpdate = {};\n\n    var parts = attr.split('.');\n\n    for(var i = 0; i < sceneIds.length; i++) {\n        layoutUpdate[sceneIds[i] + '.' + parts[1]] = val;\n    }\n\n    Plotly.relayout(gd, layoutUpdate);\n}\n\nmodeBarButtons.resetCameraDefault3d = {\n    name: 'resetCameraDefault3d',\n    title: function(gd) { return _(gd, 'Reset camera to default'); },\n    attr: 'resetDefault',\n    icon: Icons.home,\n    click: handleCamera3d\n};\n\nmodeBarButtons.resetCameraLastSave3d = {\n    name: 'resetCameraLastSave3d',\n    title: function(gd) { return _(gd, 'Reset camera to last save'); },\n    attr: 'resetLastSave',\n    icon: Icons.movie,\n    click: handleCamera3d\n};\n\nfunction handleCamera3d(gd, ev) {\n    var button = ev.currentTarget;\n    var attr = button.getAttribute('data-attr');\n    var fullLayout = gd._fullLayout;\n    var sceneIds = fullLayout._subplots.gl3d;\n    var aobj = {};\n\n    for(var i = 0; i < sceneIds.length; i++) {\n        var sceneId = sceneIds[i],\n            key = sceneId + '.camera',\n            scene = fullLayout[sceneId]._scene;\n\n        if(attr === 'resetDefault') {\n            aobj[key] = null;\n        }\n        else if(attr === 'resetLastSave') {\n            aobj[key] = Lib.extendDeep({}, scene.cameraInitial);\n        }\n    }\n\n    Plotly.relayout(gd, aobj);\n}\n\nmodeBarButtons.hoverClosest3d = {\n    name: 'hoverClosest3d',\n    title: function(gd) { return _(gd, 'Toggle show closest data on hover'); },\n    attr: 'hovermode',\n    val: null,\n    toggle: true,\n    icon: Icons.tooltip_basic,\n    gravity: 'ne',\n    click: handleHover3d\n};\n\nfunction handleHover3d(gd, ev) {\n    var button = ev.currentTarget;\n    var val = button._previousVal || false;\n    var layout = gd.layout;\n    var fullLayout = gd._fullLayout;\n    var sceneIds = fullLayout._subplots.gl3d;\n\n    var axes = ['xaxis', 'yaxis', 'zaxis'];\n    var spikeAttrs = ['showspikes', 'spikesides', 'spikethickness', 'spikecolor'];\n\n    // initialize 'current spike' object to be stored in the DOM\n    var currentSpikes = {};\n    var axisSpikes = {};\n    var layoutUpdate = {};\n\n    if(val) {\n        layoutUpdate = Lib.extendDeep(layout, val);\n        button._previousVal = null;\n    }\n    else {\n        layoutUpdate = {\n            'allaxes.showspikes': false\n        };\n\n        for(var i = 0; i < sceneIds.length; i++) {\n            var sceneId = sceneIds[i],\n                sceneLayout = fullLayout[sceneId],\n                sceneSpikes = currentSpikes[sceneId] = {};\n\n            sceneSpikes.hovermode = sceneLayout.hovermode;\n            layoutUpdate[sceneId + '.hovermode'] = false;\n\n            // copy all the current spike attrs\n            for(var j = 0; j < 3; j++) {\n                var axis = axes[j];\n                axisSpikes = sceneSpikes[axis] = {};\n\n                for(var k = 0; k < spikeAttrs.length; k++) {\n                    var spikeAttr = spikeAttrs[k];\n                    axisSpikes[spikeAttr] = sceneLayout[axis][spikeAttr];\n                }\n            }\n        }\n\n        button._previousVal = Lib.extendDeep({}, currentSpikes);\n    }\n\n    Plotly.relayout(gd, layoutUpdate);\n}\n\nmodeBarButtons.zoomInGeo = {\n    name: 'zoomInGeo',\n    title: function(gd) { return _(gd, 'Zoom in'); },\n    attr: 'zoom',\n    val: 'in',\n    icon: Icons.zoom_plus,\n    click: handleGeo\n};\n\nmodeBarButtons.zoomOutGeo = {\n    name: 'zoomOutGeo',\n    title: function(gd) { return _(gd, 'Zoom out'); },\n    attr: 'zoom',\n    val: 'out',\n    icon: Icons.zoom_minus,\n    click: handleGeo\n};\n\nmodeBarButtons.resetGeo = {\n    name: 'resetGeo',\n    title: function(gd) { return _(gd, 'Reset'); },\n    attr: 'reset',\n    val: null,\n    icon: Icons.autoscale,\n    click: handleGeo\n};\n\nmodeBarButtons.hoverClosestGeo = {\n    name: 'hoverClosestGeo',\n    title: function(gd) { return _(gd, 'Toggle show closest data on hover'); },\n    attr: 'hovermode',\n    val: null,\n    toggle: true,\n    icon: Icons.tooltip_basic,\n    gravity: 'ne',\n    click: toggleHover\n};\n\nfunction handleGeo(gd, ev) {\n    var button = ev.currentTarget;\n    var attr = button.getAttribute('data-attr');\n    var val = button.getAttribute('data-val') || true;\n    var fullLayout = gd._fullLayout;\n    var geoIds = fullLayout._subplots.geo;\n\n    for(var i = 0; i < geoIds.length; i++) {\n        var id = geoIds[i];\n        var geoLayout = fullLayout[id];\n\n        if(attr === 'zoom') {\n            var scale = geoLayout.projection.scale;\n            var newScale = (val === 'in') ? 2 * scale : 0.5 * scale;\n\n            Plotly.relayout(gd, id + '.projection.scale', newScale);\n        } else if(attr === 'reset') {\n            resetView(gd, 'geo');\n        }\n    }\n}\n\nmodeBarButtons.hoverClosestGl2d = {\n    name: 'hoverClosestGl2d',\n    title: function(gd) { return _(gd, 'Toggle show closest data on hover'); },\n    attr: 'hovermode',\n    val: null,\n    toggle: true,\n    icon: Icons.tooltip_basic,\n    gravity: 'ne',\n    click: toggleHover\n};\n\nmodeBarButtons.hoverClosestPie = {\n    name: 'hoverClosestPie',\n    title: function(gd) { return _(gd, 'Toggle show closest data on hover'); },\n    attr: 'hovermode',\n    val: 'closest',\n    icon: Icons.tooltip_basic,\n    gravity: 'ne',\n    click: toggleHover\n};\n\nfunction toggleHover(gd) {\n    var fullLayout = gd._fullLayout;\n\n    var onHoverVal;\n    if(fullLayout._has('cartesian')) {\n        onHoverVal = fullLayout._isHoriz ? 'y' : 'x';\n    }\n    else onHoverVal = 'closest';\n\n    var newHover = gd._fullLayout.hovermode ? false : onHoverVal;\n\n    Plotly.relayout(gd, 'hovermode', newHover);\n}\n\n// buttons when more then one plot types are present\n\nmodeBarButtons.toggleHover = {\n    name: 'toggleHover',\n    title: function(gd) { return _(gd, 'Toggle show closest data on hover'); },\n    attr: 'hovermode',\n    val: null,\n    toggle: true,\n    icon: Icons.tooltip_basic,\n    gravity: 'ne',\n    click: function(gd, ev) {\n        toggleHover(gd);\n\n        // the 3d hovermode update must come\n        // last so that layout.hovermode update does not\n        // override scene?.hovermode?.layout.\n        handleHover3d(gd, ev);\n    }\n};\n\nmodeBarButtons.resetViews = {\n    name: 'resetViews',\n    title: function(gd) { return _(gd, 'Reset views'); },\n    icon: Icons.home,\n    click: function(gd, ev) {\n        var button = ev.currentTarget;\n\n        button.setAttribute('data-attr', 'zoom');\n        button.setAttribute('data-val', 'reset');\n        handleCartesian(gd, ev);\n\n        button.setAttribute('data-attr', 'resetLastSave');\n        handleCamera3d(gd, ev);\n\n        resetView(gd, 'geo');\n        resetView(gd, 'mapbox');\n    }\n};\n\nmodeBarButtons.toggleSpikelines = {\n    name: 'toggleSpikelines',\n    title: function(gd) { return _(gd, 'Toggle Spike Lines'); },\n    icon: Icons.spikeline,\n    attr: '_cartesianSpikesEnabled',\n    val: 'on',\n    click: function(gd) {\n        var fullLayout = gd._fullLayout;\n\n        fullLayout._cartesianSpikesEnabled = fullLayout._cartesianSpikesEnabled === 'on' ? 'off' : 'on';\n\n        var aobj = setSpikelineVisibility(gd);\n\n        Plotly.relayout(gd, aobj);\n    }\n};\n\nfunction setSpikelineVisibility(gd) {\n    var fullLayout = gd._fullLayout;\n    var axList = axisIds.list(gd, null, true);\n    var aobj = {};\n\n    var ax, axName;\n\n    for(var i = 0; i < axList.length; i++) {\n        ax = axList[i];\n        axName = ax._name;\n        aobj[axName + '.showspikes'] = fullLayout._cartesianSpikesEnabled === 'on' ? true : ax._showSpikeInitial;\n    }\n\n    return aobj;\n}\n\nmodeBarButtons.resetViewMapbox = {\n    name: 'resetViewMapbox',\n    title: function(gd) { return _(gd, 'Reset view'); },\n    attr: 'reset',\n    icon: Icons.home,\n    click: function(gd) {\n        resetView(gd, 'mapbox');\n    }\n};\n\nfunction resetView(gd, subplotType) {\n    var fullLayout = gd._fullLayout;\n    var subplotIds = fullLayout._subplots[subplotType];\n    var aObj = {};\n\n    for(var i = 0; i < subplotIds.length; i++) {\n        var id = subplotIds[i];\n        var subplotObj = fullLayout[id]._subplot;\n        var viewInitial = subplotObj.viewInitial;\n        var viewKeys = Object.keys(viewInitial);\n\n        for(var j = 0; j < viewKeys.length; j++) {\n            var key = viewKeys[j];\n            aObj[id + '.' + key] = viewInitial[key];\n        }\n    }\n\n    Plotly.relayout(gd, aObj);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/modebar/buttons.js\n// module id = 169\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n/*\n* substantial portions of this code from FileSaver.js\n* https://github.com/eligrey/FileSaver.js\n* License: https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n* 1.1.20160328\n*\n* By Eli Grey, http://eligrey.com\n* License: MIT\n*   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n*/\n\n'use strict';\n\nvar fileSaver = function(url, name) {\n    var saveLink = document.createElement('a');\n    var canUseSaveLink = 'download' in saveLink;\n    var isSafari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent);\n    var promise = new Promise(function(resolve, reject) {\n        // IE <10 is explicitly unsupported\n        if(typeof navigator !== 'undefined' && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n            reject(new Error('IE < 10 unsupported'));\n        }\n\n        // First try a.download, then web filesystem, then object URLs\n        if(isSafari) {\n            // Safari doesn't allow downloading of blob urls\n            document.location.href = 'data:application/octet-stream' + url.slice(url.search(/[,;]/));\n            resolve(name);\n        }\n\n        if(!name) {\n            name = 'download';\n        }\n\n        if(canUseSaveLink) {\n            saveLink.href = url;\n            saveLink.download = name;\n            document.body.appendChild(saveLink);\n            saveLink.click();\n            document.body.removeChild(saveLink);\n            resolve(name);\n        }\n\n        // IE 10+ (native saveAs)\n        if(typeof navigator !== 'undefined' && navigator.msSaveBlob) {\n            // At this point we are only dealing with a SVG encoded as\n            // a data URL (since IE only supports SVG)\n            var encoded = url.split(/^data:image\\/svg\\+xml,/)[1];\n            var svg = decodeURIComponent(encoded);\n            navigator.msSaveBlob(new Blob([svg]), name);\n            resolve(name);\n        }\n\n        reject(new Error('download error'));\n    });\n\n    return promise;\n};\n\nmodule.exports = fileSaver;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/snapshot/filesaver.js\n// module id = 170\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\nvar hasHover = require('has-hover');\n\nvar Plotly = require('../plotly');\nvar Lib = require('../lib');\nvar Events = require('../lib/events');\nvar Queue = require('../lib/queue');\n\nvar Registry = require('../registry');\nvar PlotSchema = require('./plot_schema');\nvar Plots = require('../plots/plots');\nvar Polar = require('../plots/polar/legacy');\nvar initInteractions = require('../plots/cartesian/graph_interact');\n\nvar Drawing = require('../components/drawing');\nvar Color = require('../components/color');\nvar ErrorBars = require('../components/errorbars');\nvar xmlnsNamespaces = require('../constants/xmlns_namespaces');\nvar svgTextUtils = require('../lib/svg_text_utils');\n\nvar manageArrays = require('./manage_arrays');\nvar helpers = require('./helpers');\nvar subroutines = require('./subroutines');\nvar editTypes = require('./edit_types');\n\nvar cartesianConstants = require('../plots/cartesian/constants');\nvar axisConstraints = require('../plots/cartesian/constraints');\nvar enforceAxisConstraints = axisConstraints.enforce;\nvar cleanAxisConstraints = axisConstraints.clean;\nvar axisIds = require('../plots/cartesian/axis_ids');\n\n\n/**\n * Main plot-creation function\n *\n * @param {string id or DOM element} gd\n *      the id or DOM element of the graph container div\n * @param {array of objects} data\n *      array of traces, containing the data and display information for each trace\n * @param {object} layout\n *      object describing the overall display of the plot,\n *      all the stuff that doesn't pertain to any individual trace\n * @param {object} config\n *      configuration options (see ./plot_config.js for more info)\n *\n */\nPlotly.plot = function(gd, data, layout, config) {\n    var frames;\n\n    gd = Lib.getGraphDiv(gd);\n\n    // Events.init is idempotent and bails early if gd has already been init'd\n    Events.init(gd);\n\n    if(Lib.isPlainObject(data)) {\n        var obj = data;\n        data = obj.data;\n        layout = obj.layout;\n        config = obj.config;\n        frames = obj.frames;\n    }\n\n    var okToPlot = Events.triggerHandler(gd, 'plotly_beforeplot', [data, layout, config]);\n    if(okToPlot === false) return Promise.reject();\n\n    // if there's no data or layout, and this isn't yet a plotly plot\n    // container, log a warning to help plotly.js users debug\n    if(!data && !layout && !Lib.isPlotDiv(gd)) {\n        Lib.warn('Calling Plotly.plot as if redrawing ' +\n            'but this container doesn\\'t yet have a plot.', gd);\n    }\n\n    function addFrames() {\n        if(frames) {\n            return Plotly.addFrames(gd, frames);\n        }\n    }\n\n    // transfer configuration options to gd until we move over to\n    // a more OO like model\n    setPlotContext(gd, config);\n\n    if(!layout) layout = {};\n\n    // hook class for plots main container (in case of plotly.js\n    // this won't be #embedded-graph or .js-tab-contents)\n    d3.select(gd).classed('js-plotly-plot', true);\n\n    // off-screen getBoundingClientRect testing space,\n    // in #js-plotly-tester (and stored as Drawing.tester)\n    // so we can share cached text across tabs\n    Drawing.makeTester();\n\n    // collect promises for any async actions during plotting\n    // any part of the plotting code can push to gd._promises, then\n    // before we move to the next step, we check that they're all\n    // complete, and empty out the promise list again.\n    if(!Array.isArray(gd._promises)) gd._promises = [];\n\n    var graphWasEmpty = ((gd.data || []).length === 0 && Array.isArray(data));\n\n    // if there is already data on the graph, append the new data\n    // if you only want to redraw, pass a non-array for data\n    if(Array.isArray(data)) {\n        helpers.cleanData(data, gd.data);\n\n        if(graphWasEmpty) gd.data = data;\n        else gd.data.push.apply(gd.data, data);\n\n        // for routines outside graph_obj that want a clean tab\n        // (rather than appending to an existing one) gd.empty\n        // is used to determine whether to make a new tab\n        gd.empty = false;\n    }\n\n    if(!gd.layout || graphWasEmpty) gd.layout = helpers.cleanLayout(layout);\n\n    // if the user is trying to drag the axes, allow new data and layout\n    // to come in but don't allow a replot.\n    if(gd._dragging && !gd._transitioning) {\n        // signal to drag handler that after everything else is done\n        // we need to replot, because something has changed\n        gd._replotPending = true;\n        return Promise.reject();\n    } else {\n        // we're going ahead with a replot now\n        gd._replotPending = false;\n    }\n\n    Plots.supplyDefaults(gd);\n\n    var fullLayout = gd._fullLayout;\n\n    // Legacy polar plots\n    if(!fullLayout._has('polar') && data && data[0] && data[0].r) {\n        Lib.log('Legacy polar charts are deprecated!');\n        return plotPolar(gd, data, layout);\n    }\n\n    // so we don't try to re-call Plotly.plot from inside\n    // legend and colorbar, if margins changed\n    fullLayout._replotting = true;\n\n    // make or remake the framework if we need to\n    if(graphWasEmpty) makePlotFramework(gd);\n\n    // polar need a different framework\n    if(gd.framework !== makePlotFramework) {\n        gd.framework = makePlotFramework;\n        makePlotFramework(gd);\n    }\n\n    // clear gradient defs on each .plot call, because we know we'll loop through all traces\n    Drawing.initGradients(gd);\n\n    // save initial show spikes once per graph\n    if(graphWasEmpty) Plotly.Axes.saveShowSpikeInitial(gd);\n\n    // prepare the data and find the autorange\n\n    // generate calcdata, if we need to\n    // to force redoing calcdata, just delete it before calling Plotly.plot\n    var recalc = !gd.calcdata || gd.calcdata.length !== (gd._fullData || []).length;\n    if(recalc) Plots.doCalcdata(gd);\n\n    // in case it has changed, attach fullData traces to calcdata\n    for(var i = 0; i < gd.calcdata.length; i++) {\n        gd.calcdata[i][0].trace = gd._fullData[i];\n    }\n\n    /*\n     * start async-friendly code - now we're actually drawing things\n     */\n\n    var oldmargins = JSON.stringify(fullLayout._size);\n\n    // draw framework first so that margin-pushing\n    // components can position themselves correctly\n    function drawFramework() {\n        var basePlotModules = fullLayout._basePlotModules;\n\n        for(var i = 0; i < basePlotModules.length; i++) {\n            if(basePlotModules[i].drawFramework) {\n                basePlotModules[i].drawFramework(gd);\n            }\n        }\n\n        if(!fullLayout._glcanvas && fullLayout._has('gl')) {\n            fullLayout._glcanvas = fullLayout._glcontainer.selectAll('.gl-canvas').data([{\n                key: 'contextLayer',\n                context: true,\n                pick: false\n            }, {\n                key: 'focusLayer',\n                context: false,\n                pick: false\n            }, {\n                key: 'pickLayer',\n                context: false,\n                pick: true\n            }], function(d) { return d.key; });\n\n            fullLayout._glcanvas.enter().append('canvas')\n                .attr('class', function(d) {\n                    return 'gl-canvas gl-canvas-' + d.key.replace('Layer', '');\n                })\n                .style({\n                    'position': 'absolute',\n                    'top': 0,\n                    'left': 0,\n                    'width': '100%',\n                    'height': '100%',\n                    'overflow': 'visible',\n                    'pointer-events': 'none'\n                });\n        }\n\n        if(fullLayout._glcanvas) {\n            fullLayout._glcanvas\n                .attr('width', fullLayout.width)\n                .attr('height', fullLayout.height);\n        }\n\n        return Lib.syncOrAsync([\n            subroutines.layoutStyles\n        ], gd);\n    }\n\n    // draw anything that can affect margins.\n    function marginPushers() {\n        var calcdata = gd.calcdata;\n        var i, cd, trace;\n\n        Registry.getComponentMethod('legend', 'draw')(gd);\n        Registry.getComponentMethod('rangeselector', 'draw')(gd);\n        Registry.getComponentMethod('sliders', 'draw')(gd);\n        Registry.getComponentMethod('updatemenus', 'draw')(gd);\n\n        for(i = 0; i < calcdata.length; i++) {\n            cd = calcdata[i];\n            trace = cd[0].trace;\n            if(trace.visible !== true || !trace._module.colorbar) {\n                Plots.autoMargin(gd, 'cb' + trace.uid);\n            }\n            else trace._module.colorbar(gd, cd);\n        }\n\n        Plots.doAutoMargin(gd);\n        return Plots.previousPromises(gd);\n    }\n\n    // in case the margins changed, draw margin pushers again\n    function marginPushersAgain() {\n        if(JSON.stringify(fullLayout._size) === oldmargins) return;\n\n        return Lib.syncOrAsync([\n            marginPushers,\n            subroutines.layoutStyles\n        ], gd);\n    }\n\n    function positionAndAutorange() {\n        if(!recalc) {\n            enforceAxisConstraints(gd);\n            return;\n        }\n\n        var subplots = fullLayout._subplots.cartesian;\n        var modules = fullLayout._modules;\n        var setPositionsArray = [];\n\n        // position and range calculations for traces that\n        // depend on each other ie bars (stacked or grouped)\n        // and boxes (grouped) push each other out of the way\n\n        var subplotInfo, i, j;\n\n        for(j = 0; j < modules.length; j++) {\n            Lib.pushUnique(setPositionsArray, modules[j].setPositions);\n        }\n\n        if(setPositionsArray.length) {\n            for(i = 0; i < subplots.length; i++) {\n                subplotInfo = fullLayout._plots[subplots[i]];\n\n                for(j = 0; j < setPositionsArray.length; j++) {\n                    setPositionsArray[j](gd, subplotInfo);\n                }\n            }\n        }\n\n        // calc and autorange for errorbars\n        ErrorBars.calc(gd);\n\n        // TODO: autosize extra for text markers and images\n        // see https://github.com/plotly/plotly.js/issues/1111\n        return Lib.syncOrAsync([\n            Registry.getComponentMethod('shapes', 'calcAutorange'),\n            Registry.getComponentMethod('annotations', 'calcAutorange'),\n            doAutoRangeAndConstraints,\n            Registry.getComponentMethod('rangeslider', 'calcAutorange')\n        ], gd);\n    }\n\n    function doAutoRangeAndConstraints() {\n        if(gd._transitioning) return;\n\n        var axList = Plotly.Axes.list(gd, '', true);\n        for(var i = 0; i < axList.length; i++) {\n            var ax = axList[i];\n            cleanAxisConstraints(gd, ax);\n\n            Plotly.Axes.doAutoRange(ax);\n        }\n\n        enforceAxisConstraints(gd);\n\n        // store initial ranges *after* enforcing constraints, otherwise\n        // we will never look like we're at the initial ranges\n        if(graphWasEmpty) Plotly.Axes.saveRangeInitial(gd);\n    }\n\n    // draw ticks, titles, and calculate axis scaling (._b, ._m)\n    function drawAxes() {\n        return Plotly.Axes.doTicks(gd, 'redraw');\n    }\n\n    // Now plot the data\n    function drawData() {\n        var calcdata = gd.calcdata,\n            i,\n            rangesliderContainers = fullLayout._infolayer.selectAll('g.rangeslider-container');\n\n        // in case of traces that were heatmaps or contour maps\n        // previously, remove them and their colorbars explicitly\n        for(i = 0; i < calcdata.length; i++) {\n            var trace = calcdata[i][0].trace,\n                isVisible = (trace.visible === true),\n                uid = trace.uid;\n\n            if(!isVisible || !Registry.traceIs(trace, '2dMap')) {\n                var query = (\n                    '.hm' + uid +\n                    ',.contour' + uid +\n                    ',#clip' + uid\n                );\n\n                fullLayout._paper\n                    .selectAll(query)\n                    .remove();\n\n                rangesliderContainers\n                    .selectAll(query)\n                    .remove();\n            }\n\n            if(!isVisible || !trace._module.colorbar) {\n                fullLayout._infolayer.selectAll('.cb' + uid).remove();\n            }\n        }\n\n        // loop over the base plot modules present on graph\n        var basePlotModules = fullLayout._basePlotModules;\n        for(i = 0; i < basePlotModules.length; i++) {\n            basePlotModules[i].plot(gd);\n        }\n\n        // keep reference to shape layers in subplots\n        var layerSubplot = fullLayout._paper.selectAll('.layer-subplot');\n        fullLayout._shapeSubplotLayers = layerSubplot.selectAll('.shapelayer');\n\n        // styling separate from drawing\n        Plots.style(gd);\n\n        // show annotations and shapes\n        Registry.getComponentMethod('shapes', 'draw')(gd);\n        Registry.getComponentMethod('annotations', 'draw')(gd);\n\n        // source links\n        Plots.addLinks(gd);\n\n        // Mark the first render as complete\n        fullLayout._replotting = false;\n\n        return Plots.previousPromises(gd);\n    }\n\n    // An initial paint must be completed before these components can be\n    // correctly sized and the whole plot re-margined. fullLayout._replotting must\n    // be set to false before these will work properly.\n    function finalDraw() {\n        Registry.getComponentMethod('shapes', 'draw')(gd);\n        Registry.getComponentMethod('images', 'draw')(gd);\n        Registry.getComponentMethod('annotations', 'draw')(gd);\n        Registry.getComponentMethod('legend', 'draw')(gd);\n        Registry.getComponentMethod('rangeslider', 'draw')(gd);\n        Registry.getComponentMethod('rangeselector', 'draw')(gd);\n        Registry.getComponentMethod('sliders', 'draw')(gd);\n        Registry.getComponentMethod('updatemenus', 'draw')(gd);\n    }\n\n    var seq = [\n        Plots.previousPromises,\n        addFrames,\n        drawFramework,\n        marginPushers,\n        marginPushersAgain,\n        positionAndAutorange,\n        subroutines.layoutStyles,\n        drawAxes,\n        drawData,\n        finalDraw,\n        initInteractions,\n        Plots.rehover,\n        Plots.previousPromises\n    ];\n\n    // even if everything we did was synchronous, return a promise\n    // so that the caller doesn't care which route we took\n    var plotDone = Lib.syncOrAsync(seq, gd);\n    if(!plotDone || !plotDone.then) plotDone = Promise.resolve();\n\n    return plotDone.then(function() {\n        gd.emit('plotly_afterplot');\n        return gd;\n    });\n};\n\nfunction setBackground(gd, bgColor) {\n    try {\n        gd._fullLayout._paper.style('background', bgColor);\n    } catch(e) {\n        Lib.error(e);\n    }\n}\n\nfunction opaqueSetBackground(gd, bgColor) {\n    var blend = Color.combine(bgColor, 'white');\n    setBackground(gd, blend);\n}\n\nfunction setPlotContext(gd, config) {\n    if(!gd._context) gd._context = Lib.extendDeep({}, Plotly.defaultConfig);\n    var context = gd._context;\n\n    var i, keys, key;\n\n    if(config) {\n        keys = Object.keys(config);\n        for(i = 0; i < keys.length; i++) {\n            key = keys[i];\n            if(key === 'editable' || key === 'edits') continue;\n            if(key in context) {\n                if(key === 'setBackground' && config[key] === 'opaque') {\n                    context[key] = opaqueSetBackground;\n                } else {\n                    context[key] = config[key];\n                }\n            }\n        }\n\n        // map plot3dPixelRatio to plotGlPixelRatio for backward compatibility\n        if(config.plot3dPixelRatio && !context.plotGlPixelRatio) {\n            context.plotGlPixelRatio = context.plot3dPixelRatio;\n        }\n\n        // now deal with editable and edits - first editable overrides\n        // everything, then edits refines\n        var editable = config.editable;\n        if(editable !== undefined) {\n            // we're not going to *use* context.editable, we're only going to\n            // use context.edits... but keep it for the record\n            context.editable = editable;\n\n            keys = Object.keys(context.edits);\n            for(i = 0; i < keys.length; i++) {\n                context.edits[keys[i]] = editable;\n            }\n        }\n        if(config.edits) {\n            keys = Object.keys(config.edits);\n            for(i = 0; i < keys.length; i++) {\n                key = keys[i];\n                if(key in context.edits) {\n                    context.edits[key] = config.edits[key];\n                }\n            }\n        }\n    }\n\n    // staticPlot forces a bunch of others:\n    if(context.staticPlot) {\n        context.editable = false;\n        context.edits = {};\n        context.autosizable = false;\n        context.scrollZoom = false;\n        context.doubleClick = false;\n        context.showTips = false;\n        context.showLink = false;\n        context.displayModeBar = false;\n    }\n\n    // make sure hover-only devices have mode bar visible\n    if(context.displayModeBar === 'hover' && !hasHover) {\n        context.displayModeBar = true;\n    }\n\n    // default and fallback for setBackground\n    if(context.setBackground === 'transparent' || typeof context.setBackground !== 'function') {\n        context.setBackground = setBackground;\n    }\n}\n\nfunction plotPolar(gd, data, layout) {\n    // build or reuse the container skeleton\n    var plotContainer = d3.select(gd).selectAll('.plot-container')\n        .data([0]);\n    plotContainer.enter()\n        .insert('div', ':first-child')\n        .classed('plot-container plotly', true);\n    var paperDiv = plotContainer.selectAll('.svg-container')\n        .data([0]);\n    paperDiv.enter().append('div')\n        .classed('svg-container', true)\n        .style('position', 'relative');\n\n    // empty it everytime for now\n    paperDiv.html('');\n\n    // fulfill gd requirements\n    if(data) gd.data = data;\n    if(layout) gd.layout = layout;\n    Polar.manager.fillLayout(gd);\n\n    // resize canvas\n    paperDiv.style({\n        width: gd._fullLayout.width + 'px',\n        height: gd._fullLayout.height + 'px'\n    });\n\n    // instantiate framework\n    gd.framework = Polar.manager.framework(gd);\n\n    // plot\n    gd.framework({data: gd.data, layout: gd.layout}, paperDiv.node());\n\n    // set undo point\n    gd.framework.setUndoPoint();\n\n    // get the resulting svg for extending it\n    var polarPlotSVG = gd.framework.svg();\n\n    // editable title\n    var opacity = 1;\n    var txt = gd._fullLayout.title;\n    if(txt === '' || !txt) opacity = 0;\n\n    var titleLayout = function() {\n        this.call(svgTextUtils.convertToTspans, gd);\n        // TODO: html/mathjax\n        // TODO: center title\n    };\n\n    var title = polarPlotSVG.select('.title-group text')\n        .call(titleLayout);\n\n    if(gd._context.edits.titleText) {\n        var placeholderText = Lib._(gd, 'Click to enter Plot title');\n        if(!txt || txt === placeholderText) {\n            opacity = 0.2;\n            // placeholder is not going through convertToTspans\n            // so needs explicit data-unformatted\n            title.attr({'data-unformatted': placeholderText})\n                .text(placeholderText)\n                .style({opacity: opacity})\n                .on('mouseover.opacity', function() {\n                    d3.select(this).transition().duration(100)\n                        .style('opacity', 1);\n                })\n                .on('mouseout.opacity', function() {\n                    d3.select(this).transition().duration(1000)\n                        .style('opacity', 0);\n                });\n        }\n\n        var setContenteditable = function() {\n            this.call(svgTextUtils.makeEditable, {gd: gd})\n                .on('edit', function(text) {\n                    gd.framework({layout: {title: text}});\n                    this.text(text)\n                        .call(titleLayout);\n                    this.call(setContenteditable);\n                })\n                .on('cancel', function() {\n                    var txt = this.attr('data-unformatted');\n                    this.text(txt).call(titleLayout);\n                });\n        };\n        title.call(setContenteditable);\n    }\n\n    gd._context.setBackground(gd, gd._fullLayout.paper_bgcolor);\n    Plots.addLinks(gd);\n\n    return Promise.resolve();\n}\n\n// convenience function to force a full redraw, mostly for use by plotly.js\nPlotly.redraw = function(gd) {\n    gd = Lib.getGraphDiv(gd);\n\n    if(!Lib.isPlotDiv(gd)) {\n        throw new Error('This element is not a Plotly plot: ' + gd);\n    }\n\n    helpers.cleanData(gd.data, gd.data);\n    helpers.cleanLayout(gd.layout);\n\n    gd.calcdata = undefined;\n    return Plotly.plot(gd).then(function() {\n        gd.emit('plotly_redraw');\n        return gd;\n    });\n};\n\n/**\n * Convenience function to make idempotent plot option obvious to users.\n *\n * @param gd\n * @param {Object[]} data\n * @param {Object} layout\n * @param {Object} config\n */\nPlotly.newPlot = function(gd, data, layout, config) {\n    gd = Lib.getGraphDiv(gd);\n\n    // remove gl contexts\n    Plots.cleanPlot([], {}, gd._fullData || {}, gd._fullLayout || {});\n\n    Plots.purge(gd);\n    return Plotly.plot(gd, data, layout, config);\n};\n\n/**\n * Wrap negative indicies to their positive counterparts.\n *\n * @param {Number[]} indices An array of indices\n * @param {Number} maxIndex The maximum index allowable (arr.length - 1)\n */\nfunction positivifyIndices(indices, maxIndex) {\n    var parentLength = maxIndex + 1,\n        positiveIndices = [],\n        i,\n        index;\n\n    for(i = 0; i < indices.length; i++) {\n        index = indices[i];\n        if(index < 0) {\n            positiveIndices.push(parentLength + index);\n        } else {\n            positiveIndices.push(index);\n        }\n    }\n    return positiveIndices;\n}\n\n/**\n * Ensures that an index array for manipulating gd.data is valid.\n *\n * Intended for use with addTraces, deleteTraces, and moveTraces.\n *\n * @param gd\n * @param indices\n * @param arrayName\n */\nfunction assertIndexArray(gd, indices, arrayName) {\n    var i,\n        index;\n\n    for(i = 0; i < indices.length; i++) {\n        index = indices[i];\n\n        // validate that indices are indeed integers\n        if(index !== parseInt(index, 10)) {\n            throw new Error('all values in ' + arrayName + ' must be integers');\n        }\n\n        // check that all indices are in bounds for given gd.data array length\n        if(index >= gd.data.length || index < -gd.data.length) {\n            throw new Error(arrayName + ' must be valid indices for gd.data.');\n        }\n\n        // check that indices aren't repeated\n        if(indices.indexOf(index, i + 1) > -1 ||\n                index >= 0 && indices.indexOf(-gd.data.length + index) > -1 ||\n                index < 0 && indices.indexOf(gd.data.length + index) > -1) {\n            throw new Error('each index in ' + arrayName + ' must be unique.');\n        }\n    }\n}\n\n/**\n * Private function used by Plotly.moveTraces to check input args\n *\n * @param gd\n * @param currentIndices\n * @param newIndices\n */\nfunction checkMoveTracesArgs(gd, currentIndices, newIndices) {\n\n    // check that gd has attribute 'data' and 'data' is array\n    if(!Array.isArray(gd.data)) {\n        throw new Error('gd.data must be an array.');\n    }\n\n    // validate currentIndices array\n    if(typeof currentIndices === 'undefined') {\n        throw new Error('currentIndices is a required argument.');\n    } else if(!Array.isArray(currentIndices)) {\n        currentIndices = [currentIndices];\n    }\n    assertIndexArray(gd, currentIndices, 'currentIndices');\n\n    // validate newIndices array if it exists\n    if(typeof newIndices !== 'undefined' && !Array.isArray(newIndices)) {\n        newIndices = [newIndices];\n    }\n    if(typeof newIndices !== 'undefined') {\n        assertIndexArray(gd, newIndices, 'newIndices');\n    }\n\n    // check currentIndices and newIndices are the same length if newIdices exists\n    if(typeof newIndices !== 'undefined' && currentIndices.length !== newIndices.length) {\n        throw new Error('current and new indices must be of equal length.');\n    }\n\n}\n/**\n * A private function to reduce the type checking clutter in addTraces.\n *\n * @param gd\n * @param traces\n * @param newIndices\n */\nfunction checkAddTracesArgs(gd, traces, newIndices) {\n    var i, value;\n\n    // check that gd has attribute 'data' and 'data' is array\n    if(!Array.isArray(gd.data)) {\n        throw new Error('gd.data must be an array.');\n    }\n\n    // make sure traces exists\n    if(typeof traces === 'undefined') {\n        throw new Error('traces must be defined.');\n    }\n\n    // make sure traces is an array\n    if(!Array.isArray(traces)) {\n        traces = [traces];\n    }\n\n    // make sure each value in traces is an object\n    for(i = 0; i < traces.length; i++) {\n        value = traces[i];\n        if(typeof value !== 'object' || (Array.isArray(value) || value === null)) {\n            throw new Error('all values in traces array must be non-array objects');\n        }\n    }\n\n    // make sure we have an index for each trace\n    if(typeof newIndices !== 'undefined' && !Array.isArray(newIndices)) {\n        newIndices = [newIndices];\n    }\n    if(typeof newIndices !== 'undefined' && newIndices.length !== traces.length) {\n        throw new Error(\n            'if indices is specified, traces.length must equal indices.length'\n        );\n    }\n}\n\n/**\n * A private function to reduce the type checking clutter in spliceTraces.\n * Get all update Properties from gd.data. Validate inputs and outputs.\n * Used by prependTrace and extendTraces\n *\n * @param gd\n * @param update\n * @param indices\n * @param maxPoints\n */\nfunction assertExtendTracesArgs(gd, update, indices, maxPoints) {\n\n    var maxPointsIsObject = Lib.isPlainObject(maxPoints);\n\n    if(!Array.isArray(gd.data)) {\n        throw new Error('gd.data must be an array');\n    }\n    if(!Lib.isPlainObject(update)) {\n        throw new Error('update must be a key:value object');\n    }\n\n    if(typeof indices === 'undefined') {\n        throw new Error('indices must be an integer or array of integers');\n    }\n\n    assertIndexArray(gd, indices, 'indices');\n\n    for(var key in update) {\n\n        /*\n         * Verify that the attribute to be updated contains as many trace updates\n         * as indices. Failure must result in throw and no-op\n         */\n        if(!Array.isArray(update[key]) || update[key].length !== indices.length) {\n            throw new Error('attribute ' + key + ' must be an array of length equal to indices array length');\n        }\n\n        /*\n         * if maxPoints is an object it must match keys and array lengths of 'update' 1:1\n         */\n        if(maxPointsIsObject &&\n            (!(key in maxPoints) || !Array.isArray(maxPoints[key]) ||\n            maxPoints[key].length !== update[key].length)) {\n            throw new Error('when maxPoints is set as a key:value object it must contain a 1:1 ' +\n                            'corrispondence with the keys and number of traces in the update object');\n        }\n    }\n}\n\n/**\n * A private function to reduce the type checking clutter in spliceTraces.\n *\n * @param {Object|HTMLDivElement} gd\n * @param {Object} update\n * @param {Number[]} indices\n * @param {Number||Object} maxPoints\n * @return {Object[]}\n */\nfunction getExtendProperties(gd, update, indices, maxPoints) {\n\n    var maxPointsIsObject = Lib.isPlainObject(maxPoints),\n        updateProps = [];\n    var trace, target, prop, insert, maxp;\n\n    // allow scalar index to represent a single trace position\n    if(!Array.isArray(indices)) indices = [indices];\n\n    // negative indices are wrapped around to their positive value. Equivalent to python indexing.\n    indices = positivifyIndices(indices, gd.data.length - 1);\n\n    // loop through all update keys and traces and harvest validated data.\n    for(var key in update) {\n\n        for(var j = 0; j < indices.length; j++) {\n\n            /*\n             * Choose the trace indexed by the indices map argument and get the prop setter-getter\n             * instance that references the key and value for this particular trace.\n             */\n            trace = gd.data[indices[j]];\n            prop = Lib.nestedProperty(trace, key);\n\n            /*\n             * Target is the existing gd.data.trace.dataArray value like \"x\" or \"marker.size\"\n             * Target must exist as an Array to allow the extend operation to be performed.\n             */\n            target = prop.get();\n            insert = update[key][j];\n\n            if(!Array.isArray(insert)) {\n                throw new Error('attribute: ' + key + ' index: ' + j + ' must be an array');\n            }\n            if(!Array.isArray(target)) {\n                throw new Error('cannot extend missing or non-array attribute: ' + key);\n            }\n\n            /*\n             * maxPoints may be an object map or a scalar. If object select the key:value, else\n             * Use the scalar maxPoints for all key and trace combinations.\n             */\n            maxp = maxPointsIsObject ? maxPoints[key][j] : maxPoints;\n\n            // could have chosen null here, -1 just tells us to not take a window\n            if(!isNumeric(maxp)) maxp = -1;\n\n            /*\n             * Wrap the nestedProperty in an object containing required data\n             * for lengthening and windowing this particular trace - key combination.\n             * Flooring maxp mirrors the behaviour of floats in the Array.slice JSnative function.\n             */\n            updateProps.push({\n                prop: prop,\n                target: target,\n                insert: insert,\n                maxp: Math.floor(maxp)\n            });\n        }\n    }\n\n    // all target and insertion data now validated\n    return updateProps;\n}\n\n/**\n * A private function to key Extend and Prepend traces DRY\n *\n * @param {Object|HTMLDivElement} gd\n * @param {Object} update\n * @param {Number[]} indices\n * @param {Number||Object} maxPoints\n * @param {Function} lengthenArray\n * @param {Function} spliceArray\n * @return {Object}\n */\nfunction spliceTraces(gd, update, indices, maxPoints, lengthenArray, spliceArray) {\n\n    assertExtendTracesArgs(gd, update, indices, maxPoints);\n\n    var updateProps = getExtendProperties(gd, update, indices, maxPoints),\n        remainder = [],\n        undoUpdate = {},\n        undoPoints = {};\n    var target, prop, maxp;\n\n    for(var i = 0; i < updateProps.length; i++) {\n\n        /*\n         * prop is the object returned by Lib.nestedProperties\n         */\n        prop = updateProps[i].prop;\n        maxp = updateProps[i].maxp;\n\n        target = lengthenArray(updateProps[i].target, updateProps[i].insert);\n\n        /*\n         * If maxp is set within post-extension trace.length, splice to maxp length.\n         * Otherwise skip function call as splice op will have no effect anyway.\n         */\n        if(maxp >= 0 && maxp < target.length) remainder = spliceArray(target, maxp);\n\n        /*\n         * to reverse this operation we need the size of the original trace as the reverse\n         * operation will need to window out any lengthening operation performed in this pass.\n         */\n        maxp = updateProps[i].target.length;\n\n        /*\n         * Magic happens here! update gd.data.trace[key] with new array data.\n         */\n        prop.set(target);\n\n        if(!Array.isArray(undoUpdate[prop.astr])) undoUpdate[prop.astr] = [];\n        if(!Array.isArray(undoPoints[prop.astr])) undoPoints[prop.astr] = [];\n\n        /*\n         * build the inverse update object for the undo operation\n         */\n        undoUpdate[prop.astr].push(remainder);\n\n        /*\n         * build the matching maxPoints undo object containing original trace lengths.\n         */\n        undoPoints[prop.astr].push(maxp);\n    }\n\n    return {update: undoUpdate, maxPoints: undoPoints};\n}\n\n/**\n * extend && prepend traces at indices with update arrays, window trace lengths to maxPoints\n *\n * Extend and Prepend have identical APIs. Prepend inserts an array at the head while Extend\n * inserts an array off the tail. Prepend truncates the tail of the array - counting maxPoints\n * from the head, whereas Extend truncates the head of the array, counting backward maxPoints\n * from the tail.\n *\n * If maxPoints is undefined, nonNumeric, negative or greater than extended trace length no\n * truncation / windowing will be performed. If its zero, well the whole trace is truncated.\n *\n * @param {Object|HTMLDivElement} gd The graph div\n * @param {Object} update The key:array map of target attributes to extend\n * @param {Number|Number[]} indices The locations of traces to be extended\n * @param {Number|Object} [maxPoints] Number of points for trace window after lengthening.\n *\n */\nPlotly.extendTraces = function extendTraces(gd, update, indices, maxPoints) {\n    gd = Lib.getGraphDiv(gd);\n\n    var undo = spliceTraces(gd, update, indices, maxPoints,\n\n                           /*\n                            * The Lengthen operation extends trace from end with insert\n                            */\n                            function(target, insert) {\n                                return target.concat(insert);\n                            },\n\n                            /*\n                             * Window the trace keeping maxPoints, counting back from the end\n                             */\n                            function(target, maxPoints) {\n                                return target.splice(0, target.length - maxPoints);\n                            });\n\n    var promise = Plotly.redraw(gd);\n\n    var undoArgs = [gd, undo.update, indices, undo.maxPoints];\n    Queue.add(gd, Plotly.prependTraces, undoArgs, extendTraces, arguments);\n\n    return promise;\n};\n\nPlotly.prependTraces = function prependTraces(gd, update, indices, maxPoints) {\n    gd = Lib.getGraphDiv(gd);\n\n    var undo = spliceTraces(gd, update, indices, maxPoints,\n\n                           /*\n                            * The Lengthen operation extends trace by appending insert to start\n                            */\n                            function(target, insert) {\n                                return insert.concat(target);\n                            },\n\n                            /*\n                             * Window the trace keeping maxPoints, counting forward from the start\n                             */\n                            function(target, maxPoints) {\n                                return target.splice(maxPoints, target.length);\n                            });\n\n    var promise = Plotly.redraw(gd);\n\n    var undoArgs = [gd, undo.update, indices, undo.maxPoints];\n    Queue.add(gd, Plotly.extendTraces, undoArgs, prependTraces, arguments);\n\n    return promise;\n};\n\n/**\n * Add data traces to an existing graph div.\n *\n * @param {Object|HTMLDivElement} gd The graph div\n * @param {Object[]} gd.data The array of traces we're adding to\n * @param {Object[]|Object} traces The object or array of objects to add\n * @param {Number[]|Number} [newIndices=[gd.data.length]] Locations to add traces\n *\n */\nPlotly.addTraces = function addTraces(gd, traces, newIndices) {\n    gd = Lib.getGraphDiv(gd);\n\n    var currentIndices = [],\n        undoFunc = Plotly.deleteTraces,\n        redoFunc = addTraces,\n        undoArgs = [gd, currentIndices],\n        redoArgs = [gd, traces],  // no newIndices here\n        i,\n        promise;\n\n    // all validation is done elsewhere to remove clutter here\n    checkAddTracesArgs(gd, traces, newIndices);\n\n    // make sure traces is an array\n    if(!Array.isArray(traces)) {\n        traces = [traces];\n    }\n\n    // make sure traces do not repeat existing ones\n    traces = traces.map(function(trace) {\n        return Lib.extendFlat({}, trace);\n    });\n\n    helpers.cleanData(traces, gd.data);\n\n    // add the traces to gd.data (no redrawing yet!)\n    for(i = 0; i < traces.length; i++) {\n        gd.data.push(traces[i]);\n    }\n\n    // to continue, we need to call moveTraces which requires currentIndices\n    for(i = 0; i < traces.length; i++) {\n        currentIndices.push(-traces.length + i);\n    }\n\n    // if the user didn't define newIndices, they just want the traces appended\n    // i.e., we can simply redraw and be done\n    if(typeof newIndices === 'undefined') {\n        promise = Plotly.redraw(gd);\n        Queue.add(gd, undoFunc, undoArgs, redoFunc, redoArgs);\n        return promise;\n    }\n\n    // make sure indices is property defined\n    if(!Array.isArray(newIndices)) {\n        newIndices = [newIndices];\n    }\n\n    try {\n\n        // this is redundant, but necessary to not catch later possible errors!\n        checkMoveTracesArgs(gd, currentIndices, newIndices);\n    }\n    catch(error) {\n\n        // something went wrong, reset gd to be safe and rethrow error\n        gd.data.splice(gd.data.length - traces.length, traces.length);\n        throw error;\n    }\n\n    // if we're here, the user has defined specific places to place the new traces\n    // this requires some extra work that moveTraces will do\n    Queue.startSequence(gd);\n    Queue.add(gd, undoFunc, undoArgs, redoFunc, redoArgs);\n    promise = Plotly.moveTraces(gd, currentIndices, newIndices);\n    Queue.stopSequence(gd);\n    return promise;\n};\n\n/**\n * Delete traces at `indices` from gd.data array.\n *\n * @param {Object|HTMLDivElement} gd The graph div\n * @param {Object[]} gd.data The array of traces we're removing from\n * @param {Number|Number[]} indices The indices\n */\nPlotly.deleteTraces = function deleteTraces(gd, indices) {\n    gd = Lib.getGraphDiv(gd);\n\n    var traces = [],\n        undoFunc = Plotly.addTraces,\n        redoFunc = deleteTraces,\n        undoArgs = [gd, traces, indices],\n        redoArgs = [gd, indices],\n        i,\n        deletedTrace;\n\n    // make sure indices are defined\n    if(typeof indices === 'undefined') {\n        throw new Error('indices must be an integer or array of integers.');\n    } else if(!Array.isArray(indices)) {\n        indices = [indices];\n    }\n    assertIndexArray(gd, indices, 'indices');\n\n    // convert negative indices to positive indices\n    indices = positivifyIndices(indices, gd.data.length - 1);\n\n    // we want descending here so that splicing later doesn't affect indexing\n    indices.sort(Lib.sorterDes);\n    for(i = 0; i < indices.length; i += 1) {\n        deletedTrace = gd.data.splice(indices[i], 1)[0];\n        traces.push(deletedTrace);\n    }\n\n    var promise = Plotly.redraw(gd);\n    Queue.add(gd, undoFunc, undoArgs, redoFunc, redoArgs);\n\n    return promise;\n};\n\n/**\n * Move traces at currentIndices array to locations in newIndices array.\n *\n * If newIndices is omitted, currentIndices will be moved to the end. E.g.,\n * these are equivalent:\n *\n * Plotly.moveTraces(gd, [1, 2, 3], [-3, -2, -1])\n * Plotly.moveTraces(gd, [1, 2, 3])\n *\n * @param {Object|HTMLDivElement} gd The graph div\n * @param {Object[]} gd.data The array of traces we're removing from\n * @param {Number|Number[]} currentIndices The locations of traces to be moved\n * @param {Number|Number[]} [newIndices] The locations to move traces to\n *\n * Example calls:\n *\n *      // move trace i to location x\n *      Plotly.moveTraces(gd, i, x)\n *\n *      // move trace i to end of array\n *      Plotly.moveTraces(gd, i)\n *\n *      // move traces i, j, k to end of array (i != j != k)\n *      Plotly.moveTraces(gd, [i, j, k])\n *\n *      // move traces [i, j, k] to [x, y, z] (i != j != k) (x != y != z)\n *      Plotly.moveTraces(gd, [i, j, k], [x, y, z])\n *\n *      // reorder all traces (assume there are 5--a, b, c, d, e)\n *      Plotly.moveTraces(gd, [b, d, e, a, c])  // same as 'move to end'\n */\nPlotly.moveTraces = function moveTraces(gd, currentIndices, newIndices) {\n    gd = Lib.getGraphDiv(gd);\n\n    var newData = [],\n        movingTraceMap = [],\n        undoFunc = moveTraces,\n        redoFunc = moveTraces,\n        undoArgs = [gd, newIndices, currentIndices],\n        redoArgs = [gd, currentIndices, newIndices],\n        i;\n\n    // to reduce complexity here, check args elsewhere\n    // this throws errors where appropriate\n    checkMoveTracesArgs(gd, currentIndices, newIndices);\n\n    // make sure currentIndices is an array\n    currentIndices = Array.isArray(currentIndices) ? currentIndices : [currentIndices];\n\n    // if undefined, define newIndices to point to the end of gd.data array\n    if(typeof newIndices === 'undefined') {\n        newIndices = [];\n        for(i = 0; i < currentIndices.length; i++) {\n            newIndices.push(-currentIndices.length + i);\n        }\n    }\n\n    // make sure newIndices is an array if it's user-defined\n    newIndices = Array.isArray(newIndices) ? newIndices : [newIndices];\n\n    // convert negative indices to positive indices (they're the same length)\n    currentIndices = positivifyIndices(currentIndices, gd.data.length - 1);\n    newIndices = positivifyIndices(newIndices, gd.data.length - 1);\n\n    // at this point, we've coerced the index arrays into predictable forms\n\n    // get the traces that aren't being moved around\n    for(i = 0; i < gd.data.length; i++) {\n\n        // if index isn't in currentIndices, include it in ignored!\n        if(currentIndices.indexOf(i) === -1) {\n            newData.push(gd.data[i]);\n        }\n    }\n\n    // get a mapping of indices to moving traces\n    for(i = 0; i < currentIndices.length; i++) {\n        movingTraceMap.push({newIndex: newIndices[i], trace: gd.data[currentIndices[i]]});\n    }\n\n    // reorder this mapping by newIndex, ascending\n    movingTraceMap.sort(function(a, b) {\n        return a.newIndex - b.newIndex;\n    });\n\n    // now, add the moving traces back in, in order!\n    for(i = 0; i < movingTraceMap.length; i += 1) {\n        newData.splice(movingTraceMap[i].newIndex, 0, movingTraceMap[i].trace);\n    }\n\n    gd.data = newData;\n\n    var promise = Plotly.redraw(gd);\n    Queue.add(gd, undoFunc, undoArgs, redoFunc, redoArgs);\n\n    return promise;\n};\n\n/**\n * restyle: update trace attributes of an existing plot\n *\n * Can be called two ways.\n *\n * Signature 1:\n * @param {String | HTMLDivElement} gd\n *  the id or DOM element of the graph container div\n * @param {String} astr\n *  attribute string (like `'marker.symbol'`) to update\n * @param {*} val\n *  value to give this attribute\n * @param {Number[] | Number} [traces]\n *  integer or array of integers for the traces to alter (all if omitted)\n *\n * Signature 2:\n * @param {String | HTMLDivElement} gd\n *  (as in signature 1)\n * @param {Object} aobj\n *  attribute object `{astr1: val1, astr2: val2 ...}`\n *  allows setting multiple attributes simultaneously\n * @param {Number[] | Number} [traces]\n *  (as in signature 1)\n *\n * `val` (or `val1`, `val2` ... in the object form) can be an array,\n * to apply different values to each trace.\n *\n * If the array is too short, it will wrap around (useful for\n * style files that want to specify cyclical default values).\n */\nPlotly.restyle = function restyle(gd, astr, val, _traces) {\n    gd = Lib.getGraphDiv(gd);\n    helpers.clearPromiseQueue(gd);\n\n    var aobj = {};\n    if(typeof astr === 'string') aobj[astr] = val;\n    else if(Lib.isPlainObject(astr)) {\n        // the 3-arg form\n        aobj = Lib.extendFlat({}, astr);\n        if(_traces === undefined) _traces = val;\n    }\n    else {\n        Lib.warn('Restyle fail.', astr, val, _traces);\n        return Promise.reject();\n    }\n\n    if(Object.keys(aobj).length) gd.changed = true;\n\n    var traces = helpers.coerceTraceIndices(gd, _traces);\n\n    var specs = _restyle(gd, aobj, traces),\n        flags = specs.flags;\n\n    // clear calcdata and/or axis types if required so they get regenerated\n    if(flags.clearCalc) gd.calcdata = undefined;\n    if(flags.clearAxisTypes) helpers.clearAxisTypes(gd, traces, {});\n\n    // fill in redraw sequence\n    var seq = [];\n\n    if(flags.fullReplot) {\n        seq.push(Plotly.plot);\n    } else {\n        seq.push(Plots.previousPromises);\n\n        Plots.supplyDefaults(gd);\n\n        if(flags.style) seq.push(subroutines.doTraceStyle);\n        if(flags.colorbars) seq.push(subroutines.doColorBars);\n    }\n\n    seq.push(Plots.rehover);\n\n    Queue.add(gd,\n        restyle, [gd, specs.undoit, specs.traces],\n        restyle, [gd, specs.redoit, specs.traces]\n    );\n\n    var plotDone = Lib.syncOrAsync(seq, gd);\n    if(!plotDone || !plotDone.then) plotDone = Promise.resolve();\n\n    return plotDone.then(function() {\n        gd.emit('plotly_restyle', specs.eventData);\n        return gd;\n    });\n};\n\n// for undo: undefined initial vals must be turned into nulls\n// so that we unset rather than ignore them\nfunction undefinedToNull(val) {\n    if(val === undefined) return null;\n    return val;\n}\n\nfunction _restyle(gd, aobj, traces) {\n    var fullLayout = gd._fullLayout,\n        fullData = gd._fullData,\n        data = gd.data,\n        i;\n\n    // initialize flags\n    var flags = editTypes.traceFlags();\n\n    // copies of the change (and previous values of anything affected)\n    // for the undo / redo queue\n    var redoit = {},\n        undoit = {},\n        axlist,\n        flagAxForDelete = {};\n\n    // make a new empty vals array for undoit\n    function a0() { return traces.map(function() { return undefined; }); }\n\n    // for autoranging multiple axes\n    function addToAxlist(axid) {\n        var axName = Plotly.Axes.id2name(axid);\n        if(axlist.indexOf(axName) === -1) axlist.push(axName);\n    }\n\n    function autorangeAttr(axName) { return 'LAYOUT' + axName + '.autorange'; }\n\n    function rangeAttr(axName) { return 'LAYOUT' + axName + '.range'; }\n\n    // for attrs that interact (like scales & autoscales), save the\n    // old vals before making the change\n    // val=undefined will not set a value, just record what the value was.\n    // val=null will delete the attribute\n    // attr can be an array to set several at once (all to the same val)\n    function doextra(attr, val, i) {\n        if(Array.isArray(attr)) {\n            attr.forEach(function(a) { doextra(a, val, i); });\n            return;\n        }\n        // quit if explicitly setting this elsewhere\n        if(attr in aobj || helpers.hasParent(aobj, attr)) return;\n\n        var extraparam;\n        if(attr.substr(0, 6) === 'LAYOUT') {\n            extraparam = Lib.nestedProperty(gd.layout, attr.replace('LAYOUT', ''));\n        } else {\n            extraparam = Lib.nestedProperty(data[traces[i]], attr);\n        }\n\n        if(!(attr in undoit)) {\n            undoit[attr] = a0();\n        }\n        if(undoit[attr][i] === undefined) {\n            undoit[attr][i] = undefinedToNull(extraparam.get());\n        }\n        if(val !== undefined) {\n            extraparam.set(val);\n        }\n    }\n\n    // now make the changes to gd.data (and occasionally gd.layout)\n    // and figure out what kind of graphics update we need to do\n    for(var ai in aobj) {\n        if(helpers.hasParent(aobj, ai)) {\n            throw new Error('cannot set ' + ai + 'and a parent attribute simultaneously');\n        }\n\n        var vi = aobj[ai],\n            cont,\n            contFull,\n            param,\n            oldVal,\n            newVal,\n            valObject;\n\n        redoit[ai] = vi;\n\n        if(ai.substr(0, 6) === 'LAYOUT') {\n            param = Lib.nestedProperty(gd.layout, ai.replace('LAYOUT', ''));\n            undoit[ai] = [undefinedToNull(param.get())];\n            // since we're allowing val to be an array, allow it here too,\n            // even though that's meaningless\n            param.set(Array.isArray(vi) ? vi[0] : vi);\n            // ironically, the layout attrs in restyle only require replot,\n            // not relayout\n            flags.calc = true;\n            continue;\n        }\n\n        // set attribute in gd.data\n        undoit[ai] = a0();\n        for(i = 0; i < traces.length; i++) {\n            cont = data[traces[i]];\n            contFull = fullData[traces[i]];\n            param = Lib.nestedProperty(cont, ai);\n            oldVal = param.get();\n            newVal = Array.isArray(vi) ? vi[i % vi.length] : vi;\n\n            if(newVal === undefined) continue;\n\n            valObject = PlotSchema.getTraceValObject(contFull, param.parts);\n\n            if(valObject && valObject.impliedEdits && newVal !== null) {\n                for(var impliedKey in valObject.impliedEdits) {\n                    doextra(Lib.relativeAttr(ai, impliedKey), valObject.impliedEdits[impliedKey], i);\n                }\n            }\n\n            // changing colorbar size modes,\n            // make the resulting size not change\n            // note that colorbar fractional sizing is based on the\n            // original plot size, before anything (like a colorbar)\n            // increases the margins\n            else if(ai === 'colorbar.thicknessmode' && param.get() !== newVal &&\n                        ['fraction', 'pixels'].indexOf(newVal) !== -1 &&\n                        contFull.colorbar) {\n                var thicknorm =\n                    ['top', 'bottom'].indexOf(contFull.colorbar.orient) !== -1 ?\n                        (fullLayout.height - fullLayout.margin.t - fullLayout.margin.b) :\n                        (fullLayout.width - fullLayout.margin.l - fullLayout.margin.r);\n                doextra('colorbar.thickness', contFull.colorbar.thickness *\n                    (newVal === 'fraction' ? 1 / thicknorm : thicknorm), i);\n            }\n            else if(ai === 'colorbar.lenmode' && param.get() !== newVal &&\n                        ['fraction', 'pixels'].indexOf(newVal) !== -1 &&\n                        contFull.colorbar) {\n                var lennorm =\n                    ['top', 'bottom'].indexOf(contFull.colorbar.orient) !== -1 ?\n                        (fullLayout.width - fullLayout.margin.l - fullLayout.margin.r) :\n                        (fullLayout.height - fullLayout.margin.t - fullLayout.margin.b);\n                doextra('colorbar.len', contFull.colorbar.len *\n                    (newVal === 'fraction' ? 1 / lennorm : lennorm), i);\n            }\n            else if(ai === 'colorbar.tick0' || ai === 'colorbar.dtick') {\n                doextra('colorbar.tickmode', 'linear', i);\n            }\n\n            if(ai === 'type' && (newVal === 'pie') !== (oldVal === 'pie')) {\n                var labelsTo = 'x',\n                    valuesTo = 'y';\n                if((newVal === 'bar' || oldVal === 'bar') && cont.orientation === 'h') {\n                    labelsTo = 'y';\n                    valuesTo = 'x';\n                }\n                Lib.swapAttrs(cont, ['?', '?src'], 'labels', labelsTo);\n                Lib.swapAttrs(cont, ['d?', '?0'], 'label', labelsTo);\n                Lib.swapAttrs(cont, ['?', '?src'], 'values', valuesTo);\n\n                if(oldVal === 'pie') {\n                    Lib.nestedProperty(cont, 'marker.color')\n                        .set(Lib.nestedProperty(cont, 'marker.colors').get());\n\n                    // super kludgy - but if all pies are gone we won't remove them otherwise\n                    fullLayout._pielayer.selectAll('g.trace').remove();\n                } else if(Registry.traceIs(cont, 'cartesian')) {\n                    Lib.nestedProperty(cont, 'marker.colors')\n                        .set(Lib.nestedProperty(cont, 'marker.color').get());\n                    // look for axes that are no longer in use and delete them\n                    flagAxForDelete[cont.xaxis || 'x'] = true;\n                    flagAxForDelete[cont.yaxis || 'y'] = true;\n                }\n            }\n\n            undoit[ai][i] = undefinedToNull(oldVal);\n            // set the new value - if val is an array, it's one el per trace\n            // first check for attributes that get more complex alterations\n            var swapAttrs = [\n                'swapxy', 'swapxyaxes', 'orientation', 'orientationaxes'\n            ];\n            if(swapAttrs.indexOf(ai) !== -1) {\n                // setting an orientation: make sure it's changing\n                // before we swap everything else\n                if(ai === 'orientation') {\n                    param.set(newVal);\n                    // obnoxious that we need this level of coupling... but in order to\n                    // properly handle setting orientation to `null` we need to mimic\n                    // the logic inside Bars.supplyDefaults for default orientation\n                    var defaultOrientation = (cont.x && !cont.y) ? 'h' : 'v';\n                    if((param.get() || defaultOrientation) === contFull.orientation) {\n                        continue;\n                    }\n                }\n                // orientationaxes has no value,\n                // it flips everything and the axes\n                else if(ai === 'orientationaxes') {\n                    cont.orientation =\n                        {v: 'h', h: 'v'}[contFull.orientation];\n                }\n                helpers.swapXYData(cont);\n                flags.calc = flags.clearAxisTypes = true;\n            }\n            else if(Plots.dataArrayContainers.indexOf(param.parts[0]) !== -1) {\n                // TODO: use manageArrays.applyContainerArrayChanges here too\n                helpers.manageArrayContainers(param, newVal, undoit);\n                flags.calc = true;\n            }\n            else {\n                if(valObject) {\n                    // must redo calcdata when restyling array values of arrayOk attributes\n                    if(valObject.arrayOk && (Array.isArray(newVal) || Array.isArray(oldVal))) {\n                        flags.calc = true;\n                    }\n                    else editTypes.update(flags, valObject);\n                }\n                else {\n                    /*\n                     * if we couldn't find valObject,  assume a full recalc.\n                     * This can happen if you're changing type and making\n                     * some other edits too, so the modules we're\n                     * looking at don't have these attributes in them.\n                     */\n                    flags.calc = true;\n                }\n\n                // all the other ones, just modify that one attribute\n                param.set(newVal);\n            }\n        }\n\n        // swap the data attributes of the relevant x and y axes?\n        if(['swapxyaxes', 'orientationaxes'].indexOf(ai) !== -1) {\n            Plotly.Axes.swap(gd, traces);\n        }\n\n        // swap hovermode if set to \"compare x/y data\"\n        if(ai === 'orientationaxes') {\n            var hovermode = Lib.nestedProperty(gd.layout, 'hovermode');\n            if(hovermode.get() === 'x') {\n                hovermode.set('y');\n            } else if(hovermode.get() === 'y') {\n                hovermode.set('x');\n            }\n        }\n\n        // major enough changes deserve autoscale, autobin, and\n        // non-reversed axes so people don't get confused\n        if(['orientation', 'type'].indexOf(ai) !== -1) {\n            axlist = [];\n            for(i = 0; i < traces.length; i++) {\n                var trace = data[traces[i]];\n\n                if(Registry.traceIs(trace, 'cartesian')) {\n                    addToAxlist(trace.xaxis || 'x');\n                    addToAxlist(trace.yaxis || 'y');\n\n                    if(ai === 'type') {\n                        doextra(['autobinx', 'autobiny'], true, i);\n                    }\n                }\n            }\n\n            doextra(axlist.map(autorangeAttr), true, 0);\n            doextra(axlist.map(rangeAttr), [0, 1], 0);\n        }\n    }\n\n    // do we need to force a recalc?\n    var autorangeOn = false;\n    var axList = Plotly.Axes.list(gd);\n    for(i = 0; i < axList.length; i++) {\n        if(axList[i].autorange) {\n            autorangeOn = true;\n            break;\n        }\n    }\n\n    // check axes we've flagged for possible deletion\n    // flagAxForDelete is a hash so we can make sure we only get each axis once\n    var axListForDelete = Object.keys(flagAxForDelete);\n    axisLoop:\n    for(i = 0; i < axListForDelete.length; i++) {\n        var axId = axListForDelete[i],\n            axLetter = axId.charAt(0),\n            axAttr = axLetter + 'axis';\n\n        for(var j = 0; j < data.length; j++) {\n            if(Registry.traceIs(data[j], 'cartesian') &&\n                    (data[j][axAttr] || axLetter) === axId) {\n                continue axisLoop;\n            }\n        }\n\n        // no data on this axis - delete it.\n        doextra('LAYOUT' + Plotly.Axes.id2name(axId), null, 0);\n    }\n\n    // combine a few flags together;\n    if(flags.calc || (flags.calcIfAutorange && autorangeOn)) {\n        flags.clearCalc = true;\n    }\n    if(flags.calc || flags.plot || flags.calcIfAutorange) {\n        flags.fullReplot = true;\n    }\n\n    return {\n        flags: flags,\n        undoit: undoit,\n        redoit: redoit,\n        traces: traces,\n        eventData: Lib.extendDeepNoArrays([], [redoit, traces])\n    };\n}\n\n/**\n * relayout: update layout attributes of an existing plot\n *\n * Can be called two ways:\n *\n * Signature 1:\n * @param {String | HTMLDivElement} gd\n *  the id or dom element of the graph container div\n * @param {String} astr\n *  attribute string (like `'xaxis.range[0]'`) to update\n * @param {*} val\n *  value to give this attribute\n *\n * Signature 2:\n * @param {String | HTMLDivElement} gd\n *  (as in signature 1)\n * @param {Object} aobj\n *  attribute object `{astr1: val1, astr2: val2 ...}`\n *  allows setting multiple attributes simultaneously\n */\nPlotly.relayout = function relayout(gd, astr, val) {\n    gd = Lib.getGraphDiv(gd);\n    helpers.clearPromiseQueue(gd);\n\n    if(gd.framework && gd.framework.isPolar) {\n        return Promise.resolve(gd);\n    }\n\n    var aobj = {};\n    if(typeof astr === 'string') {\n        aobj[astr] = val;\n    } else if(Lib.isPlainObject(astr)) {\n        aobj = Lib.extendFlat({}, astr);\n    } else {\n        Lib.warn('Relayout fail.', astr, val);\n        return Promise.reject();\n    }\n\n    if(Object.keys(aobj).length) gd.changed = true;\n\n    var specs = _relayout(gd, aobj),\n        flags = specs.flags;\n\n    // clear calcdata if required\n    if(flags.calc) gd.calcdata = undefined;\n\n    // fill in redraw sequence\n\n    // even if we don't have anything left in aobj,\n    // something may have happened within relayout that we\n    // need to wait for\n    var seq = [Plots.previousPromises];\n\n    if(flags.layoutReplot) {\n        seq.push(subroutines.layoutReplot);\n    }\n    else if(Object.keys(aobj).length) {\n        Plots.supplyDefaults(gd);\n\n        if(flags.legend) seq.push(subroutines.doLegend);\n        if(flags.layoutstyle) seq.push(subroutines.layoutStyles);\n        if(flags.ticks) seq.push(subroutines.doTicksRelayout);\n        if(flags.modebar) seq.push(subroutines.doModeBar);\n        if(flags.camera) seq.push(subroutines.doCamera);\n    }\n\n    seq.push(Plots.rehover);\n\n    Queue.add(gd,\n        relayout, [gd, specs.undoit],\n        relayout, [gd, specs.redoit]\n    );\n\n    var plotDone = Lib.syncOrAsync(seq, gd);\n    if(!plotDone || !plotDone.then) plotDone = Promise.resolve(gd);\n\n    return plotDone.then(function() {\n        gd.emit('plotly_relayout', specs.eventData);\n        return gd;\n    });\n};\n\nfunction _relayout(gd, aobj) {\n    var layout = gd.layout,\n        fullLayout = gd._fullLayout,\n        keys = Object.keys(aobj),\n        axes = Plotly.Axes.list(gd),\n        arrayEdits = {},\n        arrayStr,\n        i,\n        j;\n\n    // look for 'allaxes', split out into all axes\n    // in case of 3D the axis are nested within a scene which is held in _id\n    for(i = 0; i < keys.length; i++) {\n        if(keys[i].indexOf('allaxes') === 0) {\n            for(j = 0; j < axes.length; j++) {\n                var scene = axes[j]._id.substr(1),\n                    axisAttr = (scene.indexOf('scene') !== -1) ? (scene + '.') : '',\n                    newkey = keys[i].replace('allaxes', axisAttr + axes[j]._name);\n\n                if(!aobj[newkey]) aobj[newkey] = aobj[keys[i]];\n            }\n\n            delete aobj[keys[i]];\n        }\n    }\n\n    // initialize flags\n    var flags = editTypes.layoutFlags();\n\n    // copies of the change (and previous values of anything affected)\n    // for the undo / redo queue\n    var redoit = {},\n        undoit = {};\n\n    // for attrs that interact (like scales & autoscales), save the\n    // old vals before making the change\n    // val=undefined will not set a value, just record what the value was.\n    // attr can be an array to set several at once (all to the same val)\n    function doextra(attr, val) {\n        if(Array.isArray(attr)) {\n            attr.forEach(function(a) { doextra(a, val); });\n            return;\n        }\n\n        // if we have another value for this attribute (explicitly or\n        // via a parent) do not override with this auto-generated extra\n        if(attr in aobj || helpers.hasParent(aobj, attr)) return;\n\n        var p = Lib.nestedProperty(layout, attr);\n        if(!(attr in undoit)) {\n            undoit[attr] = undefinedToNull(p.get());\n        }\n        if(val !== undefined) p.set(val);\n    }\n\n    // for editing annotations or shapes - is it on autoscaled axes?\n    function refAutorange(obj, axLetter) {\n        if(!Lib.isPlainObject(obj)) return false;\n        var axRef = obj[axLetter + 'ref'] || axLetter,\n            ax = Plotly.Axes.getFromId(gd, axRef);\n\n        if(!ax && axRef.charAt(0) === axLetter) {\n            // fall back on the primary axis in case we've referenced a\n            // nonexistent axis (as we do above if axRef is missing).\n            // This assumes the object defaults to data referenced, which\n            // is the case for shapes and annotations but not for images.\n            // The only thing this is used for is to determine whether to\n            // do a full `recalc`, so the only ill effect of this error is\n            // to waste some time.\n            ax = Plotly.Axes.getFromId(gd, axLetter);\n        }\n        return (ax || {}).autorange;\n    }\n\n    // for constraint enforcement: keep track of all axes (as {id: name})\n    // we're editing the (auto)range of, so we can tell the others constrained\n    // to scale with them that it's OK for them to shrink\n    var rangesAltered = {};\n    var axId;\n\n    function recordAlteredAxis(pleafPlus) {\n        var axId = axisIds.name2id(pleafPlus.split('.')[0]);\n        rangesAltered[axId] = 1;\n        return axId;\n    }\n\n    // alter gd.layout\n    for(var ai in aobj) {\n        if(helpers.hasParent(aobj, ai)) {\n            throw new Error('cannot set ' + ai + 'and a parent attribute simultaneously');\n        }\n\n        var p = Lib.nestedProperty(layout, ai),\n            vi = aobj[ai],\n            plen = p.parts.length,\n            // p.parts may end with an index integer if the property is an array\n            pend = typeof p.parts[plen - 1] === 'string' ? (plen - 1) : (plen - 2),\n            // last property in chain (leaf node)\n            pleaf = p.parts[pend],\n            // leaf plus immediate parent\n            pleafPlus = p.parts[pend - 1] + '.' + pleaf,\n            // trunk nodes (everything except the leaf)\n            ptrunk = p.parts.slice(0, pend).join('.'),\n            parentIn = Lib.nestedProperty(gd.layout, ptrunk).get(),\n            parentFull = Lib.nestedProperty(fullLayout, ptrunk).get(),\n            vOld = p.get();\n\n        if(vi === undefined) continue;\n\n        redoit[ai] = vi;\n\n        // axis reverse is special - it is its own inverse\n        // op and has no flag.\n        undoit[ai] = (pleaf === 'reverse') ? vi : undefinedToNull(vOld);\n\n        var valObject = PlotSchema.getLayoutValObject(fullLayout, p.parts);\n\n        if(valObject && valObject.impliedEdits && vi !== null) {\n            for(var impliedKey in valObject.impliedEdits) {\n                doextra(Lib.relativeAttr(ai, impliedKey), valObject.impliedEdits[impliedKey]);\n            }\n        }\n\n        // Setting width or height to null must reset the graph's width / height\n        // back to its initial value as computed during the first pass in Plots.plotAutoSize.\n        //\n        // To do so, we must manually set them back here using the _initialAutoSize cache.\n        if(['width', 'height'].indexOf(ai) !== -1 && vi === null) {\n            fullLayout[ai] = gd._initialAutoSize[ai];\n        }\n        // check autorange vs range\n        else if(pleafPlus.match(/^[xyz]axis[0-9]*\\.range(\\[[0|1]\\])?$/)) {\n            recordAlteredAxis(pleafPlus);\n            Lib.nestedProperty(fullLayout, ptrunk + '._inputRange').set(null);\n        }\n        else if(pleafPlus.match(/^[xyz]axis[0-9]*\\.autorange$/)) {\n            recordAlteredAxis(pleafPlus);\n            Lib.nestedProperty(fullLayout, ptrunk + '._inputRange').set(null);\n            var axFull = Lib.nestedProperty(fullLayout, ptrunk).get();\n            if(axFull._inputDomain) {\n                // if we're autoranging and this axis has a constrained domain,\n                // reset it so we don't get locked into a shrunken size\n                axFull._input.domain = axFull._inputDomain.slice();\n            }\n        }\n        else if(pleafPlus.match(/^[xyz]axis[0-9]*\\.domain(\\[[0|1]\\])?$/)) {\n            Lib.nestedProperty(fullLayout, ptrunk + '._inputDomain').set(null);\n        }\n\n        // toggling axis type between log and linear: we need to convert\n        // positions for components that are still using linearized values,\n        // not data values like newer components.\n        // previously we did this for log <-> not-log, but now only do it\n        // for log <-> linear\n        if(pleaf === 'type') {\n            var ax = parentIn,\n                toLog = parentFull.type === 'linear' && vi === 'log',\n                fromLog = parentFull.type === 'log' && vi === 'linear';\n\n            if(toLog || fromLog) {\n                if(!ax || !ax.range) {\n                    // 2D never gets here, but 3D does\n                    // I don't think this is needed, but left here in case there\n                    // are edge cases I'm not thinking of.\n                    doextra(ptrunk + '.autorange', true);\n                }\n                else if(!parentFull.autorange) {\n                    // toggling log without autorange: need to also recalculate ranges\n                    // because log axes use linearized values for range endpoints\n                    var r0 = ax.range[0],\n                        r1 = ax.range[1];\n                    if(toLog) {\n                        // if both limits are negative, autorange\n                        if(r0 <= 0 && r1 <= 0) {\n                            doextra(ptrunk + '.autorange', true);\n                        }\n                        // if one is negative, set it 6 orders below the other.\n                        if(r0 <= 0) r0 = r1 / 1e6;\n                        else if(r1 <= 0) r1 = r0 / 1e6;\n                        // now set the range values as appropriate\n                        doextra(ptrunk + '.range[0]', Math.log(r0) / Math.LN10);\n                        doextra(ptrunk + '.range[1]', Math.log(r1) / Math.LN10);\n                    }\n                    else {\n                        doextra(ptrunk + '.range[0]', Math.pow(10, r0));\n                        doextra(ptrunk + '.range[1]', Math.pow(10, r1));\n                    }\n                }\n                else if(toLog) {\n                    // just make sure the range is positive and in the right\n                    // order, it'll get recalculated later\n                    ax.range = (ax.range[1] > ax.range[0]) ? [1, 2] : [2, 1];\n                }\n\n                // clear polar view initial stash for radial range so that\n                // value get recomputed in correct units\n                if(Array.isArray(fullLayout._subplots.polar) &&\n                    fullLayout._subplots.polar.length &&\n                    fullLayout[p.parts[0]] &&\n                    p.parts[1] === 'radialaxis'\n                ) {\n                    delete fullLayout[p.parts[0]]._subplot.viewInitial['radialaxis.range'];\n                }\n\n                // Annotations and images also need to convert to/from linearized coords\n                // Shapes do not need this :)\n                Registry.getComponentMethod('annotations', 'convertCoords')(gd, parentFull, vi, doextra);\n                Registry.getComponentMethod('images', 'convertCoords')(gd, parentFull, vi, doextra);\n            }\n            else {\n                // any other type changes: the range from the previous type\n                // will not make sense, so autorange it.\n                doextra(ptrunk + '.autorange', true);\n                doextra(ptrunk + '.range', null);\n            }\n            Lib.nestedProperty(fullLayout, ptrunk + '._inputRange').set(null);\n        }\n        else if(pleaf.match(cartesianConstants.AX_NAME_PATTERN)) {\n            var fullProp = Lib.nestedProperty(fullLayout, ai).get(),\n                newType = (vi || {}).type;\n\n            // This can potentially cause strange behavior if the autotype is not\n            // numeric (linear, because we don't auto-log) but the previous type\n            // was log. That's a very strange edge case though\n            if(!newType || newType === '-') newType = 'linear';\n            Registry.getComponentMethod('annotations', 'convertCoords')(gd, fullProp, newType, doextra);\n            Registry.getComponentMethod('images', 'convertCoords')(gd, fullProp, newType, doextra);\n        }\n\n        // alter gd.layout\n\n        // collect array component edits for execution all together\n        // so we can ensure consistent behavior adding/removing items\n        // and order-independence for add/remove/edit all together in\n        // one relayout call\n        var containerArrayMatch = manageArrays.containerArrayMatch(ai);\n        if(containerArrayMatch) {\n            arrayStr = containerArrayMatch.array;\n            i = containerArrayMatch.index;\n            var propStr = containerArrayMatch.property;\n            var componentArray = Lib.nestedProperty(layout, arrayStr);\n            var obji = (componentArray || [])[i] || {};\n            var objToAutorange = obji;\n\n            var updateValObject = valObject || {editType: 'calc'};\n            var checkForAutorange = updateValObject.editType.indexOf('calcIfAutorange') !== -1;\n\n            if(i === '') {\n                // replacing the entire array - too many possibilities, just recalc\n                if(checkForAutorange) flags.calc = true;\n                else editTypes.update(flags, updateValObject);\n                checkForAutorange = false; // clear this, we're already doing a recalc\n            }\n            else if(propStr === '') {\n                // special handling of undoit if we're adding or removing an element\n                // ie 'annotations[2]' which can be {...} (add) or null (remove)\n                objToAutorange = vi;\n                if(manageArrays.isAddVal(vi)) {\n                    undoit[ai] = null;\n                }\n                else if(manageArrays.isRemoveVal(vi)) {\n                    undoit[ai] = obji;\n                    objToAutorange = obji;\n                }\n                else Lib.warn('unrecognized full object value', aobj);\n            }\n\n            if(checkForAutorange && (refAutorange(objToAutorange, 'x') || refAutorange(objToAutorange, 'y'))) {\n                flags.calc = true;\n            }\n            else editTypes.update(flags, updateValObject);\n\n\n            // prepare the edits object we'll send to applyContainerArrayChanges\n            if(!arrayEdits[arrayStr]) arrayEdits[arrayStr] = {};\n            var objEdits = arrayEdits[arrayStr][i];\n            if(!objEdits) objEdits = arrayEdits[arrayStr][i] = {};\n            objEdits[propStr] = vi;\n\n            delete aobj[ai];\n        }\n        // handle axis reversal explicitly, as there's no 'reverse' attribute\n        else if(pleaf === 'reverse') {\n            if(parentIn.range) parentIn.range.reverse();\n            else {\n                doextra(ptrunk + '.autorange', true);\n                parentIn.range = [1, 0];\n            }\n\n            if(parentFull.autorange) flags.calc = true;\n            else flags.plot = true;\n        }\n        else {\n            if((fullLayout._has('gl2d') || fullLayout._has('regl')) &&\n                (ai === 'dragmode' &&\n                (vi === 'lasso' || vi === 'select') &&\n                !(vOld === 'lasso' || vOld === 'select'))\n            ) {\n                flags.calc = true;\n            }\n            else if(valObject) editTypes.update(flags, valObject);\n            else flags.calc = true;\n\n            p.set(vi);\n        }\n    }\n\n    // now we've collected component edits - execute them all together\n    for(arrayStr in arrayEdits) {\n        var finished = manageArrays.applyContainerArrayChanges(gd,\n            Lib.nestedProperty(layout, arrayStr), arrayEdits[arrayStr], flags);\n        if(!finished) flags.plot = true;\n    }\n\n    // figure out if we need to recalculate axis constraints\n    var constraints = fullLayout._axisConstraintGroups || [];\n    for(axId in rangesAltered) {\n        for(i = 0; i < constraints.length; i++) {\n            var group = constraints[i];\n            if(group[axId]) {\n                // Always recalc if we're changing constrained ranges.\n                // Otherwise it's possible to violate the constraints by\n                // specifying arbitrary ranges for all axes in the group.\n                // this way some ranges may expand beyond what's specified,\n                // as they do at first draw, to satisfy the constraints.\n                flags.calc = true;\n                for(var groupAxId in group) {\n                    if(!rangesAltered[groupAxId]) {\n                        axisIds.getFromId(gd, groupAxId)._constraintShrinkable = true;\n                    }\n                }\n            }\n        }\n    }\n\n    var oldWidth = fullLayout.width,\n        oldHeight = fullLayout.height;\n\n    // calculate autosizing\n    if(gd.layout.autosize) Plots.plotAutoSize(gd, gd.layout, fullLayout);\n\n    // avoid unnecessary redraws\n    var hasSizechanged = aobj.height || aobj.width ||\n        (fullLayout.width !== oldWidth) ||\n        (fullLayout.height !== oldHeight);\n\n    if(hasSizechanged) flags.calc = true;\n\n    if(flags.plot || flags.calc) {\n        flags.layoutReplot = true;\n    }\n\n    // now all attribute mods are done, as are\n    // redo and undo so we can save them\n\n    return {\n        flags: flags,\n        undoit: undoit,\n        redoit: redoit,\n        eventData: Lib.extendDeep({}, redoit)\n    };\n}\n\n/**\n * update: update trace and layout attributes of an existing plot\n *\n * @param {String | HTMLDivElement} gd\n *  the id or DOM element of the graph container div\n * @param {Object} traceUpdate\n *  attribute object `{astr1: val1, astr2: val2 ...}`\n *  corresponding to updates in the plot's traces\n * @param {Object} layoutUpdate\n *  attribute object `{astr1: val1, astr2: val2 ...}`\n *  corresponding to updates in the plot's layout\n * @param {Number[] | Number} [traces]\n *  integer or array of integers for the traces to alter (all if omitted)\n *\n */\nPlotly.update = function update(gd, traceUpdate, layoutUpdate, _traces) {\n    gd = Lib.getGraphDiv(gd);\n    helpers.clearPromiseQueue(gd);\n\n    if(gd.framework && gd.framework.isPolar) {\n        return Promise.resolve(gd);\n    }\n\n    if(!Lib.isPlainObject(traceUpdate)) traceUpdate = {};\n    if(!Lib.isPlainObject(layoutUpdate)) layoutUpdate = {};\n\n    if(Object.keys(traceUpdate).length) gd.changed = true;\n    if(Object.keys(layoutUpdate).length) gd.changed = true;\n\n    var traces = helpers.coerceTraceIndices(gd, _traces);\n\n    var restyleSpecs = _restyle(gd, Lib.extendFlat({}, traceUpdate), traces),\n        restyleFlags = restyleSpecs.flags;\n\n    var relayoutSpecs = _relayout(gd, Lib.extendFlat({}, layoutUpdate)),\n        relayoutFlags = relayoutSpecs.flags;\n\n    // clear calcdata and/or axis types if required\n    if(restyleFlags.clearCalc || relayoutFlags.calc) gd.calcdata = undefined;\n    if(restyleFlags.clearAxisTypes) helpers.clearAxisTypes(gd, traces, layoutUpdate);\n\n    // fill in redraw sequence\n    var seq = [];\n\n    if(restyleFlags.fullReplot && relayoutFlags.layoutReplot) {\n        var data = gd.data,\n            layout = gd.layout;\n\n        // clear existing data/layout on gd\n        // so that Plotly.plot doesn't try to extend them\n        gd.data = undefined;\n        gd.layout = undefined;\n\n        seq.push(function() { return Plotly.plot(gd, data, layout); });\n    }\n    else if(restyleFlags.fullReplot) {\n        seq.push(Plotly.plot);\n    }\n    else if(relayoutFlags.layoutReplot) {\n        seq.push(subroutines.layoutReplot);\n    }\n    else {\n        seq.push(Plots.previousPromises);\n        Plots.supplyDefaults(gd);\n\n        if(restyleFlags.style) seq.push(subroutines.doTraceStyle);\n        if(restyleFlags.colorbars) seq.push(subroutines.doColorBars);\n        if(relayoutFlags.legend) seq.push(subroutines.doLegend);\n        if(relayoutFlags.layoutstyle) seq.push(subroutines.layoutStyles);\n        if(relayoutFlags.ticks) seq.push(subroutines.doTicksRelayout);\n        if(relayoutFlags.modebar) seq.push(subroutines.doModeBar);\n        if(relayoutFlags.camera) seq.push(subroutines.doCamera);\n    }\n\n    seq.push(Plots.rehover);\n\n    Queue.add(gd,\n        update, [gd, restyleSpecs.undoit, relayoutSpecs.undoit, restyleSpecs.traces],\n        update, [gd, restyleSpecs.redoit, relayoutSpecs.redoit, restyleSpecs.traces]\n    );\n\n    var plotDone = Lib.syncOrAsync(seq, gd);\n    if(!plotDone || !plotDone.then) plotDone = Promise.resolve(gd);\n\n    return plotDone.then(function() {\n        gd.emit('plotly_update', {\n            data: restyleSpecs.eventData,\n            layout: relayoutSpecs.eventData\n        });\n\n        return gd;\n    });\n};\n\n/**\n * Animate to a frame, sequence of frame, frame group, or frame definition\n *\n * @param {string id or DOM element} gd\n *      the id or DOM element of the graph container div\n *\n * @param {string or object or array of strings or array of objects} frameOrGroupNameOrFrameList\n *      a single frame, array of frames, or group to which to animate. The intent is\n *      inferred by the type of the input. Valid inputs are:\n *\n *      - string, e.g. 'groupname': animate all frames of a given `group` in the order\n *            in which they are defined via `Plotly.addFrames`.\n *\n *      - array of strings, e.g. ['frame1', frame2']: a list of frames by name to which\n *            to animate in sequence\n *\n *      - object: {data: ...}: a frame definition to which to animate. The frame is not\n *            and does not need to be added via `Plotly.addFrames`. It may contain any of\n *            the properties of a frame, including `data`, `layout`, and `traces`. The\n *            frame is used as provided and does not use the `baseframe` property.\n *\n *      - array of objects, e.g. [{data: ...}, {data: ...}]: a list of frame objects,\n *            each following the same rules as a single `object`.\n *\n * @param {object} animationOpts\n *      configuration for the animation\n */\nPlotly.animate = function(gd, frameOrGroupNameOrFrameList, animationOpts) {\n    gd = Lib.getGraphDiv(gd);\n\n    if(!Lib.isPlotDiv(gd)) {\n        throw new Error(\n            'This element is not a Plotly plot: ' + gd + '. It\\'s likely that you\\'ve failed ' +\n            'to create a plot before animating it. For more details, see ' +\n            'https://plot.ly/javascript/animations/'\n        );\n    }\n\n    var trans = gd._transitionData;\n\n    // This is the queue of frames that will be animated as soon as possible. They\n    // are popped immediately upon the *start* of a transition:\n    if(!trans._frameQueue) {\n        trans._frameQueue = [];\n    }\n\n    animationOpts = Plots.supplyAnimationDefaults(animationOpts);\n    var transitionOpts = animationOpts.transition;\n    var frameOpts = animationOpts.frame;\n\n    // Since frames are popped immediately, an empty queue only means all frames have\n    // *started* to transition, not that the animation is complete. To solve that,\n    // track a separate counter that increments at the same time as frames are added\n    // to the queue, but decrements only when the transition is complete.\n    if(trans._frameWaitingCnt === undefined) {\n        trans._frameWaitingCnt = 0;\n    }\n\n    function getTransitionOpts(i) {\n        if(Array.isArray(transitionOpts)) {\n            if(i >= transitionOpts.length) {\n                return transitionOpts[0];\n            } else {\n                return transitionOpts[i];\n            }\n        } else {\n            return transitionOpts;\n        }\n    }\n\n    function getFrameOpts(i) {\n        if(Array.isArray(frameOpts)) {\n            if(i >= frameOpts.length) {\n                return frameOpts[0];\n            } else {\n                return frameOpts[i];\n            }\n        } else {\n            return frameOpts;\n        }\n    }\n\n    // Execute a callback after the wrapper function has been called n times.\n    // This is used to defer the resolution until a transition has resovled *and*\n    // the frame has completed. If it's not done this way, then we get a race\n    // condition in which the animation might resolve before a transition is complete\n    // or vice versa.\n    function callbackOnNthTime(cb, n) {\n        var cnt = 0;\n        return function() {\n            if(cb && ++cnt === n) {\n                return cb();\n            }\n        };\n    }\n\n    return new Promise(function(resolve, reject) {\n        function discardExistingFrames() {\n            if(trans._frameQueue.length === 0) {\n                return;\n            }\n\n            while(trans._frameQueue.length) {\n                var next = trans._frameQueue.pop();\n                if(next.onInterrupt) {\n                    next.onInterrupt();\n                }\n            }\n\n            gd.emit('plotly_animationinterrupted', []);\n        }\n\n        function queueFrames(frameList) {\n            if(frameList.length === 0) return;\n\n            for(var i = 0; i < frameList.length; i++) {\n                var computedFrame;\n\n                if(frameList[i].type === 'byname') {\n                    // If it's a named frame, compute it:\n                    computedFrame = Plots.computeFrame(gd, frameList[i].name);\n                } else {\n                    // Otherwise we must have been given a simple object, so treat\n                    // the input itself as the computed frame.\n                    computedFrame = frameList[i].data;\n                }\n\n                var frameOpts = getFrameOpts(i);\n                var transitionOpts = getTransitionOpts(i);\n\n                // It doesn't make much sense for the transition duration to be greater than\n                // the frame duration, so limit it:\n                transitionOpts.duration = Math.min(transitionOpts.duration, frameOpts.duration);\n\n                var nextFrame = {\n                    frame: computedFrame,\n                    name: frameList[i].name,\n                    frameOpts: frameOpts,\n                    transitionOpts: transitionOpts,\n                };\n                if(i === frameList.length - 1) {\n                    // The last frame in this .animate call stores the promise resolve\n                    // and reject callbacks. This is how we ensure that the animation\n                    // loop (which may exist as a result of a *different* .animate call)\n                    // still resolves or rejecdts this .animate call's promise. once it's\n                    // complete.\n                    nextFrame.onComplete = callbackOnNthTime(resolve, 2);\n                    nextFrame.onInterrupt = reject;\n                }\n\n                trans._frameQueue.push(nextFrame);\n            }\n\n            // Set it as never having transitioned to a frame. This will cause the animation\n            // loop to immediately transition to the next frame (which, for immediate mode,\n            // is the first frame in the list since all others would have been discarded\n            // below)\n            if(animationOpts.mode === 'immediate') {\n                trans._lastFrameAt = -Infinity;\n            }\n\n            // Only it's not already running, start a RAF loop. This could be avoided in the\n            // case that there's only one frame, but it significantly complicated the logic\n            // and only sped things up by about 5% or so for a lorenz attractor simulation.\n            // It would be a fine thing to implement, but the benefit of that optimization\n            // doesn't seem worth the extra complexity.\n            if(!trans._animationRaf) {\n                beginAnimationLoop();\n            }\n        }\n\n        function stopAnimationLoop() {\n            gd.emit('plotly_animated');\n\n            // Be sure to unset also since it's how we know whether a loop is already running:\n            window.cancelAnimationFrame(trans._animationRaf);\n            trans._animationRaf = null;\n        }\n\n        function nextFrame() {\n            if(trans._currentFrame && trans._currentFrame.onComplete) {\n                // Execute the callback and unset it to ensure it doesn't\n                // accidentally get called twice\n                trans._currentFrame.onComplete();\n            }\n\n            var newFrame = trans._currentFrame = trans._frameQueue.shift();\n\n            if(newFrame) {\n                // Since it's sometimes necessary to do deep digging into frame data,\n                // we'll consider it not 100% impossible for nulls or numbers to sneak through,\n                // so check when casting the name, just to be absolutely certain:\n                var stringName = newFrame.name ? newFrame.name.toString() : null;\n                gd._fullLayout._currentFrame = stringName;\n\n                trans._lastFrameAt = Date.now();\n                trans._timeToNext = newFrame.frameOpts.duration;\n\n                // This is simply called and it's left to .transition to decide how to manage\n                // interrupting current transitions. That means we don't need to worry about\n                // how it resolves or what happens after this:\n                Plots.transition(gd,\n                    newFrame.frame.data,\n                    newFrame.frame.layout,\n                    helpers.coerceTraceIndices(gd, newFrame.frame.traces),\n                    newFrame.frameOpts,\n                    newFrame.transitionOpts\n                ).then(function() {\n                    if(newFrame.onComplete) {\n                        newFrame.onComplete();\n                    }\n\n                });\n\n                gd.emit('plotly_animatingframe', {\n                    name: stringName,\n                    frame: newFrame.frame,\n                    animation: {\n                        frame: newFrame.frameOpts,\n                        transition: newFrame.transitionOpts,\n                    }\n                });\n            } else {\n                // If there are no more frames, then stop the RAF loop:\n                stopAnimationLoop();\n            }\n        }\n\n        function beginAnimationLoop() {\n            gd.emit('plotly_animating');\n\n            // If no timer is running, then set last frame = long ago so that the next\n            // frame is immediately transitioned:\n            trans._lastFrameAt = -Infinity;\n            trans._timeToNext = 0;\n            trans._runningTransitions = 0;\n            trans._currentFrame = null;\n\n            var doFrame = function() {\n                // This *must* be requested before nextFrame since nextFrame may decide\n                // to cancel it if there's nothing more to animated:\n                trans._animationRaf = window.requestAnimationFrame(doFrame);\n\n                // Check if we're ready for a new frame:\n                if(Date.now() - trans._lastFrameAt > trans._timeToNext) {\n                    nextFrame();\n                }\n            };\n\n            doFrame();\n        }\n\n        // This is an animate-local counter that helps match up option input list\n        // items with the particular frame.\n        var configCounter = 0;\n        function setTransitionConfig(frame) {\n            if(Array.isArray(transitionOpts)) {\n                if(configCounter >= transitionOpts.length) {\n                    frame.transitionOpts = transitionOpts[configCounter];\n                } else {\n                    frame.transitionOpts = transitionOpts[0];\n                }\n            } else {\n                frame.transitionOpts = transitionOpts;\n            }\n            configCounter++;\n            return frame;\n        }\n\n        // Disambiguate what's sort of frames have been received\n        var i, frame;\n        var frameList = [];\n        var allFrames = frameOrGroupNameOrFrameList === undefined || frameOrGroupNameOrFrameList === null;\n        var isFrameArray = Array.isArray(frameOrGroupNameOrFrameList);\n        var isSingleFrame = !allFrames && !isFrameArray && Lib.isPlainObject(frameOrGroupNameOrFrameList);\n\n        if(isSingleFrame) {\n            // In this case, a simple object has been passed to animate.\n            frameList.push({\n                type: 'object',\n                data: setTransitionConfig(Lib.extendFlat({}, frameOrGroupNameOrFrameList))\n            });\n        } else if(allFrames || ['string', 'number'].indexOf(typeof frameOrGroupNameOrFrameList) !== -1) {\n            // In this case, null or undefined has been passed so that we want to\n            // animate *all* currently defined frames\n            for(i = 0; i < trans._frames.length; i++) {\n                frame = trans._frames[i];\n\n                if(!frame) continue;\n\n                if(allFrames || String(frame.group) === String(frameOrGroupNameOrFrameList)) {\n                    frameList.push({\n                        type: 'byname',\n                        name: String(frame.name),\n                        data: setTransitionConfig({name: frame.name})\n                    });\n                }\n            }\n        } else if(isFrameArray) {\n            for(i = 0; i < frameOrGroupNameOrFrameList.length; i++) {\n                var frameOrName = frameOrGroupNameOrFrameList[i];\n                if(['number', 'string'].indexOf(typeof frameOrName) !== -1) {\n                    frameOrName = String(frameOrName);\n                    // In this case, there's an array and this frame is a string name:\n                    frameList.push({\n                        type: 'byname',\n                        name: frameOrName,\n                        data: setTransitionConfig({name: frameOrName})\n                    });\n                } else if(Lib.isPlainObject(frameOrName)) {\n                    frameList.push({\n                        type: 'object',\n                        data: setTransitionConfig(Lib.extendFlat({}, frameOrName))\n                    });\n                }\n            }\n        }\n\n        // Verify that all of these frames actually exist; return and reject if not:\n        for(i = 0; i < frameList.length; i++) {\n            frame = frameList[i];\n            if(frame.type === 'byname' && !trans._frameHash[frame.data.name]) {\n                Lib.warn('animate failure: frame not found: \"' + frame.data.name + '\"');\n                reject();\n                return;\n            }\n        }\n\n        // If the mode is either next or immediate, then all currently queued frames must\n        // be dumped and the corresponding .animate promises rejected.\n        if(['next', 'immediate'].indexOf(animationOpts.mode) !== -1) {\n            discardExistingFrames();\n        }\n\n        if(animationOpts.direction === 'reverse') {\n            frameList.reverse();\n        }\n\n        var currentFrame = gd._fullLayout._currentFrame;\n        if(currentFrame && animationOpts.fromcurrent) {\n            var idx = -1;\n            for(i = 0; i < frameList.length; i++) {\n                frame = frameList[i];\n                if(frame.type === 'byname' && frame.name === currentFrame) {\n                    idx = i;\n                    break;\n                }\n            }\n\n            if(idx > 0 && idx < frameList.length - 1) {\n                var filteredFrameList = [];\n                for(i = 0; i < frameList.length; i++) {\n                    frame = frameList[i];\n                    if(frameList[i].type !== 'byname' || i > idx) {\n                        filteredFrameList.push(frame);\n                    }\n                }\n                frameList = filteredFrameList;\n            }\n        }\n\n        if(frameList.length > 0) {\n            queueFrames(frameList);\n        } else {\n            // This is the case where there were simply no frames. It's a little strange\n            // since there's not much to do:\n            gd.emit('plotly_animated');\n            resolve();\n        }\n    });\n};\n\n/**\n * Register new frames\n *\n * @param {string id or DOM element} gd\n *      the id or DOM element of the graph container div\n *\n * @param {array of objects} frameList\n *      list of frame definitions, in which each object includes any of:\n *      - name: {string} name of frame to add\n *      - data: {array of objects} trace data\n *      - layout {object} layout definition\n *      - traces {array} trace indices\n *      - baseframe {string} name of frame from which this frame gets defaults\n *\n *  @param {array of integers) indices\n *      an array of integer indices matching the respective frames in `frameList`. If not\n *      provided, an index will be provided in serial order. If already used, the frame\n *      will be overwritten.\n */\nPlotly.addFrames = function(gd, frameList, indices) {\n    gd = Lib.getGraphDiv(gd);\n\n    var numericNameWarningCount = 0;\n\n    if(frameList === null || frameList === undefined) {\n        return Promise.resolve();\n    }\n\n    if(!Lib.isPlotDiv(gd)) {\n        throw new Error(\n            'This element is not a Plotly plot: ' + gd + '. It\\'s likely that you\\'ve failed ' +\n            'to create a plot before adding frames. For more details, see ' +\n            'https://plot.ly/javascript/animations/'\n        );\n    }\n\n    var i, frame, j, idx;\n    var _frames = gd._transitionData._frames;\n    var _hash = gd._transitionData._frameHash;\n\n\n    if(!Array.isArray(frameList)) {\n        throw new Error('addFrames failure: frameList must be an Array of frame definitions' + frameList);\n    }\n\n    // Create a sorted list of insertions since we run into lots of problems if these\n    // aren't in ascending order of index:\n    //\n    // Strictly for sorting. Make sure this is guaranteed to never collide with any\n    // already-exisisting indices:\n    var bigIndex = _frames.length + frameList.length * 2;\n\n    var insertions = [];\n    for(i = frameList.length - 1; i >= 0; i--) {\n        if(!Lib.isPlainObject(frameList[i])) continue;\n\n        var name = (_hash[frameList[i].name] || {}).name;\n        var newName = frameList[i].name;\n\n        if(name && newName && typeof newName === 'number' && _hash[name]) {\n            numericNameWarningCount++;\n\n            Lib.warn('addFrames: overwriting frame \"' + _hash[name].name +\n                '\" with a frame whose name of type \"number\" also equates to \"' +\n                name + '\". This is valid but may potentially lead to unexpected ' +\n                'behavior since all plotly.js frame names are stored internally ' +\n                'as strings.');\n\n            if(numericNameWarningCount > 5) {\n                Lib.warn('addFrames: This API call has yielded too many warnings. ' +\n                    'For the rest of this call, further warnings about numeric frame ' +\n                    'names will be suppressed.');\n            }\n        }\n\n        insertions.push({\n            frame: Plots.supplyFrameDefaults(frameList[i]),\n            index: (indices && indices[i] !== undefined && indices[i] !== null) ? indices[i] : bigIndex + i\n        });\n    }\n\n    // Sort this, taking note that undefined insertions end up at the end:\n    insertions.sort(function(a, b) {\n        if(a.index > b.index) return -1;\n        if(a.index < b.index) return 1;\n        return 0;\n    });\n\n    var ops = [];\n    var revops = [];\n    var frameCount = _frames.length;\n\n    for(i = insertions.length - 1; i >= 0; i--) {\n        frame = insertions[i].frame;\n\n        if(typeof frame.name === 'number') {\n            Lib.warn('Warning: addFrames accepts frames with numeric names, but the numbers are' +\n                'implicitly cast to strings');\n\n        }\n\n        if(!frame.name) {\n            // Repeatedly assign a default name, incrementing the counter each time until\n            // we get a name that's not in the hashed lookup table:\n            while(_hash[(frame.name = 'frame ' + gd._transitionData._counter++)]);\n        }\n\n        if(_hash[frame.name]) {\n            // If frame is present, overwrite its definition:\n            for(j = 0; j < _frames.length; j++) {\n                if((_frames[j] || {}).name === frame.name) break;\n            }\n            ops.push({type: 'replace', index: j, value: frame});\n            revops.unshift({type: 'replace', index: j, value: _frames[j]});\n        } else {\n            // Otherwise insert it at the end of the list:\n            idx = Math.max(0, Math.min(insertions[i].index, frameCount));\n\n            ops.push({type: 'insert', index: idx, value: frame});\n            revops.unshift({type: 'delete', index: idx});\n            frameCount++;\n        }\n    }\n\n    var undoFunc = Plots.modifyFrames,\n        redoFunc = Plots.modifyFrames,\n        undoArgs = [gd, revops],\n        redoArgs = [gd, ops];\n\n    if(Queue) Queue.add(gd, undoFunc, undoArgs, redoFunc, redoArgs);\n\n    return Plots.modifyFrames(gd, ops);\n};\n\n/**\n * Delete frame\n *\n * @param {string id or DOM element} gd\n *      the id or DOM element of the graph container div\n *\n * @param {array of integers} frameList\n *      list of integer indices of frames to be deleted\n */\nPlotly.deleteFrames = function(gd, frameList) {\n    gd = Lib.getGraphDiv(gd);\n\n    if(!Lib.isPlotDiv(gd)) {\n        throw new Error('This element is not a Plotly plot: ' + gd);\n    }\n\n    var i, idx;\n    var _frames = gd._transitionData._frames;\n    var ops = [];\n    var revops = [];\n\n    if(!frameList) {\n        frameList = [];\n        for(i = 0; i < _frames.length; i++) {\n            frameList.push(i);\n        }\n    }\n\n    frameList = frameList.slice(0);\n    frameList.sort();\n\n    for(i = frameList.length - 1; i >= 0; i--) {\n        idx = frameList[i];\n        ops.push({type: 'delete', index: idx});\n        revops.unshift({type: 'insert', index: idx, value: _frames[idx]});\n    }\n\n    var undoFunc = Plots.modifyFrames,\n        redoFunc = Plots.modifyFrames,\n        undoArgs = [gd, revops],\n        redoArgs = [gd, ops];\n\n    if(Queue) Queue.add(gd, undoFunc, undoArgs, redoFunc, redoArgs);\n\n    return Plots.modifyFrames(gd, ops);\n};\n\n/**\n * Purge a graph container div back to its initial pre-Plotly.plot state\n *\n * @param {string id or DOM element} gd\n *      the id or DOM element of the graph container div\n */\nPlotly.purge = function purge(gd) {\n    gd = Lib.getGraphDiv(gd);\n\n    var fullLayout = gd._fullLayout || {},\n        fullData = gd._fullData || [];\n\n    // remove gl contexts\n    Plots.cleanPlot([], {}, fullData, fullLayout);\n\n    // purge properties\n    Plots.purge(gd);\n\n    // purge event emitter methods\n    Events.purge(gd);\n\n    // remove plot container\n    if(fullLayout._container) fullLayout._container.remove();\n\n    // in contrast to Plotly.Plots.purge which does NOT clear _context!\n    delete gd._context;\n\n    return gd;\n};\n\n// -------------------------------------------------------\n// makePlotFramework: Create the plot container and axes\n// -------------------------------------------------------\nfunction makePlotFramework(gd) {\n    var gd3 = d3.select(gd);\n    var fullLayout = gd._fullLayout;\n\n    // Plot container\n    fullLayout._container = gd3.selectAll('.plot-container').data([0]);\n    fullLayout._container.enter().insert('div', ':first-child')\n        .classed('plot-container', true)\n        .classed('plotly', true);\n\n    // Make the svg container\n    fullLayout._paperdiv = fullLayout._container.selectAll('.svg-container').data([0]);\n    fullLayout._paperdiv.enter().append('div')\n        .classed('svg-container', true)\n        .style('position', 'relative');\n\n    // Make the graph containers\n    // start fresh each time we get here, so we know the order comes out\n    // right, rather than enter/exit which can muck up the order\n    // TODO: sort out all the ordering so we don't have to\n    // explicitly delete anything\n    // FIXME: parcoords reuses this object, not the best pattern\n    fullLayout._glcontainer = fullLayout._paperdiv.selectAll('.gl-container')\n        .data([{}]);\n\n    fullLayout._glcontainer.enter().append('div')\n        .classed('gl-container', true);\n\n    // That is initialized in drawFramework if there are `gl` traces\n    fullLayout._glcanvas = null;\n\n    fullLayout._paperdiv.selectAll('.main-svg').remove();\n\n    fullLayout._paper = fullLayout._paperdiv.insert('svg', ':first-child')\n        .classed('main-svg', true);\n\n    fullLayout._toppaper = fullLayout._paperdiv.append('svg')\n        .classed('main-svg', true);\n\n    if(!fullLayout._uid) {\n        var otherUids = [];\n        d3.selectAll('defs').each(function() {\n            if(this.id) otherUids.push(this.id.split('-')[1]);\n        });\n        fullLayout._uid = Lib.randstr(otherUids);\n    }\n\n    fullLayout._paperdiv.selectAll('.main-svg')\n        .attr(xmlnsNamespaces.svgAttrs);\n\n    fullLayout._defs = fullLayout._paper.append('defs')\n        .attr('id', 'defs-' + fullLayout._uid);\n\n    fullLayout._clips = fullLayout._defs.append('g')\n        .classed('clips', true);\n\n    fullLayout._topdefs = fullLayout._toppaper.append('defs')\n        .attr('id', 'topdefs-' + fullLayout._uid);\n\n    fullLayout._topclips = fullLayout._topdefs.append('g')\n        .classed('clips', true);\n\n    fullLayout._bgLayer = fullLayout._paper.append('g')\n        .classed('bglayer', true);\n\n    fullLayout._draggers = fullLayout._paper.append('g')\n        .classed('draglayer', true);\n\n    // lower shape/image layer - note that this is behind\n    // all subplots data/grids but above the backgrounds\n    // except inset subplots, whose backgrounds are drawn\n    // inside their own group so that they appear above\n    // the data for the main subplot\n    // lower shapes and images which are fully referenced to\n    // a subplot still get drawn within the subplot's group\n    // so they will work correctly on insets\n    var layerBelow = fullLayout._paper.append('g')\n        .classed('layer-below', true);\n    fullLayout._imageLowerLayer = layerBelow.append('g')\n        .classed('imagelayer', true);\n    fullLayout._shapeLowerLayer = layerBelow.append('g')\n        .classed('shapelayer', true);\n\n    // single cartesian layer for the whole plot\n    fullLayout._cartesianlayer = fullLayout._paper.append('g').classed('cartesianlayer', true);\n\n    // single polar layer for the whole plot\n    fullLayout._polarlayer = fullLayout._paper.append('g').classed('polarlayer', true);\n\n    // single ternary layer for the whole plot\n    fullLayout._ternarylayer = fullLayout._paper.append('g').classed('ternarylayer', true);\n\n    // single geo layer for the whole plot\n    fullLayout._geolayer = fullLayout._paper.append('g').classed('geolayer', true);\n\n    // single pie layer for the whole plot\n    fullLayout._pielayer = fullLayout._paper.append('g').classed('pielayer', true);\n\n    // fill in image server scrape-svg\n    fullLayout._glimages = fullLayout._paper.append('g').classed('glimages', true);\n\n    // lastly upper shapes, info (legend, annotations) and hover layers go on top\n    // these are in a different svg element normally, but get collapsed into a single\n    // svg when exporting (after inserting 3D)\n    // upper shapes/images are only those drawn above the whole plot, including subplots\n    var layerAbove = fullLayout._toppaper.append('g')\n        .classed('layer-above', true);\n    fullLayout._imageUpperLayer = layerAbove.append('g')\n        .classed('imagelayer', true);\n    fullLayout._shapeUpperLayer = layerAbove.append('g')\n        .classed('shapelayer', true);\n\n    fullLayout._infolayer = fullLayout._toppaper.append('g').classed('infolayer', true);\n    fullLayout._menulayer = fullLayout._toppaper.append('g').classed('menulayer', true);\n    fullLayout._zoomlayer = fullLayout._toppaper.append('g').classed('zoomlayer', true);\n    fullLayout._hoverlayer = fullLayout._toppaper.append('g').classed('hoverlayer', true);\n\n    gd.emit('plotly_framework');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plot_api/plot_api.js\n// module id = 171\n// module chunks = 0","module.exports = true;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-browser/client.js\n// module id = 172\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Polar = module.exports = require('./micropolar');\n\nPolar.manager = require('./micropolar_manager');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/polar/legacy/index.js\n// module id = 173\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n/* eslint-disable new-cap */\n\n'use strict';\n\nvar d3 = require('d3');\nvar Lib = require('../../../lib');\nvar Color = require('../../../components/color');\n\nvar micropolar = require('./micropolar');\nvar UndoManager = require('./undo_manager');\nvar extendDeepAll = Lib.extendDeepAll;\n\nvar manager = module.exports = {};\n\nmanager.framework = function(_gd) {\n    var config, previousConfigClone, plot, convertedInput, container;\n    var undoManager = new UndoManager();\n\n    function exports(_inputConfig, _container) {\n        if(_container) container = _container;\n        d3.select(d3.select(container).node().parentNode).selectAll('.svg-container>*:not(.chart-root)').remove();\n\n        config = (!config) ?\n            _inputConfig :\n            extendDeepAll(config, _inputConfig);\n\n        if(!plot) plot = micropolar.Axis();\n        convertedInput = micropolar.adapter.plotly().convert(config);\n        plot.config(convertedInput).render(container);\n        _gd.data = config.data;\n        _gd.layout = config.layout;\n        manager.fillLayout(_gd);\n        return config;\n    }\n    exports.isPolar = true;\n    exports.svg = function() { return plot.svg(); };\n    exports.getConfig = function() { return config; };\n    exports.getLiveConfig = function() {\n        return micropolar.adapter.plotly().convert(plot.getLiveConfig(), true);\n    };\n    exports.getLiveScales = function() { return {t: plot.angularScale(), r: plot.radialScale()}; };\n    exports.setUndoPoint = function() {\n        var that = this;\n        var configClone = micropolar.util.cloneJson(config);\n        (function(_configClone, _previousConfigClone) {\n            undoManager.add({\n                undo: function() {\n                    if(_previousConfigClone) that(_previousConfigClone);\n                },\n                redo: function() {\n                    that(_configClone);\n                }\n            });\n        })(configClone, previousConfigClone);\n        previousConfigClone = micropolar.util.cloneJson(configClone);\n    };\n    exports.undo = function() { undoManager.undo(); };\n    exports.redo = function() { undoManager.redo(); };\n    return exports;\n};\n\nmanager.fillLayout = function(_gd) {\n    var container = d3.select(_gd).selectAll('.plot-container'),\n        paperDiv = container.selectAll('.svg-container'),\n        paper = _gd.framework && _gd.framework.svg && _gd.framework.svg(),\n        dflts = {\n            width: 800,\n            height: 600,\n            paper_bgcolor: Color.background,\n            _container: container,\n            _paperdiv: paperDiv,\n            _paper: paper\n        };\n\n    _gd._fullLayout = extendDeepAll(dflts, _gd.layout);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/polar/legacy/micropolar_manager.js\n// module id = 174\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n// Modified from https://github.com/ArthurClemens/Javascript-Undo-Manager\n// Copyright (c) 2010-2013 Arthur Clemens, arthur@visiblearea.com\nmodule.exports = function UndoManager() {\n    var undoCommands = [],\n        index = -1,\n        isExecuting = false,\n        callback;\n\n    function execute(command, action) {\n        if(!command) return this;\n\n        isExecuting = true;\n        command[action]();\n        isExecuting = false;\n\n        return this;\n    }\n\n    return {\n        add: function(command) {\n            if(isExecuting) return this;\n            undoCommands.splice(index + 1, undoCommands.length - index);\n            undoCommands.push(command);\n            index = undoCommands.length - 1;\n            return this;\n        },\n        setCallback: function(callbackFunc) { callback = callbackFunc; },\n        undo: function() {\n            var command = undoCommands[index];\n            if(!command) return this;\n            execute(command, 'undo');\n            index -= 1;\n            if(callback) callback(command.undo);\n            return this;\n        },\n        redo: function() {\n            var command = undoCommands[index + 1];\n            if(!command) return this;\n            execute(command, 'redo');\n            index += 1;\n            if(callback) callback(command.redo);\n            return this;\n        },\n        clear: function() {\n            undoCommands = [];\n            index = -1;\n        },\n        hasUndo: function() { return index !== -1; },\n        hasRedo: function() { return index < (undoCommands.length - 1); },\n        getCommands: function() { return undoCommands; },\n        getPreviousCommand: function() { return undoCommands[index - 1]; },\n        getIndex: function() { return index; }\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/polar/legacy/undo_manager.js\n// module id = 175\n// module chunks = 0","var rootPosition = { left: 0, top: 0 }\n\nmodule.exports = mouseEventOffset\nfunction mouseEventOffset (ev, target, out) {\n  target = target || ev.currentTarget || ev.srcElement\n  if (!Array.isArray(out)) {\n    out = [ 0, 0 ]\n  }\n  var cx = ev.clientX || 0\n  var cy = ev.clientY || 0\n  var rect = getBoundingClientOffset(target)\n  out[0] = cx - rect.left\n  out[1] = cy - rect.top\n  return out\n}\n\nfunction getBoundingClientOffset (element) {\n  if (element === window ||\n      element === document ||\n      element === document.body) {\n    return rootPosition\n  } else {\n    return element.getBoundingClientRect()\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mouse-event-offset/index.js\n// module id = 176\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\n// for automatic alignment on dragging, <1/3 means left align,\n// >2/3 means right, and between is center. Pick the right fraction\n// based on where you are, and return the fraction corresponding to\n// that position on the object\nmodule.exports = function align(v, dv, v0, v1, anchor) {\n    var vmin = (v - v0) / (v1 - v0),\n        vmax = vmin + dv / (v1 - v0),\n        vc = (vmin + vmax) / 2;\n\n    // explicitly specified anchor\n    if(anchor === 'left' || anchor === 'bottom') return vmin;\n    if(anchor === 'center' || anchor === 'middle') return vc;\n    if(anchor === 'right' || anchor === 'top') return vmax;\n\n    // automatic based on position\n    if(vmin < (2 / 3) - vc) return vmin;\n    if(vmax > (4 / 3) - vc) return vmax;\n    return vc;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/dragelement/align.js\n// module id = 177\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\n\n\n// set cursors pointing toward the closest corner/side,\n// to indicate alignment\n// x and y are 0-1, fractions of the plot area\nvar cursorset = [\n    ['sw-resize', 's-resize', 'se-resize'],\n    ['w-resize', 'move', 'e-resize'],\n    ['nw-resize', 'n-resize', 'ne-resize']\n];\n\nmodule.exports = function getCursor(x, y, xanchor, yanchor) {\n    if(xanchor === 'left') x = 0;\n    else if(xanchor === 'center') x = 1;\n    else if(xanchor === 'right') x = 2;\n    else x = Lib.constrain(Math.floor(x * 3), 0, 2);\n\n    if(yanchor === 'bottom') y = 0;\n    else if(yanchor === 'middle') y = 1;\n    else if(yanchor === 'top') y = 2;\n    else y = Lib.constrain(Math.floor(y * 3), 0, 2);\n\n    return cursorset[y][x];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/dragelement/cursor.js\n// module id = 178\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\nvar Events = require('../../lib/events');\nvar throttle = require('../../lib/throttle');\nvar getGraphDiv = require('../../lib/get_graph_div');\n\nvar hoverConstants = require('../fx/constants');\n\nvar unhover = module.exports = {};\n\n\nunhover.wrapped = function(gd, evt, subplot) {\n    gd = getGraphDiv(gd);\n\n    // Important, clear any queued hovers\n    if(gd._fullLayout) {\n        throttle.clear(gd._fullLayout._uid + hoverConstants.HOVERID);\n    }\n\n    unhover.raw(gd, evt, subplot);\n};\n\n\n// remove hover effects on mouse out, and emit unhover event\nunhover.raw = function unhoverRaw(gd, evt) {\n    var fullLayout = gd._fullLayout;\n    var oldhoverdata = gd._hoverdata;\n\n    if(!evt) evt = {};\n    if(evt.target &&\n       Events.triggerHandler(gd, 'plotly_beforehover', evt) === false) {\n        return;\n    }\n\n    fullLayout._hoverlayer.selectAll('g').remove();\n    fullLayout._hoverlayer.selectAll('line').remove();\n    fullLayout._hoverlayer.selectAll('circle').remove();\n    gd._hoverdata = undefined;\n\n    if(evt.target && oldhoverdata) {\n        gd.emit('plotly_unhover', {\n            event: evt,\n            points: oldhoverdata\n        });\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/dragelement/unhover.js\n// module id = 179\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar handleHoverLabelDefaults = require('./hoverlabel_defaults');\nvar layoutAttributes = require('./layout_attributes');\n\nmodule.exports = function supplyLayoutGlobalDefaults(layoutIn, layoutOut) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(layoutIn, layoutOut, layoutAttributes, attr, dflt);\n    }\n\n    handleHoverLabelDefaults(layoutIn, layoutOut, coerce);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/fx/layout_global_defaults.js\n// module id = 180\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar attributes = require('./attributes');\nvar handleHoverLabelDefaults = require('./hoverlabel_defaults');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    handleHoverLabelDefaults(traceIn, traceOut, coerce, layout.hoverlabel);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/fx/defaults.js\n// module id = 181\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar layoutAttributes = require('./layout_attributes');\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(layoutIn, layoutOut, layoutAttributes, attr, dflt);\n    }\n\n    coerce('dragmode');\n\n    var hovermodeDflt;\n    if(layoutOut._has('cartesian')) {\n        // flag for 'horizontal' plots:\n        // determines the state of the mode bar 'compare' hovermode button\n        layoutOut._isHoriz = isHoriz(fullData);\n        hovermodeDflt = layoutOut._isHoriz ? 'y' : 'x';\n    }\n    else hovermodeDflt = 'closest';\n\n    var hoverMode = coerce('hovermode', hovermodeDflt);\n    if(hoverMode) {\n        coerce('hoverdistance');\n        coerce('spikedistance');\n    }\n\n    // if only mapbox or geo subplots is present on graph,\n    // reset 'zoom' dragmode to 'pan' until 'zoom' is implemented,\n    // so that the correct modebar button is active\n    var hasMapbox = layoutOut._has('mapbox');\n    var hasGeo = layoutOut._has('geo');\n    var len = layoutOut._basePlotModules.length;\n\n    if(layoutOut.dragmode === 'zoom' && (\n        ((hasMapbox || hasGeo) && len === 1) ||\n        (hasMapbox && hasGeo && len === 2)\n    )) {\n        layoutOut.dragmode = 'pan';\n    }\n};\n\nfunction isHoriz(fullData) {\n    var out = true;\n\n    for(var i = 0; i < fullData.length; i++) {\n        var trace = fullData[i];\n\n        if(trace.orientation !== 'h') {\n            out = false;\n            break;\n        }\n    }\n\n    return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/fx/layout_defaults.js\n// module id = 182\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Registry = require('../../registry');\n\nmodule.exports = function calc(gd) {\n    var calcdata = gd.calcdata;\n    var fullLayout = gd._fullLayout;\n\n    function makeCoerceHoverInfo(trace) {\n        return function(val) {\n            return Lib.coerceHoverinfo({hoverinfo: val}, {_module: trace._module}, fullLayout);\n        };\n    }\n\n    for(var i = 0; i < calcdata.length; i++) {\n        var cd = calcdata[i];\n        var trace = cd[0].trace;\n\n        // don't include hover calc fields for pie traces\n        // as calcdata items might be sorted by value and\n        // won't match the data array order.\n        if(Registry.traceIs(trace, 'pie')) continue;\n\n        var fillFn = Registry.traceIs(trace, '2dMap') ? paste : Lib.fillArray;\n\n        fillFn(trace.hoverinfo, cd, 'hi', makeCoerceHoverInfo(trace));\n\n        if(!trace.hoverlabel) continue;\n\n        fillFn(trace.hoverlabel.bgcolor, cd, 'hbg');\n        fillFn(trace.hoverlabel.bordercolor, cd, 'hbc');\n        fillFn(trace.hoverlabel.font.size, cd, 'hts');\n        fillFn(trace.hoverlabel.font.color, cd, 'htc');\n        fillFn(trace.hoverlabel.font.family, cd, 'htf');\n        fillFn(trace.hoverlabel.namelength, cd, 'hnl');\n    }\n};\n\nfunction paste(traceAttr, cd, cdAttr, fn) {\n    fn = fn || Lib.identity;\n\n    if(Array.isArray(traceAttr)) {\n        cd[0][cdAttr] = fn(traceAttr);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/fx/calc.js\n// module id = 183\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar setCursor = require('./setcursor');\n\nvar STASHATTR = 'data-savedcursor';\nvar NO_CURSOR = '!!';\n\n/*\n * works with our CSS cursor classes (see css/_cursor.scss)\n * to override a previous cursor set on d3 single-element selections,\n * by moving the name of the original cursor to the data-savedcursor attr.\n * omit cursor to revert to the previously set value.\n */\nmodule.exports = function overrideCursor(el3, csr) {\n    var savedCursor = el3.attr(STASHATTR);\n    if(csr) {\n        if(!savedCursor) {\n            var classes = (el3.attr('class') || '').split(' ');\n            for(var i = 0; i < classes.length; i++) {\n                var cls = classes[i];\n                if(cls.indexOf('cursor-') === 0) {\n                    el3.attr(STASHATTR, cls.substr(7))\n                        .classed(cls, false);\n                }\n            }\n            if(!el3.attr(STASHATTR)) {\n                el3.attr(STASHATTR, NO_CURSOR);\n            }\n        }\n        setCursor(el3, csr);\n    }\n    else if(savedCursor) {\n        el3.attr(STASHATTR, null);\n\n        if(savedCursor === NO_CURSOR) setCursor(el3);\n        else setCursor(el3, savedCursor);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/lib/override_cursor.js\n// module id = 184\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar hover = require('./hover').hover;\n\nmodule.exports = function click(gd, evt, subplot) {\n    var annotationsDone = Registry.getComponentMethod('annotations', 'onClick')(gd, gd._hoverdata);\n\n    // fallback to fail-safe in case the plot type's hover method doesn't pass the subplot.\n    // Ternary, for example, didn't, but it was caught because tested.\n    if(subplot !== undefined) {\n        // The true flag at the end causes it to re-run the hover computation to figure out *which*\n        // point is being clicked. Without this, clicking is somewhat unreliable.\n        hover(gd, evt, subplot, true);\n    }\n\n    function emitClick() { gd.emit('plotly_click', {points: gd._hoverdata, event: evt}); }\n\n    if(gd._hoverdata && evt && evt.target) {\n        if(annotationsDone && annotationsDone.then) {\n            annotationsDone.then(emitClick);\n        }\n        else emitClick();\n\n        // why do we get a double event without this???\n        if(evt.stopImmediatePropagation) evt.stopImmediatePropagation();\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/fx/click.js\n// module id = 185\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar tinycolor = require('tinycolor2');\n\nvar Plotly = require('../../plotly');\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\nvar Fx = require('../../components/fx');\nvar setCursor = require('../../lib/setcursor');\nvar dragElement = require('../../components/dragelement');\nvar FROM_TL = require('../../constants/alignment').FROM_TL;\n\nvar Plots = require('../plots');\n\nvar doTicks = require('./axes').doTicks;\nvar getFromId = require('./axis_ids').getFromId;\nvar prepSelect = require('./select');\nvar scaleZoom = require('./scale_zoom');\n\nvar constants = require('./constants');\nvar MINDRAG = constants.MINDRAG;\nvar MINZOOM = constants.MINZOOM;\n\nvar supportsPassive = Lib.eventListenerOptionsSupported();\n\n// flag for showing \"doubleclick to zoom out\" only at the beginning\nvar SHOWZOOMOUTTIP = true;\n\n// dragBox: create an element to drag one or more axis ends\n// inputs:\n//      plotinfo - which subplot are we making dragboxes on?\n//      x,y,w,h - left, top, width, height of the box\n//      ns - how does this drag the vertical axis?\n//          'n' - top only\n//          's' - bottom only\n//          'ns' - top and bottom together, difference unchanged\n//      ew - same for horizontal axis\nfunction makeDragBox(gd, plotinfo, x, y, w, h, ns, ew) {\n    // mouseDown stores ms of first mousedown event in the last\n    // DBLCLICKDELAY ms on the drag bars\n    // numClicks stores how many mousedowns have been seen\n    // within DBLCLICKDELAY so we can check for click or doubleclick events\n    // dragged stores whether a drag has occurred, so we don't have to\n    // redraw unnecessarily, ie if no move bigger than MINDRAG or MINZOOM px\n    var fullLayout = gd._fullLayout;\n    var zoomlayer = gd._fullLayout._zoomlayer;\n    var isMainDrag = (ns + ew === 'nsew');\n    var singleEnd = (ns + ew).length === 1;\n\n    var subplots, xa, ya, xs, ys, pw, ph, xActive, yActive, cursor,\n        isSubplotConstrained, xaLinked, yaLinked;\n\n    function recomputeAxisLists() {\n        xa = [plotinfo.xaxis];\n        ya = [plotinfo.yaxis];\n        var xa0 = xa[0];\n        var ya0 = ya[0];\n        pw = xa0._length;\n        ph = ya0._length;\n\n        var constraintGroups = fullLayout._axisConstraintGroups;\n        var xIDs = [xa0._id];\n        var yIDs = [ya0._id];\n\n        // if we're dragging two axes at once, also drag overlays\n        subplots = [plotinfo].concat((ns && ew) ? plotinfo.overlays : []);\n\n        for(var i = 1; i < subplots.length; i++) {\n            var subplotXa = subplots[i].xaxis,\n                subplotYa = subplots[i].yaxis;\n\n            if(xa.indexOf(subplotXa) === -1) {\n                xa.push(subplotXa);\n                xIDs.push(subplotXa._id);\n            }\n\n            if(ya.indexOf(subplotYa) === -1) {\n                ya.push(subplotYa);\n                yIDs.push(subplotYa._id);\n            }\n        }\n\n        xActive = isDirectionActive(xa, ew);\n        yActive = isDirectionActive(ya, ns);\n        cursor = getDragCursor(yActive + xActive, fullLayout.dragmode);\n        xs = xa0._offset;\n        ys = ya0._offset;\n\n        var links = calcLinks(constraintGroups, xIDs, yIDs);\n        isSubplotConstrained = links.xy;\n\n        // finally make the list of axis objects to link\n        xaLinked = [];\n        for(var xLinkID in links.x) { xaLinked.push(getFromId(gd, xLinkID)); }\n        yaLinked = [];\n        for(var yLinkID in links.y) { yaLinked.push(getFromId(gd, yLinkID)); }\n    }\n\n    recomputeAxisLists();\n\n    var dragger = makeRectDragger(plotinfo, ns + ew + 'drag', cursor, x, y, w, h);\n\n    var allFixedRanges = !yActive && !xActive;\n\n    // still need to make the element if the axes are disabled\n    // but nuke its events (except for maindrag which needs them for hover)\n    // and stop there\n    if(allFixedRanges && !isMainDrag) {\n        dragger.onmousedown = null;\n        dragger.style.pointerEvents = 'none';\n        return dragger;\n    }\n\n    var dragOptions = {\n        element: dragger,\n        gd: gd,\n        plotinfo: plotinfo,\n        prepFn: function(e, startX, startY) {\n            var dragModeNow = gd._fullLayout.dragmode;\n\n            if(!allFixedRanges) {\n                if(isMainDrag) {\n                    // main dragger handles all drag modes, and changes\n                    // to pan (or to zoom if it already is pan) on shift\n                    if(e.shiftKey) {\n                        if(dragModeNow === 'pan') dragModeNow = 'zoom';\n                        else if(!isSelectOrLasso(dragModeNow)) dragModeNow = 'pan';\n                    }\n                    else if(e.ctrlKey) {\n                        dragModeNow = 'pan';\n                    }\n                }\n                // all other draggers just pan\n                else dragModeNow = 'pan';\n            }\n\n            if(dragModeNow === 'lasso') dragOptions.minDrag = 1;\n            else dragOptions.minDrag = undefined;\n\n            if(isSelectOrLasso(dragModeNow)) {\n                dragOptions.xaxes = xa;\n                dragOptions.yaxes = ya;\n                prepSelect(e, startX, startY, dragOptions, dragModeNow);\n            }\n            else if(allFixedRanges) {\n                clearSelect(zoomlayer);\n            }\n            else if(dragModeNow === 'zoom') {\n                dragOptions.moveFn = zoomMove;\n                dragOptions.doneFn = zoomDone;\n\n                // zoomMove takes care of the threshold, but we need to\n                // minimize this so that constrained zoom boxes will flip\n                // orientation at the right place\n                dragOptions.minDrag = 1;\n\n                zoomPrep(e, startX, startY);\n            }\n            else if(dragModeNow === 'pan') {\n                dragOptions.moveFn = plotDrag;\n                dragOptions.doneFn = dragTail;\n                clearSelect(zoomlayer);\n            }\n        },\n        clickFn: function(numClicks, evt) {\n            removeZoombox(gd);\n\n            if(numClicks === 2 && !singleEnd) doubleClick();\n\n            if(isMainDrag) {\n                Fx.click(gd, evt, plotinfo.id);\n            }\n            else if(numClicks === 1 && singleEnd) {\n                var ax = ns ? ya[0] : xa[0],\n                    end = (ns === 's' || ew === 'w') ? 0 : 1,\n                    attrStr = ax._name + '.range[' + end + ']',\n                    initialText = getEndText(ax, end),\n                    hAlign = 'left',\n                    vAlign = 'middle';\n\n                if(ax.fixedrange) return;\n\n                if(ns) {\n                    vAlign = (ns === 'n') ? 'top' : 'bottom';\n                    if(ax.side === 'right') hAlign = 'right';\n                }\n                else if(ew === 'e') hAlign = 'right';\n\n                if(gd._context.showAxisRangeEntryBoxes) {\n                    d3.select(dragger)\n                        .call(svgTextUtils.makeEditable, {\n                            gd: gd,\n                            immediate: true,\n                            background: fullLayout.paper_bgcolor,\n                            text: String(initialText),\n                            fill: ax.tickfont ? ax.tickfont.color : '#444',\n                            horizontalAlign: hAlign,\n                            verticalAlign: vAlign\n                        })\n                        .on('edit', function(text) {\n                            var v = ax.d2r(text);\n                            if(v !== undefined) {\n                                Plotly.relayout(gd, attrStr, v);\n                            }\n                        });\n                }\n            }\n        }\n    };\n\n    dragElement.init(dragOptions);\n\n    var x0,\n        y0,\n        box,\n        lum,\n        path0,\n        dimmed,\n        zoomMode,\n        zb,\n        corners;\n\n    // collected changes to be made to the plot by relayout at the end\n    var updates = {};\n\n    function zoomPrep(e, startX, startY) {\n        var dragBBox = dragger.getBoundingClientRect();\n        x0 = startX - dragBBox.left;\n        y0 = startY - dragBBox.top;\n        box = {l: x0, r: x0, w: 0, t: y0, b: y0, h: 0};\n        lum = gd._hmpixcount ?\n            (gd._hmlumcount / gd._hmpixcount) :\n            tinycolor(gd._fullLayout.plot_bgcolor).getLuminance();\n        path0 = 'M0,0H' + pw + 'V' + ph + 'H0V0';\n        dimmed = false;\n        zoomMode = 'xy';\n\n        zb = makeZoombox(zoomlayer, lum, xs, ys, path0);\n\n        corners = makeCorners(zoomlayer, xs, ys);\n\n        clearSelect(zoomlayer);\n    }\n\n    function zoomMove(dx0, dy0) {\n        if(gd._transitioningWithDuration) {\n            return false;\n        }\n\n        var x1 = Math.max(0, Math.min(pw, dx0 + x0)),\n            y1 = Math.max(0, Math.min(ph, dy0 + y0)),\n            dx = Math.abs(x1 - x0),\n            dy = Math.abs(y1 - y0);\n\n        box.l = Math.min(x0, x1);\n        box.r = Math.max(x0, x1);\n        box.t = Math.min(y0, y1);\n        box.b = Math.max(y0, y1);\n\n        function noZoom() {\n            zoomMode = '';\n            box.r = box.l;\n            box.t = box.b;\n            corners.attr('d', 'M0,0Z');\n        }\n\n        if(isSubplotConstrained) {\n            if(dx > MINZOOM || dy > MINZOOM) {\n                zoomMode = 'xy';\n                if(dx / pw > dy / ph) {\n                    dy = dx * ph / pw;\n                    if(y0 > y1) box.t = y0 - dy;\n                    else box.b = y0 + dy;\n                }\n                else {\n                    dx = dy * pw / ph;\n                    if(x0 > x1) box.l = x0 - dx;\n                    else box.r = x0 + dx;\n                }\n                corners.attr('d', xyCorners(box));\n            }\n            else {\n                noZoom();\n            }\n        }\n        // look for small drags in one direction or the other,\n        // and only drag the other axis\n        else if(!yActive || dy < Math.min(Math.max(dx * 0.6, MINDRAG), MINZOOM)) {\n            if(dx < MINDRAG) {\n                noZoom();\n            }\n            else {\n                box.t = 0;\n                box.b = ph;\n                zoomMode = 'x';\n                corners.attr('d', xCorners(box, y0));\n            }\n        }\n        else if(!xActive || dx < Math.min(dy * 0.6, MINZOOM)) {\n            box.l = 0;\n            box.r = pw;\n            zoomMode = 'y';\n            corners.attr('d', yCorners(box, x0));\n        }\n        else {\n            zoomMode = 'xy';\n            corners.attr('d', xyCorners(box));\n        }\n        box.w = box.r - box.l;\n        box.h = box.b - box.t;\n\n        updateZoombox(zb, corners, box, path0, dimmed, lum);\n        dimmed = true;\n    }\n\n    function zoomDone() {\n        // more strict than dragged, which allows you to come back to where you started\n        // and still count as dragged\n        if(Math.min(box.h, box.w) < MINDRAG * 2) {\n            return removeZoombox(gd);\n        }\n\n        // TODO: edit linked axes in zoomAxRanges and in dragTail\n        if(zoomMode === 'xy' || zoomMode === 'x') zoomAxRanges(xa, box.l / pw, box.r / pw, updates, xaLinked);\n        if(zoomMode === 'xy' || zoomMode === 'y') zoomAxRanges(ya, (ph - box.b) / ph, (ph - box.t) / ph, updates, yaLinked);\n\n        removeZoombox(gd);\n        dragTail();\n        showDoubleClickNotifier(gd);\n    }\n\n    // scroll zoom, on all draggers except corners\n    var scrollViewBox = [0, 0, pw, ph];\n    // wait a little after scrolling before redrawing\n    var redrawTimer = null;\n    var REDRAWDELAY = constants.REDRAWDELAY;\n    var mainplot = plotinfo.mainplot ?\n            fullLayout._plots[plotinfo.mainplot] : plotinfo;\n\n    function zoomWheel(e) {\n        // deactivate mousewheel scrolling on embedded graphs\n        // devs can override this with layout._enablescrollzoom,\n        // but _ ensures this setting won't leave their page\n        if(!gd._context.scrollZoom && !fullLayout._enablescrollzoom) {\n            return;\n        }\n\n        // If a transition is in progress, then disable any behavior:\n        if(gd._transitioningWithDuration) {\n            return Lib.pauseEvent(e);\n        }\n\n        var pc = gd.querySelector('.plotly');\n\n        recomputeAxisLists();\n\n        // if the plot has scrollbars (more than a tiny excess)\n        // disable scrollzoom too.\n        if(pc.scrollHeight - pc.clientHeight > 10 ||\n                pc.scrollWidth - pc.clientWidth > 10) {\n            return;\n        }\n\n        clearTimeout(redrawTimer);\n\n        var wheelDelta = -e.deltaY;\n        if(!isFinite(wheelDelta)) wheelDelta = e.wheelDelta / 10;\n        if(!isFinite(wheelDelta)) {\n            Lib.log('Did not find wheel motion attributes: ', e);\n            return;\n        }\n\n        var zoom = Math.exp(-Math.min(Math.max(wheelDelta, -20), 20) / 200),\n            gbb = mainplot.draglayer.select('.nsewdrag')\n                .node().getBoundingClientRect(),\n            xfrac = (e.clientX - gbb.left) / gbb.width,\n            yfrac = (gbb.bottom - e.clientY) / gbb.height,\n            i;\n\n        function zoomWheelOneAxis(ax, centerFraction, zoom) {\n            if(ax.fixedrange) return;\n\n            var axRange = Lib.simpleMap(ax.range, ax.r2l),\n                v0 = axRange[0] + (axRange[1] - axRange[0]) * centerFraction;\n            function doZoom(v) { return ax.l2r(v0 + (v - v0) * zoom); }\n            ax.range = axRange.map(doZoom);\n        }\n\n        if(ew || isSubplotConstrained) {\n            // if we're only zooming this axis because of constraints,\n            // zoom it about the center\n            if(!ew) xfrac = 0.5;\n\n            for(i = 0; i < xa.length; i++) zoomWheelOneAxis(xa[i], xfrac, zoom);\n\n            scrollViewBox[2] *= zoom;\n            scrollViewBox[0] += scrollViewBox[2] * xfrac * (1 / zoom - 1);\n        }\n        if(ns || isSubplotConstrained) {\n            if(!ns) yfrac = 0.5;\n\n            for(i = 0; i < ya.length; i++) zoomWheelOneAxis(ya[i], yfrac, zoom);\n\n            scrollViewBox[3] *= zoom;\n            scrollViewBox[1] += scrollViewBox[3] * (1 - yfrac) * (1 / zoom - 1);\n        }\n\n        // viewbox redraw at first\n        updateSubplots(scrollViewBox);\n        ticksAndAnnotations(ns, ew);\n\n        // then replot after a delay to make sure\n        // no more scrolling is coming\n        redrawTimer = setTimeout(function() {\n            scrollViewBox = [0, 0, pw, ph];\n\n            var zoomMode;\n            if(isSubplotConstrained) zoomMode = 'xy';\n            else zoomMode = (ew ? 'x' : '') + (ns ? 'y' : '');\n\n            dragTail(zoomMode);\n        }, REDRAWDELAY);\n\n        return Lib.pauseEvent(e);\n    }\n\n    // everything but the corners gets wheel zoom\n    if(ns.length * ew.length !== 1) {\n        attachWheelEventHandler(dragger, zoomWheel);\n    }\n\n    // plotDrag: move the plot in response to a drag\n    function plotDrag(dx, dy) {\n        // If a transition is in progress, then disable any behavior:\n        if(gd._transitioningWithDuration) {\n            return;\n        }\n\n        recomputeAxisLists();\n\n        if(xActive === 'ew' || yActive === 'ns') {\n            if(xActive) dragAxList(xa, dx);\n            if(yActive) dragAxList(ya, dy);\n            updateSubplots([xActive ? -dx : 0, yActive ? -dy : 0, pw, ph]);\n            ticksAndAnnotations(yActive, xActive);\n            return;\n        }\n\n        // dz: set a new value for one end (0 or 1) of an axis array axArray,\n        // and return a pixel shift for that end for the viewbox\n        // based on pixel drag distance d\n        // TODO: this makes (generally non-fatal) errors when you get\n        // near floating point limits\n        function dz(axArray, end, d) {\n            var otherEnd = 1 - end,\n                movedAx,\n                newLinearizedEnd;\n            for(var i = 0; i < axArray.length; i++) {\n                var axi = axArray[i];\n                if(axi.fixedrange) continue;\n                movedAx = axi;\n                newLinearizedEnd = axi._rl[otherEnd] +\n                    (axi._rl[end] - axi._rl[otherEnd]) / dZoom(d / axi._length);\n                var newEnd = axi.l2r(newLinearizedEnd);\n\n                // if l2r comes back false or undefined, it means we've dragged off\n                // the end of valid ranges - so stop.\n                if(newEnd !== false && newEnd !== undefined) axi.range[end] = newEnd;\n            }\n            return movedAx._length * (movedAx._rl[end] - newLinearizedEnd) /\n                (movedAx._rl[end] - movedAx._rl[otherEnd]);\n        }\n\n        if(isSubplotConstrained && xActive && yActive) {\n            // dragging a corner of a constrained subplot:\n            // respect the fixed corner, but harmonize dx and dy\n            var dxySign = ((xActive === 'w') === (yActive === 'n')) ? 1 : -1;\n            var dxyFraction = (dx / pw + dxySign * dy / ph) / 2;\n            dx = dxyFraction * pw;\n            dy = dxySign * dxyFraction * ph;\n        }\n\n        if(xActive === 'w') dx = dz(xa, 0, dx);\n        else if(xActive === 'e') dx = dz(xa, 1, -dx);\n        else if(!xActive) dx = 0;\n\n        if(yActive === 'n') dy = dz(ya, 1, dy);\n        else if(yActive === 's') dy = dz(ya, 0, -dy);\n        else if(!yActive) dy = 0;\n\n        var x0 = (xActive === 'w') ? dx : 0;\n        var y0 = (yActive === 'n') ? dy : 0;\n\n        if(isSubplotConstrained) {\n            var i;\n            if(!xActive && yActive.length === 1) {\n                // dragging one end of the y axis of a constrained subplot\n                // scale the other axis the same about its middle\n                for(i = 0; i < xa.length; i++) {\n                    xa[i].range = xa[i]._r.slice();\n                    scaleZoom(xa[i], 1 - dy / ph);\n                }\n                dx = dy * pw / ph;\n                x0 = dx / 2;\n            }\n            if(!yActive && xActive.length === 1) {\n                for(i = 0; i < ya.length; i++) {\n                    ya[i].range = ya[i]._r.slice();\n                    scaleZoom(ya[i], 1 - dx / pw);\n                }\n                dy = dx * ph / pw;\n                y0 = dy / 2;\n            }\n        }\n\n        updateSubplots([x0, y0, pw - dx, ph - dy]);\n\n        ticksAndAnnotations(yActive, xActive);\n    }\n\n    // Draw ticks and annotations (and other components) when ranges change.\n    // Also records the ranges that have changed for use by update at the end.\n    function ticksAndAnnotations(ns, ew) {\n        var activeAxIds = [],\n            i;\n\n        function pushActiveAxIds(axList) {\n            for(i = 0; i < axList.length; i++) {\n                if(!axList[i].fixedrange) activeAxIds.push(axList[i]._id);\n            }\n        }\n\n        if(ew || isSubplotConstrained) {\n            pushActiveAxIds(xa);\n            pushActiveAxIds(xaLinked);\n        }\n        if(ns || isSubplotConstrained) {\n            pushActiveAxIds(ya);\n            pushActiveAxIds(yaLinked);\n        }\n\n        updates = {};\n        for(i = 0; i < activeAxIds.length; i++) {\n            var axId = activeAxIds[i];\n            doTicks(gd, axId, true);\n            var ax = getFromId(gd, axId);\n            updates[ax._name + '.range[0]'] = ax.range[0];\n            updates[ax._name + '.range[1]'] = ax.range[1];\n        }\n\n        function redrawObjs(objArray, method, shortCircuit) {\n            for(i = 0; i < objArray.length; i++) {\n                var obji = objArray[i];\n\n                if((ew && activeAxIds.indexOf(obji.xref) !== -1) ||\n                    (ns && activeAxIds.indexOf(obji.yref) !== -1)) {\n                    method(gd, i);\n                    // once is enough for images (which doesn't use the `i` arg anyway)\n                    if(shortCircuit) return;\n                }\n            }\n        }\n\n        // annotations and shapes 'draw' method is slow,\n        // use the finer-grained 'drawOne' method instead\n\n        redrawObjs(fullLayout.annotations || [], Registry.getComponentMethod('annotations', 'drawOne'));\n        redrawObjs(fullLayout.shapes || [], Registry.getComponentMethod('shapes', 'drawOne'));\n        redrawObjs(fullLayout.images || [], Registry.getComponentMethod('images', 'draw'), true);\n    }\n\n    function doubleClick() {\n        if(gd._transitioningWithDuration) return;\n\n        var doubleClickConfig = gd._context.doubleClick,\n            axList = (xActive ? xa : []).concat(yActive ? ya : []),\n            attrs = {};\n\n        var ax, i, rangeInitial;\n\n        // For reset+autosize mode:\n        // If *any* of the main axes is not at its initial range\n        // (or autoranged, if we have no initial range, to match the logic in\n        // doubleClickConfig === 'reset' below), we reset.\n        // If they are *all* at their initial ranges, then we autosize.\n        if(doubleClickConfig === 'reset+autosize') {\n\n            doubleClickConfig = 'autosize';\n\n            for(i = 0; i < axList.length; i++) {\n                ax = axList[i];\n                if((ax._rangeInitial && (\n                        ax.range[0] !== ax._rangeInitial[0] ||\n                        ax.range[1] !== ax._rangeInitial[1]\n                    )) ||\n                    (!ax._rangeInitial && !ax.autorange)\n                ) {\n                    doubleClickConfig = 'reset';\n                    break;\n                }\n            }\n        }\n\n        if(doubleClickConfig === 'autosize') {\n            // don't set the linked axes here, so relayout marks them as shrinkable\n            // and we autosize just to the requested axis/axes\n            for(i = 0; i < axList.length; i++) {\n                ax = axList[i];\n                if(!ax.fixedrange) attrs[ax._name + '.autorange'] = true;\n            }\n        }\n        else if(doubleClickConfig === 'reset') {\n            // when we're resetting, reset all linked axes too, so we get back\n            // to the fully-auto-with-constraints situation\n            if(xActive || isSubplotConstrained) axList = axList.concat(xaLinked);\n            if(yActive && !isSubplotConstrained) axList = axList.concat(yaLinked);\n\n            if(isSubplotConstrained) {\n                if(!xActive) axList = axList.concat(xa);\n                else if(!yActive) axList = axList.concat(ya);\n            }\n\n            for(i = 0; i < axList.length; i++) {\n                ax = axList[i];\n\n                if(!ax._rangeInitial) {\n                    attrs[ax._name + '.autorange'] = true;\n                }\n                else {\n                    rangeInitial = ax._rangeInitial;\n                    attrs[ax._name + '.range[0]'] = rangeInitial[0];\n                    attrs[ax._name + '.range[1]'] = rangeInitial[1];\n                }\n            }\n        }\n\n        gd.emit('plotly_doubleclick', null);\n        Plotly.relayout(gd, attrs);\n    }\n\n    // dragTail - finish a drag event with a redraw\n    function dragTail() {\n        // put the subplot viewboxes back to default (Because we're going to)\n        // be repositioning the data in the relayout. But DON'T call\n        // ticksAndAnnotations again - it's unnecessary and would overwrite `updates`\n        updateSubplots([0, 0, pw, ph]);\n\n        // since we may have been redrawing some things during the drag, we may have\n        // accumulated MathJax promises - wait for them before we relayout.\n        Lib.syncOrAsync([\n            Plots.previousPromises,\n            function() { Plotly.relayout(gd, updates); }\n        ], gd);\n    }\n\n    // updateSubplots - find all plot viewboxes that should be\n    // affected by this drag, and update them. look for all plots\n    // sharing an affected axis (including the one being dragged)\n    function updateSubplots(viewBox) {\n        var plotinfos = fullLayout._plots;\n        var subplots = Object.keys(plotinfos);\n        var xScaleFactor = viewBox[2] / xa[0]._length;\n        var yScaleFactor = viewBox[3] / ya[0]._length;\n        var editX = ew || isSubplotConstrained;\n        var editY = ns || isSubplotConstrained;\n\n        var i, xScaleFactor2, yScaleFactor2, clipDx, clipDy;\n\n        // Find the appropriate scaling for this axis, if it's linked to the\n        // dragged axes by constraints. 0 is special, it means this axis shouldn't\n        // ever be scaled (will be converted to 1 if the other axis is scaled)\n        function getLinkedScaleFactor(ax) {\n            if(ax.fixedrange) return 0;\n\n            if(editX && xaLinked.indexOf(ax) !== -1) {\n                return xScaleFactor;\n            }\n            if(editY && (isSubplotConstrained ? xaLinked : yaLinked).indexOf(ax) !== -1) {\n                return yScaleFactor;\n            }\n            return 0;\n        }\n\n        function scaleAndGetShift(ax, scaleFactor) {\n            if(scaleFactor) {\n                ax.range = ax._r.slice();\n                scaleZoom(ax, scaleFactor);\n                return getShift(ax, scaleFactor);\n            }\n            return 0;\n        }\n\n        function getShift(ax, scaleFactor) {\n            return ax._length * (1 - scaleFactor) * FROM_TL[ax.constraintoward || 'middle'];\n        }\n\n        // clear gl frame, if any, since we preserve drawing buffer\n        // FIXME: code duplication with cartesian.plot\n        if(fullLayout._glcanvas && fullLayout._glcanvas.size()) {\n            fullLayout._glcanvas.each(function(d) {\n                if(d.regl) {\n                    d.regl.clear({\n                        color: true\n                    });\n                }\n            });\n        }\n\n        for(i = 0; i < subplots.length; i++) {\n            var subplot = plotinfos[subplots[i]],\n                xa2 = subplot.xaxis,\n                ya2 = subplot.yaxis,\n                editX2 = editX && !xa2.fixedrange && (xa.indexOf(xa2) !== -1),\n                editY2 = editY && !ya2.fixedrange && (ya.indexOf(ya2) !== -1);\n\n            // scattergl translate\n            if(subplot._scene && subplot._scene.update) {\n                // FIXME: possibly we could update axis internal _r and _rl here\n                var xaRange = Lib.simpleMap(xa2.range, xa2.r2l),\n                    yaRange = Lib.simpleMap(ya2.range, ya2.r2l);\n                subplot._scene.update(\n                    {range: [xaRange[0], yaRange[0], xaRange[1], yaRange[1]]}\n                );\n            }\n\n            if(editX2) {\n                xScaleFactor2 = xScaleFactor;\n                clipDx = ew ? viewBox[0] : getShift(xa2, xScaleFactor2);\n            }\n            else {\n                xScaleFactor2 = getLinkedScaleFactor(xa2);\n                clipDx = scaleAndGetShift(xa2, xScaleFactor2);\n            }\n\n            if(editY2) {\n                yScaleFactor2 = yScaleFactor;\n                clipDy = ns ? viewBox[1] : getShift(ya2, yScaleFactor2);\n            }\n            else {\n                yScaleFactor2 = getLinkedScaleFactor(ya2);\n                clipDy = scaleAndGetShift(ya2, yScaleFactor2);\n            }\n\n            // don't scale at all if neither axis is scalable here\n            if(!xScaleFactor2 && !yScaleFactor2) {\n                continue;\n            }\n\n            // but if only one is, reset the other axis scaling\n            if(!xScaleFactor2) xScaleFactor2 = 1;\n            if(!yScaleFactor2) yScaleFactor2 = 1;\n\n            var plotDx = xa2._offset - clipDx / xScaleFactor2,\n                plotDy = ya2._offset - clipDy / yScaleFactor2;\n\n            fullLayout._defs.select('#' + subplot.clipId + '> rect')\n                .call(Drawing.setTranslate, clipDx, clipDy)\n                .call(Drawing.setScale, xScaleFactor2, yScaleFactor2);\n\n            var traceGroups = subplot.plot\n                .selectAll('.scatterlayer .trace, .boxlayer .trace, .violinlayer .trace');\n\n            subplot.plot\n                .call(Drawing.setTranslate, plotDx, plotDy)\n                .call(Drawing.setScale, 1 / xScaleFactor2, 1 / yScaleFactor2);\n\n            // This is specifically directed at marker points in scatter, box and violin traces,\n            // applying an inverse scale to individual points to counteract\n            // the scale of the trace as a whole:\n            traceGroups.selectAll('.point')\n                .call(Drawing.setPointGroupScale, xScaleFactor2, yScaleFactor2);\n            traceGroups.selectAll('.textpoint')\n                .call(Drawing.setTextPointsScale, xScaleFactor2, yScaleFactor2);\n            traceGroups\n                .call(Drawing.hideOutsideRangePoints, subplot);\n        }\n    }\n\n    return dragger;\n}\n\nfunction makeDragger(plotinfo, nodeName, dragClass, cursor) {\n    var dragger3 = plotinfo.draglayer.selectAll('.' + dragClass).data([0]);\n\n    dragger3.enter().append(nodeName)\n        .classed('drag', true)\n        .classed(dragClass, true)\n        .style({fill: 'transparent', 'stroke-width': 0})\n        .attr('data-subplot', plotinfo.id);\n\n    dragger3.call(setCursor, cursor);\n\n    return dragger3.node();\n}\n\nfunction makeRectDragger(plotinfo, dragClass, cursor, x, y, w, h) {\n    var dragger = makeDragger(plotinfo, 'rect', dragClass, cursor);\n    d3.select(dragger).call(Drawing.setRect, x, y, w, h);\n    return dragger;\n}\n\nfunction isDirectionActive(axList, activeVal) {\n    for(var i = 0; i < axList.length; i++) {\n        if(!axList[i].fixedrange) return activeVal;\n    }\n    return '';\n}\n\nfunction getEndText(ax, end) {\n    var initialVal = ax.range[end],\n        diff = Math.abs(initialVal - ax.range[1 - end]),\n        dig;\n\n    // TODO: this should basically be ax.r2d but we're doing extra\n    // rounding here... can we clean up at all?\n    if(ax.type === 'date') {\n        return initialVal;\n    }\n    else if(ax.type === 'log') {\n        dig = Math.ceil(Math.max(0, -Math.log(diff) / Math.LN10)) + 3;\n        return d3.format('.' + dig + 'g')(Math.pow(10, initialVal));\n    }\n    else { // linear numeric (or category... but just show numbers here)\n        dig = Math.floor(Math.log(Math.abs(initialVal)) / Math.LN10) -\n            Math.floor(Math.log(diff) / Math.LN10) + 4;\n        return d3.format('.' + String(dig) + 'g')(initialVal);\n    }\n}\n\nfunction zoomAxRanges(axList, r0Fraction, r1Fraction, updates, linkedAxes) {\n    var i,\n        axi,\n        axRangeLinear0,\n        axRangeLinearSpan;\n\n    for(i = 0; i < axList.length; i++) {\n        axi = axList[i];\n        if(axi.fixedrange) continue;\n\n        axRangeLinear0 = axi._rl[0];\n        axRangeLinearSpan = axi._rl[1] - axRangeLinear0;\n        axi.range = [\n            axi.l2r(axRangeLinear0 + axRangeLinearSpan * r0Fraction),\n            axi.l2r(axRangeLinear0 + axRangeLinearSpan * r1Fraction)\n        ];\n        updates[axi._name + '.range[0]'] = axi.range[0];\n        updates[axi._name + '.range[1]'] = axi.range[1];\n    }\n\n    // zoom linked axes about their centers\n    if(linkedAxes && linkedAxes.length) {\n        var linkedR0Fraction = (r0Fraction + (1 - r1Fraction)) / 2;\n\n        zoomAxRanges(linkedAxes, linkedR0Fraction, 1 - linkedR0Fraction, updates);\n    }\n}\n\nfunction dragAxList(axList, pix) {\n    for(var i = 0; i < axList.length; i++) {\n        var axi = axList[i];\n        if(!axi.fixedrange) {\n            axi.range = [\n                axi.l2r(axi._rl[0] - pix / axi._m),\n                axi.l2r(axi._rl[1] - pix / axi._m)\n            ];\n        }\n    }\n}\n\n// common transform for dragging one end of an axis\n// d>0 is compressing scale (cursor is over the plot,\n//  the axis end should move with the cursor)\n// d<0 is expanding (cursor is off the plot, axis end moves\n//  nonlinearly so you can expand far)\nfunction dZoom(d) {\n    return 1 - ((d >= 0) ? Math.min(d, 0.9) :\n        1 / (1 / Math.max(d, -0.3) + 3.222));\n}\n\nfunction getDragCursor(nsew, dragmode) {\n    if(!nsew) return 'pointer';\n    if(nsew === 'nsew') {\n        if(dragmode === 'pan') return 'move';\n        return 'crosshair';\n    }\n    return nsew.toLowerCase() + '-resize';\n}\n\nfunction makeZoombox(zoomlayer, lum, xs, ys, path0) {\n    return zoomlayer.append('path')\n        .attr('class', 'zoombox')\n        .style({\n            'fill': lum > 0.2 ? 'rgba(0,0,0,0)' : 'rgba(255,255,255,0)',\n            'stroke-width': 0\n        })\n        .attr('transform', 'translate(' + xs + ', ' + ys + ')')\n        .attr('d', path0 + 'Z');\n}\n\nfunction makeCorners(zoomlayer, xs, ys) {\n    return zoomlayer.append('path')\n        .attr('class', 'zoombox-corners')\n        .style({\n            fill: Color.background,\n            stroke: Color.defaultLine,\n            'stroke-width': 1,\n            opacity: 0\n        })\n        .attr('transform', 'translate(' + xs + ', ' + ys + ')')\n        .attr('d', 'M0,0Z');\n}\n\nfunction clearSelect(zoomlayer) {\n    // until we get around to persistent selections, remove the outline\n    // here. The selection itself will be removed when the plot redraws\n    // at the end.\n    zoomlayer.selectAll('.select-outline').remove();\n}\n\nfunction updateZoombox(zb, corners, box, path0, dimmed, lum) {\n    zb.attr('d',\n        path0 + 'M' + (box.l) + ',' + (box.t) + 'v' + (box.h) +\n        'h' + (box.w) + 'v-' + (box.h) + 'h-' + (box.w) + 'Z');\n    transitionZoombox(zb, corners, dimmed, lum);\n}\n\nfunction transitionZoombox(zb, corners, dimmed, lum) {\n    if(!dimmed) {\n        zb.transition()\n            .style('fill', lum > 0.2 ? 'rgba(0,0,0,0.4)' :\n                'rgba(255,255,255,0.3)')\n            .duration(200);\n        corners.transition()\n            .style('opacity', 1)\n            .duration(200);\n    }\n}\n\nfunction removeZoombox(gd) {\n    d3.select(gd)\n        .selectAll('.zoombox,.js-zoombox-backdrop,.js-zoombox-menu,.zoombox-corners')\n        .remove();\n}\n\nfunction showDoubleClickNotifier(gd) {\n    if(SHOWZOOMOUTTIP && gd.data && gd._context.showTips) {\n        Lib.notifier(Lib._(gd, 'Double-click to zoom back out'), 'long');\n        SHOWZOOMOUTTIP = false;\n    }\n}\n\nfunction isSelectOrLasso(dragmode) {\n    return dragmode === 'lasso' || dragmode === 'select';\n}\n\nfunction xCorners(box, y0) {\n    return 'M' +\n        (box.l - 0.5) + ',' + (y0 - MINZOOM - 0.5) +\n        'h-3v' + (2 * MINZOOM + 1) + 'h3ZM' +\n        (box.r + 0.5) + ',' + (y0 - MINZOOM - 0.5) +\n        'h3v' + (2 * MINZOOM + 1) + 'h-3Z';\n}\n\nfunction yCorners(box, x0) {\n    return 'M' +\n        (x0 - MINZOOM - 0.5) + ',' + (box.t - 0.5) +\n        'v-3h' + (2 * MINZOOM + 1) + 'v3ZM' +\n        (x0 - MINZOOM - 0.5) + ',' + (box.b + 0.5) +\n        'v3h' + (2 * MINZOOM + 1) + 'v-3Z';\n}\n\nfunction xyCorners(box) {\n    var clen = Math.floor(Math.min(box.b - box.t, box.r - box.l, MINZOOM) / 2);\n    return 'M' +\n        (box.l - 3.5) + ',' + (box.t - 0.5 + clen) + 'h3v' + (-clen) +\n            'h' + clen + 'v-3h-' + (clen + 3) + 'ZM' +\n        (box.r + 3.5) + ',' + (box.t - 0.5 + clen) + 'h-3v' + (-clen) +\n            'h' + (-clen) + 'v-3h' + (clen + 3) + 'ZM' +\n        (box.r + 3.5) + ',' + (box.b + 0.5 - clen) + 'h-3v' + clen +\n            'h' + (-clen) + 'v3h' + (clen + 3) + 'ZM' +\n        (box.l - 3.5) + ',' + (box.b + 0.5 - clen) + 'h3v' + clen +\n            'h' + clen + 'v3h-' + (clen + 3) + 'Z';\n}\n\nfunction calcLinks(constraintGroups, xIDs, yIDs) {\n    var isSubplotConstrained = false;\n    var xLinks = {};\n    var yLinks = {};\n    var i, j, k;\n\n    var group, xLinkID, yLinkID;\n    for(i = 0; i < constraintGroups.length; i++) {\n        group = constraintGroups[i];\n        // check if any of the x axes we're dragging is in this constraint group\n        for(j = 0; j < xIDs.length; j++) {\n            if(group[xIDs[j]]) {\n                // put the rest of these axes into xLinks, if we're not already\n                // dragging them, so we know to scale these axes automatically too\n                // to match the changes in the dragged x axes\n                for(xLinkID in group) {\n                    if((xLinkID.charAt(0) === 'x' ? xIDs : yIDs).indexOf(xLinkID) === -1) {\n                        xLinks[xLinkID] = 1;\n                    }\n                }\n\n                // check if the x and y axes of THIS drag are linked\n                for(k = 0; k < yIDs.length; k++) {\n                    if(group[yIDs[k]]) isSubplotConstrained = true;\n                }\n            }\n        }\n\n        // now check if any of the y axes we're dragging is in this constraint group\n        // only look for outside links, as we've already checked for links within the dragger\n        for(j = 0; j < yIDs.length; j++) {\n            if(group[yIDs[j]]) {\n                for(yLinkID in group) {\n                    if((yLinkID.charAt(0) === 'x' ? xIDs : yIDs).indexOf(yLinkID) === -1) {\n                        yLinks[yLinkID] = 1;\n                    }\n                }\n            }\n        }\n    }\n\n    if(isSubplotConstrained) {\n        // merge xLinks and yLinks if the subplot is constrained,\n        // since we'll always apply both anyway and the two will contain\n        // duplicates\n        Lib.extendFlat(xLinks, yLinks);\n        yLinks = {};\n    }\n    return {\n        x: xLinks,\n        y: yLinks,\n        xy: isSubplotConstrained\n    };\n}\n\n// still seems to be some confusion about onwheel vs onmousewheel...\nfunction attachWheelEventHandler(element, handler) {\n    if(!supportsPassive) {\n        if(element.onwheel !== undefined) element.onwheel = handler;\n        else if(element.onmousewheel !== undefined) element.onmousewheel = handler;\n    }\n    else {\n        var wheelEventName = element.onwheel !== undefined ? 'wheel' : 'mousewheel';\n\n        if(element._onwheel) {\n            element.removeEventListener(wheelEventName, element._onwheel);\n        }\n        element._onwheel = handler;\n\n        element.addEventListener(wheelEventName, handler, {passive: false});\n    }\n}\n\nmodule.exports = {\n    makeDragBox: makeDragBox,\n\n    makeDragger: makeDragger,\n    makeRectDragger: makeRectDragger,\n    makeZoombox: makeZoombox,\n    makeCorners: makeCorners,\n\n    updateZoombox: updateZoombox,\n    xyCorners: xyCorners,\n    transitionZoombox: transitionZoombox,\n    removeZoombox: removeZoombox,\n    clearSelect: clearSelect,\n    showDoubleClickNotifier: showDoubleClickNotifier,\n\n    attachWheelEventHandler: attachWheelEventHandler\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/dragbox.js\n// module id = 186\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar polybool = require('polybooljs');\nvar polygon = require('../../lib/polygon');\nvar throttle = require('../../lib/throttle');\nvar color = require('../../components/color');\nvar makeEventData = require('../../components/fx/helpers').makeEventData;\nvar Fx = require('../../components/fx');\n\nvar axes = require('./axes');\nvar constants = require('./constants');\n\nvar filteredPolygon = polygon.filter;\nvar polygonTester = polygon.tester;\nvar multipolygonTester = polygon.multitester;\nvar MINSELECT = constants.MINSELECT;\n\nfunction getAxId(ax) { return ax._id; }\n\nmodule.exports = function prepSelect(e, startX, startY, dragOptions, mode) {\n    var gd = dragOptions.gd,\n        fullLayout = gd._fullLayout,\n        zoomLayer = fullLayout._zoomlayer,\n        dragBBox = dragOptions.element.getBoundingClientRect(),\n        plotinfo = dragOptions.plotinfo,\n        xs = plotinfo.xaxis._offset,\n        ys = plotinfo.yaxis._offset,\n        x0 = startX - dragBBox.left,\n        y0 = startY - dragBBox.top,\n        x1 = x0,\n        y1 = y0,\n        path0 = 'M' + x0 + ',' + y0,\n        pw = dragOptions.xaxes[0]._length,\n        ph = dragOptions.yaxes[0]._length,\n        xAxisIds = dragOptions.xaxes.map(getAxId),\n        yAxisIds = dragOptions.yaxes.map(getAxId),\n        allAxes = dragOptions.xaxes.concat(dragOptions.yaxes),\n        filterPoly, testPoly, mergedPolygons, currentPolygon,\n        subtract = e.altKey;\n\n\n    // take over selection polygons from prev mode, if any\n    if((e.shiftKey || e.altKey) && (plotinfo.selection && plotinfo.selection.polygons) && !dragOptions.polygons) {\n        dragOptions.polygons = plotinfo.selection.polygons;\n        dragOptions.mergedPolygons = plotinfo.selection.mergedPolygons;\n    }\n    // create new polygons, if shift mode\n    else if((!e.shiftKey && !e.altKey) || ((e.shiftKey || e.altKey) && !plotinfo.selection)) {\n        plotinfo.selection = {};\n        plotinfo.selection.polygons = dragOptions.polygons = [];\n        plotinfo.selection.mergedPolygons = dragOptions.mergedPolygons = [];\n    }\n\n    if(mode === 'lasso') {\n        filterPoly = filteredPolygon([[x0, y0]], constants.BENDPX);\n    }\n    var outlines = zoomLayer.selectAll('path.select-outline-' + plotinfo.id).data([1, 2]);\n\n    outlines.enter()\n        .append('path')\n        .attr('class', function(d) { return 'select-outline select-outline-' + d + ' select-outline-' + plotinfo.id; })\n        .attr('transform', 'translate(' + xs + ', ' + ys + ')')\n        .attr('d', path0 + 'Z');\n\n    var corners = zoomLayer.append('path')\n        .attr('class', 'zoombox-corners')\n        .style({\n            fill: color.background,\n            stroke: color.defaultLine,\n            'stroke-width': 1\n        })\n        .attr('transform', 'translate(' + xs + ', ' + ys + ')')\n        .attr('d', 'M0,0Z');\n\n\n    // find the traces to search for selection points\n    var searchTraces = [];\n    var throttleID = fullLayout._uid + constants.SELECTID;\n    var selection = [];\n    var i, cd, trace, searchInfo, eventData;\n\n    for(i = 0; i < gd.calcdata.length; i++) {\n        cd = gd.calcdata[i];\n        trace = cd[0].trace;\n        if(trace.visible !== true || !trace._module || !trace._module.selectPoints) continue;\n\n        if(dragOptions.subplot) {\n            if(\n                trace.subplot === dragOptions.subplot ||\n                trace.geo === dragOptions.subplot\n            ) {\n                searchTraces.push({\n                    selectPoints: trace._module.selectPoints,\n                    style: trace._module.style,\n                    cd: cd,\n                    xaxis: dragOptions.xaxes[0],\n                    yaxis: dragOptions.yaxes[0]\n                });\n            }\n        } else {\n            if(xAxisIds.indexOf(trace.xaxis) === -1) continue;\n            if(yAxisIds.indexOf(trace.yaxis) === -1) continue;\n\n            searchTraces.push({\n                selectPoints: trace._module.selectPoints,\n                style: trace._module.style,\n                cd: cd,\n                xaxis: axes.getFromId(gd, trace.xaxis),\n                yaxis: axes.getFromId(gd, trace.yaxis)\n            });\n        }\n    }\n\n    function axValue(ax) {\n        var index = (ax._id.charAt(0) === 'y') ? 1 : 0;\n        return function(v) { return ax.p2d(v[index]); };\n    }\n\n    function ascending(a, b) { return a - b; }\n\n    // allow subplots to override fillRangeItems routine\n    var fillRangeItems;\n\n    if(plotinfo.fillRangeItems) {\n        fillRangeItems = plotinfo.fillRangeItems;\n    } else {\n        if(mode === 'select') {\n            fillRangeItems = function(eventData, poly) {\n                var ranges = eventData.range = {};\n\n                for(i = 0; i < allAxes.length; i++) {\n                    var ax = allAxes[i];\n                    var axLetter = ax._id.charAt(0);\n\n                    ranges[ax._id] = [\n                        ax.p2d(poly[axLetter + 'min']),\n                        ax.p2d(poly[axLetter + 'max'])\n                    ].sort(ascending);\n                }\n            };\n        } else {\n            fillRangeItems = function(eventData, poly, filterPoly) {\n                var dataPts = eventData.lassoPoints = {};\n\n                for(i = 0; i < allAxes.length; i++) {\n                    var ax = allAxes[i];\n                    dataPts[ax._id] = filterPoly.filtered.map(axValue(ax));\n                }\n            };\n        }\n    }\n\n    dragOptions.moveFn = function(dx0, dy0) {\n        x1 = Math.max(0, Math.min(pw, dx0 + x0));\n        y1 = Math.max(0, Math.min(ph, dy0 + y0));\n\n        var dx = Math.abs(x1 - x0),\n            dy = Math.abs(y1 - y0);\n\n        if(mode === 'select') {\n            if(dy < Math.min(dx * 0.6, MINSELECT)) {\n                // horizontal motion: make a vertical box\n                currentPolygon = [[x0, 0], [x0, ph], [x1, ph], [x1, 0]];\n                currentPolygon.xmin = Math.min(x0, x1);\n                currentPolygon.xmax = Math.max(x0, x1);\n                currentPolygon.ymin = Math.min(0, ph);\n                currentPolygon.ymax = Math.max(0, ph);\n                // extras to guide users in keeping a straight selection\n                corners.attr('d', 'M' + currentPolygon.xmin + ',' + (y0 - MINSELECT) +\n                    'h-4v' + (2 * MINSELECT) + 'h4Z' +\n                    'M' + (currentPolygon.xmax - 1) + ',' + (y0 - MINSELECT) +\n                    'h4v' + (2 * MINSELECT) + 'h-4Z');\n\n            }\n            else if(dx < Math.min(dy * 0.6, MINSELECT)) {\n                // vertical motion: make a horizontal box\n                currentPolygon = [[0, y0], [0, y1], [pw, y1], [pw, y0]];\n                currentPolygon.xmin = Math.min(0, pw);\n                currentPolygon.xmax = Math.max(0, pw);\n                currentPolygon.ymin = Math.min(y0, y1);\n                currentPolygon.ymax = Math.max(y0, y1);\n                corners.attr('d', 'M' + (x0 - MINSELECT) + ',' + currentPolygon.ymin +\n                    'v-4h' + (2 * MINSELECT) + 'v4Z' +\n                    'M' + (x0 - MINSELECT) + ',' + (currentPolygon.ymax - 1) +\n                    'v4h' + (2 * MINSELECT) + 'v-4Z');\n            }\n            else {\n                // diagonal motion\n                currentPolygon = [[x0, y0], [x0, y1], [x1, y1], [x1, y0]];\n                currentPolygon.xmin = Math.min(x0, x1);\n                currentPolygon.xmax = Math.max(x0, x1);\n                currentPolygon.ymin = Math.min(y0, y1);\n                currentPolygon.ymax = Math.max(y0, y1);\n                corners.attr('d', 'M0,0Z');\n            }\n        }\n        else if(mode === 'lasso') {\n            filterPoly.addPt([x1, y1]);\n            currentPolygon = filterPoly.filtered;\n        }\n\n        // create outline & tester\n        if(dragOptions.polygons && dragOptions.polygons.length) {\n            mergedPolygons = mergePolygons(dragOptions.mergedPolygons, currentPolygon, subtract);\n            currentPolygon.subtract = subtract;\n            testPoly = multipolygonTester(dragOptions.polygons.concat([currentPolygon]));\n        }\n        else {\n            mergedPolygons = [currentPolygon];\n            testPoly = polygonTester(currentPolygon);\n        }\n\n        // draw selection\n        var paths = [];\n        for(i = 0; i < mergedPolygons.length; i++) {\n            var ppts = mergedPolygons[i];\n            paths.push(ppts.join('L') + 'L' + ppts[0]);\n        }\n        outlines\n            .attr('d', 'M' + paths.join('M') + 'Z');\n\n        throttle.throttle(\n            throttleID,\n            constants.SELECTDELAY,\n            function() {\n                selection = [];\n\n                var thisSelection, traceSelections = [], traceSelection;\n                for(i = 0; i < searchTraces.length; i++) {\n                    searchInfo = searchTraces[i];\n\n                    traceSelection = searchInfo.selectPoints(searchInfo, testPoly);\n                    traceSelections.push(traceSelection);\n\n                    thisSelection = fillSelectionItem(traceSelection, searchInfo);\n\n                    if(selection.length) {\n                        for(var j = 0; j < thisSelection.length; j++) {\n                            selection.push(thisSelection[j]);\n                        }\n                    }\n                    else selection = thisSelection;\n                }\n\n                eventData = {points: selection};\n                updateSelectedState(gd, searchTraces, eventData);\n                fillRangeItems(eventData, currentPolygon, filterPoly);\n                dragOptions.gd.emit('plotly_selecting', eventData);\n            }\n        );\n    };\n\n    dragOptions.clickFn = function(numClicks, evt) {\n        corners.remove();\n\n        throttle.done(throttleID).then(function() {\n            throttle.clear(throttleID);\n            if(numClicks === 2) {\n                // clear selection on doubleclick\n                outlines.remove();\n                for(i = 0; i < searchTraces.length; i++) {\n                    searchInfo = searchTraces[i];\n                    searchInfo.selectPoints(searchInfo, false);\n                }\n\n                updateSelectedState(gd, searchTraces);\n                gd.emit('plotly_deselect', null);\n            }\n            else {\n                // TODO: remove in v2 - this was probably never intended to work as it does,\n                // but in case anyone depends on it we don't want to break it now.\n                gd.emit('plotly_selected', undefined);\n            }\n\n            Fx.click(gd, evt);\n        });\n    };\n\n    dragOptions.doneFn = function() {\n        corners.remove();\n\n        throttle.done(throttleID).then(function() {\n            throttle.clear(throttleID);\n            dragOptions.gd.emit('plotly_selected', eventData);\n\n            if(currentPolygon && dragOptions.polygons) {\n                // save last polygons\n                currentPolygon.subtract = subtract;\n                dragOptions.polygons.push(currentPolygon);\n\n                // we have to keep reference to arrays container\n                dragOptions.mergedPolygons.length = 0;\n                [].push.apply(dragOptions.mergedPolygons, mergedPolygons);\n            }\n        });\n    };\n};\n\nfunction updateSelectedState(gd, searchTraces, eventData) {\n    var i, searchInfo, trace;\n\n    if(eventData) {\n        var pts = eventData.points || [];\n\n        for(i = 0; i < searchTraces.length; i++) {\n            trace = searchTraces[i].cd[0].trace;\n            trace.selectedpoints = [];\n            trace._input.selectedpoints = [];\n        }\n\n        for(i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            var data = pt.data;\n            var fullData = pt.fullData;\n\n            if(pt.pointIndices) {\n                [].push.apply(data.selectedpoints, pt.pointIndices);\n                [].push.apply(fullData.selectedpoints, pt.pointIndices);\n            } else {\n                data.selectedpoints.push(pt.pointIndex);\n                fullData.selectedpoints.push(pt.pointIndex);\n            }\n        }\n    }\n    else {\n        for(i = 0; i < searchTraces.length; i++) {\n            trace = searchTraces[i].cd[0].trace;\n            delete trace.selectedpoints;\n            delete trace._input.selectedpoints;\n\n            // delete scattergl selection\n            if(searchTraces[i].cd[0].t && searchTraces[i].cd[0].t.scene) {\n                searchTraces[i].cd[0].t.scene.clearSelect();\n            }\n        }\n    }\n\n    for(i = 0; i < searchTraces.length; i++) {\n        searchInfo = searchTraces[i];\n        if(searchInfo.style) searchInfo.style(gd, searchInfo.cd);\n    }\n}\n\nfunction mergePolygons(list, poly, subtract) {\n    var res;\n\n    if(subtract) {\n        res = polybool.difference({\n            regions: list,\n            inverted: false\n        }, {\n            regions: [poly],\n            inverted: false\n        });\n\n        return res.regions;\n    }\n\n    res = polybool.union({\n        regions: list,\n        inverted: false\n    }, {\n        regions: [poly],\n        inverted: false\n    });\n\n    return res.regions;\n}\n\nfunction fillSelectionItem(selection, searchInfo) {\n    if(Array.isArray(selection)) {\n        var cd = searchInfo.cd;\n        var trace = searchInfo.cd[0].trace;\n\n        for(var i = 0; i < selection.length; i++) {\n            selection[i] = makeEventData(selection[i], trace, cd);\n        }\n    }\n\n    return selection;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/select.js\n// module id = 187\n// module chunks = 0","/*\n * @copyright 2016 Sean Connelly (@voidqk), http://syntheti.cc\n * @license MIT\n * @preserve Project Home: https://github.com/voidqk/polybooljs\n */\n\nvar BuildLog = require('./lib/build-log');\nvar Epsilon = require('./lib/epsilon');\nvar Intersecter = require('./lib/intersecter');\nvar SegmentChainer = require('./lib/segment-chainer');\nvar SegmentSelector = require('./lib/segment-selector');\nvar GeoJSON = require('./lib/geojson');\n\nvar buildLog = false;\nvar epsilon = Epsilon();\n\nvar PolyBool;\nPolyBool = {\n\t// getter/setter for buildLog\n\tbuildLog: function(bl){\n\t\tif (bl === true)\n\t\t\tbuildLog = BuildLog();\n\t\telse if (bl === false)\n\t\t\tbuildLog = false;\n\t\treturn buildLog === false ? false : buildLog.list;\n\t},\n\t// getter/setter for epsilon\n\tepsilon: function(v){\n\t\treturn epsilon.epsilon(v);\n\t},\n\n\t// core API\n\tsegments: function(poly){\n\t\tvar i = Intersecter(true, epsilon, buildLog);\n\t\tpoly.regions.forEach(i.addRegion);\n\t\treturn {\n\t\t\tsegments: i.calculate(poly.inverted),\n\t\t\tinverted: poly.inverted\n\t\t};\n\t},\n\tcombine: function(segments1, segments2){\n\t\tvar i3 = Intersecter(false, epsilon, buildLog);\n\t\treturn {\n\t\t\tcombined: i3.calculate(\n\t\t\t\tsegments1.segments, segments1.inverted,\n\t\t\t\tsegments2.segments, segments2.inverted\n\t\t\t),\n\t\t\tinverted1: segments1.inverted,\n\t\t\tinverted2: segments2.inverted\n\t\t};\n\t},\n\tselectUnion: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.union(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 || combined.inverted2\n\t\t}\n\t},\n\tselectIntersect: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.intersect(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 && combined.inverted2\n\t\t}\n\t},\n\tselectDifference: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.difference(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 && !combined.inverted2\n\t\t}\n\t},\n\tselectDifferenceRev: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.differenceRev(combined.combined, buildLog),\n\t\t\tinverted: !combined.inverted1 && combined.inverted2\n\t\t}\n\t},\n\tselectXor: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.xor(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 !== combined.inverted2\n\t\t}\n\t},\n\tpolygon: function(segments){\n\t\treturn {\n\t\t\tregions: SegmentChainer(segments.segments, epsilon, buildLog),\n\t\t\tinverted: segments.inverted\n\t\t};\n\t},\n\n\t// GeoJSON converters\n\tpolygonFromGeoJSON: function(geojson){\n\t\treturn GeoJSON.toPolygon(PolyBool, geojson);\n\t},\n\tpolygonToGeoJSON: function(poly){\n\t\treturn GeoJSON.fromPolygon(PolyBool, epsilon, poly);\n\t},\n\n\t// helper functions for common operations\n\tunion: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectUnion);\n\t},\n\tintersect: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectIntersect);\n\t},\n\tdifference: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectDifference);\n\t},\n\tdifferenceRev: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectDifferenceRev);\n\t},\n\txor: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectXor);\n\t}\n};\n\nfunction operate(poly1, poly2, selector){\n\tvar seg1 = PolyBool.segments(poly1);\n\tvar seg2 = PolyBool.segments(poly2);\n\tvar comb = PolyBool.combine(seg1, seg2);\n\tvar seg3 = selector(comb);\n\treturn PolyBool.polygon(seg3);\n}\n\nif (typeof window === 'object')\n\twindow.PolyBool = PolyBool;\n\nmodule.exports = PolyBool;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/polybooljs/index.js\n// module id = 188\n// module chunks = 0","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// used strictly for logging the processing of the algorithm... only useful if you intend on\n// looking under the covers (for pretty UI's or debugging)\n//\n\nfunction BuildLog(){\n\tvar my;\n\tvar nextSegmentId = 0;\n\tvar curVert = false;\n\n\tfunction push(type, data){\n\t\tmy.list.push({\n\t\t\ttype: type,\n\t\t\tdata: data ? JSON.parse(JSON.stringify(data)) : void 0\n\t\t});\n\t\treturn my;\n\t}\n\n\tmy = {\n\t\tlist: [],\n\t\tsegmentId: function(){\n\t\t\treturn nextSegmentId++;\n\t\t},\n\t\tcheckIntersection: function(seg1, seg2){\n\t\t\treturn push('check', { seg1: seg1, seg2: seg2 });\n\t\t},\n\t\tsegmentChop: function(seg, end){\n\t\t\tpush('div_seg', { seg: seg, pt: end });\n\t\t\treturn push('chop', { seg: seg, pt: end });\n\t\t},\n\t\tstatusRemove: function(seg){\n\t\t\treturn push('pop_seg', { seg: seg });\n\t\t},\n\t\tsegmentUpdate: function(seg){\n\t\t\treturn push('seg_update', { seg: seg });\n\t\t},\n\t\tsegmentNew: function(seg, primary){\n\t\t\treturn push('new_seg', { seg: seg, primary: primary });\n\t\t},\n\t\tsegmentRemove: function(seg){\n\t\t\treturn push('rem_seg', { seg: seg });\n\t\t},\n\t\ttempStatus: function(seg, above, below){\n\t\t\treturn push('temp_status', { seg: seg, above: above, below: below });\n\t\t},\n\t\trewind: function(seg){\n\t\t\treturn push('rewind', { seg: seg });\n\t\t},\n\t\tstatus: function(seg, above, below){\n\t\t\treturn push('status', { seg: seg, above: above, below: below });\n\t\t},\n\t\tvert: function(x){\n\t\t\tif (x === curVert)\n\t\t\t\treturn my;\n\t\t\tcurVert = x;\n\t\t\treturn push('vert', { x: x });\n\t\t},\n\t\tlog: function(data){\n\t\t\tif (typeof data !== 'string')\n\t\t\t\tdata = JSON.stringify(data, false, '  ');\n\t\t\treturn push('log', { txt: data });\n\t\t},\n\t\treset: function(){\n\t\t\treturn push('reset');\n\t\t},\n\t\tselected: function(segs){\n\t\t\treturn push('selected', { segs: segs });\n\t\t},\n\t\tchainStart: function(seg){\n\t\t\treturn push('chain_start', { seg: seg });\n\t\t},\n\t\tchainRemoveHead: function(index, pt){\n\t\t\treturn push('chain_rem_head', { index: index, pt: pt });\n\t\t},\n\t\tchainRemoveTail: function(index, pt){\n\t\t\treturn push('chain_rem_tail', { index: index, pt: pt });\n\t\t},\n\t\tchainNew: function(pt1, pt2){\n\t\t\treturn push('chain_new', { pt1: pt1, pt2: pt2 });\n\t\t},\n\t\tchainMatch: function(index){\n\t\t\treturn push('chain_match', { index: index });\n\t\t},\n\t\tchainClose: function(index){\n\t\t\treturn push('chain_close', { index: index });\n\t\t},\n\t\tchainAddHead: function(index, pt){\n\t\t\treturn push('chain_add_head', { index: index, pt: pt });\n\t\t},\n\t\tchainAddTail: function(index, pt){\n\t\t\treturn push('chain_add_tail', { index: index, pt: pt, });\n\t\t},\n\t\tchainConnect: function(index1, index2){\n\t\t\treturn push('chain_con', { index1: index1, index2: index2 });\n\t\t},\n\t\tchainReverse: function(index){\n\t\t\treturn push('chain_rev', { index: index });\n\t\t},\n\t\tchainJoin: function(index1, index2){\n\t\t\treturn push('chain_join', { index1: index1, index2: index2 });\n\t\t},\n\t\tdone: function(){\n\t\t\treturn push('done');\n\t\t}\n\t};\n\treturn my;\n}\n\nmodule.exports = BuildLog;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/polybooljs/lib/build-log.js\n// module id = 189\n// module chunks = 0","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// provides the raw computation functions that takes epsilon into account\n//\n// zero is defined to be between (-epsilon, epsilon) exclusive\n//\n\nfunction Epsilon(eps){\n\tif (typeof eps !== 'number')\n\t\teps = 0.0000000001; // sane default? sure why not\n\tvar my = {\n\t\tepsilon: function(v){\n\t\t\tif (typeof v === 'number')\n\t\t\t\teps = v;\n\t\t\treturn eps;\n\t\t},\n\t\tpointAboveOrOnLine: function(pt, left, right){\n\t\t\tvar Ax = left[0];\n\t\t\tvar Ay = left[1];\n\t\t\tvar Bx = right[0];\n\t\t\tvar By = right[1];\n\t\t\tvar Cx = pt[0];\n\t\t\tvar Cy = pt[1];\n\t\t\treturn (Bx - Ax) * (Cy - Ay) - (By - Ay) * (Cx - Ax) >= -eps;\n\t\t},\n\t\tpointBetween: function(p, left, right){\n\t\t\t// p must be collinear with left->right\n\t\t\t// returns false if p == left, p == right, or left == right\n\t\t\tvar d_py_ly = p[1] - left[1];\n\t\t\tvar d_rx_lx = right[0] - left[0];\n\t\t\tvar d_px_lx = p[0] - left[0];\n\t\t\tvar d_ry_ly = right[1] - left[1];\n\n\t\t\tvar dot = d_px_lx * d_rx_lx + d_py_ly * d_ry_ly;\n\t\t\t// if `dot` is 0, then `p` == `left` or `left` == `right` (reject)\n\t\t\t// if `dot` is less than 0, then `p` is to the left of `left` (reject)\n\t\t\tif (dot < eps)\n\t\t\t\treturn false;\n\n\t\t\tvar sqlen = d_rx_lx * d_rx_lx + d_ry_ly * d_ry_ly;\n\t\t\t// if `dot` > `sqlen`, then `p` is to the right of `right` (reject)\n\t\t\t// therefore, if `dot - sqlen` is greater than 0, then `p` is to the right of `right` (reject)\n\t\t\tif (dot - sqlen > -eps)\n\t\t\t\treturn false;\n\n\t\t\treturn true;\n\t\t},\n\t\tpointsSameX: function(p1, p2){\n\t\t\treturn Math.abs(p1[0] - p2[0]) < eps;\n\t\t},\n\t\tpointsSameY: function(p1, p2){\n\t\t\treturn Math.abs(p1[1] - p2[1]) < eps;\n\t\t},\n\t\tpointsSame: function(p1, p2){\n\t\t\treturn my.pointsSameX(p1, p2) && my.pointsSameY(p1, p2);\n\t\t},\n\t\tpointsCompare: function(p1, p2){\n\t\t\t// returns -1 if p1 is smaller, 1 if p2 is smaller, 0 if equal\n\t\t\tif (my.pointsSameX(p1, p2))\n\t\t\t\treturn my.pointsSameY(p1, p2) ? 0 : (p1[1] < p2[1] ? -1 : 1);\n\t\t\treturn p1[0] < p2[0] ? -1 : 1;\n\t\t},\n\t\tpointsCollinear: function(pt1, pt2, pt3){\n\t\t\t// does pt1->pt2->pt3 make a straight line?\n\t\t\t// essentially this is just checking to see if the slope(pt1->pt2) === slope(pt2->pt3)\n\t\t\t// if slopes are equal, then they must be collinear, because they share pt2\n\t\t\tvar dx1 = pt1[0] - pt2[0];\n\t\t\tvar dy1 = pt1[1] - pt2[1];\n\t\t\tvar dx2 = pt2[0] - pt3[0];\n\t\t\tvar dy2 = pt2[1] - pt3[1];\n\t\t\treturn Math.abs(dx1 * dy2 - dx2 * dy1) < eps;\n\t\t},\n\t\tlinesIntersect: function(a0, a1, b0, b1){\n\t\t\t// returns false if the lines are coincident (e.g., parallel or on top of each other)\n\t\t\t//\n\t\t\t// returns an object if the lines intersect:\n\t\t\t//   {\n\t\t\t//     pt: [x, y],    where the intersection point is at\n\t\t\t//     alongA: where intersection point is along A,\n\t\t\t//     alongB: where intersection point is along B\n\t\t\t//   }\n\t\t\t//\n\t\t\t//  alongA and alongB will each be one of: -2, -1, 0, 1, 2\n\t\t\t//\n\t\t\t//  with the following meaning:\n\t\t\t//\n\t\t\t//    -2   intersection point is before segment's first point\n\t\t\t//    -1   intersection point is directly on segment's first point\n\t\t\t//     0   intersection point is between segment's first and second points (exclusive)\n\t\t\t//     1   intersection point is directly on segment's second point\n\t\t\t//     2   intersection point is after segment's second point\n\t\t\tvar adx = a1[0] - a0[0];\n\t\t\tvar ady = a1[1] - a0[1];\n\t\t\tvar bdx = b1[0] - b0[0];\n\t\t\tvar bdy = b1[1] - b0[1];\n\n\t\t\tvar axb = adx * bdy - ady * bdx;\n\t\t\tif (Math.abs(axb) < eps)\n\t\t\t\treturn false; // lines are coincident\n\n\t\t\tvar dx = a0[0] - b0[0];\n\t\t\tvar dy = a0[1] - b0[1];\n\n\t\t\tvar A = (bdx * dy - bdy * dx) / axb;\n\t\t\tvar B = (adx * dy - ady * dx) / axb;\n\n\t\t\tvar ret = {\n\t\t\t\talongA: 0,\n\t\t\t\talongB: 0,\n\t\t\t\tpt: [\n\t\t\t\t\ta0[0] + A * adx,\n\t\t\t\t\ta0[1] + A * ady\n\t\t\t\t]\n\t\t\t};\n\n\t\t\t// categorize where intersection point is along A and B\n\n\t\t\tif (A <= -eps)\n\t\t\t\tret.alongA = -2;\n\t\t\telse if (A < eps)\n\t\t\t\tret.alongA = -1;\n\t\t\telse if (A - 1 <= -eps)\n\t\t\t\tret.alongA = 0;\n\t\t\telse if (A - 1 < eps)\n\t\t\t\tret.alongA = 1;\n\t\t\telse\n\t\t\t\tret.alongA = 2;\n\n\t\t\tif (B <= -eps)\n\t\t\t\tret.alongB = -2;\n\t\t\telse if (B < eps)\n\t\t\t\tret.alongB = -1;\n\t\t\telse if (B - 1 <= -eps)\n\t\t\t\tret.alongB = 0;\n\t\t\telse if (B - 1 < eps)\n\t\t\t\tret.alongB = 1;\n\t\t\telse\n\t\t\t\tret.alongB = 2;\n\n\t\t\treturn ret;\n\t\t},\n\t\tpointInsideRegion: function(pt, region){\n\t\t\tvar x = pt[0];\n\t\t\tvar y = pt[1];\n\t\t\tvar last_x = region[region.length - 1][0];\n\t\t\tvar last_y = region[region.length - 1][1];\n\t\t\tvar inside = false;\n\t\t\tfor (var i = 0; i < region.length; i++){\n\t\t\t\tvar curr_x = region[i][0];\n\t\t\t\tvar curr_y = region[i][1];\n\n\t\t\t\t// if y is between curr_y and last_y, and\n\t\t\t\t// x is to the right of the boundary created by the line\n\t\t\t\tif ((curr_y - y > eps) != (last_y - y > eps) &&\n\t\t\t\t\t(last_x - curr_x) * (y - curr_y) / (last_y - curr_y) + curr_x - x > eps)\n\t\t\t\t\tinside = !inside\n\n\t\t\t\tlast_x = curr_x;\n\t\t\t\tlast_y = curr_y;\n\t\t\t}\n\t\t\treturn inside;\n\t\t}\n\t};\n\treturn my;\n}\n\nmodule.exports = Epsilon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/polybooljs/lib/epsilon.js\n// module id = 190\n// module chunks = 0","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// this is the core work-horse\n//\n\nvar LinkedList = require('./linked-list');\n\nfunction Intersecter(selfIntersection, eps, buildLog){\n\t// selfIntersection is true/false depending on the phase of the overall algorithm\n\n\t//\n\t// segment creation\n\t//\n\n\tfunction segmentNew(start, end){\n\t\treturn {\n\t\t\tid: buildLog ? buildLog.segmentId() : -1,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tmyFill: {\n\t\t\t\tabove: null, // is there fill above us?\n\t\t\t\tbelow: null  // is there fill below us?\n\t\t\t},\n\t\t\totherFill: null\n\t\t};\n\t}\n\n\tfunction segmentCopy(start, end, seg){\n\t\treturn {\n\t\t\tid: buildLog ? buildLog.segmentId() : -1,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tmyFill: {\n\t\t\t\tabove: seg.myFill.above,\n\t\t\t\tbelow: seg.myFill.below\n\t\t\t},\n\t\t\totherFill: null\n\t\t};\n\t}\n\n\t//\n\t// event logic\n\t//\n\n\tvar event_root = LinkedList.create();\n\n\tfunction eventCompare(p1_isStart, p1_1, p1_2, p2_isStart, p2_1, p2_2){\n\t\t// compare the selected points first\n\t\tvar comp = eps.pointsCompare(p1_1, p2_1);\n\t\tif (comp !== 0)\n\t\t\treturn comp;\n\t\t// the selected points are the same\n\n\t\tif (eps.pointsSame(p1_2, p2_2)) // if the non-selected points are the same too...\n\t\t\treturn 0; // then the segments are equal\n\n\t\tif (p1_isStart !== p2_isStart) // if one is a start and the other isn't...\n\t\t\treturn p1_isStart ? 1 : -1; // favor the one that isn't the start\n\n\t\t// otherwise, we'll have to calculate which one is below the other manually\n\t\treturn eps.pointAboveOrOnLine(p1_2,\n\t\t\tp2_isStart ? p2_1 : p2_2, // order matters\n\t\t\tp2_isStart ? p2_2 : p2_1\n\t\t) ? 1 : -1;\n\t}\n\n\tfunction eventAdd(ev, other_pt){\n\t\tevent_root.insertBefore(ev, function(here){\n\t\t\t// should ev be inserted before here?\n\t\t\tvar comp = eventCompare(\n\t\t\t\tev  .isStart, ev  .pt,      other_pt,\n\t\t\t\there.isStart, here.pt, here.other.pt\n\t\t\t);\n\t\t\treturn comp < 0;\n\t\t});\n\t}\n\n\tfunction eventAddSegmentStart(seg, primary){\n\t\tvar ev_start = LinkedList.node({\n\t\t\tisStart: true,\n\t\t\tpt: seg.start,\n\t\t\tseg: seg,\n\t\t\tprimary: primary,\n\t\t\tother: null,\n\t\t\tstatus: null\n\t\t});\n\t\teventAdd(ev_start, seg.end);\n\t\treturn ev_start;\n\t}\n\n\tfunction eventAddSegmentEnd(ev_start, seg, primary){\n\t\tvar ev_end = LinkedList.node({\n\t\t\tisStart: false,\n\t\t\tpt: seg.end,\n\t\t\tseg: seg,\n\t\t\tprimary: primary,\n\t\t\tother: ev_start,\n\t\t\tstatus: null\n\t\t});\n\t\tev_start.other = ev_end;\n\t\teventAdd(ev_end, ev_start.pt);\n\t}\n\n\tfunction eventAddSegment(seg, primary){\n\t\tvar ev_start = eventAddSegmentStart(seg, primary);\n\t\teventAddSegmentEnd(ev_start, seg, primary);\n\t\treturn ev_start;\n\t}\n\n\tfunction eventUpdateEnd(ev, end){\n\t\t// slides an end backwards\n\t\t//   (start)------------(end)    to:\n\t\t//   (start)---(end)\n\n\t\tif (buildLog)\n\t\t\tbuildLog.segmentChop(ev.seg, end);\n\n\t\tev.other.remove();\n\t\tev.seg.end = end;\n\t\tev.other.pt = end;\n\t\teventAdd(ev.other, ev.pt);\n\t}\n\n\tfunction eventDivide(ev, pt){\n\t\tvar ns = segmentCopy(pt, ev.seg.end, ev.seg);\n\t\teventUpdateEnd(ev, pt);\n\t\treturn eventAddSegment(ns, ev.primary);\n\t}\n\n\tfunction calculate(primaryPolyInverted, secondaryPolyInverted){\n\t\t// if selfIntersection is true then there is no secondary polygon, so that isn't used\n\n\t\t//\n\t\t// status logic\n\t\t//\n\n\t\tvar status_root = LinkedList.create();\n\n\t\tfunction statusCompare(ev1, ev2){\n\t\t\tvar a1 = ev1.seg.start;\n\t\t\tvar a2 = ev1.seg.end;\n\t\t\tvar b1 = ev2.seg.start;\n\t\t\tvar b2 = ev2.seg.end;\n\n\t\t\tif (eps.pointsCollinear(a1, b1, b2)){\n\t\t\t\tif (eps.pointsCollinear(a2, b1, b2))\n\t\t\t\t\treturn 1;//eventCompare(true, a1, a2, true, b1, b2);\n\t\t\t\treturn eps.pointAboveOrOnLine(a2, b1, b2) ? 1 : -1;\n\t\t\t}\n\t\t\treturn eps.pointAboveOrOnLine(a1, b1, b2) ? 1 : -1;\n\t\t}\n\n\t\tfunction statusFindSurrounding(ev){\n\t\t\treturn status_root.findTransition(function(here){\n\t\t\t\tvar comp = statusCompare(ev, here.ev);\n\t\t\t\treturn comp > 0;\n\t\t\t});\n\t\t}\n\n\t\tfunction checkIntersection(ev1, ev2){\n\t\t\t// returns the segment equal to ev1, or false if nothing equal\n\n\t\t\tvar seg1 = ev1.seg;\n\t\t\tvar seg2 = ev2.seg;\n\t\t\tvar a1 = seg1.start;\n\t\t\tvar a2 = seg1.end;\n\t\t\tvar b1 = seg2.start;\n\t\t\tvar b2 = seg2.end;\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.checkIntersection(seg1, seg2);\n\n\t\t\tvar i = eps.linesIntersect(a1, a2, b1, b2);\n\n\t\t\tif (i === false){\n\t\t\t\t// segments are parallel or coincident\n\n\t\t\t\t// if points aren't collinear, then the segments are parallel, so no intersections\n\t\t\t\tif (!eps.pointsCollinear(a1, a2, b1))\n\t\t\t\t\treturn false;\n\t\t\t\t// otherwise, segments are on top of each other somehow (aka coincident)\n\n\t\t\t\tif (eps.pointsSame(a1, b2) || eps.pointsSame(a2, b1))\n\t\t\t\t\treturn false; // segments touch at endpoints... no intersection\n\n\t\t\t\tvar a1_equ_b1 = eps.pointsSame(a1, b1);\n\t\t\t\tvar a2_equ_b2 = eps.pointsSame(a2, b2);\n\n\t\t\t\tif (a1_equ_b1 && a2_equ_b2)\n\t\t\t\t\treturn ev2; // segments are exactly equal\n\n\t\t\t\tvar a1_between = !a1_equ_b1 && eps.pointBetween(a1, b1, b2);\n\t\t\t\tvar a2_between = !a2_equ_b2 && eps.pointBetween(a2, b1, b2);\n\n\t\t\t\t// handy for debugging:\n\t\t\t\t// buildLog.log({\n\t\t\t\t//\ta1_equ_b1: a1_equ_b1,\n\t\t\t\t//\ta2_equ_b2: a2_equ_b2,\n\t\t\t\t//\ta1_between: a1_between,\n\t\t\t\t//\ta2_between: a2_between\n\t\t\t\t// });\n\n\t\t\t\tif (a1_equ_b1){\n\t\t\t\t\tif (a2_between){\n\t\t\t\t\t\t//  (a1)---(a2)\n\t\t\t\t\t\t//  (b1)----------(b2)\n\t\t\t\t\t\teventDivide(ev2, a2);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t//  (a1)----------(a2)\n\t\t\t\t\t\t//  (b1)---(b2)\n\t\t\t\t\t\teventDivide(ev1, b2);\n\t\t\t\t\t}\n\t\t\t\t\treturn ev2;\n\t\t\t\t}\n\t\t\t\telse if (a1_between){\n\t\t\t\t\tif (!a2_equ_b2){\n\t\t\t\t\t\t// make a2 equal to b2\n\t\t\t\t\t\tif (a2_between){\n\t\t\t\t\t\t\t//         (a1)---(a2)\n\t\t\t\t\t\t\t//  (b1)-----------------(b2)\n\t\t\t\t\t\t\teventDivide(ev2, a2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t//         (a1)----------(a2)\n\t\t\t\t\t\t\t//  (b1)----------(b2)\n\t\t\t\t\t\t\teventDivide(ev1, b2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//         (a1)---(a2)\n\t\t\t\t\t//  (b1)----------(b2)\n\t\t\t\t\teventDivide(ev2, a1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// otherwise, lines intersect at i.pt, which may or may not be between the endpoints\n\n\t\t\t\t// is A divided between its endpoints? (exclusive)\n\t\t\t\tif (i.alongA === 0){\n\t\t\t\t\tif (i.alongB === -1) // yes, at exactly b1\n\t\t\t\t\t\teventDivide(ev1, b1);\n\t\t\t\t\telse if (i.alongB === 0) // yes, somewhere between B's endpoints\n\t\t\t\t\t\teventDivide(ev1, i.pt);\n\t\t\t\t\telse if (i.alongB === 1) // yes, at exactly b2\n\t\t\t\t\t\teventDivide(ev1, b2);\n\t\t\t\t}\n\n\t\t\t\t// is B divided between its endpoints? (exclusive)\n\t\t\t\tif (i.alongB === 0){\n\t\t\t\t\tif (i.alongA === -1) // yes, at exactly a1\n\t\t\t\t\t\teventDivide(ev2, a1);\n\t\t\t\t\telse if (i.alongA === 0) // yes, somewhere between A's endpoints (exclusive)\n\t\t\t\t\t\teventDivide(ev2, i.pt);\n\t\t\t\t\telse if (i.alongA === 1) // yes, at exactly a2\n\t\t\t\t\t\teventDivide(ev2, a2);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//\n\t\t// main event loop\n\t\t//\n\t\tvar segments = [];\n\t\twhile (!event_root.isEmpty()){\n\t\t\tvar ev = event_root.getHead();\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.vert(ev.pt[0]);\n\n\t\t\tif (ev.isStart){\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.segmentNew(ev.seg, ev.primary);\n\n\t\t\t\tvar surrounding = statusFindSurrounding(ev);\n\t\t\t\tvar above = surrounding.before ? surrounding.before.ev : null;\n\t\t\t\tvar below = surrounding.after ? surrounding.after.ev : null;\n\n\t\t\t\tif (buildLog){\n\t\t\t\t\tbuildLog.tempStatus(\n\t\t\t\t\t\tev.seg,\n\t\t\t\t\t\tabove ? above.seg : false,\n\t\t\t\t\t\tbelow ? below.seg : false\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tfunction checkBothIntersections(){\n\t\t\t\t\tif (above){\n\t\t\t\t\t\tvar eve = checkIntersection(ev, above);\n\t\t\t\t\t\tif (eve)\n\t\t\t\t\t\t\treturn eve;\n\t\t\t\t\t}\n\t\t\t\t\tif (below)\n\t\t\t\t\t\treturn checkIntersection(ev, below);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tvar eve = checkBothIntersections();\n\t\t\t\tif (eve){\n\t\t\t\t\t// ev and eve are equal\n\t\t\t\t\t// we'll keep eve and throw away ev\n\n\t\t\t\t\t// merge ev.seg's fill information into eve.seg\n\n\t\t\t\t\tif (selfIntersection){\n\t\t\t\t\t\tvar toggle; // are we a toggling edge?\n\t\t\t\t\t\tif (ev.seg.myFill.below === null)\n\t\t\t\t\t\t\ttoggle = true;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ttoggle = ev.seg.myFill.above !== ev.seg.myFill.below;\n\n\t\t\t\t\t\t// merge two segments that belong to the same polygon\n\t\t\t\t\t\t// think of this as sandwiching two segments together, where `eve.seg` is\n\t\t\t\t\t\t// the bottom -- this will cause the above fill flag to toggle\n\t\t\t\t\t\tif (toggle)\n\t\t\t\t\t\t\teve.seg.myFill.above = !eve.seg.myFill.above;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t// merge two segments that belong to different polygons\n\t\t\t\t\t\t// each segment has distinct knowledge, so no special logic is needed\n\t\t\t\t\t\t// note that this can only happen once per segment in this phase, because we\n\t\t\t\t\t\t// are guaranteed that all self-intersections are gone\n\t\t\t\t\t\teve.seg.otherFill = ev.seg.myFill;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.segmentUpdate(eve.seg);\n\n\t\t\t\t\tev.other.remove();\n\t\t\t\t\tev.remove();\n\t\t\t\t}\n\n\t\t\t\tif (event_root.getHead() !== ev){\n\t\t\t\t\t// something was inserted before us in the event queue, so loop back around and\n\t\t\t\t\t// process it before continuing\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.rewind(ev.seg);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t//\n\t\t\t\t// calculate fill flags\n\t\t\t\t//\n\t\t\t\tif (selfIntersection){\n\t\t\t\t\tvar toggle; // are we a toggling edge?\n\t\t\t\t\tif (ev.seg.myFill.below === null) // if we are a new segment...\n\t\t\t\t\t\ttoggle = true; // then we toggle\n\t\t\t\t\telse // we are a segment that has previous knowledge from a division\n\t\t\t\t\t\ttoggle = ev.seg.myFill.above !== ev.seg.myFill.below; // calculate toggle\n\n\t\t\t\t\t// next, calculate whether we are filled below us\n\t\t\t\t\tif (!below){ // if nothing is below us...\n\t\t\t\t\t\t// we are filled below us if the polygon is inverted\n\t\t\t\t\t\tev.seg.myFill.below = primaryPolyInverted;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t// otherwise, we know the answer -- it's the same if whatever is below\n\t\t\t\t\t\t// us is filled above it\n\t\t\t\t\t\tev.seg.myFill.below = below.seg.myFill.above;\n\t\t\t\t\t}\n\n\t\t\t\t\t// since now we know if we're filled below us, we can calculate whether\n\t\t\t\t\t// we're filled above us by applying toggle to whatever is below us\n\t\t\t\t\tif (toggle)\n\t\t\t\t\t\tev.seg.myFill.above = !ev.seg.myFill.below;\n\t\t\t\t\telse\n\t\t\t\t\t\tev.seg.myFill.above = ev.seg.myFill.below;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// now we fill in any missing transition information, since we are all-knowing\n\t\t\t\t\t// at this point\n\n\t\t\t\t\tif (ev.seg.otherFill === null){\n\t\t\t\t\t\t// if we don't have other information, then we need to figure out if we're\n\t\t\t\t\t\t// inside the other polygon\n\t\t\t\t\t\tvar inside;\n\t\t\t\t\t\tif (!below){\n\t\t\t\t\t\t\t// if nothing is below us, then we're inside if the other polygon is\n\t\t\t\t\t\t\t// inverted\n\t\t\t\t\t\t\tinside =\n\t\t\t\t\t\t\t\tev.primary ? secondaryPolyInverted : primaryPolyInverted;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{ // otherwise, something is below us\n\t\t\t\t\t\t\t// so copy the below segment's other polygon's above\n\t\t\t\t\t\t\tif (ev.primary === below.primary)\n\t\t\t\t\t\t\t\tinside = below.seg.otherFill.above;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tinside = below.seg.myFill.above;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tev.seg.otherFill = {\n\t\t\t\t\t\t\tabove: inside,\n\t\t\t\t\t\t\tbelow: inside\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (buildLog){\n\t\t\t\t\tbuildLog.status(\n\t\t\t\t\t\tev.seg,\n\t\t\t\t\t\tabove ? above.seg : false,\n\t\t\t\t\t\tbelow ? below.seg : false\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// insert the status and remember it for later removal\n\t\t\t\tev.other.status = surrounding.insert(LinkedList.node({ ev: ev }));\n\t\t\t}\n\t\t\telse{\n\t\t\t\tvar st = ev.status;\n\n\t\t\t\tif (st === null){\n\t\t\t\t\tthrow new Error('PolyBool: Zero-length segment detected; your epsilon is ' +\n\t\t\t\t\t\t'probably too small or too large');\n\t\t\t\t}\n\n\t\t\t\t// removing the status will create two new adjacent edges, so we'll need to check\n\t\t\t\t// for those\n\t\t\t\tif (status_root.exists(st.prev) && status_root.exists(st.next))\n\t\t\t\t\tcheckIntersection(st.prev.ev, st.next.ev);\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.statusRemove(st.ev.seg);\n\n\t\t\t\t// remove the status\n\t\t\t\tst.remove();\n\n\t\t\t\t// if we've reached this point, we've calculated everything there is to know, so\n\t\t\t\t// save the segment for reporting\n\t\t\t\tif (!ev.primary){\n\t\t\t\t\t// make sure `seg.myFill` actually points to the primary polygon though\n\t\t\t\t\tvar s = ev.seg.myFill;\n\t\t\t\t\tev.seg.myFill = ev.seg.otherFill;\n\t\t\t\t\tev.seg.otherFill = s;\n\t\t\t\t}\n\t\t\t\tsegments.push(ev.seg);\n\t\t\t}\n\n\t\t\t// remove the event and continue\n\t\t\tevent_root.getHead().remove();\n\t\t}\n\n\t\tif (buildLog)\n\t\t\tbuildLog.done();\n\n\t\treturn segments;\n\t}\n\n\t// return the appropriate API depending on what we're doing\n\tif (!selfIntersection){\n\t\t// performing combination of polygons, so only deal with already-processed segments\n\t\treturn {\n\t\t\tcalculate: function(segments1, inverted1, segments2, inverted2){\n\t\t\t\t// segmentsX come from the self-intersection API, or this API\n\t\t\t\t// invertedX is whether we treat that list of segments as an inverted polygon or not\n\t\t\t\t// returns segments that can be used for further operations\n\t\t\t\tsegments1.forEach(function(seg){\n\t\t\t\t\teventAddSegment(segmentCopy(seg.start, seg.end, seg), true);\n\t\t\t\t});\n\t\t\t\tsegments2.forEach(function(seg){\n\t\t\t\t\teventAddSegment(segmentCopy(seg.start, seg.end, seg), false);\n\t\t\t\t});\n\t\t\t\treturn calculate(inverted1, inverted2);\n\t\t\t}\n\t\t};\n\t}\n\n\t// otherwise, performing self-intersection, so deal with regions\n\treturn {\n\t\taddRegion: function(region){\n\t\t\t// regions are a list of points:\n\t\t\t//  [ [0, 0], [100, 0], [50, 100] ]\n\t\t\t// you can add multiple regions before running calculate\n\t\t\tvar pt1;\n\t\t\tvar pt2 = region[region.length - 1];\n\t\t\tfor (var i = 0; i < region.length; i++){\n\t\t\t\tpt1 = pt2;\n\t\t\t\tpt2 = region[i];\n\n\t\t\t\tvar forward = eps.pointsCompare(pt1, pt2);\n\t\t\t\tif (forward === 0) // points are equal, so we have a zero-length segment\n\t\t\t\t\tcontinue; // just skip it\n\n\t\t\t\teventAddSegment(\n\t\t\t\t\tsegmentNew(\n\t\t\t\t\t\tforward < 0 ? pt1 : pt2,\n\t\t\t\t\t\tforward < 0 ? pt2 : pt1\n\t\t\t\t\t),\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tcalculate: function(inverted){\n\t\t\t// is the polygon inverted?\n\t\t\t// returns segments\n\t\t\treturn calculate(inverted, false);\n\t\t}\n\t};\n}\n\nmodule.exports = Intersecter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/polybooljs/lib/intersecter.js\n// module id = 191\n// module chunks = 0","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// simple linked list implementation that allows you to traverse down nodes and save positions\n//\n\nvar LinkedList = {\n\tcreate: function(){\n\t\tvar my = {\n\t\t\troot: { root: true, next: null },\n\t\t\texists: function(node){\n\t\t\t\tif (node === null || node === my.root)\n\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tisEmpty: function(){\n\t\t\t\treturn my.root.next === null;\n\t\t\t},\n\t\t\tgetHead: function(){\n\t\t\t\treturn my.root.next;\n\t\t\t},\n\t\t\tinsertBefore: function(node, check){\n\t\t\t\tvar last = my.root;\n\t\t\t\tvar here = my.root.next;\n\t\t\t\twhile (here !== null){\n\t\t\t\t\tif (check(here)){\n\t\t\t\t\t\tnode.prev = here.prev;\n\t\t\t\t\t\tnode.next = here;\n\t\t\t\t\t\there.prev.next = node;\n\t\t\t\t\t\there.prev = node;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlast = here;\n\t\t\t\t\there = here.next;\n\t\t\t\t}\n\t\t\t\tlast.next = node;\n\t\t\t\tnode.prev = last;\n\t\t\t\tnode.next = null;\n\t\t\t},\n\t\t\tfindTransition: function(check){\n\t\t\t\tvar prev = my.root;\n\t\t\t\tvar here = my.root.next;\n\t\t\t\twhile (here !== null){\n\t\t\t\t\tif (check(here))\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tprev = here;\n\t\t\t\t\there = here.next;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tbefore: prev === my.root ? null : prev,\n\t\t\t\t\tafter: here,\n\t\t\t\t\tinsert: function(node){\n\t\t\t\t\t\tnode.prev = prev;\n\t\t\t\t\t\tnode.next = here;\n\t\t\t\t\t\tprev.next = node;\n\t\t\t\t\t\tif (here !== null)\n\t\t\t\t\t\t\there.prev = node;\n\t\t\t\t\t\treturn node;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\treturn my;\n\t},\n\tnode: function(data){\n\t\tdata.prev = null;\n\t\tdata.next = null;\n\t\tdata.remove = function(){\n\t\t\tdata.prev.next = data.next;\n\t\t\tif (data.next)\n\t\t\t\tdata.next.prev = data.prev;\n\t\t\tdata.prev = null;\n\t\t\tdata.next = null;\n\t\t};\n\t\treturn data;\n\t}\n};\n\nmodule.exports = LinkedList;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/polybooljs/lib/linked-list.js\n// module id = 192\n// module chunks = 0","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// converts a list of segments into a list of regions, while also removing unnecessary verticies\n//\n\nfunction SegmentChainer(segments, eps, buildLog){\n\tvar chains = [];\n\tvar regions = [];\n\n\tsegments.forEach(function(seg){\n\t\tvar pt1 = seg.start;\n\t\tvar pt2 = seg.end;\n\t\tif (eps.pointsSame(pt1, pt2)){\n\t\t\tconsole.warn('PolyBool: Warning: Zero-length segment detected; your epsilon is ' +\n\t\t\t\t'probably too small or too large');\n\t\t\treturn;\n\t\t}\n\n\t\tif (buildLog)\n\t\t\tbuildLog.chainStart(seg);\n\n\t\t// search for two chains that this segment matches\n\t\tvar first_match = {\n\t\t\tindex: 0,\n\t\t\tmatches_head: false,\n\t\t\tmatches_pt1: false\n\t\t};\n\t\tvar second_match = {\n\t\t\tindex: 0,\n\t\t\tmatches_head: false,\n\t\t\tmatches_pt1: false\n\t\t};\n\t\tvar next_match = first_match;\n\t\tfunction setMatch(index, matches_head, matches_pt1){\n\t\t\t// return true if we've matched twice\n\t\t\tnext_match.index = index;\n\t\t\tnext_match.matches_head = matches_head;\n\t\t\tnext_match.matches_pt1 = matches_pt1;\n\t\t\tif (next_match === first_match){\n\t\t\t\tnext_match = second_match;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnext_match = null;\n\t\t\treturn true; // we've matched twice, we're done here\n\t\t}\n\t\tfor (var i = 0; i < chains.length; i++){\n\t\t\tvar chain = chains[i];\n\t\t\tvar head  = chain[0];\n\t\t\tvar head2 = chain[1];\n\t\t\tvar tail  = chain[chain.length - 1];\n\t\t\tvar tail2 = chain[chain.length - 2];\n\t\t\tif (eps.pointsSame(head, pt1)){\n\t\t\t\tif (setMatch(i, true, true))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(head, pt2)){\n\t\t\t\tif (setMatch(i, true, false))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(tail, pt1)){\n\t\t\t\tif (setMatch(i, false, true))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(tail, pt2)){\n\t\t\t\tif (setMatch(i, false, false))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (next_match === first_match){\n\t\t\t// we didn't match anything, so create a new chain\n\t\t\tchains.push([ pt1, pt2 ]);\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainNew(pt1, pt2);\n\t\t\treturn;\n\t\t}\n\n\t\tif (next_match === second_match){\n\t\t\t// we matched a single chain\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainMatch(first_match.index);\n\n\t\t\t// add the other point to the apporpriate end, and check to see if we've closed the\n\t\t\t// chain into a loop\n\n\t\t\tvar index = first_match.index;\n\t\t\tvar pt = first_match.matches_pt1 ? pt2 : pt1; // if we matched pt1, then we add pt2, etc\n\t\t\tvar addToHead = first_match.matches_head; // if we matched at head, then add to the head\n\n\t\t\tvar chain = chains[index];\n\t\t\tvar grow  = addToHead ? chain[0] : chain[chain.length - 1];\n\t\t\tvar grow2 = addToHead ? chain[1] : chain[chain.length - 2];\n\t\t\tvar oppo  = addToHead ? chain[chain.length - 1] : chain[0];\n\t\t\tvar oppo2 = addToHead ? chain[chain.length - 2] : chain[1];\n\n\t\t\tif (eps.pointsCollinear(grow2, grow, pt)){\n\t\t\t\t// grow isn't needed because it's directly between grow2 and pt:\n\t\t\t\t// grow2 ---grow---> pt\n\t\t\t\tif (addToHead){\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.chainRemoveHead(first_match.index, pt);\n\t\t\t\t\tchain.shift();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.chainRemoveTail(first_match.index, pt);\n\t\t\t\t\tchain.pop();\n\t\t\t\t}\n\t\t\t\tgrow = grow2; // old grow is gone... new grow is what grow2 was\n\t\t\t}\n\n\t\t\tif (eps.pointsSame(oppo, pt)){\n\t\t\t\t// we're closing the loop, so remove chain from chains\n\t\t\t\tchains.splice(index, 1);\n\n\t\t\t\tif (eps.pointsCollinear(oppo2, oppo, grow)){\n\t\t\t\t\t// oppo isn't needed because it's directly between oppo2 and grow:\n\t\t\t\t\t// oppo2 ---oppo--->grow\n\t\t\t\t\tif (addToHead){\n\t\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\t\tbuildLog.chainRemoveTail(first_match.index, grow);\n\t\t\t\t\t\tchain.pop();\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\t\tbuildLog.chainRemoveHead(first_match.index, grow);\n\t\t\t\t\t\tchain.shift();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainClose(first_match.index);\n\n\t\t\t\t// we have a closed chain!\n\t\t\t\tregions.push(chain);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// not closing a loop, so just add it to the apporpriate side\n\t\t\tif (addToHead){\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainAddHead(first_match.index, pt);\n\t\t\t\tchain.unshift(pt);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainAddTail(first_match.index, pt);\n\t\t\t\tchain.push(pt);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, we matched two chains, so we need to combine those chains together\n\n\t\tfunction reverseChain(index){\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainReverse(index);\n\t\t\tchains[index].reverse(); // gee, that's easy\n\t\t}\n\n\t\tfunction appendChain(index1, index2){\n\t\t\t// index1 gets index2 appended to it, and index2 is removed\n\t\t\tvar chain1 = chains[index1];\n\t\t\tvar chain2 = chains[index2];\n\t\t\tvar tail  = chain1[chain1.length - 1];\n\t\t\tvar tail2 = chain1[chain1.length - 2];\n\t\t\tvar head  = chain2[0];\n\t\t\tvar head2 = chain2[1];\n\n\t\t\tif (eps.pointsCollinear(tail2, tail, head)){\n\t\t\t\t// tail isn't needed because it's directly between tail2 and head\n\t\t\t\t// tail2 ---tail---> head\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainRemoveTail(index1, tail);\n\t\t\t\tchain1.pop();\n\t\t\t\ttail = tail2; // old tail is gone... new tail is what tail2 was\n\t\t\t}\n\n\t\t\tif (eps.pointsCollinear(tail, head, head2)){\n\t\t\t\t// head isn't needed because it's directly between tail and head2\n\t\t\t\t// tail ---head---> head2\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainRemoveHead(index2, head);\n\t\t\t\tchain2.shift();\n\t\t\t}\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainJoin(index1, index2);\n\t\t\tchains[index1] = chain1.concat(chain2);\n\t\t\tchains.splice(index2, 1);\n\t\t}\n\n\t\tvar F = first_match.index;\n\t\tvar S = second_match.index;\n\n\t\tif (buildLog)\n\t\t\tbuildLog.chainConnect(F, S);\n\n\t\tvar reverseF = chains[F].length < chains[S].length; // reverse the shorter chain, if needed\n\t\tif (first_match.matches_head){\n\t\t\tif (second_match.matches_head){\n\t\t\t\tif (reverseF){\n\t\t\t\t\t// <<<< F <<<< --- >>>> S >>>>\n\t\t\t\t\treverseChain(F);\n\t\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\t\tappendChain(F, S);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// <<<< F <<<< --- >>>> S >>>>\n\t\t\t\t\treverseChain(S);\n\t\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\t\tappendChain(S, F);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\tappendChain(S, F);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif (second_match.matches_head){\n\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\tappendChain(F, S);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (reverseF){\n\t\t\t\t\t// >>>> F >>>> --- <<<< S <<<<\n\t\t\t\t\treverseChain(F);\n\t\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\t\tappendChain(S, F);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// >>>> F >>>> --- <<<< S <<<<\n\t\t\t\t\treverseChain(S);\n\t\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\t\tappendChain(F, S);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn regions;\n}\n\nmodule.exports = SegmentChainer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/polybooljs/lib/segment-chainer.js\n// module id = 193\n// module chunks = 0","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// filter a list of segments based on boolean operations\n//\n\nfunction select(segments, selection, buildLog){\n\tvar result = [];\n\tsegments.forEach(function(seg){\n\t\tvar index =\n\t\t\t(seg.myFill.above ? 8 : 0) +\n\t\t\t(seg.myFill.below ? 4 : 0) +\n\t\t\t((seg.otherFill && seg.otherFill.above) ? 2 : 0) +\n\t\t\t((seg.otherFill && seg.otherFill.below) ? 1 : 0);\n\t\tif (selection[index] !== 0){\n\t\t\t// copy the segment to the results, while also calculating the fill status\n\t\t\tresult.push({\n\t\t\t\tid: buildLog ? buildLog.segmentId() : -1,\n\t\t\t\tstart: seg.start,\n\t\t\t\tend: seg.end,\n\t\t\t\tmyFill: {\n\t\t\t\t\tabove: selection[index] === 1, // 1 if filled above\n\t\t\t\t\tbelow: selection[index] === 2  // 2 if filled below\n\t\t\t\t},\n\t\t\t\totherFill: null\n\t\t\t});\n\t\t}\n\t});\n\n\tif (buildLog)\n\t\tbuildLog.selected(result);\n\n\treturn result;\n}\n\nvar SegmentSelector = {\n\tunion: function(segments, buildLog){ // primary | secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   yes filled below    2\n\t\t//    0      0      1      0   =>   yes filled above    1\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   yes filled below    2\n\t\t//    0      1      0      1   =>   yes filled below    2\n\t\t//    0      1      1      0   =>   no                  0\n\t\t//    0      1      1      1   =>   no                  0\n\t\t//    1      0      0      0   =>   yes filled above    1\n\t\t//    1      0      0      1   =>   no                  0\n\t\t//    1      0      1      0   =>   yes filled above    1\n\t\t//    1      0      1      1   =>   no                  0\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   no                  0\n\t\t//    1      1      1      0   =>   no                  0\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 2, 1, 0,\n\t\t\t2, 2, 0, 0,\n\t\t\t1, 0, 1, 0,\n\t\t\t0, 0, 0, 0\n\t\t], buildLog);\n\t},\n\tintersect: function(segments, buildLog){ // primary & secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   no                  0\n\t\t//    0      0      1      0   =>   no                  0\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   no                  0\n\t\t//    0      1      0      1   =>   yes filled below    2\n\t\t//    0      1      1      0   =>   no                  0\n\t\t//    0      1      1      1   =>   yes filled below    2\n\t\t//    1      0      0      0   =>   no                  0\n\t\t//    1      0      0      1   =>   no                  0\n\t\t//    1      0      1      0   =>   yes filled above    1\n\t\t//    1      0      1      1   =>   yes filled above    1\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   yes filled below    2\n\t\t//    1      1      1      0   =>   yes filled above    1\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 0, 0, 0,\n\t\t\t0, 2, 0, 2,\n\t\t\t0, 0, 1, 1,\n\t\t\t0, 2, 1, 0\n\t\t], buildLog);\n\t},\n\tdifference: function(segments, buildLog){ // primary - secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   no                  0\n\t\t//    0      0      1      0   =>   no                  0\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   yes filled below    2\n\t\t//    0      1      0      1   =>   no                  0\n\t\t//    0      1      1      0   =>   yes filled below    2\n\t\t//    0      1      1      1   =>   no                  0\n\t\t//    1      0      0      0   =>   yes filled above    1\n\t\t//    1      0      0      1   =>   yes filled above    1\n\t\t//    1      0      1      0   =>   no                  0\n\t\t//    1      0      1      1   =>   no                  0\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   yes filled above    1\n\t\t//    1      1      1      0   =>   yes filled below    2\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 0, 0, 0,\n\t\t\t2, 0, 2, 0,\n\t\t\t1, 1, 0, 0,\n\t\t\t0, 1, 2, 0\n\t\t], buildLog);\n\t},\n\tdifferenceRev: function(segments, buildLog){ // secondary - primary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   yes filled below    2\n\t\t//    0      0      1      0   =>   yes filled above    1\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   no                  0\n\t\t//    0      1      0      1   =>   no                  0\n\t\t//    0      1      1      0   =>   yes filled above    1\n\t\t//    0      1      1      1   =>   yes filled above    1\n\t\t//    1      0      0      0   =>   no                  0\n\t\t//    1      0      0      1   =>   yes filled below    2\n\t\t//    1      0      1      0   =>   no                  0\n\t\t//    1      0      1      1   =>   yes filled below    2\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   no                  0\n\t\t//    1      1      1      0   =>   no                  0\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 2, 1, 0,\n\t\t\t0, 0, 1, 1,\n\t\t\t0, 2, 0, 2,\n\t\t\t0, 0, 0, 0\n\t\t], buildLog);\n\t},\n\txor: function(segments, buildLog){ // primary ^ secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   yes filled below    2\n\t\t//    0      0      1      0   =>   yes filled above    1\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   yes filled below    2\n\t\t//    0      1      0      1   =>   no                  0\n\t\t//    0      1      1      0   =>   no                  0\n\t\t//    0      1      1      1   =>   yes filled above    1\n\t\t//    1      0      0      0   =>   yes filled above    1\n\t\t//    1      0      0      1   =>   no                  0\n\t\t//    1      0      1      0   =>   no                  0\n\t\t//    1      0      1      1   =>   yes filled below    2\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   yes filled above    1\n\t\t//    1      1      1      0   =>   yes filled below    2\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 2, 1, 0,\n\t\t\t2, 0, 0, 1,\n\t\t\t1, 0, 0, 2,\n\t\t\t0, 1, 2, 0\n\t\t], buildLog);\n\t}\n};\n\nmodule.exports = SegmentSelector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/polybooljs/lib/segment-selector.js\n// module id = 194\n// module chunks = 0","// (c) Copyright 2017, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// convert between PolyBool polygon format and GeoJSON formats (Polygon and MultiPolygon)\n//\n\nvar GeoJSON = {\n\t// convert a GeoJSON object to a PolyBool polygon\n\ttoPolygon: function(PolyBool, geojson){\n\n\t\t// converts list of LineString's to segments\n\t\tfunction GeoPoly(coords){\n\t\t\t// check for empty coords\n\t\t\tif (coords.length <= 0)\n\t\t\t\treturn PolyBool.segments({ inverted: false, regions: [] });\n\n\t\t\t// convert LineString to segments\n\t\t\tfunction LineString(ls){\n\t\t\t\t// remove tail which should be the same as head\n\t\t\t\tvar reg = ls.slice(0, ls.length - 1);\n\t\t\t\treturn PolyBool.segments({ inverted: false, regions: [reg] });\n\t\t\t}\n\n\t\t\t// the first LineString is considered the outside\n\t\t\tvar out = LineString(coords[0]);\n\n\t\t\t// the rest of the LineStrings are considered interior holes, so subtract them from the\n\t\t\t// current result\n\t\t\tfor (var i = 1; i < coords.length; i++)\n\t\t\t\tout = PolyBool.selectDifference(PolyBool.combine(out, LineString(coords[i])));\n\n\t\t\treturn out;\n\t\t}\n\n\t\tif (geojson.type === 'Polygon'){\n\t\t\t// single polygon, so just convert it and we're done\n\t\t\treturn PolyBool.polygon(GeoPoly(geojson.coordinates));\n\t\t}\n\t\telse if (geojson.type === 'MultiPolygon'){\n\t\t\t// multiple polygons, so union all the polygons together\n\t\t\tvar out = PolyBool.segments({ inverted: false, regions: [] });\n\t\t\tfor (var i = 0; i < geojson.coordinates.length; i++)\n\t\t\t\tout = PolyBool.selectUnion(PolyBool.combine(out, GeoPoly(geojson.coordinates[i])));\n\t\t\treturn PolyBool.polygon(out);\n\t\t}\n\t\tthrow new Error('PolyBool: Cannot convert GeoJSON object to PolyBool polygon');\n\t},\n\n\t// convert a PolyBool polygon to a GeoJSON object\n\tfromPolygon: function(PolyBool, eps, poly){\n\t\t// make sure out polygon is clean\n\t\tpoly = PolyBool.polygon(PolyBool.segments(poly));\n\n\t\t// test if r1 is inside r2\n\t\tfunction regionInsideRegion(r1, r2){\n\t\t\t// we're guaranteed no lines intersect (because the polygon is clean), but a vertex\n\t\t\t// could be on the edge -- so we just average pt[0] and pt[1] to produce a point on the\n\t\t\t// edge of the first line, which cannot be on an edge\n\t\t\treturn eps.pointInsideRegion([\n\t\t\t\t(r1[0][0] + r1[1][0]) * 0.5,\n\t\t\t\t(r1[0][1] + r1[1][1]) * 0.5\n\t\t\t], r2);\n\t\t}\n\n\t\t// calculate inside heirarchy\n\t\t//\n\t\t//  _____________________   _______    roots -> A       -> F\n\t\t// |          A          | |   F   |            |          |\n\t\t// |  _______   _______  | |  ___  |            +-- B      +-- G\n\t\t// | |   B   | |   C   | | | |   | |            |   |\n\t\t// | |  ___  | |  ___  | | | |   | |            |   +-- D\n\t\t// | | | D | | | | E | | | | | G | |            |\n\t\t// | | |___| | | |___| | | | |   | |            +-- C\n\t\t// | |_______| |_______| | | |___| |                |\n\t\t// |_____________________| |_______|                +-- E\n\n\t\tfunction newNode(region){\n\t\t\treturn {\n\t\t\t\tregion: region,\n\t\t\t\tchildren: []\n\t\t\t};\n\t\t}\n\n\t\tvar roots = newNode(null);\n\n\t\tfunction addChild(root, region){\n\t\t\t// first check if we're inside any children\n\t\t\tfor (var i = 0; i < root.children.length; i++){\n\t\t\t\tvar child = root.children[i];\n\t\t\t\tif (regionInsideRegion(region, child.region)){\n\t\t\t\t\t// we are, so insert inside them instead\n\t\t\t\t\taddChild(child, region);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// not inside any children, so check to see if any children are inside us\n\t\t\tvar node = newNode(region);\n\t\t\tfor (var i = 0; i < root.children.length; i++){\n\t\t\t\tvar child = root.children[i];\n\t\t\t\tif (regionInsideRegion(child.region, region)){\n\t\t\t\t\t// oops... move the child beneath us, and remove them from root\n\t\t\t\t\tnode.children.push(child);\n\t\t\t\t\troot.children.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// now we can add ourselves\n\t\t\troot.children.push(node);\n\t\t}\n\n\t\t// add all regions to the root\n\t\tfor (var i = 0; i < poly.regions.length; i++){\n\t\t\tvar region = poly.regions[i];\n\t\t\tif (region.length < 3) // regions must have at least 3 points (sanity check)\n\t\t\t\tcontinue;\n\t\t\taddChild(roots, region);\n\t\t}\n\n\t\t// with our heirarchy, we can distinguish between exterior borders, and interior holes\n\t\t// the root nodes are exterior, children are interior, children's children are exterior,\n\t\t// children's children's children are interior, etc\n\n\t\t// while we're at it, exteriors are counter-clockwise, and interiors are clockwise\n\n\t\tfunction forceWinding(region, clockwise){\n\t\t\t// first, see if we're clockwise or counter-clockwise\n\t\t\t// https://en.wikipedia.org/wiki/Shoelace_formula\n\t\t\tvar winding = 0;\n\t\t\tvar last_x = region[region.length - 1][0];\n\t\t\tvar last_y = region[region.length - 1][1];\n\t\t\tvar copy = [];\n\t\t\tfor (var i = 0; i < region.length; i++){\n\t\t\t\tvar curr_x = region[i][0];\n\t\t\t\tvar curr_y = region[i][1];\n\t\t\t\tcopy.push([curr_x, curr_y]); // create a copy while we're at it\n\t\t\t\twinding += curr_y * last_x - curr_x * last_y;\n\t\t\t\tlast_x = curr_x;\n\t\t\t\tlast_y = curr_y;\n\t\t\t}\n\t\t\t// this assumes Cartesian coordinates (Y is positive going up)\n\t\t\tvar isclockwise = winding < 0;\n\t\t\tif (isclockwise !== clockwise)\n\t\t\t\tcopy.reverse();\n\t\t\t// while we're here, the last point must be the first point...\n\t\t\tcopy.push([copy[0][0], copy[0][1]]);\n\t\t\treturn copy;\n\t\t}\n\n\t\tvar geopolys = [];\n\n\t\tfunction addExterior(node){\n\t\t\tvar poly = [forceWinding(node.region, false)];\n\t\t\tgeopolys.push(poly);\n\t\t\t// children of exteriors are interior\n\t\t\tfor (var i = 0; i < node.children.length; i++)\n\t\t\t\tpoly.push(getInterior(node.children[i]));\n\t\t}\n\n\t\tfunction getInterior(node){\n\t\t\t// children of interiors are exterior\n\t\t\tfor (var i = 0; i < node.children.length; i++)\n\t\t\t\taddExterior(node.children[i]);\n\t\t\t// return the clockwise interior\n\t\t\treturn forceWinding(node.region, true);\n\t\t}\n\n\t\t// root nodes are exterior\n\t\tfor (var i = 0; i < roots.children.length; i++)\n\t\t\taddExterior(roots.children[i]);\n\n\t\t// lastly, construct the approrpriate GeoJSON object\n\n\t\tif (geopolys.length <= 0) // empty GeoJSON Polygon\n\t\t\treturn { type: 'Polygon', coordinates: [] };\n\t\tif (geopolys.length == 1) // use a GeoJSON Polygon\n\t\t\treturn { type: 'Polygon', coordinates: geopolys[0] };\n\t\treturn { // otherwise, use a GeoJSON MultiPolygon\n\t\t\ttype: 'MultiPolygon',\n\t\t\tcoordinates: geopolys\n\t\t};\n\t}\n};\n\nmodule.exports = GeoJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/polybooljs/lib/geojson.js\n// module id = 195\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar nestedProperty = require('../lib/nested_property');\nvar isPlainObject = require('../lib/is_plain_object');\nvar noop = require('../lib/noop');\nvar Loggers = require('../lib/loggers');\nvar sorterAsc = require('../lib/search').sorterAsc;\nvar Registry = require('../registry');\n\n\nexports.containerArrayMatch = require('./container_array_match');\n\nvar isAddVal = exports.isAddVal = function isAddVal(val) {\n    return val === 'add' || isPlainObject(val);\n};\n\nvar isRemoveVal = exports.isRemoveVal = function isRemoveVal(val) {\n    return val === null || val === 'remove';\n};\n\n/*\n * applyContainerArrayChanges: for managing arrays of layout components in relayout\n * handles them all with a consistent interface.\n *\n * Here are the supported actions -> relayout calls -> edits we get here\n * (as prepared in _relayout):\n *\n * add an empty obj -> {'annotations[2]': 'add'} -> {2: {'': 'add'}}\n * add a specific obj -> {'annotations[2]': {attrs}} -> {2: {'': {attrs}}}\n * delete an obj -> {'annotations[2]': 'remove'} -> {2: {'': 'remove'}}\n *               -> {'annotations[2]': null} -> {2: {'': null}}\n * delete the whole array -> {'annotations': 'remove'} -> {'': {'': 'remove'}}\n *                        -> {'annotations': null} -> {'': {'': null}}\n * edit an object -> {'annotations[2].text': 'boo'} -> {2: {'text': 'boo'}}\n *\n * You can combine many edits to different objects. Objects are added and edited\n * in ascending order, then removed in descending order.\n * For example, starting with [a, b, c], if you want to:\n * - replace b with d:\n *   {'annotations[1]': d, 'annotations[2]': null} (b is item 2 after adding d)\n * - add a new item d between a and b, and edit b:\n *    {'annotations[1]': d, 'annotations[2].x': newX} (b is item 2 after adding d)\n * - delete b and edit c:\n *    {'annotations[1]': null, 'annotations[2].x': newX} (c is edited before b is removed)\n *\n * You CANNOT combine adding/deleting an item at index `i` with edits to the same index `i`\n * You CANNOT combine replacing/deleting the whole array with anything else (for the same array).\n *\n * @param {HTMLDivElement} gd\n *  the DOM element of the graph container div\n * @param {Lib.nestedProperty} componentType: the array we are editing\n * @param {Object} edits\n *  the changes to make; keys are indices to edit, values are themselves objects:\n *  {attr: newValue} of changes to make to that index (with add/remove behavior\n *  in special values of the empty attr)\n * @param {Object} flags\n *  the flags for which actions we're going to perform to display these (and\n *  any other) changes. If we're already `recalc`ing, we don't need to redraw\n *  individual items\n *\n * @returns {bool} `true` if it managed to complete drawing of the changes\n *  `false` would mean the parent should replot.\n */\nexports.applyContainerArrayChanges = function applyContainerArrayChanges(gd, np, edits, flags) {\n    var componentType = np.astr,\n        supplyComponentDefaults = Registry.getComponentMethod(componentType, 'supplyLayoutDefaults'),\n        draw = Registry.getComponentMethod(componentType, 'draw'),\n        drawOne = Registry.getComponentMethod(componentType, 'drawOne'),\n        replotLater = flags.replot || flags.recalc || (supplyComponentDefaults === noop) ||\n            (draw === noop),\n        layout = gd.layout,\n        fullLayout = gd._fullLayout;\n\n    if(edits['']) {\n        if(Object.keys(edits).length > 1) {\n            Loggers.warn('Full array edits are incompatible with other edits',\n                componentType);\n        }\n\n        var fullVal = edits[''][''];\n\n        if(isRemoveVal(fullVal)) np.set(null);\n        else if(Array.isArray(fullVal)) np.set(fullVal);\n        else {\n            Loggers.warn('Unrecognized full array edit value', componentType, fullVal);\n            return true;\n        }\n\n        if(replotLater) return false;\n\n        supplyComponentDefaults(layout, fullLayout);\n        draw(gd);\n        return true;\n    }\n\n    var componentNums = Object.keys(edits).map(Number).sort(sorterAsc),\n        componentArrayIn = np.get(),\n        componentArray = componentArrayIn || [],\n        // componentArrayFull is used just to keep splices in line between\n        // full and input arrays, so private keys can be copied over after\n        // redoing supplyDefaults\n        // TODO: this assumes componentArray is in gd.layout - which will not be\n        // true after we extend this to restyle\n        componentArrayFull = nestedProperty(fullLayout, componentType).get();\n\n    var deletes = [],\n        firstIndexChange = -1,\n        maxIndex = componentArray.length,\n        i,\n        j,\n        componentNum,\n        objEdits,\n        objKeys,\n        objVal,\n        adding;\n\n    // first make the add and edit changes\n    for(i = 0; i < componentNums.length; i++) {\n        componentNum = componentNums[i];\n        objEdits = edits[componentNum];\n        objKeys = Object.keys(objEdits);\n        objVal = objEdits[''],\n        adding = isAddVal(objVal);\n\n        if(componentNum < 0 || componentNum > componentArray.length - (adding ? 0 : 1)) {\n            Loggers.warn('index out of range', componentType, componentNum);\n            continue;\n        }\n\n        if(objVal !== undefined) {\n            if(objKeys.length > 1) {\n                Loggers.warn(\n                    'Insertion & removal are incompatible with edits to the same index.',\n                    componentType, componentNum);\n            }\n\n            if(isRemoveVal(objVal)) {\n                deletes.push(componentNum);\n            }\n            else if(adding) {\n                if(objVal === 'add') objVal = {};\n                componentArray.splice(componentNum, 0, objVal);\n                if(componentArrayFull) componentArrayFull.splice(componentNum, 0, {});\n            }\n            else {\n                Loggers.warn('Unrecognized full object edit value',\n                    componentType, componentNum, objVal);\n            }\n\n            if(firstIndexChange === -1) firstIndexChange = componentNum;\n        }\n        else {\n            for(j = 0; j < objKeys.length; j++) {\n                nestedProperty(componentArray[componentNum], objKeys[j]).set(objEdits[objKeys[j]]);\n            }\n        }\n    }\n\n    // now do deletes\n    for(i = deletes.length - 1; i >= 0; i--) {\n        componentArray.splice(deletes[i], 1);\n        // TODO: this drops private keys that had been stored in componentArrayFull\n        // does this have any ill effects?\n        if(componentArrayFull) componentArrayFull.splice(deletes[i], 1);\n    }\n\n    if(!componentArray.length) np.set(null);\n    else if(!componentArrayIn) np.set(componentArray);\n\n    if(replotLater) return false;\n\n    supplyComponentDefaults(layout, fullLayout);\n\n    // finally draw all the components we need to\n    // if we added or removed any, redraw all after it\n    if(drawOne !== noop) {\n        var indicesToDraw;\n        if(firstIndexChange === -1) {\n            // there's no re-indexing to do, so only redraw components that changed\n            indicesToDraw = componentNums;\n        }\n        else {\n            // in case the component array was shortened, we still need do call\n            // drawOne on the latter items so they get properly removed\n            maxIndex = Math.max(componentArray.length, maxIndex);\n            indicesToDraw = [];\n            for(i = 0; i < componentNums.length; i++) {\n                componentNum = componentNums[i];\n                if(componentNum >= firstIndexChange) break;\n                indicesToDraw.push(componentNum);\n            }\n            for(i = firstIndexChange; i < maxIndex; i++) {\n                indicesToDraw.push(i);\n            }\n        }\n        for(i = 0; i < indicesToDraw.length; i++) {\n            drawOne(gd, indicesToDraw[i]);\n        }\n    }\n    else draw(gd);\n\n    return true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plot_api/manage_arrays.js\n// module id = 196\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar m4FromQuat = require('gl-mat4/fromQuat');\n\nvar Registry = require('../registry');\nvar Lib = require('../lib');\nvar Plots = require('../plots/plots');\nvar AxisIds = require('../plots/cartesian/axis_ids');\nvar cleanId = AxisIds.cleanId;\nvar getFromTrace = AxisIds.getFromTrace;\nvar Color = require('../components/color');\n\n\n// clear the promise queue if one of them got rejected\nexports.clearPromiseQueue = function(gd) {\n    if(Array.isArray(gd._promises) && gd._promises.length > 0) {\n        Lib.log('Clearing previous rejected promises from queue.');\n    }\n\n    gd._promises = [];\n};\n\n// make a few changes to the layout right away\n// before it gets used for anything\n// backward compatibility and cleanup of nonstandard options\nexports.cleanLayout = function(layout) {\n    var i, j;\n\n    if(!layout) layout = {};\n\n    // cannot have (x|y)axis1, numbering goes axis, axis2, axis3...\n    if(layout.xaxis1) {\n        if(!layout.xaxis) layout.xaxis = layout.xaxis1;\n        delete layout.xaxis1;\n    }\n    if(layout.yaxis1) {\n        if(!layout.yaxis) layout.yaxis = layout.yaxis1;\n        delete layout.yaxis1;\n    }\n    if(layout.scene1) {\n        if(!layout.scene) layout.scene = layout.scene1;\n        delete layout.scene1;\n    }\n\n    var axisAttrRegex = (Plots.subplotsRegistry.cartesian || {}).attrRegex;\n    var sceneAttrRegex = (Plots.subplotsRegistry.gl3d || {}).attrRegex;\n\n    var keys = Object.keys(layout);\n    for(i = 0; i < keys.length; i++) {\n        var key = keys[i];\n\n        // modifications to cartesian axes\n        if(axisAttrRegex && axisAttrRegex.test(key)) {\n            var ax = layout[key];\n            if(ax.anchor && ax.anchor !== 'free') {\n                ax.anchor = cleanId(ax.anchor);\n            }\n            if(ax.overlaying) ax.overlaying = cleanId(ax.overlaying);\n\n            // old method of axis type - isdate and islog (before category existed)\n            if(!ax.type) {\n                if(ax.isdate) ax.type = 'date';\n                else if(ax.islog) ax.type = 'log';\n                else if(ax.isdate === false && ax.islog === false) ax.type = 'linear';\n            }\n            if(ax.autorange === 'withzero' || ax.autorange === 'tozero') {\n                ax.autorange = true;\n                ax.rangemode = 'tozero';\n            }\n            delete ax.islog;\n            delete ax.isdate;\n            delete ax.categories; // replaced by _categories\n\n            // prune empty domain arrays made before the new nestedProperty\n            if(emptyContainer(ax, 'domain')) delete ax.domain;\n\n            // autotick -> tickmode\n            if(ax.autotick !== undefined) {\n                if(ax.tickmode === undefined) {\n                    ax.tickmode = ax.autotick ? 'auto' : 'linear';\n                }\n                delete ax.autotick;\n            }\n        }\n\n        // modifications for 3D scenes\n        else if(sceneAttrRegex && sceneAttrRegex.test(key)) {\n            var scene = layout[key];\n\n            // clean old Camera coords\n            var cameraposition = scene.cameraposition;\n\n            if(Array.isArray(cameraposition) && cameraposition[0].length === 4) {\n                var rotation = cameraposition[0],\n                    center = cameraposition[1],\n                    radius = cameraposition[2],\n                    mat = m4FromQuat([], rotation),\n                    eye = [];\n\n                for(j = 0; j < 3; ++j) {\n                    eye[j] = center[j] + radius * mat[2 + 4 * j];\n                }\n\n                scene.camera = {\n                    eye: {x: eye[0], y: eye[1], z: eye[2]},\n                    center: {x: center[0], y: center[1], z: center[2]},\n                    up: {x: mat[1], y: mat[5], z: mat[9]}\n                };\n\n                delete scene.cameraposition;\n            }\n        }\n    }\n\n    var annotationsLen = Array.isArray(layout.annotations) ? layout.annotations.length : 0;\n    for(i = 0; i < annotationsLen; i++) {\n        var ann = layout.annotations[i];\n\n        if(!Lib.isPlainObject(ann)) continue;\n\n        if(ann.ref) {\n            if(ann.ref === 'paper') {\n                ann.xref = 'paper';\n                ann.yref = 'paper';\n            }\n            else if(ann.ref === 'data') {\n                ann.xref = 'x';\n                ann.yref = 'y';\n            }\n            delete ann.ref;\n        }\n\n        cleanAxRef(ann, 'xref');\n        cleanAxRef(ann, 'yref');\n    }\n\n    var shapesLen = Array.isArray(layout.shapes) ? layout.shapes.length : 0;\n    for(i = 0; i < shapesLen; i++) {\n        var shape = layout.shapes[i];\n\n        if(!Lib.isPlainObject(shape)) continue;\n\n        cleanAxRef(shape, 'xref');\n        cleanAxRef(shape, 'yref');\n    }\n\n    var legend = layout.legend;\n    if(legend) {\n        // check for old-style legend positioning (x or y is +/- 100)\n        if(legend.x > 3) {\n            legend.x = 1.02;\n            legend.xanchor = 'left';\n        }\n        else if(legend.x < -2) {\n            legend.x = -0.02;\n            legend.xanchor = 'right';\n        }\n\n        if(legend.y > 3) {\n            legend.y = 1.02;\n            legend.yanchor = 'bottom';\n        }\n        else if(legend.y < -2) {\n            legend.y = -0.02;\n            legend.yanchor = 'top';\n        }\n    }\n\n    /*\n     * Moved from rotate -> orbit for dragmode\n     */\n    if(layout.dragmode === 'rotate') layout.dragmode = 'orbit';\n\n    // sanitize rgb(fractions) and rgba(fractions) that old tinycolor\n    // supported, but new tinycolor does not because they're not valid css\n    Color.clean(layout);\n\n    return layout;\n};\n\nfunction cleanAxRef(container, attr) {\n    var valIn = container[attr],\n        axLetter = attr.charAt(0);\n    if(valIn && valIn !== 'paper') {\n        container[attr] = cleanId(valIn, axLetter);\n    }\n}\n\n// Make a few changes to the data right away\n// before it gets used for anything\nexports.cleanData = function(data, existingData) {\n    // Enforce unique IDs\n    var suids = [], // seen uids --- so we can weed out incoming repeats\n        uids = data.concat(Array.isArray(existingData) ? existingData : [])\n               .filter(function(trace) { return 'uid' in trace; })\n               .map(function(trace) { return trace.uid; });\n\n    for(var tracei = 0; tracei < data.length; tracei++) {\n        var trace = data[tracei];\n        var i;\n\n        // assign uids to each trace and detect collisions.\n        if(!('uid' in trace) || suids.indexOf(trace.uid) !== -1) {\n            var newUid;\n\n            for(i = 0; i < 100; i++) {\n                newUid = Lib.randstr(uids);\n                if(suids.indexOf(newUid) === -1) break;\n            }\n            trace.uid = Lib.randstr(uids);\n            uids.push(trace.uid);\n        }\n        // keep track of already seen uids, so that if there are\n        // doubles we force the trace with a repeat uid to\n        // acquire a new one\n        suids.push(trace.uid);\n\n        // BACKWARD COMPATIBILITY FIXES\n\n        // use xbins to bin data in x, and ybins to bin data in y\n        if(trace.type === 'histogramy' && 'xbins' in trace && !('ybins' in trace)) {\n            trace.ybins = trace.xbins;\n            delete trace.xbins;\n        }\n\n        // error_y.opacity is obsolete - merge into color\n        if(trace.error_y && 'opacity' in trace.error_y) {\n            var dc = Color.defaults,\n                yeColor = trace.error_y.color ||\n                (Registry.traceIs(trace, 'bar') ? Color.defaultLine : dc[tracei % dc.length]);\n            trace.error_y.color = Color.addOpacity(\n                Color.rgb(yeColor),\n                Color.opacity(yeColor) * trace.error_y.opacity);\n            delete trace.error_y.opacity;\n        }\n\n        // convert bardir to orientation, and put the data into\n        // the axes it's eventually going to be used with\n        if('bardir' in trace) {\n            if(trace.bardir === 'h' && (Registry.traceIs(trace, 'bar') ||\n                     trace.type.substr(0, 9) === 'histogram')) {\n                trace.orientation = 'h';\n                exports.swapXYData(trace);\n            }\n            delete trace.bardir;\n        }\n\n        // now we have only one 1D histogram type, and whether\n        // it uses x or y data depends on trace.orientation\n        if(trace.type === 'histogramy') exports.swapXYData(trace);\n        if(trace.type === 'histogramx' || trace.type === 'histogramy') {\n            trace.type = 'histogram';\n        }\n\n        // scl->scale, reversescl->reversescale\n        if('scl' in trace) {\n            trace.colorscale = trace.scl;\n            delete trace.scl;\n        }\n        if('reversescl' in trace) {\n            trace.reversescale = trace.reversescl;\n            delete trace.reversescl;\n        }\n\n        // axis ids x1 -> x, y1-> y\n        if(trace.xaxis) trace.xaxis = cleanId(trace.xaxis, 'x');\n        if(trace.yaxis) trace.yaxis = cleanId(trace.yaxis, 'y');\n\n        // scene ids scene1 -> scene\n        if(Registry.traceIs(trace, 'gl3d') && trace.scene) {\n            trace.scene = Plots.subplotsRegistry.gl3d.cleanId(trace.scene);\n        }\n\n        if(!Registry.traceIs(trace, 'pie') && !Registry.traceIs(trace, 'bar')) {\n            if(Array.isArray(trace.textposition)) {\n                trace.textposition = trace.textposition.map(cleanTextPosition);\n            }\n            else if(trace.textposition) {\n                trace.textposition = cleanTextPosition(trace.textposition);\n            }\n        }\n\n        // fix typo in colorscale definition\n        if(Registry.traceIs(trace, '2dMap')) {\n            if(trace.colorscale === 'YIGnBu') trace.colorscale = 'YlGnBu';\n            if(trace.colorscale === 'YIOrRd') trace.colorscale = 'YlOrRd';\n        }\n        if(Registry.traceIs(trace, 'markerColorscale') && trace.marker) {\n            var cont = trace.marker;\n            if(cont.colorscale === 'YIGnBu') cont.colorscale = 'YlGnBu';\n            if(cont.colorscale === 'YIOrRd') cont.colorscale = 'YlOrRd';\n        }\n\n        // fix typo in surface 'highlight*' definitions\n        if(trace.type === 'surface' && Lib.isPlainObject(trace.contours)) {\n            var dims = ['x', 'y', 'z'];\n\n            for(i = 0; i < dims.length; i++) {\n                var opts = trace.contours[dims[i]];\n\n                if(!Lib.isPlainObject(opts)) continue;\n\n                if(opts.highlightColor) {\n                    opts.highlightcolor = opts.highlightColor;\n                    delete opts.highlightColor;\n                }\n\n                if(opts.highlightWidth) {\n                    opts.highlightwidth = opts.highlightWidth;\n                    delete opts.highlightWidth;\n                }\n            }\n        }\n\n        // transforms backward compatibility fixes\n        if(Array.isArray(trace.transforms)) {\n            var transforms = trace.transforms;\n\n            for(i = 0; i < transforms.length; i++) {\n                var transform = transforms[i];\n\n                if(!Lib.isPlainObject(transform)) continue;\n\n                switch(transform.type) {\n                    case 'filter':\n                        if(transform.filtersrc) {\n                            transform.target = transform.filtersrc;\n                            delete transform.filtersrc;\n                        }\n\n                        if(transform.calendar) {\n                            if(!transform.valuecalendar) {\n                                transform.valuecalendar = transform.calendar;\n                            }\n                            delete transform.calendar;\n                        }\n                        break;\n\n                    case 'groupby':\n                        // Name has changed from `style` to `styles`, so use `style` but prefer `styles`:\n                        transform.styles = transform.styles || transform.style;\n\n                        if(transform.styles && !Array.isArray(transform.styles)) {\n                            var prevStyles = transform.styles;\n                            var styleKeys = Object.keys(prevStyles);\n\n                            transform.styles = [];\n                            for(var j = 0; j < styleKeys.length; j++) {\n                                transform.styles.push({\n                                    target: styleKeys[j],\n                                    value: prevStyles[styleKeys[j]]\n                                });\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n\n        // prune empty containers made before the new nestedProperty\n        if(emptyContainer(trace, 'line')) delete trace.line;\n        if('marker' in trace) {\n            if(emptyContainer(trace.marker, 'line')) delete trace.marker.line;\n            if(emptyContainer(trace, 'marker')) delete trace.marker;\n        }\n\n        // sanitize rgb(fractions) and rgba(fractions) that old tinycolor\n        // supported, but new tinycolor does not because they're not valid css\n        Color.clean(trace);\n    }\n};\n\n// textposition - support partial attributes (ie just 'top')\n// and incorrect use of middle / center etc.\nfunction cleanTextPosition(textposition) {\n    var posY = 'middle',\n        posX = 'center';\n    if(textposition.indexOf('top') !== -1) posY = 'top';\n    else if(textposition.indexOf('bottom') !== -1) posY = 'bottom';\n\n    if(textposition.indexOf('left') !== -1) posX = 'left';\n    else if(textposition.indexOf('right') !== -1) posX = 'right';\n\n    return posY + ' ' + posX;\n}\n\nfunction emptyContainer(outer, innerStr) {\n    return (innerStr in outer) &&\n        (typeof outer[innerStr] === 'object') &&\n        (Object.keys(outer[innerStr]).length === 0);\n}\n\n\n// swap all the data and data attributes associated with x and y\nexports.swapXYData = function(trace) {\n    var i;\n    Lib.swapAttrs(trace, ['?', '?0', 'd?', '?bins', 'nbins?', 'autobin?', '?src', 'error_?']);\n    if(Array.isArray(trace.z) && Array.isArray(trace.z[0])) {\n        if(trace.transpose) delete trace.transpose;\n        else trace.transpose = true;\n    }\n    if(trace.error_x && trace.error_y) {\n        var errorY = trace.error_y,\n            copyYstyle = ('copy_ystyle' in errorY) ? errorY.copy_ystyle :\n                !(errorY.color || errorY.thickness || errorY.width);\n        Lib.swapAttrs(trace, ['error_?.copy_ystyle']);\n        if(copyYstyle) {\n            Lib.swapAttrs(trace, ['error_?.color', 'error_?.thickness', 'error_?.width']);\n        }\n    }\n    if(typeof trace.hoverinfo === 'string') {\n        var hoverInfoParts = trace.hoverinfo.split('+');\n        for(i = 0; i < hoverInfoParts.length; i++) {\n            if(hoverInfoParts[i] === 'x') hoverInfoParts[i] = 'y';\n            else if(hoverInfoParts[i] === 'y') hoverInfoParts[i] = 'x';\n        }\n        trace.hoverinfo = hoverInfoParts.join('+');\n    }\n};\n\n// coerce traceIndices input to array of trace indices\nexports.coerceTraceIndices = function(gd, traceIndices) {\n    if(isNumeric(traceIndices)) {\n        return [traceIndices];\n    }\n    else if(!Array.isArray(traceIndices) || !traceIndices.length) {\n        return gd.data.map(function(_, i) { return i; });\n    }\n\n    return traceIndices;\n};\n\n/**\n * Manages logic around array container item creation / deletion / update\n * that nested property alone can't handle.\n *\n * @param {Object} np\n *  nested property of update attribute string about trace or layout object\n * @param {*} newVal\n *  update value passed to restyle / relayout / update\n * @param {Object} undoit\n *  undo hash (N.B. undoit may be mutated here).\n *\n */\nexports.manageArrayContainers = function(np, newVal, undoit) {\n    var obj = np.obj,\n        parts = np.parts,\n        pLength = parts.length,\n        pLast = parts[pLength - 1];\n\n    var pLastIsNumber = isNumeric(pLast);\n\n    // delete item\n    if(pLastIsNumber && newVal === null) {\n\n        // Clear item in array container when new value is null\n        var contPath = parts.slice(0, pLength - 1).join('.'),\n            cont = Lib.nestedProperty(obj, contPath).get();\n        cont.splice(pLast, 1);\n\n        // Note that nested property clears null / undefined at end of\n        // array container, but not within them.\n    }\n    // create item\n    else if(pLastIsNumber && np.get() === undefined) {\n\n        // When adding a new item, make sure undo command will remove it\n        if(np.get() === undefined) undoit[np.astr] = null;\n\n        np.set(newVal);\n    }\n    // update item\n    else {\n\n        // If the last part of attribute string isn't a number,\n        // np.set is all we need.\n        np.set(newVal);\n    }\n};\n\n/*\n * Match the part to strip off to turn an attribute into its parent\n * really it should be either '.some_characters' or '[number]'\n * but we're a little more permissive here and match either\n * '.not_brackets_or_dot' or '[not_brackets_or_dot]'\n */\nvar ATTR_TAIL_RE = /(\\.[^\\[\\]\\.]+|\\[[^\\[\\]\\.]+\\])$/;\n\nfunction getParent(attr) {\n    var tail = attr.search(ATTR_TAIL_RE);\n    if(tail > 0) return attr.substr(0, tail);\n}\n\n/*\n * hasParent: does an attribute object contain a parent of the given attribute?\n * for example, given 'images[2].x' do we also have 'images' or 'images[2]'?\n *\n * @param {Object} aobj\n *  update object, whose keys are attribute strings and values are their new settings\n * @param {string} attr\n *  the attribute string to test against\n * @returns {Boolean}\n *  is a parent of attr present in aobj?\n */\nexports.hasParent = function(aobj, attr) {\n    var attrParent = getParent(attr);\n    while(attrParent) {\n        if(attrParent in aobj) return true;\n        attrParent = getParent(attrParent);\n    }\n    return false;\n};\n\n/**\n * Empty out types for all axes containing these traces so we auto-set them again\n *\n * @param {object} gd\n * @param {[integer]} traces: trace indices to search for axes to clear the types of\n * @param {object} layoutUpdate: any update being done concurrently to the layout,\n *   which may supercede clearing the axis types\n */\nvar axLetters = ['x', 'y', 'z'];\nexports.clearAxisTypes = function(gd, traces, layoutUpdate) {\n    for(var i = 0; i < traces.length; i++) {\n        var trace = gd._fullData[i];\n        for(var j = 0; j < 3; j++) {\n            var ax = getFromTrace(gd, trace, axLetters[j]);\n\n            // do not clear log type - that's never an auto result so must have been intentional\n            if(ax && ax.type !== 'log') {\n                var axAttr = ax._name;\n                var sceneName = ax._id.substr(1);\n                if(sceneName.substr(0, 5) === 'scene') {\n                    if(layoutUpdate[sceneName] !== undefined) continue;\n                    axAttr = sceneName + '.' + axAttr;\n                }\n                var typeAttr = axAttr + '.type';\n\n                if(layoutUpdate[axAttr] === undefined && layoutUpdate[typeAttr] === undefined) {\n                    Lib.nestedProperty(gd.layout, typeAttr).set(null);\n                }\n            }\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plot_api/helpers.js\n// module id = 197\n// module chunks = 0","module.exports = fromQuat;\n\n/**\n * Creates a matrix from a quaternion rotation.\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @returns {mat4} out\n */\nfunction fromQuat(out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-mat4/fromQuat.js\n// module id = 198\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar Plotly = require('../plotly');\nvar Registry = require('../registry');\nvar Plots = require('../plots/plots');\nvar Lib = require('../lib');\n\nvar Color = require('../components/color');\nvar Drawing = require('../components/drawing');\nvar Titles = require('../components/titles');\nvar ModeBar = require('../components/modebar');\nvar initInteractions = require('../plots/cartesian/graph_interact');\nvar cartesianConstants = require('../plots/cartesian/constants');\nvar alignmentConstants = require('../constants/alignment');\n\nexports.layoutStyles = function(gd) {\n    return Lib.syncOrAsync([Plots.doAutoMargin, exports.lsInner], gd);\n};\n\nfunction overlappingDomain(xDomain, yDomain, domains) {\n    for(var i = 0; i < domains.length; i++) {\n        var existingX = domains[i][0],\n            existingY = domains[i][1];\n\n        if(existingX[0] >= xDomain[1] || existingX[1] <= xDomain[0]) {\n            continue;\n        }\n        if(existingY[0] < yDomain[1] && existingY[1] > yDomain[0]) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexports.lsInner = function(gd) {\n    var fullLayout = gd._fullLayout;\n    var gs = fullLayout._size;\n    var pad = gs.p;\n    var axList = Plotly.Axes.list(gd);\n\n    // _has('cartesian') means SVG specifically, not GL2D - but GL2D\n    // can still get here because it makes some of the SVG structure\n    // for shared features like selections.\n    var hasSVGCartesian = fullLayout._has('cartesian');\n    var i;\n\n    function getLinePosition(ax, counterAx, side) {\n        var lwHalf = ax._lw / 2;\n\n        if(ax._id.charAt(0) === 'x') {\n            if(!counterAx) return gs.t + gs.h * (1 - (ax.position || 0)) + (lwHalf % 1);\n            else if(side === 'top') return counterAx._offset - pad - lwHalf;\n            return counterAx._offset + counterAx._length + pad + lwHalf;\n        }\n\n        if(!counterAx) return gs.l + gs.w * (ax.position || 0) + (lwHalf % 1);\n        else if(side === 'right') return counterAx._offset + counterAx._length + pad + lwHalf;\n        return counterAx._offset - pad - lwHalf;\n    }\n\n    // some preparation of axis position info\n    for(i = 0; i < axList.length; i++) {\n        var ax = axList[i];\n\n        // reset scale in case the margins have changed\n        ax.setScale();\n\n        var counterAx = ax._anchorAxis;\n\n        // clear axis line positions, to be set in the subplot loop below\n        ax._linepositions = {};\n\n        // stash crispRounded linewidth so we don't need to pass gd all over the place\n        ax._lw = Drawing.crispRound(gd, ax.linewidth, 1);\n\n        // figure out the main axis line and main mirror line position.\n        // it's easier to follow the logic if we handle these separately from\n        // ax._linepositions, which are really only used by mirror=allticks\n        // for the non-main-subplot ticks.\n        ax._mainLinePosition = getLinePosition(ax, counterAx, ax.side);\n        ax._mainMirrorPosition = (ax.mirror && counterAx) ?\n            getLinePosition(ax, counterAx,\n                alignmentConstants.OPPOSITE_SIDE[ax.side]) : null;\n    }\n\n    fullLayout._paperdiv\n        .style({\n            width: fullLayout.width + 'px',\n            height: fullLayout.height + 'px'\n        })\n        .selectAll('.main-svg')\n            .call(Drawing.setSize, fullLayout.width, fullLayout.height);\n\n    gd._context.setBackground(gd, fullLayout.paper_bgcolor);\n\n    var subplotSelection = fullLayout._paper.selectAll('g.subplot');\n\n    // figure out which backgrounds we need to draw, and in which layers\n    // to put them\n    var lowerBackgroundIDs = [];\n    var lowerDomains = [];\n    subplotSelection.each(function(subplot) {\n        var plotinfo = fullLayout._plots[subplot];\n\n        if(plotinfo.mainplot) {\n            // mainplot is a reference to the main plot this one is overlaid on\n            // so if it exists, this is an overlaid plot and we don't need to\n            // give it its own background\n            if(plotinfo.bg) {\n                plotinfo.bg.remove();\n            }\n            plotinfo.bg = undefined;\n            return;\n        }\n\n        var xDomain = plotinfo.xaxis.domain;\n        var yDomain = plotinfo.yaxis.domain;\n        var plotgroupBgData = [];\n\n        if(overlappingDomain(xDomain, yDomain, lowerDomains)) {\n            plotgroupBgData = [0];\n        }\n        else {\n            lowerBackgroundIDs.push(subplot);\n            lowerDomains.push([xDomain, yDomain]);\n        }\n\n        // create the plot group backgrounds now, since\n        // they're all independent selections\n        var plotgroupBg = plotinfo.plotgroup.selectAll('.bg')\n            .data(plotgroupBgData);\n\n        plotgroupBg.enter().append('rect')\n            .classed('bg', true);\n\n        plotgroupBg.exit().remove();\n\n        plotgroupBg.each(function() {\n            plotinfo.bg = plotgroupBg;\n            var pgNode = plotinfo.plotgroup.node();\n            pgNode.insertBefore(this, pgNode.childNodes[0]);\n        });\n    });\n\n    // now create all the lower-layer backgrounds at once now that\n    // we have the list of subplots that need them\n    var lowerBackgrounds = fullLayout._bgLayer.selectAll('.bg')\n        .data(lowerBackgroundIDs);\n\n    lowerBackgrounds.enter().append('rect')\n        .classed('bg', true);\n\n    lowerBackgrounds.exit().remove();\n\n    lowerBackgrounds.each(function(subplot) {\n        fullLayout._plots[subplot].bg = d3.select(this);\n    });\n\n    subplotSelection.each(function(subplot) {\n        var plotinfo = fullLayout._plots[subplot];\n        var xa = plotinfo.xaxis;\n        var ya = plotinfo.yaxis;\n\n        if(plotinfo.bg && hasSVGCartesian) {\n            plotinfo.bg\n                .call(Drawing.setRect,\n                    xa._offset - pad, ya._offset - pad,\n                    xa._length + 2 * pad, ya._length + 2 * pad)\n                .call(Color.fill, fullLayout.plot_bgcolor)\n                .style('stroke-width', 0);\n        }\n\n        // Clip so that data only shows up on the plot area.\n        plotinfo.clipId = 'clip' + fullLayout._uid + subplot + 'plot';\n\n        var plotClip = fullLayout._clips.selectAll('#' + plotinfo.clipId)\n            .data([0]);\n\n        plotClip.enter().append('clipPath')\n            .attr({\n                'class': 'plotclip',\n                'id': plotinfo.clipId\n            })\n            .append('rect');\n\n        plotClip.selectAll('rect')\n            .attr({\n                'width': xa._length,\n                'height': ya._length\n            });\n\n        Drawing.setTranslate(plotinfo.plot, xa._offset, ya._offset);\n\n        var plotClipId;\n        var layerClipId;\n\n        if(plotinfo._hasClipOnAxisFalse) {\n            plotClipId = null;\n            layerClipId = plotinfo.clipId;\n        } else {\n            plotClipId = plotinfo.clipId;\n            layerClipId = null;\n        }\n\n        Drawing.setClipUrl(plotinfo.plot, plotClipId);\n\n        for(i = 0; i < cartesianConstants.traceLayerClasses.length; i++) {\n            var layer = cartesianConstants.traceLayerClasses[i];\n            if(layer !== 'scatterlayer') {\n                plotinfo.plot.selectAll('g.' + layer).call(Drawing.setClipUrl, layerClipId);\n            }\n        }\n\n        // stash layer clipId value (null or same as clipId)\n        // to DRY up Drawing.setClipUrl calls downstream\n        plotinfo.layerClipId = layerClipId;\n\n        // figure out extra axis line and tick positions as needed\n        if(!hasSVGCartesian) return;\n\n        var xLinesXLeft, xLinesXRight, xLinesYBottom, xLinesYTop,\n            leftYLineWidth, rightYLineWidth;\n        var yLinesYBottom, yLinesYTop, yLinesXLeft, yLinesXRight,\n            connectYBottom, connectYTop;\n        var extraSubplot;\n\n        function xLinePath(y) {\n            return 'M' + xLinesXLeft + ',' + y + 'H' + xLinesXRight;\n        }\n\n        function xLinePathFree(y) {\n            return 'M' + xa._offset + ',' + y + 'h' + xa._length;\n        }\n\n        function yLinePath(x) {\n            return 'M' + x + ',' + yLinesYTop + 'V' + yLinesYBottom;\n        }\n\n        function yLinePathFree(x) {\n            return 'M' + x + ',' + ya._offset + 'v' + ya._length;\n        }\n\n        function mainPath(ax, pathFn, pathFnFree) {\n            if(!ax.showline || subplot !== ax._mainSubplot) return '';\n            if(!ax._anchorAxis) return pathFnFree(ax._mainLinePosition);\n            var out = pathFn(ax._mainLinePosition);\n            if(ax.mirror) out += pathFn(ax._mainMirrorPosition);\n            return out;\n        }\n\n        /*\n         * x lines get longer where they meet y lines, to make a crisp corner.\n         * The x lines get the padding (margin.pad) plus the y line width to\n         * fill up the corner nicely. Free x lines are excluded - they always\n         * span exactly the data area of the plot\n         *\n         *  | XXXXX\n         *  | XXXXX\n         *  |\n         *  +------\n         *     x1\n         *    -----\n         *     x2\n         */\n        if(shouldShowLinesOrTicks(xa, subplot)) {\n            leftYLineWidth = findCounterAxisLineWidth(xa, 'left', ya, axList);\n            xLinesXLeft = xa._offset - (leftYLineWidth ? (pad + leftYLineWidth) : 0);\n            rightYLineWidth = findCounterAxisLineWidth(xa, 'right', ya, axList);\n            xLinesXRight = xa._offset + xa._length + (rightYLineWidth ? (pad + rightYLineWidth) : 0);\n            xLinesYBottom = getLinePosition(xa, ya, 'bottom');\n            xLinesYTop = getLinePosition(xa, ya, 'top');\n\n            // save axis line positions for extra ticks to reference\n            // each subplot that gets ticks from \"allticks\" gets an entry:\n            //    [left or bottom, right or top]\n            extraSubplot = (!xa._anchorAxis || subplot !== xa._mainSubplot);\n            if(extraSubplot && xa.ticks && xa.mirror === 'allticks') {\n                xa._linepositions[subplot] = [xLinesYBottom, xLinesYTop];\n            }\n\n            var xPath = mainPath(xa, xLinePath, xLinePathFree);\n            if(extraSubplot && xa.showline && (xa.mirror === 'all' || xa.mirror === 'allticks')) {\n                xPath += xLinePath(xLinesYBottom) + xLinePath(xLinesYTop);\n            }\n\n            plotinfo.xlines\n                .attr('d', xPath || 'M0,0')\n                .style('stroke-width', xa._lw + 'px')\n                .call(Color.stroke, xa.showline ?\n                    xa.linecolor : 'rgba(0,0,0,0)');\n        }\n\n        /*\n         * y lines that meet x axes get longer only by margin.pad, because\n         * the x axes fill in the corner space. Free y axes, like free x axes,\n         * always span exactly the data area of the plot\n         *\n         *   |   | XXXX\n         * y2| y1| XXXX\n         *   |   | XXXX\n         *       |\n         *       +-----\n         */\n        if(shouldShowLinesOrTicks(ya, subplot)) {\n            connectYBottom = findCounterAxisLineWidth(ya, 'bottom', xa, axList);\n            yLinesYBottom = ya._offset + ya._length + (connectYBottom ? pad : 0);\n            connectYTop = findCounterAxisLineWidth(ya, 'top', xa, axList);\n            yLinesYTop = ya._offset - (connectYTop ? pad : 0);\n            yLinesXLeft = getLinePosition(ya, xa, 'left');\n            yLinesXRight = getLinePosition(ya, xa, 'right');\n\n            extraSubplot = (!ya._anchorAxis || subplot !== xa._mainSubplot);\n            if(extraSubplot && ya.ticks && ya.mirror === 'allticks') {\n                ya._linepositions[subplot] = [yLinesXLeft, yLinesXRight];\n            }\n\n            var yPath = mainPath(ya, yLinePath, yLinePathFree);\n            if(extraSubplot && ya.showline && (ya.mirror === 'all' || ya.mirror === 'allticks')) {\n                yPath += yLinePath(yLinesXLeft) + yLinePath(yLinesXRight);\n            }\n\n            plotinfo.ylines\n                .attr('d', yPath || 'M0,0')\n                .style('stroke-width', ya._lw + 'px')\n                .call(Color.stroke, ya.showline ?\n                    ya.linecolor : 'rgba(0,0,0,0)');\n        }\n    });\n\n    Plotly.Axes.makeClipPaths(gd);\n    exports.drawMainTitle(gd);\n    ModeBar.manage(gd);\n\n    return gd._promises.length && Promise.all(gd._promises);\n};\n\nfunction shouldShowLinesOrTicks(ax, subplot) {\n    return (ax.ticks || ax.showline) &&\n        (subplot === ax._mainSubplot || ax.mirror === 'all' || ax.mirror === 'allticks');\n}\n\n/*\n * should we draw a line on counterAx at this side of ax?\n * It's assumed that counterAx is known to overlay the subplot we're working on\n * but it may not be its main axis.\n */\nfunction shouldShowLineThisSide(ax, side, counterAx) {\n    // does counterAx get a line at all?\n    if(!counterAx.showline || !counterAx._lw) return false;\n\n    // are we drawing *all* lines for counterAx?\n    if(counterAx.mirror === 'all' || counterAx.mirror === 'allticks') return true;\n\n    var anchorAx = counterAx._anchorAxis;\n\n    // is this a free axis? free axes can only have a subplot side-line with all(ticks)? mirroring\n    if(!anchorAx) return false;\n\n    // in order to handle cases where the user forgot to anchor this axis correctly\n    // (because its default anchor has the same domain on the relevant end)\n    // check whether the relevant position is the same.\n    var sideIndex = alignmentConstants.FROM_BL[side];\n    if(counterAx.side === side) {\n        return anchorAx.domain[sideIndex] === ax.domain[sideIndex];\n    }\n    return counterAx.mirror && anchorAx.domain[1 - sideIndex] === ax.domain[1 - sideIndex];\n}\n\n/*\n * Is there another axis intersecting `side` end of `ax`?\n * First look at `counterAx` (the axis for this subplot),\n * then at all other potential counteraxes on or overlaying this subplot.\n * Take the line width from the first one that has a line.\n */\nfunction findCounterAxisLineWidth(ax, side, counterAx, axList) {\n    if(shouldShowLineThisSide(ax, side, counterAx)) {\n        return counterAx._lw;\n    }\n    for(var i = 0; i < axList.length; i++) {\n        var axi = axList[i];\n        if(axi._mainAxis === counterAx._mainAxis && shouldShowLineThisSide(ax, side, axi)) {\n            return axi._lw;\n        }\n    }\n    return 0;\n}\n\nexports.drawMainTitle = function(gd) {\n    var fullLayout = gd._fullLayout;\n\n    Titles.draw(gd, 'gtitle', {\n        propContainer: fullLayout,\n        propName: 'title',\n        placeholder: fullLayout._dfltTitle.plot,\n        attributes: {\n            x: fullLayout.width / 2,\n            y: fullLayout._size.t / 2,\n            'text-anchor': 'middle'\n        }\n    });\n};\n\n// First, see if we need to do arraysToCalcdata\n// call it regardless of what change we made, in case\n// supplyDefaults brought in an array that was already\n// in gd.data but not in gd._fullData previously\nexports.doTraceStyle = function(gd) {\n    for(var i = 0; i < gd.calcdata.length; i++) {\n        var cdi = gd.calcdata[i],\n            _module = ((cdi[0] || {}).trace || {})._module || {},\n            arraysToCalcdata = _module.arraysToCalcdata;\n\n        if(arraysToCalcdata) arraysToCalcdata(cdi, cdi[0].trace);\n    }\n\n    Plots.style(gd);\n    Registry.getComponentMethod('legend', 'draw')(gd);\n\n    return Plots.previousPromises(gd);\n};\n\nexports.doColorBars = function(gd) {\n    for(var i = 0; i < gd.calcdata.length; i++) {\n        var cdi0 = gd.calcdata[i][0];\n\n        if((cdi0.t || {}).cb) {\n            var trace = cdi0.trace,\n                cb = cdi0.t.cb;\n\n            if(Registry.traceIs(trace, 'contour')) {\n                cb.line({\n                    width: trace.contours.showlines !== false ?\n                        trace.line.width : 0,\n                    dash: trace.line.dash,\n                    color: trace.contours.coloring === 'line' ?\n                        cb._opts.line.color : trace.line.color\n                });\n            }\n            if(Registry.traceIs(trace, 'markerColorscale')) {\n                cb.options(trace.marker.colorbar)();\n            }\n            else cb.options(trace.colorbar)();\n        }\n    }\n\n    return Plots.previousPromises(gd);\n};\n\n// force plot() to redo the layout and replot with the modified layout\nexports.layoutReplot = function(gd) {\n    var layout = gd.layout;\n    gd.layout = undefined;\n    return Plotly.plot(gd, '', layout);\n};\n\nexports.doLegend = function(gd) {\n    Registry.getComponentMethod('legend', 'draw')(gd);\n    return Plots.previousPromises(gd);\n};\n\nexports.doTicksRelayout = function(gd) {\n    Plotly.Axes.doTicks(gd, 'redraw');\n    exports.drawMainTitle(gd);\n    return Plots.previousPromises(gd);\n};\n\nexports.doModeBar = function(gd) {\n    var fullLayout = gd._fullLayout;\n\n    ModeBar.manage(gd);\n    initInteractions(gd);\n\n    for(var i = 0; i < fullLayout._basePlotModules.length; i++) {\n        var updateFx = fullLayout._basePlotModules[i].updateFx;\n        if(updateFx) updateFx(fullLayout);\n    }\n\n    return Plots.previousPromises(gd);\n};\n\nexports.doCamera = function(gd) {\n    var fullLayout = gd._fullLayout;\n    var sceneIds = fullLayout._subplots.gl3d;\n\n    for(var i = 0; i < sceneIds.length; i++) {\n        var sceneLayout = fullLayout[sceneIds[i]];\n        var scene = sceneLayout._scene;\n\n        scene.setCamera(sceneLayout.camera);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plot_api/subroutines.js\n// module id = 199\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar id2name = require('./axis_ids').id2name;\nvar scaleZoom = require('./scale_zoom');\n\nvar ALMOST_EQUAL = require('../../constants/numerical').ALMOST_EQUAL;\n\nvar FROM_BL = require('../../constants/alignment').FROM_BL;\n\n\nexports.enforce = function enforceAxisConstraints(gd) {\n    var fullLayout = gd._fullLayout;\n    var constraintGroups = fullLayout._axisConstraintGroups || [];\n\n    var i, j, axisID, ax, normScale, mode, factor;\n\n    for(i = 0; i < constraintGroups.length; i++) {\n        var group = constraintGroups[i];\n        var axisIDs = Object.keys(group);\n\n        var minScale = Infinity;\n        var maxScale = 0;\n        // mostly matchScale will be the same as minScale\n        // ie we expand axis ranges to encompass *everything*\n        // that's currently in any of their ranges, but during\n        // autorange of a subset of axes we will ignore other\n        // axes for this purpose.\n        var matchScale = Infinity;\n        var normScales = {};\n        var axes = {};\n        var hasAnyDomainConstraint = false;\n\n        // find the (normalized) scale of each axis in the group\n        for(j = 0; j < axisIDs.length; j++) {\n            axisID = axisIDs[j];\n            axes[axisID] = ax = fullLayout[id2name(axisID)];\n\n            if(ax._inputDomain) ax.domain = ax._inputDomain.slice();\n            else ax._inputDomain = ax.domain.slice();\n\n            if(!ax._inputRange) ax._inputRange = ax.range.slice();\n\n            // set axis scale here so we can use _m rather than\n            // having to calculate it from length and range\n            ax.setScale();\n\n            // abs: inverted scales still satisfy the constraint\n            normScales[axisID] = normScale = Math.abs(ax._m) / group[axisID];\n            minScale = Math.min(minScale, normScale);\n            if(ax.constrain === 'domain' || !ax._constraintShrinkable) {\n                matchScale = Math.min(matchScale, normScale);\n            }\n\n            // this has served its purpose, so remove it\n            delete ax._constraintShrinkable;\n            maxScale = Math.max(maxScale, normScale);\n\n            if(ax.constrain === 'domain') hasAnyDomainConstraint = true;\n        }\n\n        // Do we have a constraint mismatch? Give a small buffer for rounding errors\n        if(minScale > ALMOST_EQUAL * maxScale && !hasAnyDomainConstraint) continue;\n\n        // now increase any ranges we need to until all normalized scales are equal\n        for(j = 0; j < axisIDs.length; j++) {\n            axisID = axisIDs[j];\n            normScale = normScales[axisID];\n            ax = axes[axisID];\n            mode = ax.constrain;\n\n            // even if the scale didn't change, if we're shrinking domain\n            // we need to recalculate in case `constraintoward` changed\n            if(normScale !== matchScale || mode === 'domain') {\n                factor = normScale / matchScale;\n\n                if(mode === 'range') {\n                    scaleZoom(ax, factor);\n                }\n                else {\n                    // mode === 'domain'\n\n                    var inputDomain = ax._inputDomain;\n                    var domainShrunk = (ax.domain[1] - ax.domain[0]) /\n                        (inputDomain[1] - inputDomain[0]);\n                    var rangeShrunk = (ax.r2l(ax.range[1]) - ax.r2l(ax.range[0])) /\n                        (ax.r2l(ax._inputRange[1]) - ax.r2l(ax._inputRange[0]));\n\n                    factor /= domainShrunk;\n\n                    if(factor * rangeShrunk < 1) {\n                        // we've asked to magnify the axis more than we can just by\n                        // enlarging the domain - so we need to constrict range\n                        ax.domain = ax._input.domain = inputDomain.slice();\n                        scaleZoom(ax, factor);\n                        continue;\n                    }\n\n                    if(rangeShrunk < 1) {\n                        // the range has previously been constricted by ^^, but we've\n                        // switched to the domain-constricted regime, so reset range\n                        ax.range = ax._input.range = ax._inputRange.slice();\n                        factor *= rangeShrunk;\n                    }\n\n                    if(ax.autorange && ax._min.length && ax._max.length) {\n                        /*\n                         * range & factor may need to change because range was\n                         * calculated for the larger scaling, so some pixel\n                         * paddings may get cut off when we reduce the domain.\n                         *\n                         * This is easier than the regular autorange calculation\n                         * because we already know the scaling `m`, but we still\n                         * need to cut out impossible constraints (like\n                         * annotations with super-long arrows). That's what\n                         * outerMin/Max are for - if the expansion was going to\n                         * go beyond the original domain, it must be impossible\n                         */\n                        var rl0 = ax.r2l(ax.range[0]);\n                        var rl1 = ax.r2l(ax.range[1]);\n                        var rangeCenter = (rl0 + rl1) / 2;\n                        var rangeMin = rangeCenter;\n                        var rangeMax = rangeCenter;\n                        var halfRange = Math.abs(rl1 - rangeCenter);\n                        // extra tiny bit for rounding errors, in case we actually\n                        // *are* expanding to the full domain\n                        var outerMin = rangeCenter - halfRange * factor * 1.0001;\n                        var outerMax = rangeCenter + halfRange * factor * 1.0001;\n\n                        updateDomain(ax, factor);\n                        ax.setScale();\n                        var m = Math.abs(ax._m);\n                        var newVal;\n                        var k;\n\n                        for(k = 0; k < ax._min.length; k++) {\n                            newVal = ax._min[k].val - ax._min[k].pad / m;\n                            if(newVal > outerMin && newVal < rangeMin) {\n                                rangeMin = newVal;\n                            }\n                        }\n\n                        for(k = 0; k < ax._max.length; k++) {\n                            newVal = ax._max[k].val + ax._max[k].pad / m;\n                            if(newVal < outerMax && newVal > rangeMax) {\n                                rangeMax = newVal;\n                            }\n                        }\n\n                        var domainExpand = (rangeMax - rangeMin) / (2 * halfRange);\n                        factor /= domainExpand;\n\n                        rangeMin = ax.l2r(rangeMin);\n                        rangeMax = ax.l2r(rangeMax);\n                        ax.range = ax._input.range = (rl0 < rl1) ?\n                            [rangeMin, rangeMax] : [rangeMax, rangeMin];\n                    }\n\n                    updateDomain(ax, factor);\n                }\n            }\n        }\n    }\n};\n\n// For use before autoranging, check if this axis was previously constrained\n// by domain but no longer is\nexports.clean = function cleanConstraints(gd, ax) {\n    if(ax._inputDomain) {\n        var isConstrained = false;\n        var axId = ax._id;\n        var constraintGroups = gd._fullLayout._axisConstraintGroups;\n        for(var j = 0; j < constraintGroups.length; j++) {\n            if(constraintGroups[j][axId]) {\n                isConstrained = true;\n                break;\n            }\n        }\n        if(!isConstrained || ax.constrain !== 'domain') {\n            ax._input.domain = ax.domain = ax._inputDomain;\n            delete ax._inputDomain;\n        }\n    }\n};\n\nfunction updateDomain(ax, factor) {\n    var inputDomain = ax._inputDomain;\n    var centerFraction = FROM_BL[ax.constraintoward];\n    var center = inputDomain[0] + (inputDomain[1] - inputDomain[0]) * centerFraction;\n\n    ax.domain = ax._input.domain = [\n        center + (inputDomain[0] - center) / factor,\n        center + (inputDomain[1] - center) / factor\n    ];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/constraints.js\n// module id = 200\n// module chunks = 0","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   3.3.1\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  return function () {\n    vertxNext(flush);\n  };\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\npolyfill();\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n//# sourceMappingURL=es6-promise.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es6-promise/dist/es6-promise.js\n// module id = 201\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 202\n// module chunks = 0","'use strict';\n\nvar Lib = require('../src/lib');\nvar rules = {\n    \"X,X div\": \"font-family:'Open Sans', verdana, arial, sans-serif;margin:0;padding:0;\",\n    \"X input,X button\": \"font-family:'Open Sans', verdana, arial, sans-serif;\",\n    \"X input:focus,X button:focus\": \"outline:none;\",\n    \"X a\": \"text-decoration:none;\",\n    \"X a:hover\": \"text-decoration:none;\",\n    \"X .crisp\": \"shape-rendering:crispEdges;\",\n    \"X .user-select-none\": \"-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;\",\n    \"X svg\": \"overflow:hidden;\",\n    \"X svg a\": \"fill:#447adb;\",\n    \"X svg a:hover\": \"fill:#3c6dc5;\",\n    \"X .main-svg\": \"position:absolute;top:0;left:0;pointer-events:none;\",\n    \"X .main-svg .draglayer\": \"pointer-events:all;\",\n    \"X .cursor-default\": \"cursor:default;\",\n    \"X .cursor-pointer\": \"cursor:pointer;\",\n    \"X .cursor-crosshair\": \"cursor:crosshair;\",\n    \"X .cursor-move\": \"cursor:move;\",\n    \"X .cursor-col-resize\": \"cursor:col-resize;\",\n    \"X .cursor-row-resize\": \"cursor:row-resize;\",\n    \"X .cursor-ns-resize\": \"cursor:ns-resize;\",\n    \"X .cursor-ew-resize\": \"cursor:ew-resize;\",\n    \"X .cursor-sw-resize\": \"cursor:sw-resize;\",\n    \"X .cursor-s-resize\": \"cursor:s-resize;\",\n    \"X .cursor-se-resize\": \"cursor:se-resize;\",\n    \"X .cursor-w-resize\": \"cursor:w-resize;\",\n    \"X .cursor-e-resize\": \"cursor:e-resize;\",\n    \"X .cursor-nw-resize\": \"cursor:nw-resize;\",\n    \"X .cursor-n-resize\": \"cursor:n-resize;\",\n    \"X .cursor-ne-resize\": \"cursor:ne-resize;\",\n    \"X .modebar\": \"position:absolute;top:2px;right:2px;z-index:1001;background:rgba(255,255,255,0.7);\",\n    \"X .modebar--hover\": \"opacity:0;-webkit-transition:opacity 0.3s ease 0s;-moz-transition:opacity 0.3s ease 0s;-ms-transition:opacity 0.3s ease 0s;-o-transition:opacity 0.3s ease 0s;transition:opacity 0.3s ease 0s;\",\n    \"X:hover .modebar--hover\": \"opacity:1;\",\n    \"X .modebar-group\": \"float:left;display:inline-block;box-sizing:border-box;margin-left:8px;position:relative;vertical-align:middle;white-space:nowrap;\",\n    \"X .modebar-group:first-child\": \"margin-left:0px;\",\n    \"X .modebar-btn\": \"position:relative;font-size:16px;padding:3px 4px;cursor:pointer;line-height:normal;box-sizing:border-box;\",\n    \"X .modebar-btn svg\": \"position:relative;top:2px;\",\n    \"X .modebar-btn path\": \"fill:rgba(0,31,95,0.3);\",\n    \"X .modebar-btn.active path,X .modebar-btn:hover path\": \"fill:rgba(0,22,72,0.5);\",\n    \"X .modebar-btn.modebar-btn--logo\": \"padding:3px 1px;\",\n    \"X .modebar-btn.modebar-btn--logo path\": \"fill:#447adb !important;\",\n    \"X [data-title]:before,X [data-title]:after\": \"position:absolute;-webkit-transform:translate3d(0, 0, 0);-moz-transform:translate3d(0, 0, 0);-ms-transform:translate3d(0, 0, 0);-o-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);display:none;opacity:0;z-index:1001;pointer-events:none;top:110%;right:50%;\",\n    \"X [data-title]:hover:before,X [data-title]:hover:after\": \"display:block;opacity:1;\",\n    \"X [data-title]:before\": \"content:'';position:absolute;background:transparent;border:6px solid transparent;z-index:1002;margin-top:-12px;border-bottom-color:#69738a;margin-right:-6px;\",\n    \"X [data-title]:after\": \"content:attr(data-title);background:#69738a;color:white;padding:8px 10px;font-size:12px;line-height:12px;white-space:nowrap;margin-right:-18px;border-radius:2px;\",\n    \"X .select-outline\": \"fill:none;stroke-width:1;shape-rendering:crispEdges;\",\n    \"X .select-outline-1\": \"stroke:white;\",\n    \"X .select-outline-2\": \"stroke:black;stroke-dasharray:2px 2px;\",\n    Y: \"font-family:'Open Sans';position:fixed;top:50px;right:20px;z-index:10000;font-size:10pt;max-width:180px;\",\n    \"Y p\": \"margin:0;\",\n    \"Y .notifier-note\": \"min-width:180px;max-width:250px;border:1px solid #fff;z-index:3000;margin:0;background-color:#8c97af;background-color:rgba(140,151,175,0.9);color:#fff;padding:10px;overflow-wrap:break-word;word-wrap:break-word;-ms-hyphens:auto;-webkit-hyphens:auto;hyphens:auto;\",\n    \"Y .notifier-close\": \"color:#fff;opacity:0.8;float:right;padding:0 5px;background:none;border:none;font-size:20px;font-weight:bold;line-height:20px;\",\n    \"Y .notifier-close:hover\": \"color:#444;text-decoration:none;cursor:pointer;\"\n};\n\nfor(var selector in rules) {\n    var fullSelector = selector.replace(/^,/,' ,')\n        .replace(/X/g, '.js-plotly-plot .plotly')\n        .replace(/Y/g, '.plotly-notifier');\n    Lib.addStyleRule(fullSelector, rules[selector]);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/build/plotcss.js\n// module id = 204\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/* global MathJax:false */\n\n/**\n * Check and configure MathJax\n */\nif(typeof MathJax !== 'undefined') {\n    exports.MathJax = true;\n\n    MathJax.Hub.Config({\n        messageStyle: 'none',\n        skipStartupTypeset: true,\n        displayAlign: 'left',\n        tex2jax: {\n            inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]\n        }\n    });\n\n    MathJax.Hub.Configured();\n} else {\n    exports.MathJax = false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/fonts/mathjax_config.js\n// module id = 205\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Plotly = require('../plotly');\nvar Lib = require('../lib');\n\n/**\n * Extends the plot config\n *\n * @param {object} configObj partial plot configuration object\n *      to extend the current plot configuration.\n *\n */\nmodule.exports = function setPlotConfig(configObj) {\n    return Lib.extendFlat(Plotly.defaultConfig, configObj);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plot_api/set_plot_config.js\n// module id = 206\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../registry');\nvar Lib = require('../lib');\n\n\nmodule.exports = function register(_modules) {\n    if(!_modules) {\n        throw new Error('No argument passed to Plotly.register.');\n    }\n    else if(_modules && !Array.isArray(_modules)) {\n        _modules = [_modules];\n    }\n\n    for(var i = 0; i < _modules.length; i++) {\n        var newModule = _modules[i];\n\n        if(!newModule) {\n            throw new Error('Invalid module was attempted to be registered!');\n        }\n\n        switch(newModule.moduleType) {\n            case 'trace':\n                registerTraceModule(newModule);\n                break;\n\n            case 'transform':\n                registerTransformModule(newModule);\n                break;\n\n            case 'component':\n                registerComponentModule(newModule);\n                break;\n\n            case 'locale':\n                Registry.registerLocale(newModule);\n                break;\n\n            default:\n                throw new Error('Invalid module was attempted to be registered!');\n        }\n    }\n};\n\nfunction registerTraceModule(newModule) {\n    Registry.register(newModule, newModule.name, newModule.categories, newModule.meta);\n\n    if(!Registry.subplotsRegistry[newModule.basePlotModule.name]) {\n        Registry.registerSubplot(newModule.basePlotModule);\n    }\n}\n\nfunction registerTransformModule(newModule) {\n    if(typeof newModule.name !== 'string') {\n        throw new Error('Transform module *name* must be a string.');\n    }\n\n    var prefix = 'Transform module ' + newModule.name;\n\n    var hasTransform = typeof newModule.transform === 'function',\n        hasCalcTransform = typeof newModule.calcTransform === 'function';\n\n\n    if(!hasTransform && !hasCalcTransform) {\n        throw new Error(prefix + ' is missing a *transform* or *calcTransform* method.');\n    }\n\n    if(hasTransform && hasCalcTransform) {\n        Lib.log([\n            prefix + ' has both a *transform* and *calcTransform* methods.',\n            'Please note that all *transform* methods are executed',\n            'before all *calcTransform* methods.'\n        ].join(' '));\n    }\n\n    if(!Lib.isPlainObject(newModule.attributes)) {\n        Lib.log(prefix + ' registered without an *attributes* object.');\n    }\n\n    if(typeof newModule.supplyDefaults !== 'function') {\n        Lib.log(prefix + ' registered without a *supplyDefaults* method.');\n    }\n\n    Registry.registerTransform(newModule);\n}\n\nfunction registerComponentModule(newModule) {\n    if(typeof newModule.name !== 'string') {\n        throw new Error('Component module *name* must be a string.');\n    }\n\n    Registry.registerComponent(newModule);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plot_api/register.js\n// module id = 207\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\nvar Lib = require('../lib');\nvar Plots = require('../plots/plots');\nvar PlotSchema = require('./plot_schema');\nvar dfltConfig = require('./plot_config');\n\nvar isPlainObject = Lib.isPlainObject;\nvar isArray = Array.isArray;\n\n\n/**\n * Validate a data array and layout object.\n *\n * @param {array} data\n * @param {object} layout\n *\n * @return {array} array of error objects each containing:\n *  - {string} code\n *      error code ('object', 'array', 'schema', 'unused', 'invisible' or 'value')\n *  - {string} container\n *      container where the error occurs ('data' or 'layout')\n *  - {number} trace\n *      trace index of the 'data' container where the error occurs\n *  - {array} path\n *      nested path to the key that causes the error\n *  - {string} astr\n *      attribute string variant of 'path' compatible with Plotly.restyle and\n *      Plotly.relayout.\n *  - {string} msg\n *      error message (shown in console in logger config argument is enable)\n */\nmodule.exports = function valiate(data, layout) {\n    var schema = PlotSchema.get();\n    var errorList = [];\n    var gd = {_context: Lib.extendFlat({}, dfltConfig)};\n\n    var dataIn, layoutIn;\n\n    if(isArray(data)) {\n        gd.data = Lib.extendDeep([], data);\n        dataIn = data;\n    }\n    else {\n        gd.data = [];\n        dataIn = [];\n        errorList.push(format('array', 'data'));\n    }\n\n    if(isPlainObject(layout)) {\n        gd.layout = Lib.extendDeep({}, layout);\n        layoutIn = layout;\n    }\n    else {\n        gd.layout = {};\n        layoutIn = {};\n        if(arguments.length > 1) {\n            errorList.push(format('object', 'layout'));\n        }\n    }\n\n    // N.B. dataIn and layoutIn are in general not the same as\n    // gd.data and gd.layout after supplyDefaults as some attributes\n    // in gd.data and gd.layout (still) get mutated during this step.\n\n    Plots.supplyDefaults(gd);\n\n    var dataOut = gd._fullData,\n        len = dataIn.length;\n\n    for(var i = 0; i < len; i++) {\n        var traceIn = dataIn[i],\n            base = ['data', i];\n\n        if(!isPlainObject(traceIn)) {\n            errorList.push(format('object', base));\n            continue;\n        }\n\n        var traceOut = dataOut[i],\n            traceType = traceOut.type,\n            traceSchema = schema.traces[traceType].attributes;\n\n        // PlotSchema does something fancy with trace 'type', reset it here\n        // to make the trace schema compatible with Lib.validate.\n        traceSchema.type = {\n            valType: 'enumerated',\n            values: [traceType]\n        };\n\n        if(traceOut.visible === false && traceIn.visible !== false) {\n            errorList.push(format('invisible', base));\n        }\n\n        crawl(traceIn, traceOut, traceSchema, errorList, base);\n\n        var transformsIn = traceIn.transforms,\n            transformsOut = traceOut.transforms;\n\n        if(transformsIn) {\n            if(!isArray(transformsIn)) {\n                errorList.push(format('array', base, ['transforms']));\n            }\n\n            base.push('transforms');\n\n            for(var j = 0; j < transformsIn.length; j++) {\n                var path = ['transforms', j],\n                    transformType = transformsIn[j].type;\n\n                if(!isPlainObject(transformsIn[j])) {\n                    errorList.push(format('object', base, path));\n                    continue;\n                }\n\n                var transformSchema = schema.transforms[transformType] ?\n                    schema.transforms[transformType].attributes :\n                    {};\n\n                // add 'type' to transform schema to validate the transform type\n                transformSchema.type = {\n                    valType: 'enumerated',\n                    values: Object.keys(schema.transforms)\n                };\n\n                crawl(transformsIn[j], transformsOut[j], transformSchema, errorList, base, path);\n            }\n        }\n    }\n\n    var layoutOut = gd._fullLayout,\n        layoutSchema = fillLayoutSchema(schema, dataOut);\n\n    crawl(layoutIn, layoutOut, layoutSchema, errorList, 'layout');\n\n    // return undefined if no validation errors were found\n    return (errorList.length === 0) ? void(0) : errorList;\n};\n\nfunction crawl(objIn, objOut, schema, list, base, path) {\n    path = path || [];\n\n    var keys = Object.keys(objIn);\n\n    for(var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n\n        // transforms are handled separately\n        if(k === 'transforms') continue;\n\n        var p = path.slice();\n        p.push(k);\n\n        var valIn = objIn[k],\n            valOut = objOut[k];\n\n        var nestedSchema = getNestedSchema(schema, k),\n            isInfoArray = (nestedSchema || {}).valType === 'info_array',\n            isColorscale = (nestedSchema || {}).valType === 'colorscale';\n\n        if(!isInSchema(schema, k)) {\n            list.push(format('schema', base, p));\n        }\n        else if(isPlainObject(valIn) && isPlainObject(valOut)) {\n            crawl(valIn, valOut, nestedSchema, list, base, p);\n        }\n        else if(nestedSchema.items && !isInfoArray && isArray(valIn)) {\n            var items = nestedSchema.items,\n                _nestedSchema = items[Object.keys(items)[0]],\n                indexList = [];\n\n            var j, _p;\n\n            // loop over valOut items while keeping track of their\n            // corresponding input container index (given by _index)\n            for(j = 0; j < valOut.length; j++) {\n                var _index = valOut[j]._index || j;\n\n                _p = p.slice();\n                _p.push(_index);\n\n                if(isPlainObject(valIn[_index]) && isPlainObject(valOut[j])) {\n                    indexList.push(_index);\n                    crawl(valIn[_index], valOut[j], _nestedSchema, list, base, _p);\n                }\n            }\n\n            // loop over valIn to determine where it went wrong for some items\n            for(j = 0; j < valIn.length; j++) {\n                _p = p.slice();\n                _p.push(j);\n\n                if(!isPlainObject(valIn[j])) {\n                    list.push(format('object', base, _p, valIn[j]));\n                }\n                else if(indexList.indexOf(j) === -1) {\n                    list.push(format('unused', base, _p));\n                }\n            }\n        }\n        else if(!isPlainObject(valIn) && isPlainObject(valOut)) {\n            list.push(format('object', base, p, valIn));\n        }\n        else if(!isArray(valIn) && isArray(valOut) && !isInfoArray && !isColorscale) {\n            list.push(format('array', base, p, valIn));\n        }\n        else if(!(k in objOut)) {\n            list.push(format('unused', base, p, valIn));\n        }\n        else if(!Lib.validate(valIn, nestedSchema)) {\n            list.push(format('value', base, p, valIn));\n        }\n        else if(nestedSchema.valType === 'enumerated' &&\n            ((nestedSchema.coerceNumber && valIn !== +valOut) || valIn !== valOut)\n        ) {\n            list.push(format('dynamic', base, p, valIn, valOut));\n        }\n    }\n\n    return list;\n}\n\n// the 'full' layout schema depends on the traces types presents\nfunction fillLayoutSchema(schema, dataOut) {\n    for(var i = 0; i < dataOut.length; i++) {\n        var traceType = dataOut[i].type,\n            traceLayoutAttr = schema.traces[traceType].layoutAttributes;\n\n        if(traceLayoutAttr) {\n            Lib.extendFlat(schema.layout.layoutAttributes, traceLayoutAttr);\n        }\n    }\n\n    return schema.layout.layoutAttributes;\n}\n\n// validation error codes\nvar code2msgFunc = {\n    object: function(base, astr) {\n        var prefix;\n\n        if(base === 'layout' && astr === '') prefix = 'The layout argument';\n        else if(base[0] === 'data' && astr === '') {\n            prefix = 'Trace ' + base[1] + ' in the data argument';\n        }\n        else prefix = inBase(base) + 'key ' + astr;\n\n        return prefix + ' must be linked to an object container';\n    },\n    array: function(base, astr) {\n        var prefix;\n\n        if(base === 'data') prefix = 'The data argument';\n        else prefix = inBase(base) + 'key ' + astr;\n\n        return prefix + ' must be linked to an array container';\n    },\n    schema: function(base, astr) {\n        return inBase(base) + 'key ' + astr + ' is not part of the schema';\n    },\n    unused: function(base, astr, valIn) {\n        var target = isPlainObject(valIn) ? 'container' : 'key';\n\n        return inBase(base) + target + ' ' + astr + ' did not get coerced';\n    },\n    dynamic: function(base, astr, valIn, valOut) {\n        return [\n            inBase(base) + 'key',\n            astr,\n            '(set to \\'' + valIn + '\\')',\n            'got reset to',\n            '\\'' + valOut + '\\'',\n            'during defaults.'\n        ].join(' ');\n    },\n    invisible: function(base) {\n        return 'Trace ' + base[1] + ' got defaulted to be not visible';\n    },\n    value: function(base, astr, valIn) {\n        return [\n            inBase(base) + 'key ' + astr,\n            'is set to an invalid value (' + valIn + ')'\n        ].join(' ');\n    }\n};\n\nfunction inBase(base) {\n    if(isArray(base)) return 'In data trace ' + base[1] + ', ';\n\n    return 'In ' + base + ', ';\n}\n\nfunction format(code, base, path, valIn, valOut) {\n    path = path || '';\n\n    var container, trace;\n\n    // container is either 'data' or 'layout\n    // trace is the trace index if 'data', null otherwise\n\n    if(isArray(base)) {\n        container = base[0];\n        trace = base[1];\n    }\n    else {\n        container = base;\n        trace = null;\n    }\n\n    var astr = convertPathToAttributeString(path);\n    var msg = code2msgFunc[code](base, astr, valIn, valOut);\n\n    // log to console if logger config option is enabled\n    Lib.log(msg);\n\n    return {\n        code: code,\n        container: container,\n        trace: trace,\n        path: path,\n        astr: astr,\n        msg: msg\n    };\n}\n\nfunction isInSchema(schema, key) {\n    var parts = splitKey(key),\n        keyMinusId = parts.keyMinusId,\n        id = parts.id;\n\n    if((keyMinusId in schema) && schema[keyMinusId]._isSubplotObj && id) {\n        return true;\n    }\n\n    return (key in schema);\n}\n\nfunction getNestedSchema(schema, key) {\n    var parts = splitKey(key);\n\n    return schema[parts.keyMinusId];\n}\n\nvar idRegex = Lib.counterRegex('([a-z]+)');\n\nfunction splitKey(key) {\n    var idMatch = key.match(idRegex);\n\n    return {\n        keyMinusId: idMatch && idMatch[1],\n        id: idMatch && idMatch[2]\n    };\n}\n\nfunction convertPathToAttributeString(path) {\n    if(!isArray(path)) return String(path);\n\n    var astr = '';\n\n    for(var i = 0; i < path.length; i++) {\n        var p = path[i];\n\n        if(typeof p === 'number') {\n            astr = astr.substr(0, astr.length - 1) + '[' + p + ']';\n        }\n        else {\n            astr += p;\n        }\n\n        if(i < path.length - 1) astr += '.';\n    }\n\n    return astr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plot_api/validate.js\n// module id = 208\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Scatter = {};\n\nvar subtypes = require('./subtypes');\nScatter.hasLines = subtypes.hasLines;\nScatter.hasMarkers = subtypes.hasMarkers;\nScatter.hasText = subtypes.hasText;\nScatter.isBubble = subtypes.isBubble;\n\n// traces with < this many points are by default shown\n// with points and lines, > just get lines\nScatter.attributes = require('./attributes');\nScatter.supplyDefaults = require('./defaults');\nScatter.cleanData = require('./clean_data');\nScatter.calc = require('./calc').calc;\nScatter.arraysToCalcdata = require('./arrays_to_calcdata');\nScatter.plot = require('./plot');\nScatter.colorbar = require('./colorbar');\nScatter.style = require('./style').style;\nScatter.hoverPoints = require('./hover');\nScatter.selectPoints = require('./select');\nScatter.animatable = true;\n\nScatter.moduleType = 'trace';\nScatter.name = 'scatter';\nScatter.basePlotModule = require('../../plots/cartesian');\nScatter.categories = ['cartesian', 'symbols', 'markerColorscale', 'errorBarsOK', 'showLegend', 'scatter-like'];\nScatter.meta = {\n    description: [\n        'The scatter trace type encompasses line charts, scatter charts, text charts, and bubble charts.',\n        'The data visualized as scatter point or lines is set in `x` and `y`.',\n        'Text (appearing either on the chart or on hover only) is via `text`.',\n        'Bubble charts are achieved by setting `marker.size` and/or `marker.color`',\n        'to numerical arrays.'\n    ].join(' ')\n};\n\nmodule.exports = Scatter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/index.js\n// module id = 209\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar attributes = require('./attributes');\nvar constants = require('./constants');\nvar subTypes = require('./subtypes');\nvar handleXYDefaults = require('./xy_defaults');\nvar handleMarkerDefaults = require('./marker_defaults');\nvar handleLineDefaults = require('./line_defaults');\nvar handleLineShapeDefaults = require('./line_shape_defaults');\nvar handleTextDefaults = require('./text_defaults');\nvar handleFillColorDefaults = require('./fillcolor_defaults');\nvar errorBarsSupplyDefaults = require('../../components/errorbars/defaults');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var len = handleXYDefaults(traceIn, traceOut, layout, coerce),\n        // TODO: default mode by orphan points...\n        defaultMode = len < constants.PTS_LINESONLY ? 'lines+markers' : 'lines';\n    if(!len) {\n        traceOut.visible = false;\n        return;\n    }\n\n    coerce('text');\n    coerce('hovertext');\n    coerce('mode', defaultMode);\n\n    if(subTypes.hasLines(traceOut)) {\n        handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n        handleLineShapeDefaults(traceIn, traceOut, coerce);\n        coerce('connectgaps');\n        coerce('line.simplify');\n    }\n\n    if(subTypes.hasMarkers(traceOut)) {\n        handleMarkerDefaults(traceIn, traceOut, defaultColor, layout, coerce, {gradient: true});\n    }\n\n    if(subTypes.hasText(traceOut)) {\n        handleTextDefaults(traceIn, traceOut, layout, coerce);\n    }\n\n    var dfltHoverOn = [];\n\n    if(subTypes.hasMarkers(traceOut) || subTypes.hasText(traceOut)) {\n        coerce('cliponaxis');\n        coerce('marker.maxdisplayed');\n        dfltHoverOn.push('points');\n    }\n\n    coerce('fill');\n    if(traceOut.fill !== 'none') {\n        handleFillColorDefaults(traceIn, traceOut, defaultColor, coerce);\n        if(!subTypes.hasLines(traceOut)) handleLineShapeDefaults(traceIn, traceOut, coerce);\n    }\n\n    if(traceOut.fill === 'tonext' || traceOut.fill === 'toself') {\n        dfltHoverOn.push('fills');\n    }\n    coerce('hoveron', dfltHoverOn.join('+') || 'points');\n\n    errorBarsSupplyDefaults(traceIn, traceOut, defaultColor, {axis: 'y'});\n    errorBarsSupplyDefaults(traceIn, traceOut, defaultColor, {axis: 'x', inherit: 'y'});\n\n    Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/defaults.js\n// module id = 210\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Color = require('../../components/color');\nvar hasColorscale = require('../../components/colorscale/has_colorscale');\nvar colorscaleDefaults = require('../../components/colorscale/defaults');\n\nvar subTypes = require('./subtypes');\n\n/*\n * opts: object of flags to control features not all marker users support\n *   noLine: caller does not support marker lines\n *   gradient: caller supports gradients\n *   noSelect: caller does not support selected/unselected attribute containers\n */\nmodule.exports = function markerDefaults(traceIn, traceOut, defaultColor, layout, coerce, opts) {\n    var isBubble = subTypes.isBubble(traceIn),\n        lineColor = (traceIn.line || {}).color,\n        defaultMLC;\n\n    opts = opts || {};\n\n    // marker.color inherit from line.color (even if line.color is an array)\n    if(lineColor) defaultColor = lineColor;\n\n    coerce('marker.symbol');\n    coerce('marker.opacity', isBubble ? 0.7 : 1);\n    coerce('marker.size');\n\n    coerce('marker.color', defaultColor);\n    if(hasColorscale(traceIn, 'marker')) {\n        colorscaleDefaults(traceIn, traceOut, layout, coerce, {prefix: 'marker.', cLetter: 'c'});\n    }\n\n    if(!opts.noSelect) {\n        coerce('selected.marker.color');\n        coerce('unselected.marker.color');\n        coerce('selected.marker.size');\n        coerce('unselected.marker.size');\n    }\n\n    if(!opts.noLine) {\n        // if there's a line with a different color than the marker, use\n        // that line color as the default marker line color\n        // (except when it's an array)\n        // mostly this is for transparent markers to behave nicely\n        if(lineColor && !Array.isArray(lineColor) && (traceOut.marker.color !== lineColor)) {\n            defaultMLC = lineColor;\n        }\n        else if(isBubble) defaultMLC = Color.background;\n        else defaultMLC = Color.defaultLine;\n\n        coerce('marker.line.color', defaultMLC);\n        if(hasColorscale(traceIn, 'marker.line')) {\n            colorscaleDefaults(traceIn, traceOut, layout, coerce, {prefix: 'marker.line.', cLetter: 'c'});\n        }\n\n        coerce('marker.line.width', isBubble ? 1 : 0);\n    }\n\n    if(isBubble) {\n        coerce('marker.sizeref');\n        coerce('marker.sizemin');\n        coerce('marker.sizemode');\n    }\n\n    if(opts.gradient) {\n        var gradientType = coerce('marker.gradient.type');\n        if(gradientType !== 'none') {\n            coerce('marker.gradient.color');\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/marker_defaults.js\n// module id = 211\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar hasColorscale = require('../../components/colorscale/has_colorscale');\nvar colorscaleDefaults = require('../../components/colorscale/defaults');\n\n\nmodule.exports = function lineDefaults(traceIn, traceOut, defaultColor, layout, coerce, opts) {\n    var markerColor = (traceIn.marker || {}).color;\n\n    coerce('line.color', defaultColor);\n\n    if(hasColorscale(traceIn, 'line')) {\n        colorscaleDefaults(traceIn, traceOut, layout, coerce, {prefix: 'line.', cLetter: 'c'});\n    }\n    else {\n        var lineColorDflt = (Array.isArray(markerColor) ? false : markerColor) || defaultColor;\n        coerce('line.color', lineColorDflt);\n    }\n\n    coerce('line.width');\n    if(!(opts || {}).noDash) coerce('line.dash');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/line_defaults.js\n// module id = 212\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\n// common to 'scatter' and 'scatterternary'\nmodule.exports = function handleLineShapeDefaults(traceIn, traceOut, coerce) {\n    var shape = coerce('line.shape');\n    if(shape === 'spline') coerce('line.smoothing');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/line_shape_defaults.js\n// module id = 213\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\n\n/*\n * opts: object of flags to control features not all text users support\n *   noSelect: caller does not support selected/unselected attribute containers\n */\nmodule.exports = function(traceIn, traceOut, layout, coerce, opts) {\n    opts = opts || {};\n\n    coerce('textposition');\n    Lib.coerceFont(coerce, 'textfont', layout.font);\n\n    if(!opts.noSelect) {\n        coerce('selected.textfont.color');\n        coerce('unselected.textfont.color');\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/text_defaults.js\n// module id = 214\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Color = require('../../components/color');\n\n\nmodule.exports = function fillColorDefaults(traceIn, traceOut, defaultColor, coerce) {\n    var inheritColorFromMarker = false;\n\n    if(traceOut.marker) {\n        // don't try to inherit a color array\n        var markerColor = traceOut.marker.color,\n            markerLineColor = (traceOut.marker.line || {}).color;\n\n        if(markerColor && !Array.isArray(markerColor)) {\n            inheritColorFromMarker = markerColor;\n        }\n        else if(markerLineColor && !Array.isArray(markerLineColor)) {\n            inheritColorFromMarker = markerLineColor;\n        }\n    }\n\n    coerce('fillcolor', Color.addOpacity(\n        (traceOut.line || {}).color ||\n        inheritColorFromMarker ||\n        defaultColor, 0.5\n    ));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/fillcolor_defaults.js\n// module id = 215\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\n// remove opacity for any trace that has a fill or is filled to\nmodule.exports = function cleanData(fullData) {\n    for(var i = 0; i < fullData.length; i++) {\n        var tracei = fullData[i];\n        if(tracei.type !== 'scatter') continue;\n\n        var filli = tracei.fill;\n        if(filli === 'none' || filli === 'toself') continue;\n\n        tracei.opacity = undefined;\n\n        if(filli === 'tonexty' || filli === 'tonextx') {\n            for(var j = i - 1; j >= 0; j--) {\n                var tracej = fullData[j];\n\n                if((tracej.type === 'scatter') &&\n                        (tracej.xaxis === tracei.xaxis) &&\n                        (tracej.yaxis === tracei.yaxis)) {\n                    tracej.opacity = undefined;\n                    break;\n                }\n            }\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/clean_data.js\n// module id = 216\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Axes = require('../../plots/cartesian/axes');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar subTypes = require('./subtypes');\nvar calcColorscale = require('./colorscale_calc');\nvar arraysToCalcdata = require('./arrays_to_calcdata');\nvar calcSelection = require('./calc_selection');\n\nfunction calc(gd, trace) {\n    var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n    var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n    var x = xa.makeCalcdata(trace, 'x');\n    var y = ya.makeCalcdata(trace, 'y');\n    var serieslen = Math.min(x.length, y.length);\n\n    // cancel minimum tick spacings (only applies to bars and boxes)\n    xa._minDtick = 0;\n    ya._minDtick = 0;\n\n    if(x.length > serieslen) x.splice(serieslen, x.length - serieslen);\n    if(y.length > serieslen) y.splice(serieslen, y.length - serieslen);\n\n    // check whether bounds should be tight, padded, extended to zero...\n    // most cases both should be padded on both ends, so start with that.\n    var xOptions = {padded: true};\n    var yOptions = {padded: true};\n\n    var ppad = calcMarkerSize(trace, serieslen);\n    if(ppad) xOptions.ppad = yOptions.ppad = ppad;\n\n    // TODO: text size\n\n    // include zero (tight) and extremes (padded) if fill to zero\n    // (unless the shape is closed, then it's just filling the shape regardless)\n    if(((trace.fill === 'tozerox') ||\n            ((trace.fill === 'tonextx') && gd.firstscatter)) &&\n            ((x[0] !== x[serieslen - 1]) || (y[0] !== y[serieslen - 1]))) {\n        xOptions.tozero = true;\n    }\n\n    // if no error bars, markers or text, or fill to y=0 remove x padding\n    else if(!trace.error_y.visible && (\n            ['tonexty', 'tozeroy'].indexOf(trace.fill) !== -1 ||\n            (!subTypes.hasMarkers(trace) && !subTypes.hasText(trace))\n        )) {\n        xOptions.padded = false;\n        xOptions.ppad = 0;\n    }\n\n    // now check for y - rather different logic, though still mostly padded both ends\n    // include zero (tight) and extremes (padded) if fill to zero\n    // (unless the shape is closed, then it's just filling the shape regardless)\n    if(((trace.fill === 'tozeroy') || ((trace.fill === 'tonexty') && gd.firstscatter)) &&\n            ((x[0] !== x[serieslen - 1]) || (y[0] !== y[serieslen - 1]))) {\n        yOptions.tozero = true;\n    }\n\n    // tight y: any x fill\n    else if(['tonextx', 'tozerox'].indexOf(trace.fill) !== -1) {\n        yOptions.padded = false;\n    }\n\n    Axes.expand(xa, x, xOptions);\n    Axes.expand(ya, y, yOptions);\n\n    // create the \"calculated data\" to plot\n    var cd = new Array(serieslen);\n    for(var i = 0; i < serieslen; i++) {\n        cd[i] = (isNumeric(x[i]) && isNumeric(y[i])) ?\n            {x: x[i], y: y[i]} : {x: BADNUM, y: BADNUM};\n\n        if(trace.ids) {\n            cd[i].id = String(trace.ids[i]);\n        }\n    }\n\n    arraysToCalcdata(cd, trace);\n    calcColorscale(trace);\n    calcSelection(cd, trace);\n\n    gd.firstscatter = false;\n    return cd;\n}\n\nfunction calcMarkerSize(trace, serieslen) {\n    if(!subTypes.hasMarkers(trace)) return;\n\n    // Treat size like x or y arrays --- Run d2c\n    // this needs to go before ppad computation\n    var marker = trace.marker;\n    var sizeref = 1.6 * (trace.marker.sizeref || 1);\n    var markerTrans;\n\n    if(trace.marker.sizemode === 'area') {\n        markerTrans = function(v) {\n            return Math.max(Math.sqrt((v || 0) / sizeref), 3);\n        };\n    } else {\n        markerTrans = function(v) {\n            return Math.max((v || 0) / sizeref, 3);\n        };\n    }\n\n    if(Array.isArray(marker.size)) {\n        // I tried auto-type but category and dates dont make much sense.\n        var ax = {type: 'linear'};\n        Axes.setConvert(ax);\n\n        var s = ax.makeCalcdata(trace.marker, 'size');\n        if(s.length > serieslen) s.splice(serieslen, s.length - serieslen);\n\n        return s.map(markerTrans);\n    } else {\n        return markerTrans(marker.size);\n    }\n}\n\nmodule.exports = {\n    calc: calc,\n    calcMarkerSize: calcMarkerSize\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/calc.js\n// module id = 217\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar hasColorscale = require('../../components/colorscale/has_colorscale');\nvar calcColorscale = require('../../components/colorscale/calc');\n\nvar subTypes = require('./subtypes');\n\n\nmodule.exports = function calcMarkerColorscale(trace) {\n    if(subTypes.hasLines(trace) && hasColorscale(trace, 'line')) {\n        calcColorscale(trace, trace.line.color, 'line', 'c');\n    }\n\n    if(subTypes.hasMarkers(trace)) {\n        if(hasColorscale(trace, 'marker')) {\n            calcColorscale(trace, trace.marker.color, 'marker', 'c');\n        }\n        if(hasColorscale(trace, 'marker.line')) {\n            calcColorscale(trace, trace.marker.line.color, 'marker.line', 'c');\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/colorscale_calc.js\n// module id = 218\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Lib = require('../../lib');\nvar Drawing = require('../../components/drawing');\nvar ErrorBars = require('../../components/errorbars');\n\nvar subTypes = require('./subtypes');\nvar linePoints = require('./line_points');\nvar linkTraces = require('./link_traces');\nvar polygonTester = require('../../lib/polygon').tester;\n\nmodule.exports = function plot(gd, plotinfo, cdscatter, transitionOpts, makeOnCompleteCallback) {\n    var i, uids, selection, join, onComplete;\n\n    var scatterlayer = plotinfo.plot.select('g.scatterlayer');\n\n    // If transition config is provided, then it is only a partial replot and traces not\n    // updated are removed.\n    var isFullReplot = !transitionOpts;\n    var hasTransition = !!transitionOpts && transitionOpts.duration > 0;\n\n    selection = scatterlayer.selectAll('g.trace');\n\n    join = selection.data(cdscatter, function(d) { return d[0].trace.uid; });\n\n    // Append new traces:\n    join.enter().append('g')\n        .attr('class', function(d) {\n            return 'trace scatter trace' + d[0].trace.uid;\n        })\n        .style('stroke-miterlimit', 2);\n\n    // After the elements are created but before they've been draw, we have to perform\n    // this extra step of linking the traces. This allows appending of fill layers so that\n    // the z-order of fill layers is correct.\n    linkTraces(gd, plotinfo, cdscatter);\n\n    createFills(gd, scatterlayer, plotinfo);\n\n    // Sort the traces, once created, so that the ordering is preserved even when traces\n    // are shown and hidden. This is needed since we're not just wiping everything out\n    // and recreating on every update.\n    for(i = 0, uids = {}; i < cdscatter.length; i++) {\n        uids[cdscatter[i][0].trace.uid] = i;\n    }\n\n    scatterlayer.selectAll('g.trace').sort(function(a, b) {\n        var idx1 = uids[a[0].trace.uid];\n        var idx2 = uids[b[0].trace.uid];\n        return idx1 > idx2 ? 1 : -1;\n    });\n\n    if(hasTransition) {\n        if(makeOnCompleteCallback) {\n            // If it was passed a callback to register completion, make a callback. If\n            // this is created, then it must be executed on completion, otherwise the\n            // pos-transition redraw will not execute:\n            onComplete = makeOnCompleteCallback();\n        }\n\n        var transition = d3.transition()\n            .duration(transitionOpts.duration)\n            .ease(transitionOpts.easing)\n            .each('end', function() {\n                onComplete && onComplete();\n            })\n            .each('interrupt', function() {\n                onComplete && onComplete();\n            });\n\n        transition.each(function() {\n            // Must run the selection again since otherwise enters/updates get grouped together\n            // and these get executed out of order. Except we need them in order!\n            scatterlayer.selectAll('g.trace').each(function(d, i) {\n                plotOne(gd, i, plotinfo, d, cdscatter, this, transitionOpts);\n            });\n        });\n    } else {\n        scatterlayer.selectAll('g.trace').each(function(d, i) {\n            plotOne(gd, i, plotinfo, d, cdscatter, this, transitionOpts);\n        });\n    }\n\n    if(isFullReplot) {\n        join.exit().remove();\n    }\n\n    // remove paths that didn't get used\n    scatterlayer.selectAll('path:not([d])').remove();\n};\n\nfunction createFills(gd, scatterlayer, plotinfo) {\n    var trace;\n\n    scatterlayer.selectAll('g.trace').each(function(d) {\n        var tr = d3.select(this);\n\n        // Loop only over the traces being redrawn:\n        trace = d[0].trace;\n\n        // make the fill-to-next path now for the NEXT trace, so it shows\n        // behind both lines.\n        if(trace._nexttrace) {\n            trace._nextFill = tr.select('.js-fill.js-tonext');\n            if(!trace._nextFill.size()) {\n\n                // If there is an existing tozero fill, we must insert this *after* that fill:\n                var loc = ':first-child';\n                if(tr.select('.js-fill.js-tozero').size()) {\n                    loc += ' + *';\n                }\n\n                trace._nextFill = tr.insert('path', loc).attr('class', 'js-fill js-tonext');\n            }\n        } else {\n            tr.selectAll('.js-fill.js-tonext').remove();\n            trace._nextFill = null;\n        }\n\n        if(trace.fill && (trace.fill.substr(0, 6) === 'tozero' || trace.fill === 'toself' ||\n                (trace.fill.substr(0, 2) === 'to' && !trace._prevtrace))) {\n            trace._ownFill = tr.select('.js-fill.js-tozero');\n            if(!trace._ownFill.size()) {\n                trace._ownFill = tr.insert('path', ':first-child').attr('class', 'js-fill js-tozero');\n            }\n        } else {\n            tr.selectAll('.js-fill.js-tozero').remove();\n            trace._ownFill = null;\n        }\n\n        tr.selectAll('.js-fill').call(Drawing.setClipUrl, plotinfo.layerClipId);\n    });\n}\n\nfunction plotOne(gd, idx, plotinfo, cdscatter, cdscatterAll, element, transitionOpts) {\n    var join, i;\n\n    // Since this has been reorganized and we're executing this on individual traces,\n    // we need to pass it the full list of cdscatter as well as this trace's index (idx)\n    // since it does an internal n^2 loop over comparisons with other traces:\n    selectMarkers(gd, idx, plotinfo, cdscatter, cdscatterAll);\n\n    var hasTransition = !!transitionOpts && transitionOpts.duration > 0;\n\n    function transition(selection) {\n        return hasTransition ? selection.transition() : selection;\n    }\n\n    var xa = plotinfo.xaxis,\n        ya = plotinfo.yaxis;\n\n    var trace = cdscatter[0].trace,\n        line = trace.line,\n        tr = d3.select(element);\n\n    // (so error bars can find them along with bars)\n    // error bars are at the bottom\n    tr.call(ErrorBars.plot, plotinfo, transitionOpts);\n\n    if(trace.visible !== true) return;\n\n    transition(tr).style('opacity', trace.opacity);\n\n    // BUILD LINES AND FILLS\n    var ownFillEl3, tonext;\n    var ownFillDir = trace.fill.charAt(trace.fill.length - 1);\n    if(ownFillDir !== 'x' && ownFillDir !== 'y') ownFillDir = '';\n\n    // store node for tweaking by selectPoints\n    cdscatter[0].node3 = tr;\n\n    var prevRevpath = '';\n    var prevPolygons = [];\n    var prevtrace = trace._prevtrace;\n\n    if(prevtrace) {\n        prevRevpath = prevtrace._prevRevpath || '';\n        tonext = prevtrace._nextFill;\n        prevPolygons = prevtrace._polygons;\n    }\n\n    var thispath,\n        thisrevpath,\n        // fullpath is all paths for this curve, joined together straight\n        // across gaps, for filling\n        fullpath = '',\n        // revpath is fullpath reversed, for fill-to-next\n        revpath = '',\n        // functions for converting a point array to a path\n        pathfn, revpathbase, revpathfn,\n        // variables used before and after the data join\n        pt0, lastSegment, pt1, thisPolygons;\n\n    // initialize line join data / method\n    var segments = [],\n        makeUpdate = Lib.noop;\n\n    ownFillEl3 = trace._ownFill;\n\n    if(subTypes.hasLines(trace) || trace.fill !== 'none') {\n\n        if(tonext) {\n            // This tells .style which trace to use for fill information:\n            tonext.datum(cdscatter);\n        }\n\n        if(['hv', 'vh', 'hvh', 'vhv'].indexOf(line.shape) !== -1) {\n            pathfn = Drawing.steps(line.shape);\n            revpathbase = Drawing.steps(\n                line.shape.split('').reverse().join('')\n            );\n        }\n        else if(line.shape === 'spline') {\n            pathfn = revpathbase = function(pts) {\n                var pLast = pts[pts.length - 1];\n                if(pts.length > 1 && pts[0][0] === pLast[0] && pts[0][1] === pLast[1]) {\n                    // identical start and end points: treat it as a\n                    // closed curve so we don't get a kink\n                    return Drawing.smoothclosed(pts.slice(1), line.smoothing);\n                }\n                else {\n                    return Drawing.smoothopen(pts, line.smoothing);\n                }\n            };\n        }\n        else {\n            pathfn = revpathbase = function(pts) {\n                return 'M' + pts.join('L');\n            };\n        }\n\n        revpathfn = function(pts) {\n            // note: this is destructive (reverses pts in place) so can't use pts after this\n            return revpathbase(pts.reverse());\n        };\n\n        segments = linePoints(cdscatter, {\n            xaxis: xa,\n            yaxis: ya,\n            connectGaps: trace.connectgaps,\n            baseTolerance: Math.max(line.width || 1, 3) / 4,\n            shape: line.shape,\n            simplify: line.simplify\n        });\n\n        // since we already have the pixel segments here, use them to make\n        // polygons for hover on fill\n        // TODO: can we skip this if hoveron!=fills? That would mean we\n        // need to redraw when you change hoveron...\n        thisPolygons = trace._polygons = new Array(segments.length);\n        for(i = 0; i < segments.length; i++) {\n            trace._polygons[i] = polygonTester(segments[i]);\n        }\n\n        if(segments.length) {\n            pt0 = segments[0][0];\n            lastSegment = segments[segments.length - 1];\n            pt1 = lastSegment[lastSegment.length - 1];\n        }\n\n        makeUpdate = function(isEnter) {\n            return function(pts) {\n                thispath = pathfn(pts);\n                thisrevpath = revpathfn(pts);\n                if(!fullpath) {\n                    fullpath = thispath;\n                    revpath = thisrevpath;\n                }\n                else if(ownFillDir) {\n                    fullpath += 'L' + thispath.substr(1);\n                    revpath = thisrevpath + ('L' + revpath.substr(1));\n                }\n                else {\n                    fullpath += 'Z' + thispath;\n                    revpath = thisrevpath + 'Z' + revpath;\n                }\n\n                if(subTypes.hasLines(trace) && pts.length > 1) {\n                    var el = d3.select(this);\n\n                    // This makes the coloring work correctly:\n                    el.datum(cdscatter);\n\n                    if(isEnter) {\n                        transition(el.style('opacity', 0)\n                            .attr('d', thispath)\n                            .call(Drawing.lineGroupStyle))\n                                .style('opacity', 1);\n                    } else {\n                        var sel = transition(el);\n                        sel.attr('d', thispath);\n                        Drawing.singleLineStyle(cdscatter, sel);\n                    }\n                }\n            };\n        };\n    }\n\n    var lineJoin = tr.selectAll('.js-line').data(segments);\n\n    transition(lineJoin.exit())\n        .style('opacity', 0)\n        .remove();\n\n    lineJoin.each(makeUpdate(false));\n\n    lineJoin.enter().append('path')\n        .classed('js-line', true)\n        .style('vector-effect', 'non-scaling-stroke')\n        .call(Drawing.lineGroupStyle)\n        .each(makeUpdate(true));\n\n    Drawing.setClipUrl(lineJoin, plotinfo.layerClipId);\n\n    function clearFill(selection) {\n        transition(selection).attr('d', 'M0,0Z');\n    }\n\n    if(segments.length) {\n        if(ownFillEl3) {\n            if(pt0 && pt1) {\n                if(ownFillDir) {\n                    if(ownFillDir === 'y') {\n                        pt0[1] = pt1[1] = ya.c2p(0, true);\n                    }\n                    else if(ownFillDir === 'x') {\n                        pt0[0] = pt1[0] = xa.c2p(0, true);\n                    }\n\n                    // fill to zero: full trace path, plus extension of\n                    // the endpoints to the appropriate axis\n                    // For the sake of animations, wrap the points around so that\n                    // the points on the axes are the first two points. Otherwise\n                    // animations get a little crazy if the number of points changes.\n                    transition(ownFillEl3).attr('d', 'M' + pt1 + 'L' + pt0 + 'L' + fullpath.substr(1))\n                        .call(Drawing.singleFillStyle);\n                } else {\n                    // fill to self: just join the path to itself\n                    transition(ownFillEl3).attr('d', fullpath + 'Z')\n                        .call(Drawing.singleFillStyle);\n                }\n            }\n        }\n        else if(tonext) {\n            if(trace.fill.substr(0, 6) === 'tonext' && fullpath && prevRevpath) {\n                // fill to next: full trace path, plus the previous path reversed\n                if(trace.fill === 'tonext') {\n                    // tonext: for use by concentric shapes, like manually constructed\n                    // contours, we just add the two paths closed on themselves.\n                    // This makes strange results if one path is *not* entirely\n                    // inside the other, but then that is a strange usage.\n                    transition(tonext).attr('d', fullpath + 'Z' + prevRevpath + 'Z')\n                        .call(Drawing.singleFillStyle);\n                }\n                else {\n                    // tonextx/y: for now just connect endpoints with lines. This is\n                    // the correct behavior if the endpoints are at the same value of\n                    // y/x, but if they *aren't*, we should ideally do more complicated\n                    // things depending on whether the new endpoint projects onto the\n                    // existing curve or off the end of it\n                    transition(tonext).attr('d', fullpath + 'L' + prevRevpath.substr(1) + 'Z')\n                        .call(Drawing.singleFillStyle);\n                }\n                trace._polygons = trace._polygons.concat(prevPolygons);\n            }\n            else {\n                clearFill(tonext);\n                trace._polygons = null;\n            }\n        }\n        trace._prevRevpath = revpath;\n        trace._prevPolygons = thisPolygons;\n    }\n    else {\n        if(ownFillEl3) clearFill(ownFillEl3);\n        else if(tonext) clearFill(tonext);\n        trace._polygons = trace._prevRevpath = trace._prevPolygons = null;\n    }\n\n\n    function visFilter(d) {\n        return d.filter(function(v) { return v.vis; });\n    }\n\n    function keyFunc(d) {\n        return d.id;\n    }\n\n    // Returns a function if the trace is keyed, otherwise returns undefined\n    function getKeyFunc(trace) {\n        if(trace.ids) {\n            return keyFunc;\n        }\n    }\n\n    function hideFilter() {\n        return false;\n    }\n\n    function makePoints(d) {\n        var join, selection, hasNode;\n\n        var trace = d[0].trace,\n            s = d3.select(this),\n            showMarkers = subTypes.hasMarkers(trace),\n            showText = subTypes.hasText(trace);\n\n        var keyFunc = getKeyFunc(trace),\n            markerFilter = hideFilter,\n            textFilter = hideFilter;\n\n        if(showMarkers) {\n            markerFilter = (trace.marker.maxdisplayed || trace._needsCull) ? visFilter : Lib.identity;\n        }\n\n        if(showText) {\n            textFilter = (trace.marker.maxdisplayed || trace._needsCull) ? visFilter : Lib.identity;\n        }\n\n        // marker points\n\n        selection = s.selectAll('path.point');\n\n        join = selection.data(markerFilter, keyFunc);\n\n        var enter = join.enter().append('path')\n            .classed('point', true);\n\n        if(hasTransition) {\n            enter\n                .call(Drawing.pointStyle, trace, gd)\n                .call(Drawing.translatePoints, xa, ya)\n                .style('opacity', 0)\n                .transition()\n                .style('opacity', 1);\n        }\n\n        var markerScale = showMarkers && Drawing.tryColorscale(trace.marker, '');\n        var lineScale = showMarkers && Drawing.tryColorscale(trace.marker, 'line');\n\n        join.order();\n\n        join.each(function(d) {\n            var el = d3.select(this);\n            var sel = transition(el);\n            hasNode = Drawing.translatePoint(d, sel, xa, ya);\n\n            if(hasNode) {\n                Drawing.singlePointStyle(d, sel, trace, markerScale, lineScale, gd);\n\n                if(plotinfo.layerClipId) {\n                    Drawing.hideOutsideRangePoint(d, sel, xa, ya, trace.xcalendar, trace.ycalendar);\n                }\n\n                if(trace.customdata) {\n                    el.classed('plotly-customdata', d.data !== null && d.data !== undefined);\n                }\n            } else {\n                sel.remove();\n            }\n        });\n\n        if(hasTransition) {\n            join.exit().transition()\n                .style('opacity', 0)\n                .remove();\n        } else {\n            join.exit().remove();\n        }\n\n        // text points\n        selection = s.selectAll('g');\n        join = selection.data(textFilter, keyFunc);\n\n        // each text needs to go in its own 'g' in case\n        // it gets converted to mathjax\n        join.enter().append('g').classed('textpoint', true).append('text');\n\n        join.order();\n\n        join.each(function(d) {\n            var g = d3.select(this);\n            var sel = transition(g.select('text'));\n            hasNode = Drawing.translatePoint(d, sel, xa, ya);\n\n            if(hasNode) {\n                if(plotinfo.layerClipId) {\n                    Drawing.hideOutsideRangePoint(d, g, xa, ya, trace.xcalendar, trace.ycalendar);\n                }\n            } else {\n                g.remove();\n            }\n        });\n\n        join.selectAll('text')\n            .call(Drawing.textPointStyle, trace, gd)\n            .each(function(d) {\n                // This just *has* to be totally custom becuase of SVG text positioning :(\n                // It's obviously copied from translatePoint; we just can't use that\n                var x = xa.c2p(d.x);\n                var y = ya.c2p(d.y);\n\n                d3.select(this).selectAll('tspan.line').each(function() {\n                    transition(d3.select(this)).attr({x: x, y: y});\n                });\n            });\n\n        join.exit().remove();\n    }\n\n    // NB: selectAll is evaluated on instantiation:\n    var pointSelection = tr.selectAll('.points');\n\n    // Join with new data\n    join = pointSelection.data([cdscatter]);\n\n    // Transition existing, but don't defer this to an async .transition since\n    // there's no timing involved:\n    pointSelection.each(makePoints);\n\n    join.enter().append('g')\n        .classed('points', true)\n        .each(makePoints);\n\n    join.exit().remove();\n\n    // lastly, clip points groups of `cliponaxis !== false` traces\n    // on `plotinfo._hasClipOnAxisFalse === true` subplots\n    join.each(function(d) {\n        var hasClipOnAxisFalse = d[0].trace.cliponaxis === false;\n        Drawing.setClipUrl(d3.select(this), hasClipOnAxisFalse ? null : plotinfo.layerClipId);\n    });\n}\n\nfunction selectMarkers(gd, idx, plotinfo, cdscatter, cdscatterAll) {\n    var xa = plotinfo.xaxis,\n        ya = plotinfo.yaxis,\n        xr = d3.extent(Lib.simpleMap(xa.range, xa.r2c)),\n        yr = d3.extent(Lib.simpleMap(ya.range, ya.r2c));\n\n    var trace = cdscatter[0].trace;\n    if(!subTypes.hasMarkers(trace)) return;\n    // if marker.maxdisplayed is used, select a maximum of\n    // mnum markers to show, from the set that are in the viewport\n    var mnum = trace.marker.maxdisplayed;\n\n    // TODO: remove some as we get away from the viewport?\n    if(mnum === 0) return;\n\n    var cd = cdscatter.filter(function(v) {\n            return v.x >= xr[0] && v.x <= xr[1] && v.y >= yr[0] && v.y <= yr[1];\n        }),\n        inc = Math.ceil(cd.length / mnum),\n        tnum = 0;\n    cdscatterAll.forEach(function(cdj, j) {\n        var tracei = cdj[0].trace;\n        if(subTypes.hasMarkers(tracei) &&\n                tracei.marker.maxdisplayed > 0 && j < idx) {\n            tnum++;\n        }\n    });\n\n    // if multiple traces use maxdisplayed, stagger which markers we\n    // display this formula offsets successive traces by 1/3 of the\n    // increment, adding an extra small amount after each triplet so\n    // it's not quite periodic\n    var i0 = Math.round(tnum * inc / 3 + Math.floor(tnum / 3) * inc / 7.1);\n\n    // for error bars: save in cd which markers to show\n    // so we don't have to repeat this\n    cdscatter.forEach(function(v) { delete v.vis; });\n    cd.forEach(function(v, i) {\n        if(Math.round((i + i0) % inc) === 0) v.vis = true;\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/plot.js\n// module id = 219\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar Lib = require('../../lib');\nvar segmentsIntersect = Lib.segmentsIntersect;\nvar constrain = Lib.constrain;\nvar constants = require('./constants');\n\n\nmodule.exports = function linePoints(d, opts) {\n    var xa = opts.xaxis;\n    var ya = opts.yaxis;\n    var simplify = opts.simplify;\n    var connectGaps = opts.connectGaps;\n    var baseTolerance = opts.baseTolerance;\n    var shape = opts.shape;\n    var linear = shape === 'linear';\n    var segments = [];\n    var minTolerance = constants.minTolerance;\n    var pts = new Array(d.length);\n    var pti = 0;\n\n    var i;\n\n    // pt variables are pixel coordinates [x,y] of one point\n    // these four are the outputs of clustering on a line\n    var clusterStartPt, clusterEndPt, clusterHighPt, clusterLowPt;\n\n    // \"this\" is the next point we're considering adding to the cluster\n    var thisPt;\n\n    // did we encounter the high point first, then a low point, or vice versa?\n    var clusterHighFirst;\n\n    // the first two points in the cluster determine its unit vector\n    // so the second is always in the \"High\" direction\n    var clusterUnitVector;\n\n    // the pixel delta from clusterStartPt\n    var thisVector;\n\n    // val variables are (signed) pixel distances along the cluster vector\n    var clusterRefDist, clusterHighVal, clusterLowVal, thisVal;\n\n    // deviation variables are (signed) pixel distances normal to the cluster vector\n    var clusterMinDeviation, clusterMaxDeviation, thisDeviation;\n\n    if(!simplify) {\n        baseTolerance = minTolerance = -1;\n    }\n\n    // turn one calcdata point into pixel coordinates\n    function getPt(index) {\n        var di = d[index];\n        var x = xa.c2p(di.x);\n        var y = ya.c2p(di.y);\n        if(x === BADNUM || y === BADNUM) return di.intoCenter || false;\n        return [x, y];\n    }\n\n    // if we're off-screen, increase tolerance over baseTolerance\n    function getTolerance(pt) {\n        var xFrac = pt[0] / xa._length;\n        var yFrac = pt[1] / ya._length;\n        return (1 + constants.toleranceGrowth * Math.max(0, -xFrac, xFrac - 1, -yFrac, yFrac - 1)) * baseTolerance;\n    }\n\n    function ptDist(pt1, pt2) {\n        var dx = pt1[0] - pt2[0];\n        var dy = pt1[1] - pt2[1];\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    // last bit of filtering: clip paths that are VERY far off-screen\n    // so we don't get near the browser's hard limit (+/- 2^29 px in Chrome and FF)\n\n    var maxScreensAway = constants.maxScreensAway;\n\n    // find the intersections between the segment from pt1 to pt2\n    // and the large rectangle maxScreensAway around the viewport\n    // if one of pt1 and pt2 is inside and the other outside, there\n    // will be only one intersection.\n    // if both are outside there will be 0 or 2 intersections\n    // (or 1 if it's right at a corner - we'll treat that like 0)\n    // returns an array of intersection pts\n    var xEdge0 = -xa._length * maxScreensAway;\n    var xEdge1 = xa._length * (1 + maxScreensAway);\n    var yEdge0 = -ya._length * maxScreensAway;\n    var yEdge1 = ya._length * (1 + maxScreensAway);\n    var edges = [\n        [xEdge0, yEdge0, xEdge1, yEdge0],\n        [xEdge1, yEdge0, xEdge1, yEdge1],\n        [xEdge1, yEdge1, xEdge0, yEdge1],\n        [xEdge0, yEdge1, xEdge0, yEdge0]\n    ];\n    var xEdge, yEdge, lastXEdge, lastYEdge, lastFarPt, edgePt;\n\n    // for linear line shape, edge intersections should be linearly interpolated\n    // spline uses this too, which isn't precisely correct but is actually pretty\n    // good, because Catmull-Rom weights far-away points less in creating the curvature\n    function getLinearEdgeIntersections(pt1, pt2) {\n        var out = [];\n        var ptCount = 0;\n        for(var i = 0; i < 4; i++) {\n            var edge = edges[i];\n            var ptInt = segmentsIntersect(pt1[0], pt1[1], pt2[0], pt2[1],\n                edge[0], edge[1], edge[2], edge[3]);\n            if(ptInt && (!ptCount ||\n                Math.abs(ptInt.x - out[0][0]) > 1 ||\n                Math.abs(ptInt.y - out[0][1]) > 1\n            )) {\n                ptInt = [ptInt.x, ptInt.y];\n                // if we have 2 intersections, make sure the closest one to pt1 comes first\n                if(ptCount && ptDist(ptInt, pt1) < ptDist(out[0], pt1)) out.unshift(ptInt);\n                else out.push(ptInt);\n                ptCount++;\n            }\n        }\n        return out;\n    }\n\n    function onlyConstrainedPoint(pt) {\n        if(pt[0] < xEdge0 || pt[0] > xEdge1 || pt[1] < yEdge0 || pt[1] > yEdge1) {\n            return [constrain(pt[0], xEdge0, xEdge1), constrain(pt[1], yEdge0, yEdge1)];\n        }\n    }\n\n    function sameEdge(pt1, pt2) {\n        if(pt1[0] === pt2[0] && (pt1[0] === xEdge0 || pt1[0] === xEdge1)) return true;\n        if(pt1[1] === pt2[1] && (pt1[1] === yEdge0 || pt1[1] === yEdge1)) return true;\n    }\n\n    // for line shapes hv and vh, movement in the two dimensions is decoupled,\n    // so all we need to do is constrain each dimension independently\n    function getHVEdgeIntersections(pt1, pt2) {\n        var out = [];\n        var ptInt1 = onlyConstrainedPoint(pt1);\n        var ptInt2 = onlyConstrainedPoint(pt2);\n        if(ptInt1 && ptInt2 && sameEdge(ptInt1, ptInt2)) return out;\n\n        if(ptInt1) out.push(ptInt1);\n        if(ptInt2) out.push(ptInt2);\n        return out;\n    }\n\n    // hvh and vhv we sometimes have to move one of the intersection points\n    // out BEYOND the clipping rect, by a maximum of a factor of 2, so that\n    // the midpoint line is drawn in the right place\n    function getABAEdgeIntersections(dim, limit0, limit1) {\n        return function(pt1, pt2) {\n            var ptInt1 = onlyConstrainedPoint(pt1);\n            var ptInt2 = onlyConstrainedPoint(pt2);\n\n            var out = [];\n            if(ptInt1 && ptInt2 && sameEdge(ptInt1, ptInt2)) return out;\n\n            if(ptInt1) out.push(ptInt1);\n            if(ptInt2) out.push(ptInt2);\n\n            var midShift = 2 * Lib.constrain((pt1[dim] + pt2[dim]) / 2, limit0, limit1) -\n                ((ptInt1 || pt1)[dim] + (ptInt2 || pt2)[dim]);\n            if(midShift) {\n                var ptToAlter;\n                if(ptInt1 && ptInt2) {\n                    ptToAlter = (midShift > 0 === ptInt1[dim] > ptInt2[dim]) ? ptInt1 : ptInt2;\n                }\n                else ptToAlter = ptInt1 || ptInt2;\n\n                ptToAlter[dim] += midShift;\n            }\n\n            return out;\n        };\n    }\n\n    var getEdgeIntersections;\n    if(shape === 'linear' || shape === 'spline') {\n        getEdgeIntersections = getLinearEdgeIntersections;\n    }\n    else if(shape === 'hv' || shape === 'vh') {\n        getEdgeIntersections = getHVEdgeIntersections;\n    }\n    else if(shape === 'hvh') getEdgeIntersections = getABAEdgeIntersections(0, xEdge0, xEdge1);\n    else if(shape === 'vhv') getEdgeIntersections = getABAEdgeIntersections(1, yEdge0, yEdge1);\n\n    // a segment pt1->pt2 entirely outside the nearby region:\n    // find the corner it gets closest to touching\n    function getClosestCorner(pt1, pt2) {\n        var dx = pt2[0] - pt1[0];\n        var m = (pt2[1] - pt1[1]) / dx;\n        var b = (pt1[1] * pt2[0] - pt2[1] * pt1[0]) / dx;\n\n        if(b > 0) return [m > 0 ? xEdge0 : xEdge1, yEdge1];\n        else return [m > 0 ? xEdge1 : xEdge0, yEdge0];\n    }\n\n    function updateEdge(pt) {\n        var x = pt[0];\n        var y = pt[1];\n        var xSame = x === pts[pti - 1][0];\n        var ySame = y === pts[pti - 1][1];\n        // duplicate point?\n        if(xSame && ySame) return;\n        if(pti > 1) {\n            // backtracking along an edge?\n            var xSame2 = x === pts[pti - 2][0];\n            var ySame2 = y === pts[pti - 2][1];\n            if(xSame && (x === xEdge0 || x === xEdge1) && xSame2) {\n                if(ySame2) pti--; // backtracking exactly - drop prev pt and don't add\n                else pts[pti - 1] = pt; // not exact: replace the prev pt\n            }\n            else if(ySame && (y === yEdge0 || y === yEdge1) && ySame2) {\n                if(xSame2) pti--;\n                else pts[pti - 1] = pt;\n            }\n            else pts[pti++] = pt;\n        }\n        else pts[pti++] = pt;\n    }\n\n    function updateEdgesForReentry(pt) {\n        // if we're outside the nearby region and going back in,\n        // we may need to loop around a corner point\n        if(pts[pti - 1][0] !== pt[0] && pts[pti - 1][1] !== pt[1]) {\n            updateEdge([lastXEdge, lastYEdge]);\n        }\n        updateEdge(pt);\n        lastFarPt = null;\n        lastXEdge = lastYEdge = 0;\n    }\n\n    function addPt(pt) {\n        // Are we more than maxScreensAway off-screen any direction?\n        // if so, clip to this box, but in such a way that on-screen\n        // drawing is unchanged\n        xEdge = (pt[0] < xEdge0) ? xEdge0 : (pt[0] > xEdge1) ? xEdge1 : 0;\n        yEdge = (pt[1] < yEdge0) ? yEdge0 : (pt[1] > yEdge1) ? yEdge1 : 0;\n        if(xEdge || yEdge) {\n            // to get fills right - if first point is far, push it toward the\n            // screen in whichever direction(s) are far\n            if(!pti) {\n                pts[pti++] = [xEdge || pt[0], yEdge || pt[1]];\n            }\n            else if(lastFarPt) {\n                // both this point and the last are outside the nearby region\n                // check if we're crossing the nearby region\n                var intersections = getEdgeIntersections(lastFarPt, pt);\n                if(intersections.length > 1) {\n                    updateEdgesForReentry(intersections[0]);\n                    pts[pti++] = intersections[1];\n                }\n            }\n            // we're leaving the nearby region - add the point where we left it\n            else {\n                edgePt = getEdgeIntersections(pts[pti - 1], pt)[0];\n                pts[pti++] = edgePt;\n            }\n\n            var lastPt = pts[pti - 1];\n            if(xEdge && yEdge && (lastPt[0] !== xEdge || lastPt[1] !== yEdge)) {\n                // we've gone out beyond a new corner: add the corner too\n                // so that the next point will take the right winding\n                if(lastFarPt) {\n                    if(lastXEdge !== xEdge && lastYEdge !== yEdge) {\n                        if(lastXEdge && lastYEdge) {\n                            // we've gone around to an opposite corner - we\n                            // need to add the correct extra corner\n                            // in order to get the right winding\n                            updateEdge(getClosestCorner(lastFarPt, pt));\n                        }\n                        else {\n                            // we're coming from a far edge - the extra corner\n                            // we need is determined uniquely by the sectors\n                            updateEdge([lastXEdge || xEdge, lastYEdge || yEdge]);\n                        }\n                    }\n                    else if(lastXEdge && lastYEdge) {\n                        updateEdge([lastXEdge, lastYEdge]);\n                    }\n                }\n                updateEdge([xEdge, yEdge]);\n            }\n            else if((lastXEdge - xEdge) && (lastYEdge - yEdge)) {\n                // we're coming from an edge or far corner to an edge - again the\n                // extra corner we need is uniquely determined by the sectors\n                updateEdge([xEdge || lastXEdge, yEdge || lastYEdge]);\n            }\n            lastFarPt = pt;\n            lastXEdge = xEdge;\n            lastYEdge = yEdge;\n        }\n        else {\n            if(lastFarPt) {\n                // this point is in range but the previous wasn't: add its entry pt first\n                updateEdgesForReentry(getEdgeIntersections(lastFarPt, pt)[0]);\n            }\n\n            pts[pti++] = pt;\n        }\n    }\n\n    // loop over ALL points in this trace\n    for(i = 0; i < d.length; i++) {\n        clusterStartPt = getPt(i);\n        if(!clusterStartPt) continue;\n\n        pti = 0;\n        lastFarPt = null;\n        addPt(clusterStartPt);\n\n        // loop over one segment of the trace\n        for(i++; i < d.length; i++) {\n            clusterHighPt = getPt(i);\n            if(!clusterHighPt) {\n                if(connectGaps) continue;\n                else break;\n            }\n\n            // can't decimate if nonlinear line shape\n            // TODO: we *could* decimate [hv]{2,3} shapes if we restricted clusters to horz or vert again\n            // but spline would be verrry awkward to decimate\n            if(!linear) {\n                addPt(clusterHighPt);\n                continue;\n            }\n\n            clusterRefDist = ptDist(clusterHighPt, clusterStartPt);\n\n            if(clusterRefDist < getTolerance(clusterHighPt) * minTolerance) continue;\n\n            clusterUnitVector = [\n                (clusterHighPt[0] - clusterStartPt[0]) / clusterRefDist,\n                (clusterHighPt[1] - clusterStartPt[1]) / clusterRefDist\n            ];\n\n            clusterLowPt = clusterStartPt;\n            clusterHighVal = clusterRefDist;\n            clusterLowVal = clusterMinDeviation = clusterMaxDeviation = 0;\n            clusterHighFirst = false;\n            clusterEndPt = clusterHighPt;\n\n            // loop over one cluster of points that collapse onto one line\n            for(i++; i < d.length; i++) {\n                thisPt = getPt(i);\n                if(!thisPt) {\n                    if(connectGaps) continue;\n                    else break;\n                }\n                thisVector = [\n                    thisPt[0] - clusterStartPt[0],\n                    thisPt[1] - clusterStartPt[1]\n                ];\n                // cross product (or dot with normal to the cluster vector)\n                thisDeviation = thisVector[0] * clusterUnitVector[1] - thisVector[1] * clusterUnitVector[0];\n                clusterMinDeviation = Math.min(clusterMinDeviation, thisDeviation);\n                clusterMaxDeviation = Math.max(clusterMaxDeviation, thisDeviation);\n\n                if(clusterMaxDeviation - clusterMinDeviation > getTolerance(thisPt)) break;\n\n                clusterEndPt = thisPt;\n                thisVal = thisVector[0] * clusterUnitVector[0] + thisVector[1] * clusterUnitVector[1];\n\n                if(thisVal > clusterHighVal) {\n                    clusterHighVal = thisVal;\n                    clusterHighPt = thisPt;\n                    clusterHighFirst = false;\n                } else if(thisVal < clusterLowVal) {\n                    clusterLowVal = thisVal;\n                    clusterLowPt = thisPt;\n                    clusterHighFirst = true;\n                }\n            }\n\n            // insert this cluster into pts\n            // we've already inserted the start pt, now check if we have high and low pts\n            if(clusterHighFirst) {\n                addPt(clusterHighPt);\n                if(clusterEndPt !== clusterLowPt) addPt(clusterLowPt);\n            } else {\n                if(clusterLowPt !== clusterStartPt) addPt(clusterLowPt);\n                if(clusterEndPt !== clusterHighPt) addPt(clusterHighPt);\n            }\n            // and finally insert the end pt\n            addPt(clusterEndPt);\n\n            // have we reached the end of this segment?\n            if(i >= d.length || !thisPt) break;\n\n            // otherwise we have an out-of-cluster point to insert as next clusterStartPt\n            addPt(thisPt);\n            clusterStartPt = thisPt;\n        }\n\n        // to get fills right - repeat what we did at the start\n        if(lastFarPt) updateEdge([lastXEdge || lastFarPt[0], lastYEdge || lastFarPt[1]]);\n\n        segments.push(pts.slice(0, pti));\n    }\n\n    return segments;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/line_points.js\n// module id = 220\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = function linkTraces(gd, plotinfo, cdscatter) {\n    var trace, i;\n    var prevtrace = null;\n\n    for(i = 0; i < cdscatter.length; ++i) {\n        trace = cdscatter[i][0].trace;\n\n        // Note: The check which ensures all cdscatter here are for the same axis and\n        // are either cartesian or scatterternary has been removed. This code assumes\n        // the passed scattertraces have been filtered to the proper plot types and\n        // the proper subplots.\n        if(trace.visible === true) {\n            trace._nexttrace = null;\n\n            if(['tonextx', 'tonexty', 'tonext'].indexOf(trace.fill) !== -1) {\n                trace._prevtrace = prevtrace;\n\n                if(prevtrace) {\n                    prevtrace._nexttrace = trace;\n                }\n            }\n\n            prevtrace = trace;\n        } else {\n            trace._prevtrace = trace._nexttrace = null;\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/link_traces.js\n// module id = 221\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar tinycolor = require('tinycolor2');\n\nvar Plotly = require('../../plotly');\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar Axes = require('../../plots/cartesian/axes');\nvar dragElement = require('../dragelement');\nvar Lib = require('../../lib');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar setCursor = require('../../lib/setcursor');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar Titles = require('../titles');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar LINE_SPACING = require('../../constants/alignment').LINE_SPACING;\n\nvar handleAxisDefaults = require('../../plots/cartesian/axis_defaults');\nvar handleAxisPositionDefaults = require('../../plots/cartesian/position_defaults');\nvar axisLayoutAttrs = require('../../plots/cartesian/layout_attributes');\n\nvar attributes = require('./attributes');\nvar cn = require('./constants').cn;\n\nmodule.exports = function draw(gd, id) {\n    // opts: options object, containing everything from attributes\n    // plus a few others that are the equivalent of the colorbar \"data\"\n    var opts = {};\n    Object.keys(attributes).forEach(function(k) {\n        opts[k] = null;\n    });\n    // fillcolor can be a d3 scale, domain is z values, range is colors\n    // or leave it out for no fill,\n    // or set to a string constant for single-color fill\n    opts.fillcolor = null;\n    // line.color has the same options as fillcolor\n    opts.line = {color: null, width: null, dash: null};\n    // levels of lines to draw.\n    // note that this DOES NOT determine the extent of the bar\n    // that's given by the domain of fillcolor\n    // (or line.color if no fillcolor domain)\n    opts.levels = {start: null, end: null, size: null};\n    // separate fill levels (for example, heatmap coloring of a\n    // contour map) if this is omitted, fillcolors will be\n    // evaluated halfway between levels\n    opts.filllevels = null;\n\n    function component() {\n        var fullLayout = gd._fullLayout,\n            gs = fullLayout._size;\n        if((typeof opts.fillcolor !== 'function') &&\n                (typeof opts.line.color !== 'function')) {\n            fullLayout._infolayer.selectAll('g.' + id).remove();\n            return;\n        }\n        var zrange = d3.extent(((typeof opts.fillcolor === 'function') ?\n            opts.fillcolor : opts.line.color).domain());\n        var linelevels = [];\n        var filllevels = [];\n        var linecolormap = typeof opts.line.color === 'function' ?\n            opts.line.color : function() { return opts.line.color; };\n        var fillcolormap = typeof opts.fillcolor === 'function' ?\n            opts.fillcolor : function() { return opts.fillcolor; };\n        var l;\n        var i;\n\n        var l0 = opts.levels.end + opts.levels.size / 100,\n            ls = opts.levels.size,\n            zr0 = (1.001 * zrange[0] - 0.001 * zrange[1]),\n            zr1 = (1.001 * zrange[1] - 0.001 * zrange[0]);\n        for(i = 0; i < 1e5; i++) {\n            l = opts.levels.start + i * ls;\n            if(ls > 0 ? (l >= l0) : (l <= l0)) break;\n            if(l > zr0 && l < zr1) linelevels.push(l);\n        }\n\n        if(typeof opts.fillcolor === 'function') {\n            if(opts.filllevels) {\n                l0 = opts.filllevels.end + opts.filllevels.size / 100;\n                ls = opts.filllevels.size;\n                for(i = 0; i < 1e5; i++) {\n                    l = opts.filllevels.start + i * ls;\n                    if(ls > 0 ? (l >= l0) : (l <= l0)) break;\n                    if(l > zrange[0] && l < zrange[1]) filllevels.push(l);\n                }\n            }\n            else {\n                filllevels = linelevels.map(function(v) {\n                    return v - opts.levels.size / 2;\n                });\n                filllevels.push(filllevels[filllevels.length - 1] +\n                    opts.levels.size);\n            }\n        }\n        else if(opts.fillcolor && typeof opts.fillcolor === 'string') {\n            // doesn't matter what this value is, with a single value\n            // we'll make a single fill rect covering the whole bar\n            filllevels = [0];\n        }\n\n        if(opts.levels.size < 0) {\n            linelevels.reverse();\n            filllevels.reverse();\n        }\n\n        // now make a Plotly Axes object to scale with and draw ticks\n        // TODO: does not support orientation other than right\n\n        // we calculate pixel sizes based on the specified graph size,\n        // not the actual (in case something pushed the margins around)\n        // which is a little odd but avoids an odd iterative effect\n        // when the colorbar itself is pushing the margins.\n        // but then the fractional size is calculated based on the\n        // actual graph size, so that the axes will size correctly.\n        var originalPlotHeight = fullLayout.height - fullLayout.margin.t - fullLayout.margin.b,\n            originalPlotWidth = fullLayout.width - fullLayout.margin.l - fullLayout.margin.r,\n            thickPx = Math.round(opts.thickness *\n                (opts.thicknessmode === 'fraction' ? originalPlotWidth : 1)),\n            thickFrac = thickPx / gs.w,\n            lenPx = Math.round(opts.len *\n                (opts.lenmode === 'fraction' ? originalPlotHeight : 1)),\n            lenFrac = lenPx / gs.h,\n            xpadFrac = opts.xpad / gs.w,\n            yExtraPx = (opts.borderwidth + opts.outlinewidth) / 2,\n            ypadFrac = opts.ypad / gs.h,\n\n            // x positioning: do it initially just for left anchor,\n            // then fix at the end (since we don't know the width yet)\n            xLeft = Math.round(opts.x * gs.w + opts.xpad),\n            // for dragging... this is getting a little muddled...\n            xLeftFrac = opts.x - thickFrac *\n                ({middle: 0.5, right: 1}[opts.xanchor]||0),\n\n            // y positioning we can do correctly from the start\n            yBottomFrac = opts.y + lenFrac *\n                (({top: -0.5, bottom: 0.5}[opts.yanchor] || 0) - 0.5),\n            yBottomPx = Math.round(gs.h * (1 - yBottomFrac)),\n            yTopPx = yBottomPx - lenPx,\n            titleEl,\n            cbAxisIn = {\n                type: 'linear',\n                range: zrange,\n                tickmode: opts.tickmode,\n                nticks: opts.nticks,\n                tick0: opts.tick0,\n                dtick: opts.dtick,\n                tickvals: opts.tickvals,\n                ticktext: opts.ticktext,\n                ticks: opts.ticks,\n                ticklen: opts.ticklen,\n                tickwidth: opts.tickwidth,\n                tickcolor: opts.tickcolor,\n                showticklabels: opts.showticklabels,\n                tickfont: opts.tickfont,\n                tickangle: opts.tickangle,\n                tickformat: opts.tickformat,\n                exponentformat: opts.exponentformat,\n                separatethousands: opts.separatethousands,\n                showexponent: opts.showexponent,\n                showtickprefix: opts.showtickprefix,\n                tickprefix: opts.tickprefix,\n                showticksuffix: opts.showticksuffix,\n                ticksuffix: opts.ticksuffix,\n                title: opts.title,\n                titlefont: opts.titlefont,\n                showline: true,\n                anchor: 'free',\n                position: 1\n            },\n            cbAxisOut = {\n                type: 'linear',\n                _id: 'y' + id\n            },\n            axisOptions = {\n                letter: 'y',\n                font: fullLayout.font,\n                noHover: true,\n                calendar: fullLayout.calendar  // not really necessary (yet?)\n            };\n\n        // Coerce w.r.t. Axes layoutAttributes:\n        // re-use axes.js logic without updating _fullData\n        function coerce(attr, dflt) {\n            return Lib.coerce(cbAxisIn, cbAxisOut, axisLayoutAttrs, attr, dflt);\n        }\n\n        // Prepare the Plotly axis object\n        handleAxisDefaults(cbAxisIn, cbAxisOut, coerce, axisOptions, fullLayout);\n        handleAxisPositionDefaults(cbAxisIn, cbAxisOut, coerce, axisOptions);\n\n        // position can't go in through supplyDefaults\n        // because that restricts it to [0,1]\n        cbAxisOut.position = opts.x + xpadFrac + thickFrac;\n\n        // save for other callers to access this axis\n        component.axis = cbAxisOut;\n\n        if(['top', 'bottom'].indexOf(opts.titleside) !== -1) {\n            cbAxisOut.titleside = opts.titleside;\n            cbAxisOut.titlex = opts.x + xpadFrac;\n            cbAxisOut.titley = yBottomFrac +\n                (opts.titleside === 'top' ? lenFrac - ypadFrac : ypadFrac);\n        }\n\n        if(opts.line.color && opts.tickmode === 'auto') {\n            cbAxisOut.tickmode = 'linear';\n            cbAxisOut.tick0 = opts.levels.start;\n            var dtick = opts.levels.size;\n            // expand if too many contours, so we don't get too many ticks\n            var autoNtick = Lib.constrain(\n                    (yBottomPx - yTopPx) / 50, 4, 15) + 1,\n                dtFactor = (zrange[1] - zrange[0]) /\n                    ((opts.nticks || autoNtick) * dtick);\n            if(dtFactor > 1) {\n                var dtexp = Math.pow(10, Math.floor(\n                    Math.log(dtFactor) / Math.LN10));\n                dtick *= dtexp * Lib.roundUp(dtFactor / dtexp, [2, 5, 10]);\n                // if the contours are at round multiples, reset tick0\n                // so they're still at round multiples. Otherwise,\n                // keep the first label on the first contour level\n                if((Math.abs(opts.levels.start) /\n                        opts.levels.size + 1e-6) % 1 < 2e-6) {\n                    cbAxisOut.tick0 = 0;\n                }\n            }\n            cbAxisOut.dtick = dtick;\n        }\n\n        // set domain after init, because we may want to\n        // allow it outside [0,1]\n        cbAxisOut.domain = [\n            yBottomFrac + ypadFrac,\n            yBottomFrac + lenFrac - ypadFrac\n        ];\n        cbAxisOut.setScale();\n\n        // now draw the elements\n        var container = fullLayout._infolayer.selectAll('g.' + id).data([0]);\n        container.enter().append('g').classed(id, true)\n            .classed(cn.colorbar, true)\n            .each(function() {\n                var s = d3.select(this);\n                s.append('rect').classed(cn.cbbg, true);\n                s.append('g').classed(cn.cbfills, true);\n                s.append('g').classed(cn.cblines, true);\n                s.append('g').classed(cn.cbaxis, true).classed(cn.crisp, true);\n                s.append('g').classed(cn.cbtitleunshift, true)\n                    .append('g').classed(cn.cbtitle, true);\n                s.append('rect').classed(cn.cboutline, true);\n                s.select('.cbtitle').datum(0);\n            });\n        container.attr('transform', 'translate(' + Math.round(gs.l) +\n            ',' + Math.round(gs.t) + ')');\n        // TODO: this opposite transform is a hack until we make it\n        // more rational which items get this offset\n        var titleCont = container.select('.cbtitleunshift')\n            .attr('transform', 'translate(-' +\n                Math.round(gs.l) + ',-' +\n                Math.round(gs.t) + ')');\n\n        cbAxisOut._axislayer = container.select('.cbaxis');\n        var titleHeight = 0;\n        if(['top', 'bottom'].indexOf(opts.titleside) !== -1) {\n            // draw the title so we know how much room it needs\n            // when we squish the axis. This one only applies to\n            // top or bottom titles, not right side.\n            var x = gs.l + (opts.x + xpadFrac) * gs.w,\n                fontSize = cbAxisOut.titlefont.size,\n                y;\n\n            if(opts.titleside === 'top') {\n                y = (1 - (yBottomFrac + lenFrac - ypadFrac)) * gs.h +\n                    gs.t + 3 + fontSize * 0.75;\n            }\n            else {\n                y = (1 - (yBottomFrac + ypadFrac)) * gs.h +\n                    gs.t - 3 - fontSize * 0.25;\n            }\n            drawTitle(cbAxisOut._id + 'title', {\n                attributes: {x: x, y: y, 'text-anchor': 'start'}\n            });\n        }\n\n        function drawAxis() {\n            if(['top', 'bottom'].indexOf(opts.titleside) !== -1) {\n                // squish the axis top to make room for the title\n                var titleGroup = container.select('.cbtitle'),\n                    titleText = titleGroup.select('text'),\n                    titleTrans =\n                        [-opts.outlinewidth / 2, opts.outlinewidth / 2],\n                    mathJaxNode = titleGroup\n                        .select('.h' + cbAxisOut._id + 'title-math-group')\n                        .node(),\n                    lineSize = 15.6;\n                if(titleText.node()) {\n                    lineSize =\n                        parseInt(titleText.node().style.fontSize, 10) * LINE_SPACING;\n                }\n                if(mathJaxNode) {\n                    titleHeight = Drawing.bBox(mathJaxNode).height;\n                    if(titleHeight > lineSize) {\n                        // not entirely sure how mathjax is doing\n                        // vertical alignment, but this seems to work.\n                        titleTrans[1] -= (titleHeight - lineSize) / 2;\n                    }\n                }\n                else if(titleText.node() &&\n                        !titleText.classed(cn.jsPlaceholder)) {\n                    titleHeight = Drawing.bBox(titleText.node()).height;\n                }\n                if(titleHeight) {\n                    // buffer btwn colorbar and title\n                    // TODO: configurable\n                    titleHeight += 5;\n\n                    if(opts.titleside === 'top') {\n                        cbAxisOut.domain[1] -= titleHeight / gs.h;\n                        titleTrans[1] *= -1;\n                    }\n                    else {\n                        cbAxisOut.domain[0] += titleHeight / gs.h;\n                        var nlines = svgTextUtils.lineCount(titleText);\n                        titleTrans[1] += (1 - nlines) * lineSize;\n                    }\n\n                    titleGroup.attr('transform',\n                        'translate(' + titleTrans + ')');\n\n                    cbAxisOut.setScale();\n                }\n            }\n\n            container.selectAll('.cbfills,.cblines')\n                .attr('transform', 'translate(0,' +\n                    Math.round(gs.h * (1 - cbAxisOut.domain[1])) + ')');\n\n            cbAxisOut._axislayer.attr('transform', 'translate(0,' +\n                Math.round(-gs.t) + ')');\n\n            var fills = container.select('.cbfills')\n                .selectAll('rect.cbfill')\n                    .data(filllevels);\n            fills.enter().append('rect')\n                .classed(cn.cbfill, true)\n                .style('stroke', 'none');\n            fills.exit().remove();\n            fills.each(function(d, i) {\n                var z = [\n                    (i === 0) ? zrange[0] :\n                        (filllevels[i] + filllevels[i - 1]) / 2,\n                    (i === filllevels.length - 1) ? zrange[1] :\n                        (filllevels[i] + filllevels[i + 1]) / 2\n                ]\n                .map(cbAxisOut.c2p)\n                .map(Math.round);\n\n                // offset the side adjoining the next rectangle so they\n                // overlap, to prevent antialiasing gaps\n                if(i !== filllevels.length - 1) {\n                    z[1] += (z[1] > z[0]) ? 1 : -1;\n                }\n\n\n                // Tinycolor can't handle exponents and\n                // at this scale, removing it makes no difference.\n                var colorString = fillcolormap(d).replace('e-', ''),\n                    opaqueColor = tinycolor(colorString).toHexString();\n\n                // Colorbar cannot currently support opacities so we\n                // use an opaque fill even when alpha channels present\n                d3.select(this).attr({\n                    x: xLeft,\n                    width: Math.max(thickPx, 2),\n                    y: d3.min(z),\n                    height: Math.max(d3.max(z) - d3.min(z), 2),\n                    fill: opaqueColor\n                });\n            });\n\n            var lines = container.select('.cblines')\n                .selectAll('path.cbline')\n                    .data(opts.line.color && opts.line.width ?\n                        linelevels : []);\n            lines.enter().append('path')\n                .classed(cn.cbline, true);\n            lines.exit().remove();\n            lines.each(function(d) {\n                d3.select(this)\n                    .attr('d', 'M' + xLeft + ',' +\n                        (Math.round(cbAxisOut.c2p(d)) + (opts.line.width / 2) % 1) +\n                        'h' + thickPx)\n                    .call(Drawing.lineGroupStyle,\n                        opts.line.width, linecolormap(d), opts.line.dash);\n            });\n\n            // force full redraw of labels and ticks\n            cbAxisOut._axislayer.selectAll('g.' + cbAxisOut._id + 'tick,path')\n                .remove();\n\n            cbAxisOut._pos = xLeft + thickPx +\n                (opts.outlinewidth||0) / 2 - (opts.ticks === 'outside' ? 1 : 0);\n            cbAxisOut.side = 'right';\n\n            // separate out axis and title drawing,\n            // so we don't need such complicated logic in Titles.draw\n            // if title is on the top or bottom, we've already drawn it\n            // this title call only handles side=right\n            return Lib.syncOrAsync([\n                function() {\n                    return Axes.doTicks(gd, cbAxisOut, true);\n                },\n                function() {\n                    if(['top', 'bottom'].indexOf(opts.titleside) === -1) {\n                        var fontSize = cbAxisOut.titlefont.size,\n                            y = cbAxisOut._offset + cbAxisOut._length / 2,\n                            x = gs.l + (cbAxisOut.position || 0) * gs.w + ((cbAxisOut.side === 'right') ?\n                                10 + fontSize * ((cbAxisOut.showticklabels ? 1 : 0.5)) :\n                                -10 - fontSize * ((cbAxisOut.showticklabels ? 0.5 : 0)));\n\n                        // the 'h' + is a hack to get around the fact that\n                        // convertToTspans rotates any 'y...' class by 90 degrees.\n                        // TODO: find a better way to control this.\n                        drawTitle('h' + cbAxisOut._id + 'title', {\n                            avoid: {\n                                selection: d3.select(gd).selectAll('g.' + cbAxisOut._id + 'tick'),\n                                side: opts.titleside,\n                                offsetLeft: gs.l,\n                                offsetTop: 0,\n                                maxShift: fullLayout.width\n                            },\n                            attributes: {x: x, y: y, 'text-anchor': 'middle'},\n                            transform: {rotate: '-90', offset: 0}\n                        });\n                    }\n                }]);\n        }\n\n        function drawTitle(titleClass, titleOpts) {\n            var trace = getTrace(),\n                propName;\n            if(Registry.traceIs(trace, 'markerColorscale')) {\n                propName = 'marker.colorbar.title';\n            }\n            else propName = 'colorbar.title';\n\n            var dfltTitleOpts = {\n                propContainer: cbAxisOut,\n                propName: propName,\n                traceIndex: trace.index,\n                placeholder: fullLayout._dfltTitle.colorbar,\n                containerGroup: container.select('.cbtitle')\n            };\n\n            // this class-to-rotate thing with convertToTspans is\n            // getting hackier and hackier... delete groups with the\n            // wrong class (in case earlier the colorbar was drawn on\n            // a different side, I think?)\n            var otherClass = titleClass.charAt(0) === 'h' ?\n                titleClass.substr(1) : ('h' + titleClass);\n            container.selectAll('.' + otherClass + ',.' + otherClass + '-math-group')\n                .remove();\n\n            Titles.draw(gd, titleClass,\n                extendFlat(dfltTitleOpts, titleOpts || {}));\n        }\n\n        function positionCB() {\n            // wait for the axis & title to finish rendering before\n            // continuing positioning\n            // TODO: why are we redrawing multiple times now with this?\n            // I guess autoMargin doesn't like being post-promise?\n            var innerWidth = thickPx + opts.outlinewidth / 2 +\n                    Drawing.bBox(cbAxisOut._axislayer.node()).width;\n            titleEl = titleCont.select('text');\n            if(titleEl.node() && !titleEl.classed(cn.jsPlaceholder)) {\n                var mathJaxNode = titleCont\n                        .select('.h' + cbAxisOut._id + 'title-math-group')\n                        .node(),\n                    titleWidth;\n                if(mathJaxNode &&\n                        ['top', 'bottom'].indexOf(opts.titleside) !== -1) {\n                    titleWidth = Drawing.bBox(mathJaxNode).width;\n                }\n                else {\n                    // note: the formula below works for all titlesides,\n                    // (except for top/bottom mathjax, above)\n                    // but the weird gs.l is because the titleunshift\n                    // transform gets removed by Drawing.bBox\n                    titleWidth =\n                        Drawing.bBox(titleCont.node()).right -\n                        xLeft - gs.l;\n                }\n                innerWidth = Math.max(innerWidth, titleWidth);\n            }\n\n            var outerwidth = 2 * opts.xpad + innerWidth +\n                    opts.borderwidth + opts.outlinewidth / 2,\n                outerheight = yBottomPx - yTopPx;\n\n            container.select('.cbbg').attr({\n                x: xLeft - opts.xpad -\n                    (opts.borderwidth + opts.outlinewidth) / 2,\n                y: yTopPx - yExtraPx,\n                width: Math.max(outerwidth, 2),\n                height: Math.max(outerheight + 2 * yExtraPx, 2)\n            })\n            .call(Color.fill, opts.bgcolor)\n            .call(Color.stroke, opts.bordercolor)\n            .style({'stroke-width': opts.borderwidth});\n\n            container.selectAll('.cboutline').attr({\n                x: xLeft,\n                y: yTopPx + opts.ypad +\n                    (opts.titleside === 'top' ? titleHeight : 0),\n                width: Math.max(thickPx, 2),\n                height: Math.max(outerheight - 2 * opts.ypad - titleHeight, 2)\n            })\n            .call(Color.stroke, opts.outlinecolor)\n            .style({\n                fill: 'None',\n                'stroke-width': opts.outlinewidth\n            });\n\n            // fix positioning for xanchor!='left'\n            var xoffset = ({center: 0.5, right: 1}[opts.xanchor] || 0) *\n                outerwidth;\n            container.attr('transform',\n                'translate(' + (gs.l - xoffset) + ',' + gs.t + ')');\n\n            // auto margin adjustment\n            Plots.autoMargin(gd, id, {\n                x: opts.x,\n                y: opts.y,\n                l: outerwidth * ({right: 1, center: 0.5}[opts.xanchor] || 0),\n                r: outerwidth * ({left: 1, center: 0.5}[opts.xanchor] || 0),\n                t: outerheight * ({bottom: 1, middle: 0.5}[opts.yanchor] || 0),\n                b: outerheight * ({top: 1, middle: 0.5}[opts.yanchor] || 0)\n            });\n        }\n\n        var cbDone = Lib.syncOrAsync([\n            Plots.previousPromises,\n            drawAxis,\n            Plots.previousPromises,\n            positionCB\n        ], gd);\n\n        if(cbDone && cbDone.then) (gd._promises || []).push(cbDone);\n\n        // dragging...\n        if(gd._context.edits.colorbarPosition) {\n            var t0,\n                xf,\n                yf;\n\n            dragElement.init({\n                element: container.node(),\n                gd: gd,\n                prepFn: function() {\n                    t0 = container.attr('transform');\n                    setCursor(container);\n                },\n                moveFn: function(dx, dy) {\n                    container.attr('transform',\n                        t0 + ' ' + 'translate(' + dx + ',' + dy + ')');\n\n                    xf = dragElement.align(xLeftFrac + (dx / gs.w), thickFrac,\n                        0, 1, opts.xanchor);\n                    yf = dragElement.align(yBottomFrac - (dy / gs.h), lenFrac,\n                        0, 1, opts.yanchor);\n\n                    var csr = dragElement.getCursor(xf, yf,\n                        opts.xanchor, opts.yanchor);\n                    setCursor(container, csr);\n                },\n                doneFn: function() {\n                    setCursor(container);\n\n                    if(xf !== undefined && yf !== undefined) {\n                        Plotly.restyle(gd,\n                            {'colorbar.x': xf, 'colorbar.y': yf},\n                            getTrace().index);\n                    }\n                }\n            });\n        }\n        return cbDone;\n    }\n\n    function getTrace() {\n        var idNum = id.substr(2),\n            i,\n            trace;\n        for(i = 0; i < gd._fullData.length; i++) {\n            trace = gd._fullData[i];\n            if(trace.uid === idNum) return trace;\n        }\n    }\n\n    // setter/getters for every item defined in opts\n    Object.keys(opts).forEach(function(name) {\n        component[name] = function(v) {\n            // getter\n            if(!arguments.length) return opts[name];\n\n            // setter - for multi-part properties,\n            // set only the parts that are provided\n            opts[name] = Lib.isPlainObject(opts[name]) ?\n                 Lib.extendFlat(opts[name], v) :\n                 v;\n\n            return component;\n        };\n    });\n\n    // or use .options to set multiple options at once via a dictionary\n    component.options = function(o) {\n        Object.keys(o).forEach(function(name) {\n            // in case something random comes through\n            // that's not an option, ignore it\n            if(typeof component[name] === 'function') {\n                component[name](o[name]);\n            }\n        });\n        return component;\n    };\n\n    component._opts = opts;\n\n    return component;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorbar/draw.js\n// module id = 222\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n\nmodule.exports = function handleCategoryOrderDefaults(containerIn, containerOut, coerce) {\n    if(containerOut.type !== 'category') return;\n\n    var arrayIn = containerIn.categoryarray,\n        orderDefault;\n\n    var isValidArray = (Array.isArray(arrayIn) && arrayIn.length > 0);\n\n    // override default 'categoryorder' value when non-empty array is supplied\n    if(isValidArray) orderDefault = 'array';\n\n    var order = coerce('categoryorder', orderDefault);\n\n    // coerce 'categoryarray' only in array order case\n    if(order === 'array') coerce('categoryarray');\n\n    // cannot set 'categoryorder' to 'array' with an invalid 'categoryarray'\n    if(!isValidArray && order === 'array') {\n        containerOut.categoryorder = 'trace';\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/category_order_defaults.js\n// module id = 223\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorMix = require('tinycolor2').mix;\nvar lightFraction = require('../../components/color/attributes').lightFraction;\nvar Lib = require('../../lib');\n\n/**\n * @param {object} opts :\n *   - dfltColor {string} : default axis color\n *   - bgColor {string} : combined subplot bg color\n *   - blend {number, optional} : blend percentage (to compute dflt grid color)\n *   - showLine {boolean} : show line by default\n *   - showGrid {boolean} : show grid by default\n *   - noZeroLine {boolean} : don't coerce zeroline* attributes\n *   - attributes {object} : attribute object associated with input containers\n */\nmodule.exports = function handleLineGridDefaults(containerIn, containerOut, coerce, opts) {\n    opts = opts || {};\n\n    var dfltColor = opts.dfltColor;\n\n    function coerce2(attr, dflt) {\n        return Lib.coerce2(containerIn, containerOut, opts.attributes, attr, dflt);\n    }\n\n    var lineColor = coerce2('linecolor', dfltColor);\n    var lineWidth = coerce2('linewidth');\n    var showLine = coerce('showline', opts.showLine || !!lineColor || !!lineWidth);\n\n    if(!showLine) {\n        delete containerOut.linecolor;\n        delete containerOut.linewidth;\n    }\n\n    var gridColorDflt = colorMix(dfltColor, opts.bgColor, opts.blend || lightFraction).toRgbString();\n    var gridColor = coerce2('gridcolor', gridColorDflt);\n    var gridWidth = coerce2('gridwidth');\n    var showGridLines = coerce('showgrid', opts.showGrid || !!gridColor || !!gridWidth);\n\n    if(!showGridLines) {\n        delete containerOut.gridcolor;\n        delete containerOut.gridwidth;\n    }\n\n    if(!opts.noZeroLine) {\n        var zeroLineColor = coerce2('zerolinecolor', dfltColor);\n        var zeroLineWidth = coerce2('zerolinewidth');\n        var showZeroLine = coerce('zeroline', opts.showGrid || !!zeroLineColor || !!zeroLineWidth);\n\n        if(!showZeroLine) {\n            delete containerOut.zerolinecolor;\n            delete containerOut.zerolinewidth;\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/line_grid_defaults.js\n// module id = 224\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\n// flattenUniqueSort :: String -> Function -> [[String]] -> [String]\nfunction flattenUniqueSort(axisLetter, sortFunction, data) {\n\n    // Bisection based insertion sort of distinct values for logarithmic time complexity.\n    // Can't use a hashmap, which is O(1), because ES5 maps coerce keys to strings. If it ever becomes a bottleneck,\n    // code can be separated: a hashmap (JS object) based version if all values encountered are strings; and\n    // downgrading to this O(log(n)) array on the first encounter of a non-string value.\n\n    var categoryArray = [];\n\n    var traceLines = data.map(function(d) {return d[axisLetter];});\n\n    var i, j, tracePoints, category, insertionIndex;\n\n    var bisector = d3.bisector(sortFunction).left;\n\n    for(i = 0; i < traceLines.length; i++) {\n\n        tracePoints = traceLines[i];\n\n        for(j = 0; j < tracePoints.length; j++) {\n\n            category = tracePoints[j];\n\n            // skip loop: ignore null and undefined categories\n            if(category === null || category === undefined) continue;\n\n            insertionIndex = bisector(categoryArray, category);\n\n            // skip loop on already encountered values\n            if(insertionIndex < categoryArray.length && categoryArray[insertionIndex] === category) continue;\n\n            // insert value\n            categoryArray.splice(insertionIndex, 0, category);\n        }\n    }\n\n    return categoryArray;\n}\n\n\n/**\n * This pure function returns the ordered categories for specified axisLetter, categoryorder, categoryarray and data.\n *\n * If categoryorder is 'array', the result is a fresh copy of categoryarray, or if unspecified, an empty array.\n *\n * If categoryorder is 'category ascending' or 'category descending', the result is an array of ascending or descending\n * order of the unique categories encountered in the data for specified axisLetter.\n *\n * See cartesian/layout_attributes.js for the definition of categoryorder and categoryarray\n *\n */\n\n// orderedCategories :: String -> String -> [String] -> [[String]] -> [String]\nmodule.exports = function orderedCategories(axisLetter, categoryorder, categoryarray, data) {\n\n    switch(categoryorder) {\n        case 'array': return Array.isArray(categoryarray) ? categoryarray.slice() : [];\n        case 'category ascending': return flattenUniqueSort(axisLetter, d3.ascending, data);\n        case 'category descending': return flattenUniqueSort(axisLetter, d3.descending, data);\n        case 'trace': return [];\n        default: return [];\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/ordered_categories.js\n// module id = 225\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n    cn: {\n        colorbar: 'colorbar',\n        cbbg: 'cbbg',\n        cbfill: 'cbfill',\n        cbfills: 'cbfills',\n        cbline: 'cbline',\n        cblines: 'cblines',\n        cbaxis: 'cbaxis',\n        cbtitleunshift: 'cbtitleunshift',\n        cbtitle: 'cbtitle',\n        cboutline: 'cboutline',\n        crisp: 'crisp',\n        jsPlaceholder: 'js-placeholder'\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/colorbar/constants.js\n// module id = 226\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar Drawing = require('../../components/drawing');\nvar ErrorBars = require('../../components/errorbars');\n\nfunction style(gd, cd) {\n    var s = cd ? cd[0].node3 : d3.select(gd).selectAll('g.trace.scatter');\n\n    s.style('opacity', function(d) {\n        return d[0].trace.opacity;\n    });\n\n    s.selectAll('g.points').each(function(d) {\n        var sel = d3.select(this);\n        var trace = d.trace || d[0].trace;\n        stylePoints(sel, trace, gd);\n    });\n\n    s.selectAll('g.trace path.js-line')\n        .call(Drawing.lineGroupStyle);\n\n    s.selectAll('g.trace path.js-fill')\n        .call(Drawing.fillGroupStyle);\n\n    s.call(ErrorBars.style);\n}\n\nfunction stylePoints(sel, trace, gd) {\n    var pts = sel.selectAll('path.point');\n    var txs = sel.selectAll('text');\n\n    Drawing.pointStyle(pts, trace, gd);\n    Drawing.textPointStyle(txs, trace, gd);\n    Drawing.selectedPointStyle(pts, trace);\n    Drawing.selectedTextStyle(txs, trace);\n}\n\nmodule.exports = {\n    style: style,\n    stylePoints: stylePoints\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/style.js\n// module id = 227\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Fx = require('../../components/fx');\nvar ErrorBars = require('../../components/errorbars');\nvar getTraceColor = require('./get_trace_color');\nvar Color = require('../../components/color');\nvar fillHoverText = require('./fill_hover_text');\n\nvar MAXDIST = Fx.constants.MAXDIST;\n\nmodule.exports = function hoverPoints(pointData, xval, yval, hovermode) {\n    var cd = pointData.cd;\n    var trace = cd[0].trace;\n    var xa = pointData.xa;\n    var ya = pointData.ya;\n    var xpx = xa.c2p(xval);\n    var ypx = ya.c2p(yval);\n    var pt = [xpx, ypx];\n    var hoveron = trace.hoveron || '';\n    var minRad = (trace.mode.indexOf('markers') !== -1) ? 3 : 0.5;\n\n    // look for points to hover on first, then take fills only if we\n    // didn't find a point\n    if(hoveron.indexOf('points') !== -1) {\n        var dx = function(di) {\n                // dx and dy are used in compare modes - here we want to always\n                // prioritize the closest data point, at least as long as markers are\n                // the same size or nonexistent, but still try to prioritize small markers too.\n                var rad = Math.max(3, di.mrc || 0);\n                var kink = 1 - 1 / rad;\n                var dxRaw = Math.abs(xa.c2p(di.x) - xpx);\n                var d = (dxRaw < rad) ? (kink * dxRaw / rad) : (dxRaw - rad + kink);\n                return d;\n            },\n            dy = function(di) {\n                var rad = Math.max(3, di.mrc || 0);\n                var kink = 1 - 1 / rad;\n                var dyRaw = Math.abs(ya.c2p(di.y) - ypx);\n                return (dyRaw < rad) ? (kink * dyRaw / rad) : (dyRaw - rad + kink);\n            },\n            dxy = function(di) {\n                // scatter points: d.mrc is the calculated marker radius\n                // adjust the distance so if you're inside the marker it\n                // always will show up regardless of point size, but\n                // prioritize smaller points\n                var rad = Math.max(minRad, di.mrc || 0);\n                var dx = xa.c2p(di.x) - xpx;\n                var dy = ya.c2p(di.y) - ypx;\n                return Math.max(Math.sqrt(dx * dx + dy * dy) - rad, 1 - minRad / rad);\n            },\n            distfn = Fx.getDistanceFunction(hovermode, dx, dy, dxy);\n\n        Fx.getClosest(cd, distfn, pointData);\n\n        // skip the rest (for this trace) if we didn't find a close point\n        if(pointData.index !== false) {\n\n            // the closest data point\n            var di = cd[pointData.index],\n                xc = xa.c2p(di.x, true),\n                yc = ya.c2p(di.y, true),\n                rad = di.mrc || 1;\n\n            Lib.extendFlat(pointData, {\n                color: getTraceColor(trace, di),\n\n                x0: xc - rad,\n                x1: xc + rad,\n                xLabelVal: di.x,\n\n                y0: yc - rad,\n                y1: yc + rad,\n                yLabelVal: di.y,\n\n                kink: Math.max(minRad, di.mrc || 0)\n            });\n\n            fillHoverText(di, trace, pointData);\n            ErrorBars.hoverInfo(di, trace, pointData);\n\n            return [pointData];\n        }\n    }\n\n    // even if hoveron is 'fills', only use it if we have polygons too\n    if(hoveron.indexOf('fills') !== -1 && trace._polygons) {\n        var polygons = trace._polygons,\n            polygonsIn = [],\n            inside = false,\n            xmin = Infinity,\n            xmax = -Infinity,\n            ymin = Infinity,\n            ymax = -Infinity,\n            i, j, polygon, pts, xCross, x0, x1, y0, y1;\n\n        for(i = 0; i < polygons.length; i++) {\n            polygon = polygons[i];\n            // TODO: this is not going to work right for curved edges, it will\n            // act as though they're straight. That's probably going to need\n            // the elements themselves to capture the events. Worth it?\n            if(polygon.contains(pt)) {\n                inside = !inside;\n                // TODO: need better than just the overall bounding box\n                polygonsIn.push(polygon);\n                ymin = Math.min(ymin, polygon.ymin);\n                ymax = Math.max(ymax, polygon.ymax);\n            }\n        }\n\n        if(inside) {\n            // constrain ymin/max to the visible plot, so the label goes\n            // at the middle of the piece you can see\n            ymin = Math.max(ymin, 0);\n            ymax = Math.min(ymax, ya._length);\n\n            // find the overall left-most and right-most points of the\n            // polygon(s) we're inside at their combined vertical midpoint.\n            // This is where we will draw the hover label.\n            // Note that this might not be the vertical midpoint of the\n            // whole trace, if it's disjoint.\n            var yAvg = (ymin + ymax) / 2;\n            for(i = 0; i < polygonsIn.length; i++) {\n                pts = polygonsIn[i].pts;\n                for(j = 1; j < pts.length; j++) {\n                    y0 = pts[j - 1][1];\n                    y1 = pts[j][1];\n                    if((y0 > yAvg) !== (y1 >= yAvg)) {\n                        x0 = pts[j - 1][0];\n                        x1 = pts[j][0];\n                        if(y1 - y0) {\n                            xCross = x0 + (x1 - x0) * (yAvg - y0) / (y1 - y0);\n                            xmin = Math.min(xmin, xCross);\n                            xmax = Math.max(xmax, xCross);\n                        }\n                    }\n                }\n            }\n\n            // constrain xmin/max to the visible plot now too\n            xmin = Math.max(xmin, 0);\n            xmax = Math.min(xmax, xa._length);\n\n            // get only fill or line color for the hover color\n            var color = Color.defaultLine;\n            if(Color.opacity(trace.fillcolor)) color = trace.fillcolor;\n            else if(Color.opacity((trace.line || {}).color)) {\n                color = trace.line.color;\n            }\n\n            Lib.extendFlat(pointData, {\n                // never let a 2D override 1D type as closest point\n                distance: MAXDIST + 10,\n                x0: xmin,\n                x1: xmax,\n                y0: yAvg,\n                y1: yAvg,\n                color: color\n            });\n\n            delete pointData.index;\n\n            if(trace.text && !Array.isArray(trace.text)) {\n                pointData.text = String(trace.text);\n            }\n            else pointData.text = trace.name;\n\n            return [pointData];\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/hover.js\n// module id = 228\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Color = require('../../components/color');\nvar subtypes = require('./subtypes');\n\n\nmodule.exports = function getTraceColor(trace, di) {\n    var lc, tc;\n\n    // TODO: text modes\n\n    if(trace.mode === 'lines') {\n        lc = trace.line.color;\n        return (lc && Color.opacity(lc)) ?\n            lc : trace.fillcolor;\n    }\n    else if(trace.mode === 'none') {\n        return trace.fill ? trace.fillcolor : '';\n    }\n    else {\n        var mc = di.mcc || (trace.marker || {}).color,\n            mlc = di.mlcc || ((trace.marker || {}).line || {}).color;\n\n        tc = (mc && Color.opacity(mc)) ? mc :\n            (mlc && Color.opacity(mlc) &&\n                (di.mlw || ((trace.marker || {}).line || {}).width)) ? mlc : '';\n\n        if(tc) {\n            // make sure the points aren't TOO transparent\n            if(Color.opacity(tc) < 0.3) {\n                return Color.addOpacity(tc, 0.3);\n            }\n            else return tc;\n        }\n        else {\n            lc = (trace.line || {}).color;\n            return (lc && Color.opacity(lc) &&\n                subtypes.hasLines(trace) && trace.line.width) ?\n                    lc : trace.fillcolor;\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/get_trace_color.js\n// module id = 229\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar subtypes = require('./subtypes');\n\nmodule.exports = function selectPoints(searchInfo, polygon) {\n    var cd = searchInfo.cd,\n        xa = searchInfo.xaxis,\n        ya = searchInfo.yaxis,\n        selection = [],\n        trace = cd[0].trace,\n        i,\n        di,\n        x,\n        y;\n\n    var hasOnlyLines = (!subtypes.hasMarkers(trace) && !subtypes.hasText(trace));\n    if(hasOnlyLines) return [];\n\n    if(polygon === false) { // clear selection\n        for(i = 0; i < cd.length; i++) {\n            cd[i].selected = 0;\n        }\n    }\n    else {\n        for(i = 0; i < cd.length; i++) {\n            di = cd[i];\n            x = xa.c2p(di.x);\n            y = ya.c2p(di.y);\n\n            if(polygon.contains([x, y])) {\n                selection.push({\n                    pointNumber: i,\n                    x: xa.c2d(di.x),\n                    y: ya.c2d(di.y)\n                });\n                di.selected = 1;\n            } else {\n                di.selected = 0;\n            }\n        }\n    }\n\n    return selection;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/scatter/select.js\n// module id = 230\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../registry');\nvar SUBPLOT_PATTERN = require('./cartesian/constants').SUBPLOT_PATTERN;\n\n/**\n * Get calcdata traces(s) associated with a given subplot\n *\n * @param {array} calcData (as in gd.calcdata)\n * @param {string} type subplot type\n * @param {string} subplotId subplot id to look for\n *\n * @return {array} array of calcdata traces\n */\nexports.getSubplotCalcData = function(calcData, type, subplotId) {\n    var basePlotModule = Registry.subplotsRegistry[type];\n    if(!basePlotModule) return [];\n\n    var attr = basePlotModule.attr;\n    var subplotCalcData = [];\n\n    for(var i = 0; i < calcData.length; i++) {\n        var calcTrace = calcData[i];\n        var trace = calcTrace[0].trace;\n\n        if(trace[attr] === subplotId) subplotCalcData.push(calcTrace);\n    }\n\n    return subplotCalcData;\n};\n\nexports.getModuleCalcData = function(calcdata, typeOrModule) {\n    var moduleCalcData = [];\n    var _module = typeof typeOrModule === 'string' ? Registry.getModule(typeOrModule) : typeOrModule;\n    if(!_module) return moduleCalcData;\n\n    for(var i = 0; i < calcdata.length; i++) {\n        var cd = calcdata[i];\n        var trace = cd[0].trace;\n\n        if((trace._module === _module) && (trace.visible === true)) moduleCalcData.push(cd);\n    }\n\n    return moduleCalcData;\n};\n\n/**\n * Get the data trace(s) associated with a given subplot.\n *\n * @param {array} data  plotly full data array.\n * @param {string} type subplot type to look for.\n * @param {string} subplotId subplot id to look for.\n *\n * @return {array} list of trace objects.\n *\n */\nexports.getSubplotData = function getSubplotData(data, type, subplotId) {\n    if(!Registry.subplotsRegistry[type]) return [];\n\n    var attr = Registry.subplotsRegistry[type].attr;\n    var subplotData = [];\n    var trace, subplotX, subplotY;\n\n    if(type === 'gl2d') {\n        var spmatch = subplotId.match(SUBPLOT_PATTERN);\n        subplotX = 'x' + spmatch[1];\n        subplotY = 'y' + spmatch[2];\n    }\n\n    for(var i = 0; i < data.length; i++) {\n        trace = data[i];\n\n        if(type === 'gl2d' && Registry.traceIs(trace, 'gl2d')) {\n            if(trace[attr[0]] === subplotX && trace[attr[1]] === subplotY) {\n                subplotData.push(trace);\n            }\n        }\n        else {\n            if(trace[attr] === subplotId) subplotData.push(trace);\n        }\n    }\n\n    return subplotData;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/get_data.js\n// module id = 231\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n\nmodule.exports = {\n    xaxis: {\n        valType: 'subplotid',\n        role: 'info',\n        dflt: 'x',\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'Sets a reference between this trace\\'s x coordinates and',\n            'a 2D cartesian x axis.',\n            'If *x* (the default value), the x coordinates refer to',\n            '`layout.xaxis`.',\n            'If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.'\n        ].join(' ')\n    },\n    yaxis: {\n        valType: 'subplotid',\n        role: 'info',\n        dflt: 'y',\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'Sets a reference between this trace\\'s y coordinates and',\n            'a 2D cartesian y axis.',\n            'If *y* (the default value), the y coordinates refer to',\n            '`layout.yaxis`.',\n            'If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.'\n        ].join(' ')\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/attributes.js\n// module id = 232\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\nvar basePlotLayoutAttributes = require('../layout_attributes');\n\nvar layoutAttributes = require('./layout_attributes');\nvar handleTypeDefaults = require('./type_defaults');\nvar handleAxisDefaults = require('./axis_defaults');\nvar handleConstraintDefaults = require('./constraint_defaults');\nvar handlePositionDefaults = require('./position_defaults');\nvar axisIds = require('./axis_ids');\n\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n    var xaCheater = {};\n    var xaNonCheater = {};\n    var outerTicks = {};\n    var noGrids = {};\n    var i;\n\n    // look for axes in the data\n    for(i = 0; i < fullData.length; i++) {\n        var trace = fullData[i];\n\n        if(!Registry.traceIs(trace, 'cartesian') && !Registry.traceIs(trace, 'gl2d')) {\n            continue;\n        }\n\n        var xaName = axisIds.id2name(trace.xaxis);\n        var yaName = axisIds.id2name(trace.yaxis);\n\n        // Two things trigger axis visibility:\n        // 1. is not carpet\n        // 2. carpet that's not cheater\n        if(!Registry.traceIs(trace, 'carpet') || (trace.type === 'carpet' && !trace._cheater)) {\n            if(xaName) xaNonCheater[xaName] = 1;\n        }\n\n        // The above check for definitely-not-cheater is not adequate. This\n        // second list tracks which axes *could* be a cheater so that the\n        // full condition triggering hiding is:\n        //   *could* be a cheater and *is not definitely visible*\n        if(trace.type === 'carpet' && trace._cheater) {\n            if(xaName) xaCheater[xaName] = 1;\n        }\n\n        // check for default formatting tweaks\n        if(Registry.traceIs(trace, '2dMap')) {\n            outerTicks[xaName] = true;\n            outerTicks[yaName] = true;\n        }\n\n        if(Registry.traceIs(trace, 'oriented')) {\n            var positionAxis = trace.orientation === 'h' ? yaName : xaName;\n            noGrids[positionAxis] = true;\n        }\n    }\n\n    var subplots = layoutOut._subplots;\n    var xIds = subplots.xaxis;\n    var yIds = subplots.yaxis;\n    var xNames = Lib.simpleMap(xIds, axisIds.id2name);\n    var yNames = Lib.simpleMap(yIds, axisIds.id2name);\n    var axNames = xNames.concat(yNames);\n\n    // plot_bgcolor only makes sense if there's a (2D) plot!\n    // TODO: bgcolor for each subplot, to inherit from the main one\n    var plot_bgcolor = Color.background;\n    if(xIds.length && yIds.length) {\n        plot_bgcolor = Lib.coerce(layoutIn, layoutOut, basePlotLayoutAttributes, 'plot_bgcolor');\n    }\n\n    var bgColor = Color.combine(plot_bgcolor, layoutOut.paper_bgcolor);\n\n    var axName, axLetter, axLayoutIn, axLayoutOut;\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(axLayoutIn, axLayoutOut, layoutAttributes, attr, dflt);\n    }\n\n    function coerce2(attr, dflt) {\n        return Lib.coerce2(axLayoutIn, axLayoutOut, layoutAttributes, attr, dflt);\n    }\n\n    function getCounterAxes(axLetter) {\n        return (axLetter === 'x') ? yIds : xIds;\n    }\n\n    var counterAxes = {x: getCounterAxes('x'), y: getCounterAxes('y')};\n\n    function getOverlayableAxes(axLetter, axName) {\n        var list = (axLetter === 'x') ? xNames : yNames;\n        var out = [];\n\n        for(var j = 0; j < list.length; j++) {\n            var axName2 = list[j];\n\n            if(axName2 !== axName && !(layoutIn[axName2] || {}).overlaying) {\n                out.push(axisIds.name2id(axName2));\n            }\n        }\n\n        return out;\n    }\n\n    // first pass creates the containers, determines types, and handles most of the settings\n    for(i = 0; i < axNames.length; i++) {\n        axName = axNames[i];\n\n        if(!Lib.isPlainObject(layoutIn[axName])) {\n            layoutIn[axName] = {};\n        }\n\n        axLayoutIn = layoutIn[axName];\n        axLayoutOut = layoutOut[axName] = {};\n\n        handleTypeDefaults(axLayoutIn, axLayoutOut, coerce, fullData, axName);\n\n        axLetter = axName.charAt(0);\n        var overlayableAxes = getOverlayableAxes(axLetter, axName);\n\n        var defaultOptions = {\n            letter: axLetter,\n            font: layoutOut.font,\n            outerTicks: outerTicks[axName],\n            showGrid: !noGrids[axName],\n            data: fullData,\n            bgColor: bgColor,\n            calendar: layoutOut.calendar,\n            cheateronly: axLetter === 'x' && xaCheater[axName] && !xaNonCheater[axName]\n        };\n\n        handleAxisDefaults(axLayoutIn, axLayoutOut, coerce, defaultOptions, layoutOut);\n\n        var spikecolor = coerce2('spikecolor'),\n            spikethickness = coerce2('spikethickness'),\n            spikedash = coerce2('spikedash'),\n            spikemode = coerce2('spikemode'),\n            spikesnap = coerce2('spikesnap'),\n            showSpikes = coerce('showspikes', !!spikecolor || !!spikethickness || !!spikedash || !!spikemode || !!spikesnap);\n\n        if(!showSpikes) {\n            delete axLayoutOut.spikecolor;\n            delete axLayoutOut.spikethickness;\n            delete axLayoutOut.spikedash;\n            delete axLayoutOut.spikemode;\n            delete axLayoutOut.spikesnap;\n        }\n\n        var positioningOptions = {\n            letter: axLetter,\n            counterAxes: counterAxes[axLetter],\n            overlayableAxes: overlayableAxes\n        };\n\n        handlePositionDefaults(axLayoutIn, axLayoutOut, coerce, positioningOptions);\n\n        axLayoutOut._input = axLayoutIn;\n    }\n\n    // quick second pass for range slider and selector defaults\n    var rangeSliderDefaults = Registry.getComponentMethod('rangeslider', 'handleDefaults');\n    var rangeSelectorDefaults = Registry.getComponentMethod('rangeselector', 'handleDefaults');\n\n    for(i = 0; i < xNames.length; i++) {\n        axName = xNames[i];\n        axLayoutIn = layoutIn[axName];\n        axLayoutOut = layoutOut[axName];\n\n        rangeSliderDefaults(layoutIn, layoutOut, axName);\n\n        if(axLayoutOut.type === 'date') {\n            rangeSelectorDefaults(\n                axLayoutIn,\n                axLayoutOut,\n                layoutOut,\n                yNames,\n                axLayoutOut.calendar\n            );\n        }\n\n        coerce('fixedrange');\n    }\n\n    for(i = 0; i < yNames.length; i++) {\n        axName = yNames[i];\n        axLayoutIn = layoutIn[axName];\n        axLayoutOut = layoutOut[axName];\n\n        var anchoredAxis = layoutOut[axisIds.id2name(axLayoutOut.anchor)];\n\n        var fixedRangeDflt = (\n            anchoredAxis &&\n            anchoredAxis.rangeslider &&\n            anchoredAxis.rangeslider.visible\n        );\n\n        coerce('fixedrange', fixedRangeDflt);\n    }\n\n    // Finally, handle scale constraints. We need to do this after all axes have\n    // coerced both `type` (so we link only axes of the same type) and\n    // `fixedrange` (so we can avoid linking from OR TO a fixed axis).\n\n    // sets of axes linked by `scaleanchor` along with the scaleratios compounded\n    // together, populated in handleConstraintDefaults\n    layoutOut._axisConstraintGroups = [];\n    var allAxisIds = counterAxes.x.concat(counterAxes.y);\n\n    for(i = 0; i < axNames.length; i++) {\n        axName = axNames[i];\n        axLetter = axName.charAt(0);\n\n        axLayoutIn = layoutIn[axName];\n        axLayoutOut = layoutOut[axName];\n\n        handleConstraintDefaults(axLayoutIn, axLayoutOut, coerce, allAxisIds, layoutOut);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/layout_defaults.js\n// module id = 233\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar autoType = require('./axis_autotype');\nvar name2id = require('./axis_ids').name2id;\n\n/*\n *  data: the plot data to use in choosing auto type\n *  name: axis object name (ie 'xaxis') if one should be stored\n */\nmodule.exports = function handleTypeDefaults(containerIn, containerOut, coerce, data, name) {\n    // set up some private properties\n    if(name) {\n        containerOut._name = name;\n        containerOut._id = name2id(name);\n    }\n\n    var axType = coerce('type');\n    if(axType === '-') {\n        setAutoType(containerOut, data);\n\n        if(containerOut.type === '-') {\n            containerOut.type = 'linear';\n        }\n        else {\n            // copy autoType back to input axis\n            // note that if this object didn't exist\n            // in the input layout, we have to put it in\n            // this happens in the main supplyDefaults function\n            containerIn.type = containerOut.type;\n        }\n    }\n};\n\nfunction setAutoType(ax, data) {\n    // new logic: let people specify any type they want,\n    // only autotype if type is '-'\n    if(ax.type !== '-') return;\n\n    var id = ax._id,\n        axLetter = id.charAt(0);\n\n    // support 3d\n    if(id.indexOf('scene') !== -1) id = axLetter;\n\n    var d0 = getFirstNonEmptyTrace(data, id, axLetter);\n    if(!d0) return;\n\n    // first check for histograms, as the count direction\n    // should always default to a linear axis\n    if(d0.type === 'histogram' &&\n            axLetter === {v: 'y', h: 'x'}[d0.orientation || 'v']) {\n        ax.type = 'linear';\n        return;\n    }\n\n    var calAttr = axLetter + 'calendar',\n        calendar = d0[calAttr];\n\n    // check all boxes on this x axis to see\n    // if they're dates, numbers, or categories\n    if(isBoxWithoutPositionCoords(d0, axLetter)) {\n        var posLetter = getBoxPosLetter(d0),\n            boxPositions = [],\n            trace;\n\n        for(var i = 0; i < data.length; i++) {\n            trace = data[i];\n            if(!Registry.traceIs(trace, 'box-violin') ||\n               (trace[axLetter + 'axis'] || axLetter) !== id) continue;\n\n            if(trace[posLetter] !== undefined) boxPositions.push(trace[posLetter][0]);\n            else if(trace.name !== undefined) boxPositions.push(trace.name);\n            else boxPositions.push('text');\n\n            if(trace[calAttr] !== calendar) calendar = undefined;\n        }\n\n        ax.type = autoType(boxPositions, calendar);\n    }\n    else {\n        ax.type = autoType(d0[axLetter] || [d0[axLetter + '0']], calendar);\n    }\n}\n\nfunction getFirstNonEmptyTrace(data, id, axLetter) {\n    for(var i = 0; i < data.length; i++) {\n        var trace = data[i];\n\n        if((trace[axLetter + 'axis'] || axLetter) === id) {\n            if(isBoxWithoutPositionCoords(trace, axLetter)) {\n                return trace;\n            }\n            else if((trace[axLetter] || []).length || trace[axLetter + '0']) {\n                return trace;\n            }\n        }\n    }\n}\n\nfunction getBoxPosLetter(trace) {\n    return {v: 'x', h: 'y'}[trace.orientation || 'v'];\n}\n\nfunction isBoxWithoutPositionCoords(trace, axLetter) {\n    var posLetter = getBoxPosLetter(trace),\n        isBox = Registry.traceIs(trace, 'box-violin'),\n        isCandlestick = Registry.traceIs(trace._fullInput || {}, 'candlestick');\n\n    return (\n        isBox &&\n        !isCandlestick &&\n        axLetter === posLetter &&\n        trace[posLetter] === undefined &&\n        trace[posLetter + '0'] === undefined\n    );\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/type_defaults.js\n// module id = 234\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar id2name = require('./axis_ids').id2name;\n\n\nmodule.exports = function handleConstraintDefaults(containerIn, containerOut, coerce, allAxisIds, layoutOut) {\n    var constraintGroups = layoutOut._axisConstraintGroups;\n    var thisID = containerOut._id;\n    var letter = thisID.charAt(0);\n\n    if(containerOut.fixedrange) return;\n\n    // coerce the constraint mechanics even if this axis has no scaleanchor\n    // because it may be the anchor of another axis.\n    coerce('constrain');\n    Lib.coerce(containerIn, containerOut, {\n        constraintoward: {\n            valType: 'enumerated',\n            values: letter === 'x' ? ['left', 'center', 'right'] : ['bottom', 'middle', 'top'],\n            dflt: letter === 'x' ? 'center' : 'middle'\n        }\n    }, 'constraintoward');\n\n    if(!containerIn.scaleanchor) return;\n\n    var constraintOpts = getConstraintOpts(constraintGroups, thisID, allAxisIds, layoutOut);\n\n    var scaleanchor = Lib.coerce(containerIn, containerOut, {\n        scaleanchor: {\n            valType: 'enumerated',\n            values: constraintOpts.linkableAxes\n        }\n    }, 'scaleanchor');\n\n    if(scaleanchor) {\n        var scaleratio = coerce('scaleratio');\n        // TODO: I suppose I could do attribute.min: Number.MIN_VALUE to avoid zero,\n        // but that seems hacky. Better way to say \"must be a positive number\"?\n        // Of course if you use several super-tiny values you could eventually\n        // force a product of these to zero and all hell would break loose...\n        // Likewise with super-huge values.\n        if(!scaleratio) scaleratio = containerOut.scaleratio = 1;\n\n        updateConstraintGroups(constraintGroups, constraintOpts.thisGroup,\n            thisID, scaleanchor, scaleratio);\n    }\n    else if(allAxisIds.indexOf(containerIn.scaleanchor) !== -1) {\n        Lib.warn('ignored ' + containerOut._name + '.scaleanchor: \"' +\n            containerIn.scaleanchor + '\" to avoid either an infinite loop ' +\n            'and possibly inconsistent scaleratios, or because the target' +\n            'axis has fixed range.');\n    }\n};\n\nfunction getConstraintOpts(constraintGroups, thisID, allAxisIds, layoutOut) {\n    // If this axis is already part of a constraint group, we can't\n    // scaleanchor any other axis in that group, or we'd make a loop.\n    // Filter allAxisIds to enforce this, also matching axis types.\n\n    var thisType = layoutOut[id2name(thisID)].type;\n\n    var i, j, idj, axj;\n\n    var linkableAxes = [];\n    for(j = 0; j < allAxisIds.length; j++) {\n        idj = allAxisIds[j];\n        if(idj === thisID) continue;\n\n        axj = layoutOut[id2name(idj)];\n        if(axj.type === thisType && !axj.fixedrange) linkableAxes.push(idj);\n    }\n\n    for(i = 0; i < constraintGroups.length; i++) {\n        if(constraintGroups[i][thisID]) {\n            var thisGroup = constraintGroups[i];\n\n            var linkableAxesNoLoops = [];\n            for(j = 0; j < linkableAxes.length; j++) {\n                idj = linkableAxes[j];\n                if(!thisGroup[idj]) linkableAxesNoLoops.push(idj);\n            }\n            return {linkableAxes: linkableAxesNoLoops, thisGroup: thisGroup};\n        }\n    }\n\n    return {linkableAxes: linkableAxes, thisGroup: null};\n}\n\n\n/*\n * Add this axis to the axis constraint groups, which is the collection\n * of axes that are all constrained together on scale.\n *\n * constraintGroups: a list of objects. each object is\n * {axis_id: scale_within_group}, where scale_within_group is\n * only important relative to the rest of the group, and defines\n * the relative scales between all axes in the group\n *\n * thisGroup: the group the current axis is already in\n * thisID: the id if the current axis\n * scaleanchor: the id of the axis to scale it with\n * scaleratio: the ratio of this axis to the scaleanchor axis\n */\nfunction updateConstraintGroups(constraintGroups, thisGroup, thisID, scaleanchor, scaleratio) {\n    var i, j, groupi, keyj, thisGroupIndex;\n\n    if(thisGroup === null) {\n        thisGroup = {};\n        thisGroup[thisID] = 1;\n        thisGroupIndex = constraintGroups.length;\n        constraintGroups.push(thisGroup);\n    }\n    else {\n        thisGroupIndex = constraintGroups.indexOf(thisGroup);\n    }\n\n    var thisGroupKeys = Object.keys(thisGroup);\n\n    // we know that this axis isn't in any other groups, but we don't know\n    // about the scaleanchor axis. If it is, we need to merge the groups.\n    for(i = 0; i < constraintGroups.length; i++) {\n        groupi = constraintGroups[i];\n        if(i !== thisGroupIndex && groupi[scaleanchor]) {\n            var baseScale = groupi[scaleanchor];\n            for(j = 0; j < thisGroupKeys.length; j++) {\n                keyj = thisGroupKeys[j];\n                groupi[keyj] = baseScale * scaleratio * thisGroup[keyj];\n            }\n            constraintGroups.splice(thisGroupIndex, 1);\n            return;\n        }\n    }\n\n    // otherwise, we insert the new scaleanchor axis as the base scale (1)\n    // in its group, and scale the rest of the group to it\n    if(scaleratio !== 1) {\n        for(j = 0; j < thisGroupKeys.length; j++) {\n            thisGroup[thisGroupKeys[j]] *= scaleratio;\n        }\n    }\n    thisGroup[scaleanchor] = 1;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/constraint_defaults.js\n// module id = 235\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Plotly = require('../../plotly');\nvar Registry = require('../../registry');\nvar Drawing = require('../../components/drawing');\nvar Axes = require('./axes');\nvar axisRegex = require('./constants').attrRegex;\n\nmodule.exports = function transitionAxes(gd, newLayout, transitionOpts, makeOnCompleteCallback) {\n    var fullLayout = gd._fullLayout;\n    var axes = [];\n\n    function computeUpdates(layout) {\n        var ai, attrList, match, axis, update;\n        var updates = {};\n\n        for(ai in layout) {\n            attrList = ai.split('.');\n            match = attrList[0].match(axisRegex);\n            if(match) {\n                var axisLetter = ai.charAt(0);\n                var axisName = attrList[0];\n                axis = fullLayout[axisName];\n                update = {};\n\n                if(Array.isArray(layout[ai])) {\n                    update.to = layout[ai].slice(0);\n                } else {\n                    if(Array.isArray(layout[ai].range)) {\n                        update.to = layout[ai].range.slice(0);\n                    }\n                }\n                if(!update.to) continue;\n\n                update.axisName = axisName;\n                update.length = axis._length;\n\n                axes.push(axisLetter);\n\n                updates[axisLetter] = update;\n            }\n        }\n\n        return updates;\n    }\n\n    function computeAffectedSubplots(fullLayout, updatedAxisIds, updates) {\n        var plotName;\n        var plotinfos = fullLayout._plots;\n        var affectedSubplots = [];\n        var toX, toY;\n\n        for(plotName in plotinfos) {\n            var plotinfo = plotinfos[plotName];\n\n            if(affectedSubplots.indexOf(plotinfo) !== -1) continue;\n\n            var x = plotinfo.xaxis._id;\n            var y = plotinfo.yaxis._id;\n            var fromX = plotinfo.xaxis.range;\n            var fromY = plotinfo.yaxis.range;\n\n            // Store the initial range at the beginning of this transition:\n            plotinfo.xaxis._r = plotinfo.xaxis.range.slice();\n            plotinfo.yaxis._r = plotinfo.yaxis.range.slice();\n\n            if(updates[x]) {\n                toX = updates[x].to;\n            } else {\n                toX = fromX;\n            }\n            if(updates[y]) {\n                toY = updates[y].to;\n            } else {\n                toY = fromY;\n            }\n\n            if(fromX[0] === toX[0] && fromX[1] === toX[1] && fromY[0] === toY[0] && fromY[1] === toY[1]) continue;\n\n            if(updatedAxisIds.indexOf(x) !== -1 || updatedAxisIds.indexOf(y) !== -1) {\n                affectedSubplots.push(plotinfo);\n            }\n        }\n\n        return affectedSubplots;\n    }\n\n    var updates = computeUpdates(newLayout);\n    var updatedAxisIds = Object.keys(updates);\n    var affectedSubplots = computeAffectedSubplots(fullLayout, updatedAxisIds, updates);\n\n    function updateLayoutObjs() {\n        function redrawObjs(objArray, method, shortCircuit) {\n            for(var i = 0; i < objArray.length; i++) {\n                method(gd, i);\n\n                // once is enough for images (which doesn't use the `i` arg anyway)\n                if(shortCircuit) return;\n            }\n        }\n\n        redrawObjs(fullLayout.annotations || [], Registry.getComponentMethod('annotations', 'drawOne'));\n        redrawObjs(fullLayout.shapes || [], Registry.getComponentMethod('shapes', 'drawOne'));\n        redrawObjs(fullLayout.images || [], Registry.getComponentMethod('images', 'draw'), true);\n    }\n\n    if(!affectedSubplots.length) {\n        updateLayoutObjs();\n        return false;\n    }\n\n    function ticksAndAnnotations(xa, ya) {\n        var activeAxIds = [],\n            i;\n\n        activeAxIds = [xa._id, ya._id];\n\n        for(i = 0; i < activeAxIds.length; i++) {\n            Axes.doTicks(gd, activeAxIds[i], true);\n        }\n\n        function redrawObjs(objArray, method, shortCircuit) {\n            for(i = 0; i < objArray.length; i++) {\n                var obji = objArray[i];\n\n                if((activeAxIds.indexOf(obji.xref) !== -1) ||\n                    (activeAxIds.indexOf(obji.yref) !== -1)) {\n                    method(gd, i);\n                }\n\n                // once is enough for images (which doesn't use the `i` arg anyway)\n                if(shortCircuit) return;\n            }\n        }\n\n        redrawObjs(fullLayout.annotations || [], Registry.getComponentMethod('annotations', 'drawOne'));\n        redrawObjs(fullLayout.shapes || [], Registry.getComponentMethod('shapes', 'drawOne'));\n        redrawObjs(fullLayout.images || [], Registry.getComponentMethod('images', 'draw'), true);\n    }\n\n    function unsetSubplotTransform(subplot) {\n        var xa2 = subplot.xaxis;\n        var ya2 = subplot.yaxis;\n\n        fullLayout._defs.select('#' + subplot.clipId + '> rect')\n            .call(Drawing.setTranslate, 0, 0)\n            .call(Drawing.setScale, 1, 1);\n\n        subplot.plot\n            .call(Drawing.setTranslate, xa2._offset, ya2._offset)\n            .call(Drawing.setScale, 1, 1);\n\n        var traceGroups = subplot.plot.selectAll('.scatterlayer .trace');\n\n        // This is specifically directed at scatter traces, applying an inverse\n        // scale to individual points to counteract the scale of the trace\n        // as a whole:\n        traceGroups.selectAll('.point')\n            .call(Drawing.setPointGroupScale, 1, 1);\n        traceGroups.selectAll('.textpoint')\n            .call(Drawing.setTextPointsScale, 1, 1);\n        traceGroups\n            .call(Drawing.hideOutsideRangePoints, subplot);\n    }\n\n    function updateSubplot(subplot, progress) {\n        var axis, r0, r1;\n        var xUpdate = updates[subplot.xaxis._id];\n        var yUpdate = updates[subplot.yaxis._id];\n\n        var viewBox = [];\n\n        if(xUpdate) {\n            axis = gd._fullLayout[xUpdate.axisName];\n            r0 = axis._r;\n            r1 = xUpdate.to;\n            viewBox[0] = (r0[0] * (1 - progress) + progress * r1[0] - r0[0]) / (r0[1] - r0[0]) * subplot.xaxis._length;\n            var dx1 = r0[1] - r0[0];\n            var dx2 = r1[1] - r1[0];\n\n            axis.range[0] = r0[0] * (1 - progress) + progress * r1[0];\n            axis.range[1] = r0[1] * (1 - progress) + progress * r1[1];\n\n            viewBox[2] = subplot.xaxis._length * ((1 - progress) + progress * dx2 / dx1);\n        } else {\n            viewBox[0] = 0;\n            viewBox[2] = subplot.xaxis._length;\n        }\n\n        if(yUpdate) {\n            axis = gd._fullLayout[yUpdate.axisName];\n            r0 = axis._r;\n            r1 = yUpdate.to;\n            viewBox[1] = (r0[1] * (1 - progress) + progress * r1[1] - r0[1]) / (r0[0] - r0[1]) * subplot.yaxis._length;\n            var dy1 = r0[1] - r0[0];\n            var dy2 = r1[1] - r1[0];\n\n            axis.range[0] = r0[0] * (1 - progress) + progress * r1[0];\n            axis.range[1] = r0[1] * (1 - progress) + progress * r1[1];\n\n            viewBox[3] = subplot.yaxis._length * ((1 - progress) + progress * dy2 / dy1);\n        } else {\n            viewBox[1] = 0;\n            viewBox[3] = subplot.yaxis._length;\n        }\n\n        ticksAndAnnotations(subplot.xaxis, subplot.yaxis);\n\n        var xa2 = subplot.xaxis;\n        var ya2 = subplot.yaxis;\n\n        var editX = !!xUpdate;\n        var editY = !!yUpdate;\n\n        var xScaleFactor = editX ? xa2._length / viewBox[2] : 1,\n            yScaleFactor = editY ? ya2._length / viewBox[3] : 1;\n\n        var clipDx = editX ? viewBox[0] : 0,\n            clipDy = editY ? viewBox[1] : 0;\n\n        var fracDx = editX ? (viewBox[0] / viewBox[2] * xa2._length) : 0,\n            fracDy = editY ? (viewBox[1] / viewBox[3] * ya2._length) : 0;\n\n        var plotDx = xa2._offset - fracDx,\n            plotDy = ya2._offset - fracDy;\n\n        fullLayout._defs.select('#' + subplot.clipId + '> rect')\n            .call(Drawing.setTranslate, clipDx, clipDy)\n            .call(Drawing.setScale, 1 / xScaleFactor, 1 / yScaleFactor);\n\n        subplot.plot\n            .call(Drawing.setTranslate, plotDx, plotDy)\n            .call(Drawing.setScale, xScaleFactor, yScaleFactor)\n\n            // This is specifically directed at scatter traces, applying an inverse\n            // scale to individual points to counteract the scale of the trace\n            // as a whole:\n            .selectAll('.points').selectAll('.point')\n                .call(Drawing.setPointGroupScale, 1 / xScaleFactor, 1 / yScaleFactor);\n\n        subplot.plot.selectAll('.points').selectAll('.textpoint')\n            .call(Drawing.setTextPointsScale, 1 / xScaleFactor, 1 / yScaleFactor);\n    }\n\n    var onComplete;\n    if(makeOnCompleteCallback) {\n        // This module makes the choice whether or not it notifies Plotly.transition\n        // about completion:\n        onComplete = makeOnCompleteCallback();\n    }\n\n    function transitionComplete() {\n        var aobj = {};\n        for(var i = 0; i < updatedAxisIds.length; i++) {\n            var axi = gd._fullLayout[updates[updatedAxisIds[i]].axisName];\n            var to = updates[updatedAxisIds[i]].to;\n            aobj[axi._name + '.range[0]'] = to[0];\n            aobj[axi._name + '.range[1]'] = to[1];\n\n            axi.range = to.slice();\n        }\n\n        // Signal that this transition has completed:\n        onComplete && onComplete();\n\n        return Plotly.relayout(gd, aobj).then(function() {\n            for(var i = 0; i < affectedSubplots.length; i++) {\n                unsetSubplotTransform(affectedSubplots[i]);\n            }\n        });\n    }\n\n    function transitionInterrupt() {\n        var aobj = {};\n        for(var i = 0; i < updatedAxisIds.length; i++) {\n            var axi = gd._fullLayout[updatedAxisIds[i] + 'axis'];\n            aobj[axi._name + '.range[0]'] = axi.range[0];\n            aobj[axi._name + '.range[1]'] = axi.range[1];\n\n            axi.range = axi._r.slice();\n        }\n\n        return Plotly.relayout(gd, aobj).then(function() {\n            for(var i = 0; i < affectedSubplots.length; i++) {\n                unsetSubplotTransform(affectedSubplots[i]);\n            }\n        });\n    }\n\n    var t1, t2, raf;\n    var easeFn = d3.ease(transitionOpts.easing);\n\n    gd._transitionData._interruptCallbacks.push(function() {\n        window.cancelAnimationFrame(raf);\n        raf = null;\n        return transitionInterrupt();\n    });\n\n    function doFrame() {\n        t2 = Date.now();\n\n        var tInterp = Math.min(1, (t2 - t1) / transitionOpts.duration);\n        var progress = easeFn(tInterp);\n\n        for(var i = 0; i < affectedSubplots.length; i++) {\n            updateSubplot(affectedSubplots[i], progress);\n        }\n\n        if(t2 - t1 > transitionOpts.duration) {\n            transitionComplete();\n            raf = window.cancelAnimationFrame(doFrame);\n        } else {\n            raf = window.requestAnimationFrame(doFrame);\n        }\n    }\n\n    t1 = Date.now();\n    raf = window.requestAnimationFrame(doFrame);\n\n    return Promise.resolve();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/cartesian/transition_axes.js\n// module id = 236\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\nmodule.exports = {\n    moduleType: 'component',\n    name: 'legend',\n\n    layoutAttributes: require('./attributes'),\n    supplyLayoutDefaults: require('./defaults'),\n\n    draw: require('./draw'),\n    style: require('./style')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/legend/index.js\n// module id = 237\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\n\nvar attributes = require('./attributes');\nvar basePlotLayoutAttributes = require('../../plots/layout_attributes');\nvar helpers = require('./helpers');\n\n\nmodule.exports = function legendDefaults(layoutIn, layoutOut, fullData) {\n    var containerIn = layoutIn.legend || {},\n        containerOut = layoutOut.legend = {};\n\n    var visibleTraces = 0,\n        defaultOrder = 'normal',\n        defaultX,\n        defaultY,\n        defaultXAnchor,\n        defaultYAnchor;\n\n    for(var i = 0; i < fullData.length; i++) {\n        var trace = fullData[i];\n\n        if(helpers.legendGetsTrace(trace)) {\n            visibleTraces++;\n            // always show the legend by default if there's a pie\n            if(Registry.traceIs(trace, 'pie')) visibleTraces++;\n        }\n\n        if((Registry.traceIs(trace, 'bar') && layoutOut.barmode === 'stack') ||\n                ['tonextx', 'tonexty'].indexOf(trace.fill) !== -1) {\n            defaultOrder = helpers.isGrouped({traceorder: defaultOrder}) ?\n                'grouped+reversed' : 'reversed';\n        }\n\n        if(trace.legendgroup !== undefined && trace.legendgroup !== '') {\n            defaultOrder = helpers.isReversed({traceorder: defaultOrder}) ?\n                'reversed+grouped' : 'grouped';\n        }\n    }\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(containerIn, containerOut, attributes, attr, dflt);\n    }\n\n    var showLegend = Lib.coerce(layoutIn, layoutOut,\n        basePlotLayoutAttributes, 'showlegend', visibleTraces > 1);\n\n    if(showLegend === false) return;\n\n    coerce('bgcolor', layoutOut.paper_bgcolor);\n    coerce('bordercolor');\n    coerce('borderwidth');\n    Lib.coerceFont(coerce, 'font', layoutOut.font);\n\n    coerce('orientation');\n    if(containerOut.orientation === 'h') {\n        var xaxis = layoutIn.xaxis;\n        if(xaxis && xaxis.rangeslider && xaxis.rangeslider.visible) {\n            defaultX = 0;\n            defaultXAnchor = 'left';\n            defaultY = 1.1;\n            defaultYAnchor = 'bottom';\n        }\n        else {\n            defaultX = 0;\n            defaultXAnchor = 'left';\n            defaultY = -0.1;\n            defaultYAnchor = 'top';\n        }\n    }\n\n    coerce('traceorder', defaultOrder);\n    if(helpers.isGrouped(layoutOut.legend)) coerce('tracegroupgap');\n\n    coerce('x', defaultX);\n    coerce('xanchor', defaultXAnchor);\n    coerce('y', defaultY);\n    coerce('yanchor', defaultYAnchor);\n    Lib.noneOrAll(containerIn, containerOut, ['x', 'y']);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/legend/defaults.js\n// module id = 238\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Plotly = require('../../plotly');\nvar Lib = require('../../lib');\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar dragElement = require('../dragelement');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar handleClick = require('./handle_click');\n\nvar constants = require('./constants');\nvar interactConstants = require('../../constants/interactions');\nvar LINE_SPACING = require('../../constants/alignment').LINE_SPACING;\n\nvar getLegendData = require('./get_legend_data');\nvar style = require('./style');\nvar helpers = require('./helpers');\nvar anchorUtils = require('./anchor_utils');\n\nvar DBLCLICKDELAY = interactConstants.DBLCLICKDELAY;\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout;\n    var clipId = 'legend' + fullLayout._uid;\n\n    if(!fullLayout._infolayer || !gd.calcdata) return;\n\n    if(!gd._legendMouseDownTime) gd._legendMouseDownTime = 0;\n\n    var opts = fullLayout.legend,\n        legendData = fullLayout.showlegend && getLegendData(gd.calcdata, opts),\n        hiddenSlices = fullLayout.hiddenlabels || [];\n\n    if(!fullLayout.showlegend || !legendData.length) {\n        fullLayout._infolayer.selectAll('.legend').remove();\n        fullLayout._topdefs.select('#' + clipId).remove();\n\n        Plots.autoMargin(gd, 'legend');\n        return;\n    }\n\n    var legend = fullLayout._infolayer.selectAll('g.legend')\n        .data([0]);\n\n    legend.enter().append('g')\n        .attr({\n            'class': 'legend',\n            'pointer-events': 'all'\n        });\n\n    var clipPath = fullLayout._topdefs.selectAll('#' + clipId)\n        .data([0]);\n\n    clipPath.enter().append('clipPath')\n        .attr('id', clipId)\n        .append('rect');\n\n    var bg = legend.selectAll('rect.bg')\n        .data([0]);\n\n    bg.enter().append('rect').attr({\n        'class': 'bg',\n        'shape-rendering': 'crispEdges'\n    });\n\n    bg.call(Color.stroke, opts.bordercolor);\n    bg.call(Color.fill, opts.bgcolor);\n    bg.style('stroke-width', opts.borderwidth + 'px');\n\n    var scrollBox = legend.selectAll('g.scrollbox')\n        .data([0]);\n\n    scrollBox.enter().append('g')\n        .attr('class', 'scrollbox');\n\n    var scrollBar = legend.selectAll('rect.scrollbar')\n        .data([0]);\n\n    scrollBar.enter().append('rect')\n        .attr({\n            'class': 'scrollbar',\n            'rx': 20,\n            'ry': 2,\n            'width': 0,\n            'height': 0\n        })\n        .call(Color.fill, '#808BA4');\n\n    var groups = scrollBox.selectAll('g.groups')\n        .data(legendData);\n\n    groups.enter().append('g')\n        .attr('class', 'groups');\n\n    groups.exit().remove();\n\n    var traces = groups.selectAll('g.traces')\n        .data(Lib.identity);\n\n    traces.enter().append('g').attr('class', 'traces');\n    traces.exit().remove();\n\n    traces.call(style, gd)\n        .style('opacity', function(d) {\n            var trace = d[0].trace;\n            if(Registry.traceIs(trace, 'pie')) {\n                return hiddenSlices.indexOf(d[0].label) !== -1 ? 0.5 : 1;\n            } else {\n                return trace.visible === 'legendonly' ? 0.5 : 1;\n            }\n        })\n        .each(function() {\n            d3.select(this)\n                .call(drawTexts, gd)\n                .call(setupTraceToggle, gd);\n        });\n\n    var firstRender = legend.enter().size() !== 0;\n    if(firstRender) {\n        computeLegendDimensions(gd, groups, traces);\n        expandMargin(gd);\n    }\n\n    // Position and size the legend\n    var lxMin = 0,\n        lxMax = fullLayout.width,\n        lyMin = 0,\n        lyMax = fullLayout.height;\n\n    computeLegendDimensions(gd, groups, traces);\n\n    if(opts.height > lyMax) {\n        // If the legend doesn't fit in the plot area,\n        // do not expand the vertical margins.\n        expandHorizontalMargin(gd);\n    } else {\n        expandMargin(gd);\n    }\n\n    // Scroll section must be executed after repositionLegend.\n    // It requires the legend width, height, x and y to position the scrollbox\n    // and these values are mutated in repositionLegend.\n    var gs = fullLayout._size,\n        lx = gs.l + gs.w * opts.x,\n        ly = gs.t + gs.h * (1 - opts.y);\n\n    if(anchorUtils.isRightAnchor(opts)) {\n        lx -= opts.width;\n    }\n    else if(anchorUtils.isCenterAnchor(opts)) {\n        lx -= opts.width / 2;\n    }\n\n    if(anchorUtils.isBottomAnchor(opts)) {\n        ly -= opts.height;\n    }\n    else if(anchorUtils.isMiddleAnchor(opts)) {\n        ly -= opts.height / 2;\n    }\n\n    // Make sure the legend left and right sides are visible\n    var legendWidth = opts.width,\n        legendWidthMax = gs.w;\n\n    if(legendWidth > legendWidthMax) {\n        lx = gs.l;\n        legendWidth = legendWidthMax;\n    }\n    else {\n        if(lx + legendWidth > lxMax) lx = lxMax - legendWidth;\n        if(lx < lxMin) lx = lxMin;\n        legendWidth = Math.min(lxMax - lx, opts.width);\n    }\n\n    // Make sure the legend top and bottom are visible\n    // (legends with a scroll bar are not allowed to stretch beyond the extended\n    // margins)\n    var legendHeight = opts.height,\n        legendHeightMax = gs.h;\n\n    if(legendHeight > legendHeightMax) {\n        ly = gs.t;\n        legendHeight = legendHeightMax;\n    }\n    else {\n        if(ly + legendHeight > lyMax) ly = lyMax - legendHeight;\n        if(ly < lyMin) ly = lyMin;\n        legendHeight = Math.min(lyMax - ly, opts.height);\n    }\n\n    // Set size and position of all the elements that make up a legend:\n    // legend, background and border, scroll box and scroll bar\n    Drawing.setTranslate(legend, lx, ly);\n\n    var scrollBarYMax = legendHeight -\n            constants.scrollBarHeight -\n            2 * constants.scrollBarMargin,\n        scrollBoxYMax = opts.height - legendHeight,\n        scrollBarY,\n        scrollBoxY;\n\n    if(opts.height <= legendHeight || gd._context.staticPlot) {\n        // if scrollbar should not be shown.\n        bg.attr({\n            width: legendWidth - opts.borderwidth,\n            height: legendHeight - opts.borderwidth,\n            x: opts.borderwidth / 2,\n            y: opts.borderwidth / 2\n        });\n\n        Drawing.setTranslate(scrollBox, 0, 0);\n\n        clipPath.select('rect').attr({\n            width: legendWidth - 2 * opts.borderwidth,\n            height: legendHeight - 2 * opts.borderwidth,\n            x: opts.borderwidth,\n            y: opts.borderwidth\n        });\n\n        scrollBox.call(Drawing.setClipUrl, clipId);\n    }\n    else {\n        scrollBarY = constants.scrollBarMargin,\n        scrollBoxY = scrollBox.attr('data-scroll') || 0;\n\n        // increase the background and clip-path width\n        // by the scrollbar width and margin\n        bg.attr({\n            width: legendWidth -\n                2 * opts.borderwidth +\n                constants.scrollBarWidth +\n                constants.scrollBarMargin,\n            height: legendHeight - opts.borderwidth,\n            x: opts.borderwidth / 2,\n            y: opts.borderwidth / 2\n        });\n\n        clipPath.select('rect').attr({\n            width: legendWidth -\n                2 * opts.borderwidth +\n                constants.scrollBarWidth +\n                constants.scrollBarMargin,\n            height: legendHeight - 2 * opts.borderwidth,\n            x: opts.borderwidth,\n            y: opts.borderwidth - scrollBoxY\n        });\n\n        scrollBox.call(Drawing.setClipUrl, clipId);\n\n        if(firstRender) scrollHandler(scrollBarY, scrollBoxY);\n\n        legend.on('wheel', null);  // to be safe, remove previous listeners\n        legend.on('wheel', function() {\n            scrollBoxY = Lib.constrain(\n                scrollBox.attr('data-scroll') -\n                    d3.event.deltaY / scrollBarYMax * scrollBoxYMax,\n                -scrollBoxYMax, 0);\n            scrollBarY = constants.scrollBarMargin -\n                scrollBoxY / scrollBoxYMax * scrollBarYMax;\n            scrollHandler(scrollBarY, scrollBoxY);\n            if(scrollBoxY !== 0 && scrollBoxY !== -scrollBoxYMax) {\n                d3.event.preventDefault();\n            }\n        });\n\n        // to be safe, remove previous listeners\n        scrollBar.on('.drag', null);\n        scrollBox.on('.drag', null);\n\n        var drag = d3.behavior.drag().on('drag', function() {\n            scrollBarY = Lib.constrain(\n                d3.event.y - constants.scrollBarHeight / 2,\n                constants.scrollBarMargin,\n                constants.scrollBarMargin + scrollBarYMax);\n            scrollBoxY = - (scrollBarY - constants.scrollBarMargin) /\n                scrollBarYMax * scrollBoxYMax;\n            scrollHandler(scrollBarY, scrollBoxY);\n        });\n\n        scrollBar.call(drag);\n        scrollBox.call(drag);\n    }\n\n\n    function scrollHandler(scrollBarY, scrollBoxY) {\n        scrollBox\n            .attr('data-scroll', scrollBoxY)\n            .call(Drawing.setTranslate, 0, scrollBoxY);\n\n        scrollBar.call(\n            Drawing.setRect,\n            legendWidth,\n            scrollBarY,\n            constants.scrollBarWidth,\n            constants.scrollBarHeight\n        );\n        clipPath.select('rect').attr({\n            y: opts.borderwidth - scrollBoxY\n        });\n    }\n\n    if(gd._context.edits.legendPosition) {\n        var xf, yf, x0, y0;\n\n        legend.classed('cursor-move', true);\n\n        dragElement.init({\n            element: legend.node(),\n            gd: gd,\n            prepFn: function() {\n                var transform = Drawing.getTranslate(legend);\n\n                x0 = transform.x;\n                y0 = transform.y;\n            },\n            moveFn: function(dx, dy) {\n                var newX = x0 + dx,\n                    newY = y0 + dy;\n\n                Drawing.setTranslate(legend, newX, newY);\n\n                xf = dragElement.align(newX, 0, gs.l, gs.l + gs.w, opts.xanchor);\n                yf = dragElement.align(newY, 0, gs.t + gs.h, gs.t, opts.yanchor);\n            },\n            doneFn: function() {\n                if(xf !== undefined && yf !== undefined) {\n                    Plotly.relayout(gd, {'legend.x': xf, 'legend.y': yf});\n                }\n            },\n            clickFn: function(numClicks, e) {\n                var clickedTrace =\n                    fullLayout._infolayer.selectAll('g.traces').filter(function() {\n                        var bbox = this.getBoundingClientRect();\n                        return (e.clientX >= bbox.left && e.clientX <= bbox.right &&\n                            e.clientY >= bbox.top && e.clientY <= bbox.bottom);\n                    });\n                if(clickedTrace.size() > 0) {\n                    if(numClicks === 1) {\n                        legend._clickTimeout = setTimeout(function() {\n                            handleClick(clickedTrace, gd, numClicks);\n                        }, DBLCLICKDELAY);\n                    } else if(numClicks === 2) {\n                        if(legend._clickTimeout) {\n                            clearTimeout(legend._clickTimeout);\n                        }\n                        handleClick(clickedTrace, gd, numClicks);\n                    }\n                }\n            }\n        });\n    }\n};\n\nfunction drawTexts(g, gd) {\n    var legendItem = g.data()[0][0],\n        fullLayout = gd._fullLayout,\n        trace = legendItem.trace,\n        isPie = Registry.traceIs(trace, 'pie'),\n        traceIndex = trace.index,\n        name = isPie ? legendItem.label : trace.name;\n\n    var text = g.selectAll('text.legendtext')\n        .data([0]);\n\n    text.enter().append('text').classed('legendtext', true);\n\n    text.attr('text-anchor', 'start')\n        .classed('user-select-none', true)\n        .call(Drawing.font, fullLayout.legend.font)\n        .text(name);\n\n    function textLayout(s) {\n        svgTextUtils.convertToTspans(s, gd, function() {\n            computeTextDimensions(g, gd);\n        });\n    }\n\n    if(gd._context.edits.legendText && !isPie) {\n        text.call(svgTextUtils.makeEditable, {gd: gd})\n            .call(textLayout)\n            .on('edit', function(text) {\n                this.text(text)\n                    .call(textLayout);\n\n                var origText = text;\n\n                if(!this.text()) text = ' \\u0020\\u0020 ';\n\n                var transforms, direction;\n                var fullInput = legendItem.trace._fullInput || {};\n                var update = {};\n\n                // N.B. this block isn't super clean,\n                // is unfortunately untested at the moment,\n                // and only works for for 'ohlc' and 'candlestick',\n                // but should be generalized for other one-to-many transforms\n                if(['ohlc', 'candlestick'].indexOf(fullInput.type) !== -1) {\n                    transforms = legendItem.trace.transforms;\n                    direction = transforms[transforms.length - 1].direction;\n\n                    update[direction + '.name'] = text;\n                } else if(Registry.hasTransform(fullInput, 'groupby')) {\n                    var groupbyIndices = Registry.getTransformIndices(fullInput, 'groupby');\n                    var index = groupbyIndices[groupbyIndices.length - 1];\n\n                    var kcont = Lib.keyedContainer(fullInput, 'transforms[' + index + '].styles', 'target', 'value.name');\n\n                    if(origText === '') {\n                        kcont.remove(legendItem.trace._group);\n                    } else {\n                        kcont.set(legendItem.trace._group, text);\n                    }\n\n                    update = kcont.constructUpdate();\n                } else {\n                    update.name = text;\n                }\n\n                return Plotly.restyle(gd, update, traceIndex);\n            });\n    } else {\n        text.call(textLayout);\n    }\n}\n\nfunction setupTraceToggle(g, gd) {\n    var newMouseDownTime,\n        numClicks = 1;\n\n    var traceToggle = g.selectAll('rect')\n        .data([0]);\n\n    traceToggle.enter().append('rect')\n        .classed('legendtoggle', true)\n        .style('cursor', 'pointer')\n        .attr('pointer-events', 'all')\n        .call(Color.fill, 'rgba(0,0,0,0)');\n\n\n    traceToggle.on('mousedown', function() {\n        newMouseDownTime = (new Date()).getTime();\n        if(newMouseDownTime - gd._legendMouseDownTime < DBLCLICKDELAY) {\n            // in a click train\n            numClicks += 1;\n        }\n        else {\n            // new click train\n            numClicks = 1;\n            gd._legendMouseDownTime = newMouseDownTime;\n        }\n    });\n    traceToggle.on('mouseup', function() {\n        if(gd._dragged || gd._editing) return;\n        var legend = gd._fullLayout.legend;\n\n        if((new Date()).getTime() - gd._legendMouseDownTime > DBLCLICKDELAY) {\n            numClicks = Math.max(numClicks - 1, 1);\n        }\n\n        if(numClicks === 1) {\n            legend._clickTimeout = setTimeout(function() { handleClick(g, gd, numClicks); }, DBLCLICKDELAY);\n        } else if(numClicks === 2) {\n            if(legend._clickTimeout) {\n                clearTimeout(legend._clickTimeout);\n            }\n            gd._legendMouseDownTime = 0;\n            handleClick(g, gd, numClicks);\n        }\n    });\n}\n\nfunction computeTextDimensions(g, gd) {\n    var legendItem = g.data()[0][0];\n\n    if(!legendItem.trace.showlegend) {\n        g.remove();\n        return;\n    }\n\n    var mathjaxGroup = g.select('g[class*=math-group]');\n    var mathjaxNode = mathjaxGroup.node();\n    var opts = gd._fullLayout.legend;\n    var lineHeight = opts.font.size * LINE_SPACING;\n    var height, width;\n\n    if(mathjaxNode) {\n        var mathjaxBB = Drawing.bBox(mathjaxNode);\n\n        height = mathjaxBB.height;\n        width = mathjaxBB.width;\n\n        Drawing.setTranslate(mathjaxGroup, 0, (height / 4));\n    }\n    else {\n        var text = g.select('.legendtext');\n        var textLines = svgTextUtils.lineCount(text);\n        var textNode = text.node();\n\n        height = lineHeight * textLines;\n        width = textNode ? Drawing.bBox(textNode).width : 0;\n\n        // approximation to height offset to center the font\n        // to avoid getBoundingClientRect\n        var textY = lineHeight * (0.3 + (1 - textLines) / 2);\n        // TODO: this 40 should go in a constants file (along with other\n        // values related to the legend symbol size)\n        svgTextUtils.positionText(text, 40, textY);\n    }\n\n    height = Math.max(height, 16) + 3;\n\n    legendItem.height = height;\n    legendItem.width = width;\n}\n\nfunction computeLegendDimensions(gd, groups, traces) {\n    var fullLayout = gd._fullLayout;\n    var opts = fullLayout.legend;\n    var borderwidth = opts.borderwidth;\n    var isGrouped = helpers.isGrouped(opts);\n\n    var extraWidth = 0;\n\n    opts.width = 0;\n    opts.height = 0;\n\n    if(helpers.isVertical(opts)) {\n        if(isGrouped) {\n            groups.each(function(d, i) {\n                Drawing.setTranslate(this, 0, i * opts.tracegroupgap);\n            });\n        }\n\n        traces.each(function(d) {\n            var legendItem = d[0],\n                textHeight = legendItem.height,\n                textWidth = legendItem.width;\n\n            Drawing.setTranslate(this,\n                borderwidth,\n                (5 + borderwidth + opts.height + textHeight / 2));\n\n            opts.height += textHeight;\n            opts.width = Math.max(opts.width, textWidth);\n        });\n\n        opts.width += 45 + borderwidth * 2;\n        opts.height += 10 + borderwidth * 2;\n\n        if(isGrouped) {\n            opts.height += (opts._lgroupsLength - 1) * opts.tracegroupgap;\n        }\n\n        extraWidth = 40;\n    }\n    else if(isGrouped) {\n        var groupXOffsets = [opts.width],\n            groupData = groups.data();\n\n        for(var i = 0, n = groupData.length; i < n; i++) {\n            var textWidths = groupData[i].map(function(legendItemArray) {\n                return legendItemArray[0].width;\n            });\n\n            var groupWidth = 40 + Math.max.apply(null, textWidths);\n\n            opts.width += opts.tracegroupgap + groupWidth;\n\n            groupXOffsets.push(opts.width);\n        }\n\n        groups.each(function(d, i) {\n            Drawing.setTranslate(this, groupXOffsets[i], 0);\n        });\n\n        groups.each(function() {\n            var group = d3.select(this),\n                groupTraces = group.selectAll('g.traces'),\n                groupHeight = 0;\n\n            groupTraces.each(function(d) {\n                var legendItem = d[0],\n                    textHeight = legendItem.height;\n\n                Drawing.setTranslate(this,\n                    0,\n                    (5 + borderwidth + groupHeight + textHeight / 2));\n\n                groupHeight += textHeight;\n            });\n\n            opts.height = Math.max(opts.height, groupHeight);\n        });\n\n        opts.height += 10 + borderwidth * 2;\n        opts.width += borderwidth * 2;\n    }\n    else {\n        var rowHeight = 0,\n            maxTraceHeight = 0,\n            maxTraceWidth = 0,\n            offsetX = 0,\n            fullTracesWidth = 0,\n            traceGap = opts.tracegroupgap || 5,\n            oneRowLegend;\n\n        // calculate largest width for traces and use for width of all legend items\n        traces.each(function(d) {\n            maxTraceWidth = Math.max(40 + d[0].width, maxTraceWidth);\n            fullTracesWidth += 40 + d[0].width + traceGap;\n        });\n\n        // check if legend fits in one row\n        oneRowLegend = (fullLayout.width - (fullLayout.margin.r + fullLayout.margin.l)) > borderwidth + fullTracesWidth - traceGap;\n        traces.each(function(d) {\n            var legendItem = d[0],\n                traceWidth = oneRowLegend ? 40 + d[0].width : maxTraceWidth;\n\n            if((borderwidth + offsetX + traceGap + traceWidth) > (fullLayout.width - (fullLayout.margin.r + fullLayout.margin.l))) {\n                offsetX = 0;\n                rowHeight = rowHeight + maxTraceHeight;\n                opts.height = opts.height + maxTraceHeight;\n                // reset for next row\n                maxTraceHeight = 0;\n            }\n\n            Drawing.setTranslate(this,\n                (borderwidth + offsetX),\n                (5 + borderwidth + legendItem.height / 2) + rowHeight);\n\n            opts.width += traceGap + traceWidth;\n            opts.height = Math.max(opts.height, legendItem.height);\n\n            // keep track of tallest trace in group\n            offsetX += traceGap + traceWidth;\n            maxTraceHeight = Math.max(legendItem.height, maxTraceHeight);\n        });\n\n        opts.width += borderwidth * 2;\n        opts.height += 10 + borderwidth * 2;\n\n    }\n\n    // make sure we're only getting full pixels\n    opts.width = Math.ceil(opts.width);\n    opts.height = Math.ceil(opts.height);\n\n    traces.each(function(d) {\n        var legendItem = d[0],\n            bg = d3.select(this).select('.legendtoggle');\n\n        bg.call(Drawing.setRect,\n            0,\n            -legendItem.height / 2,\n            (gd._context.edits.legendText ? 0 : opts.width) + extraWidth,\n            legendItem.height\n        );\n    });\n}\n\nfunction expandMargin(gd) {\n    var fullLayout = gd._fullLayout,\n        opts = fullLayout.legend;\n\n    var xanchor = 'left';\n    if(anchorUtils.isRightAnchor(opts)) {\n        xanchor = 'right';\n    }\n    else if(anchorUtils.isCenterAnchor(opts)) {\n        xanchor = 'center';\n    }\n\n    var yanchor = 'top';\n    if(anchorUtils.isBottomAnchor(opts)) {\n        yanchor = 'bottom';\n    }\n    else if(anchorUtils.isMiddleAnchor(opts)) {\n        yanchor = 'middle';\n    }\n\n    // lastly check if the margin auto-expand has changed\n    Plots.autoMargin(gd, 'legend', {\n        x: opts.x,\n        y: opts.y,\n        l: opts.width * ({right: 1, center: 0.5}[xanchor] || 0),\n        r: opts.width * ({left: 1, center: 0.5}[xanchor] || 0),\n        b: opts.height * ({top: 1, middle: 0.5}[yanchor] || 0),\n        t: opts.height * ({bottom: 1, middle: 0.5}[yanchor] || 0)\n    });\n}\n\nfunction expandHorizontalMargin(gd) {\n    var fullLayout = gd._fullLayout,\n        opts = fullLayout.legend;\n\n    var xanchor = 'left';\n    if(anchorUtils.isRightAnchor(opts)) {\n        xanchor = 'right';\n    }\n    else if(anchorUtils.isCenterAnchor(opts)) {\n        xanchor = 'center';\n    }\n\n    // lastly check if the margin auto-expand has changed\n    Plots.autoMargin(gd, 'legend', {\n        x: opts.x,\n        y: 0.5,\n        l: opts.width * ({right: 1, center: 0.5}[xanchor] || 0),\n        r: opts.width * ({left: 1, center: 0.5}[xanchor] || 0),\n        b: 0,\n        t: 0\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/legend/draw.js\n// module id = 239\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Plotly = require('../../plotly');\nvar Lib = require('../../lib');\nvar Registry = require('../../registry');\n\nvar SHOWISOLATETIP = true;\n\nmodule.exports = function handleClick(g, gd, numClicks) {\n    if(gd._dragged || gd._editing) return;\n\n    var hiddenSlices = gd._fullLayout.hiddenlabels ?\n        gd._fullLayout.hiddenlabels.slice() :\n        [];\n\n    var legendItem = g.data()[0][0];\n    var fullData = gd._fullData;\n    var fullTrace = legendItem.trace;\n    var legendgroup = fullTrace.legendgroup;\n\n    var i, j, kcont, key, keys, val;\n    var attrUpdate = {};\n    var attrIndices = [];\n    var carrs = [];\n    var carrIdx = [];\n\n    function insertUpdate(traceIndex, key, value) {\n        var attrIndex = attrIndices.indexOf(traceIndex);\n        var valueArray = attrUpdate[key];\n        if(!valueArray) {\n            valueArray = attrUpdate[key] = [];\n        }\n\n        if(attrIndices.indexOf(traceIndex) === -1) {\n            attrIndices.push(traceIndex);\n            attrIndex = attrIndices.length - 1;\n        }\n\n        valueArray[attrIndex] = value;\n\n        return attrIndex;\n    }\n\n    function setVisibility(fullTrace, visibility) {\n        var fullInput = fullTrace._fullInput;\n        if(Registry.hasTransform(fullInput, 'groupby')) {\n            var kcont = carrs[fullInput.index];\n            if(!kcont) {\n                var groupbyIndices = Registry.getTransformIndices(fullInput, 'groupby');\n                var lastGroupbyIndex = groupbyIndices[groupbyIndices.length - 1];\n                kcont = Lib.keyedContainer(fullInput, 'transforms[' + lastGroupbyIndex + '].styles', 'target', 'value.visible');\n                carrs[fullInput.index] = kcont;\n            }\n\n            var curState = kcont.get(fullTrace._group);\n\n            // If not specified, assume visible. This happens if there are other style\n            // properties set for a group but not the visibility. There are many similar\n            // ways to do this (e.g. why not just `curState = fullTrace.visible`??? The\n            // answer is: because it breaks other things like groupby trace names in\n            // subtle ways.)\n            if(curState === undefined) {\n                curState = true;\n            }\n\n            if(curState !== false) {\n                // true -> legendonly. All others toggle to true:\n                kcont.set(fullTrace._group, visibility);\n            }\n            carrIdx[fullInput.index] = insertUpdate(fullInput.index, 'visible', fullInput.visible === false ? false : true);\n        } else {\n            // false -> false (not possible since will not be visible in legend)\n            // true -> legendonly\n            // legendonly -> true\n            var nextVisibility = fullInput.visible === false ? false : visibility;\n\n            insertUpdate(fullInput.index, 'visible', nextVisibility);\n        }\n    }\n\n    if(numClicks === 1 && SHOWISOLATETIP && gd.data && gd._context.showTips) {\n        Lib.notifier(Lib._(gd, 'Double-click on legend to isolate one trace'), 'long');\n        SHOWISOLATETIP = false;\n    } else {\n        SHOWISOLATETIP = false;\n    }\n\n    if(Registry.traceIs(fullTrace, 'pie')) {\n        var thisLabel = legendItem.label,\n            thisLabelIndex = hiddenSlices.indexOf(thisLabel);\n\n        if(numClicks === 1) {\n            if(thisLabelIndex === -1) hiddenSlices.push(thisLabel);\n            else hiddenSlices.splice(thisLabelIndex, 1);\n        } else if(numClicks === 2) {\n            hiddenSlices = [];\n            gd.calcdata[0].forEach(function(d) {\n                if(thisLabel !== d.label) {\n                    hiddenSlices.push(d.label);\n                }\n            });\n            if(gd._fullLayout.hiddenlabels && gd._fullLayout.hiddenlabels.length === hiddenSlices.length && thisLabelIndex === -1) {\n                hiddenSlices = [];\n            }\n        }\n\n        Plotly.relayout(gd, 'hiddenlabels', hiddenSlices);\n    } else {\n        var hasLegendgroup = legendgroup && legendgroup.length;\n        var traceIndicesInGroup = [];\n        var tracei;\n        if(hasLegendgroup) {\n            for(i = 0; i < fullData.length; i++) {\n                tracei = fullData[i];\n                if(!tracei.visible) continue;\n                if(tracei.legendgroup === legendgroup) {\n                    traceIndicesInGroup.push(i);\n                }\n            }\n        }\n\n        if(numClicks === 1) {\n            var nextVisibility;\n\n            switch(fullTrace.visible) {\n                case true:\n                    nextVisibility = 'legendonly';\n                    break;\n                case false:\n                    nextVisibility = false;\n                    break;\n                case 'legendonly':\n                    nextVisibility = true;\n                    break;\n            }\n\n            if(hasLegendgroup) {\n                for(i = 0; i < fullData.length; i++) {\n                    if(fullData[i].visible !== false && fullData[i].legendgroup === legendgroup) {\n                        setVisibility(fullData[i], nextVisibility);\n                    }\n                }\n            } else {\n                setVisibility(fullTrace, nextVisibility);\n            }\n        } else if(numClicks === 2) {\n            // Compute the clicked index. expandedIndex does what we want for expanded traces\n            // but also culls hidden traces. That means we have some work to do.\n            var isClicked, isInGroup, otherState;\n            var isIsolated = true;\n            for(i = 0; i < fullData.length; i++) {\n                isClicked = fullData[i] === fullTrace;\n                if(isClicked) continue;\n\n                isInGroup = (hasLegendgroup && fullData[i].legendgroup === legendgroup);\n\n                if(!isInGroup && fullData[i].visible === true && !Registry.traceIs(fullData[i], 'notLegendIsolatable')) {\n                    isIsolated = false;\n                    break;\n                }\n            }\n\n            for(i = 0; i < fullData.length; i++) {\n                // False is sticky; we don't change it.\n                if(fullData[i].visible === false) continue;\n\n                if(Registry.traceIs(fullData[i], 'notLegendIsolatable')) {\n                    continue;\n                }\n\n                switch(fullTrace.visible) {\n                    case 'legendonly':\n                        setVisibility(fullData[i], true);\n                        break;\n                    case true:\n                        otherState = isIsolated ? true : 'legendonly';\n                        isClicked = fullData[i] === fullTrace;\n                        isInGroup = isClicked || (hasLegendgroup && fullData[i].legendgroup === legendgroup);\n                        setVisibility(fullData[i], isInGroup ? true : otherState);\n                        break;\n                }\n            }\n        }\n\n        for(i = 0; i < carrs.length; i++) {\n            kcont = carrs[i];\n            if(!kcont) continue;\n            var update = kcont.constructUpdate();\n\n            var updateKeys = Object.keys(update);\n            for(j = 0; j < updateKeys.length; j++) {\n                key = updateKeys[j];\n                val = attrUpdate[key] = attrUpdate[key] || [];\n                val[carrIdx[i]] = update[key];\n            }\n        }\n\n        // The length of the value arrays should be equal and any unspecified\n        // values should be explicitly undefined for them to get properly culled\n        // as updates and not accidentally reset to the default value. This fills\n        // out sparse arrays with the required number of undefined values:\n        keys = Object.keys(attrUpdate);\n        for(i = 0; i < keys.length; i++) {\n            key = keys[i];\n            for(j = 0; j < attrIndices.length; j++) {\n                // Use hasOwnPropety to protect against falsey values:\n                if(!attrUpdate[key].hasOwnProperty(j)) {\n                    attrUpdate[key][j] = undefined;\n                }\n            }\n        }\n\n        Plotly.restyle(gd, attrUpdate, attrIndices);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/legend/handle_click.js\n// module id = 240\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n    scrollBarWidth: 4,\n    scrollBarHeight: 20,\n    scrollBarColor: '#808BA4',\n    scrollBarMargin: 4\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/legend/constants.js\n// module id = 241\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar helpers = require('./helpers');\n\n\nmodule.exports = function getLegendData(calcdata, opts) {\n    var lgroupToTraces = {},\n        lgroups = [],\n        hasOneNonBlankGroup = false,\n        slicesShown = {},\n        lgroupi = 0;\n\n    var i, j;\n\n    function addOneItem(legendGroup, legendItem) {\n        // each '' legend group is treated as a separate group\n        if(legendGroup === '' || !helpers.isGrouped(opts)) {\n            var uniqueGroup = '~~i' + lgroupi; // TODO: check this against fullData legendgroups?\n\n            lgroups.push(uniqueGroup);\n            lgroupToTraces[uniqueGroup] = [[legendItem]];\n            lgroupi++;\n        }\n        else if(lgroups.indexOf(legendGroup) === -1) {\n            lgroups.push(legendGroup);\n            hasOneNonBlankGroup = true;\n            lgroupToTraces[legendGroup] = [[legendItem]];\n        }\n        else lgroupToTraces[legendGroup].push([legendItem]);\n    }\n\n    // build an { legendgroup: [cd0, cd0], ... } object\n    for(i = 0; i < calcdata.length; i++) {\n        var cd = calcdata[i],\n            cd0 = cd[0],\n            trace = cd0.trace,\n            lgroup = trace.legendgroup;\n\n        if(!helpers.legendGetsTrace(trace) || !trace.showlegend) continue;\n\n        if(Registry.traceIs(trace, 'pie')) {\n            if(!slicesShown[lgroup]) slicesShown[lgroup] = {};\n\n            for(j = 0; j < cd.length; j++) {\n                var labelj = cd[j].label;\n\n                if(!slicesShown[lgroup][labelj]) {\n                    addOneItem(lgroup, {\n                        label: labelj,\n                        color: cd[j].color,\n                        i: cd[j].i,\n                        trace: trace\n                    });\n\n                    slicesShown[lgroup][labelj] = true;\n                }\n            }\n        }\n\n        else addOneItem(lgroup, cd0);\n    }\n\n    // won't draw a legend in this case\n    if(!lgroups.length) return [];\n\n    // rearrange lgroupToTraces into a d3-friendly array of arrays\n    var lgroupsLength = lgroups.length,\n        ltraces,\n        legendData;\n\n    if(hasOneNonBlankGroup && helpers.isGrouped(opts)) {\n        legendData = new Array(lgroupsLength);\n\n        for(i = 0; i < lgroupsLength; i++) {\n            ltraces = lgroupToTraces[lgroups[i]];\n            legendData[i] = helpers.isReversed(opts) ? ltraces.reverse() : ltraces;\n        }\n    }\n    else {\n        // collapse all groups into one if all groups are blank\n        legendData = [new Array(lgroupsLength)];\n\n        for(i = 0; i < lgroupsLength; i++) {\n            ltraces = lgroupToTraces[lgroups[i]][0];\n            legendData[0][helpers.isReversed(opts) ? lgroupsLength - i - 1 : i] = ltraces;\n        }\n        lgroupsLength = 1;\n    }\n\n    // needed in repositionLegend\n    opts._lgroupsLength = lgroupsLength;\n    return legendData;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/legend/get_legend_data.js\n// module id = 242\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Color = require('../../components/color');\nvar castOption = require('./helpers').castOption;\n\nmodule.exports = function styleOne(s, pt, trace) {\n    var line = trace.marker.line;\n    var lineColor = castOption(line.color, pt.pts) || Color.defaultLine;\n    var lineWidth = castOption(line.width, pt.pts) || 0;\n\n    s.style({'stroke-width': lineWidth})\n        .call(Color.fill, pt.color)\n        .call(Color.stroke, lineColor);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/pie/style_one.js\n// module id = 243\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\n\nexports.formatPiePercent = function formatPiePercent(v, separators) {\n    var vRounded = (v * 100).toPrecision(3);\n    if(vRounded.lastIndexOf('.') !== -1) {\n        vRounded = vRounded.replace(/[.]?0+$/, '');\n    }\n    return Lib.numSeparate(vRounded, separators) + '%';\n};\n\nexports.formatPieValue = function formatPieValue(v, separators) {\n    var vRounded = v.toPrecision(10);\n    if(vRounded.lastIndexOf('.') !== -1) {\n        vRounded = vRounded.replace(/[.]?0+$/, '');\n    }\n    return Lib.numSeparate(vRounded, separators);\n};\n\nexports.getFirstFilled = function getFirstFilled(array, indices) {\n    if(!Array.isArray(array)) return;\n    for(var i = 0; i < indices.length; i++) {\n        var v = array[indices[i]];\n        if(v || v === 0) return v;\n    }\n};\n\nexports.castOption = function castOption(item, indices) {\n    if(Array.isArray(item)) return exports.getFirstFilled(item, indices);\n    else if(item) return item;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/pie/helpers.js\n// module id = 244\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar drawModule = require('./draw');\nvar clickModule = require('./click');\n\nmodule.exports = {\n    moduleType: 'component',\n    name: 'annotations',\n\n    layoutAttributes: require('./attributes'),\n    supplyLayoutDefaults: require('./defaults'),\n    includeBasePlot: require('../../plots/cartesian/include_components')('annotations'),\n\n    calcAutorange: require('./calc_autorange'),\n    draw: drawModule.draw,\n    drawOne: drawModule.drawOne,\n    drawRaw: drawModule.drawRaw,\n\n    hasClickToShow: clickModule.hasClickToShow,\n    onClick: clickModule.onClick,\n\n    convertCoords: require('./convert_coords')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations/index.js\n// module id = 245\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Color = require('../color');\n\nvar ARROWPATHS = require('./arrow_paths');\n\n/**\n * Add arrowhead(s) to a path or line element\n *\n * @param {d3.selection} el3: a d3-selected line or path element\n *\n * @param {string} ends: 'none', 'start', 'end', or 'start+end' for which ends get arrowheads\n *\n * @param {object} options: style information. Must have all the following:\n * @param {number} options.arrowhead: end head style - see ./arrow_paths\n * @param {number} options.startarrowhead: start head style - see ./arrow_paths\n * @param {number} options.arrowsize: relative size of the end head vs line width\n * @param {number} options.startarrowsize: relative size of the start head vs line width\n * @param {number} options.standoff: distance in px to move the end arrow point from its target\n * @param {number} options.startstandoff: distance in px to move the start arrow point from its target\n * @param {number} options.arrowwidth: width of the arrow line\n * @param {string} options.arrowcolor: color of the arrow line, for the head to match\n *     Note that the opacity of this color is ignored, as it's assumed the container\n *     of both the line and head has opacity applied to it so there isn't greater opacity\n *     where they overlap.\n */\nmodule.exports = function drawArrowHead(el3, ends, options) {\n    var el = el3.node();\n    var headStyle = ARROWPATHS[options.arrowhead || 0];\n    var startHeadStyle = ARROWPATHS[options.startarrowhead || 0];\n    var scale = (options.arrowwidth || 1) * (options.arrowsize || 1);\n    var startScale = (options.arrowwidth || 1) * (options.startarrowsize || 1);\n    var doStart = ends.indexOf('start') >= 0;\n    var doEnd = ends.indexOf('end') >= 0;\n    var backOff = headStyle.backoff * scale + options.standoff;\n    var startBackOff = startHeadStyle.backoff * startScale + options.startstandoff;\n\n    var start, end, startRot, endRot;\n\n    if(el.nodeName === 'line') {\n        start = {x: +el3.attr('x1'), y: +el3.attr('y1')};\n        end = {x: +el3.attr('x2'), y: +el3.attr('y2')};\n\n        var dx = start.x - end.x;\n        var dy = start.y - end.y;\n\n        startRot = Math.atan2(dy, dx);\n        endRot = startRot + Math.PI;\n        if(backOff && startBackOff) {\n            if(backOff + startBackOff > Math.sqrt(dx * dx + dy * dy)) {\n                hideLine();\n                return;\n            }\n        }\n\n        if(backOff) {\n            if(backOff * backOff > dx * dx + dy * dy) {\n                hideLine();\n                return;\n            }\n            var backOffX = backOff * Math.cos(startRot),\n                backOffY = backOff * Math.sin(startRot);\n\n            end.x += backOffX;\n            end.y += backOffY;\n            el3.attr({x2: end.x, y2: end.y});\n\n        }\n\n        if(startBackOff) {\n            if(startBackOff * startBackOff > dx * dx + dy * dy) {\n                hideLine();\n                return;\n            }\n            var startBackOffX = startBackOff * Math.cos(startRot),\n                startbackOffY = startBackOff * Math.sin(startRot);\n\n            start.x -= startBackOffX;\n            start.y -= startbackOffY;\n            el3.attr({x1: start.x, y1: start.y});\n\n        }\n    }\n    else if(el.nodeName === 'path') {\n        var pathlen = el.getTotalLength(),\n            // using dash to hide the backOff region of the path.\n            // if we ever allow dash for the arrow we'll have to\n            // do better than this hack... maybe just manually\n            // combine the two\n            dashArray = '';\n\n        if(pathlen < backOff + startBackOff) {\n            hideLine();\n            return;\n        }\n\n\n        var start0 = el.getPointAtLength(0);\n        var dstart = el.getPointAtLength(0.1);\n\n        startRot = Math.atan2(start0.y - dstart.y, start0.x - dstart.x);\n        start = el.getPointAtLength(Math.min(startBackOff, pathlen));\n\n        dashArray = '0px,' + startBackOff + 'px,';\n\n        var end0 = el.getPointAtLength(pathlen);\n        var dend = el.getPointAtLength(pathlen - 0.1);\n\n        endRot = Math.atan2(end0.y - dend.y, end0.x - dend.x);\n        end = el.getPointAtLength(Math.max(0, pathlen - backOff));\n\n        var shortening = dashArray ? startBackOff + backOff : backOff;\n        dashArray += (pathlen - shortening) + 'px,' + pathlen + 'px';\n\n        el3.style('stroke-dasharray', dashArray);\n    }\n\n    function hideLine() { el3.style('stroke-dasharray', '0px,100px'); }\n\n    function drawhead(arrowHeadStyle, p, rot, arrowScale) {\n        if(!arrowHeadStyle.path) return;\n        if(arrowHeadStyle.noRotate) rot = 0;\n\n        d3.select(el.parentNode).append('path')\n            .attr({\n                'class': el3.attr('class'),\n                d: arrowHeadStyle.path,\n                transform:\n                    'translate(' + p.x + ',' + p.y + ')' +\n                    (rot ? 'rotate(' + (rot * 180 / Math.PI) + ')' : '') +\n                    'scale(' + arrowScale + ')'\n            })\n            .style({\n                fill: Color.rgb(options.arrowcolor),\n                'stroke-width': 0\n            });\n    }\n\n    if(doStart) drawhead(startHeadStyle, start, startRot, startScale);\n    if(doEnd) drawhead(headStyle, end, endRot, scale);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations/draw_arrow_head.js\n// module id = 246\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Plotly = require('../../plotly');\n\n\nmodule.exports = {\n    hasClickToShow: hasClickToShow,\n    onClick: onClick\n};\n\n/*\n * hasClickToShow: does the given hoverData have ANY annotations which will\n * turn ON if we click here? (used by hover events to set cursor)\n *\n * gd: graphDiv\n * hoverData: a hoverData array, as included with the *plotly_hover* or\n *     *plotly_click* events in the `points` attribute\n *\n * returns: boolean\n */\nfunction hasClickToShow(gd, hoverData) {\n    var sets = getToggleSets(gd, hoverData);\n    return sets.on.length > 0 || sets.explicitOff.length > 0;\n}\n\n/*\n * onClick: perform the toggling (via Plotly.update) implied by clicking\n * at this hoverData\n *\n * gd: graphDiv\n * hoverData: a hoverData array, as included with the *plotly_hover* or\n *     *plotly_click* events in the `points` attribute\n *\n * returns: Promise that the update is complete\n */\nfunction onClick(gd, hoverData) {\n    var toggleSets = getToggleSets(gd, hoverData),\n        onSet = toggleSets.on,\n        offSet = toggleSets.off.concat(toggleSets.explicitOff),\n        update = {},\n        i;\n\n    if(!(onSet.length || offSet.length)) return;\n\n    for(i = 0; i < onSet.length; i++) {\n        update['annotations[' + onSet[i] + '].visible'] = true;\n    }\n\n    for(i = 0; i < offSet.length; i++) {\n        update['annotations[' + offSet[i] + '].visible'] = false;\n    }\n\n    return Plotly.update(gd, {}, update);\n}\n\n/*\n * getToggleSets: find the annotations which will turn on or off at this\n * hoverData\n *\n * gd: graphDiv\n * hoverData: a hoverData array, as included with the *plotly_hover* or\n *     *plotly_click* events in the `points` attribute\n *\n * returns: {\n *   on: Array (indices of annotations to turn on),\n *   off: Array (indices to turn off because you're not hovering on them),\n *   explicitOff: Array (indices to turn off because you *are* hovering on them)\n * }\n */\nfunction getToggleSets(gd, hoverData) {\n    var annotations = gd._fullLayout.annotations,\n        onSet = [],\n        offSet = [],\n        explicitOffSet = [],\n        hoverLen = (hoverData || []).length;\n\n    var i, j, anni, showMode, pointj, xa, ya, toggleType;\n\n    for(i = 0; i < annotations.length; i++) {\n        anni = annotations[i];\n        showMode = anni.clicktoshow;\n\n        if(showMode) {\n            for(j = 0; j < hoverLen; j++) {\n                pointj = hoverData[j];\n                xa = pointj.xaxis;\n                ya = pointj.yaxis;\n\n                if(xa._id === anni.xref &&\n                    ya._id === anni.yref &&\n                    xa.d2r(pointj.x) === clickData2r(anni._xclick, xa) &&\n                    ya.d2r(pointj.y) === clickData2r(anni._yclick, ya)\n                ) {\n                    // match! toggle this annotation\n                    // regardless of its clicktoshow mode\n                    // but if it's onout mode, off is implicit\n                    if(anni.visible) {\n                        if(showMode === 'onout') toggleType = offSet;\n                        else toggleType = explicitOffSet;\n                    }\n                    else {\n                        toggleType = onSet;\n                    }\n                    toggleType.push(i);\n                    break;\n                }\n            }\n\n            if(j === hoverLen) {\n                // no match - only turn this annotation OFF, and only if\n                // showmode is 'onout'\n                if(anni.visible && showMode === 'onout') offSet.push(i);\n            }\n        }\n    }\n\n    return {on: onSet, off: offSet, explicitOff: explicitOffSet};\n}\n\n// to handle log axes until v2\nfunction clickData2r(d, ax) {\n    return ax.type === 'log' ? ax.l2r(d) : ax.d2r(d);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations/click.js\n// module id = 247\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\nvar handleAnnotationDefaults = require('./annotation_defaults');\n\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut) {\n    var opts = {\n        name: 'annotations',\n        handleItemDefaults: handleAnnotationDefaults\n    };\n\n    handleArrayContainerDefaults(layoutIn, layoutOut, opts);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations/defaults.js\n// module id = 248\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar handleAnnotationCommonDefaults = require('./common_defaults');\nvar attributes = require('./attributes');\n\n\nmodule.exports = function handleAnnotationDefaults(annIn, annOut, fullLayout, opts, itemOpts) {\n    opts = opts || {};\n    itemOpts = itemOpts || {};\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(annIn, annOut, attributes, attr, dflt);\n    }\n\n    var visible = coerce('visible', !itemOpts.itemIsNotPlainObject);\n    var clickToShow = coerce('clicktoshow');\n\n    if(!(visible || clickToShow)) return annOut;\n\n    handleAnnotationCommonDefaults(annIn, annOut, fullLayout, coerce);\n\n    var showArrow = annOut.showarrow;\n\n    // positioning\n    var axLetters = ['x', 'y'],\n        arrowPosDflt = [-10, -30],\n        gdMock = {_fullLayout: fullLayout};\n    for(var i = 0; i < 2; i++) {\n        var axLetter = axLetters[i];\n\n        // xref, yref\n        var axRef = Axes.coerceRef(annIn, annOut, gdMock, axLetter, '', 'paper');\n\n        // x, y\n        Axes.coercePosition(annOut, gdMock, coerce, axRef, axLetter, 0.5);\n\n        if(showArrow) {\n            var arrowPosAttr = 'a' + axLetter,\n                // axref, ayref\n                aaxRef = Axes.coerceRef(annIn, annOut, gdMock, arrowPosAttr, 'pixel');\n\n            // for now the arrow can only be on the same axis or specified as pixels\n            // TODO: sometime it might be interesting to allow it to be on *any* axis\n            // but that would require updates to drawing & autorange code and maybe more\n            if(aaxRef !== 'pixel' && aaxRef !== axRef) {\n                aaxRef = annOut[arrowPosAttr] = 'pixel';\n            }\n\n            // ax, ay\n            var aDflt = (aaxRef === 'pixel') ? arrowPosDflt[i] : 0.4;\n            Axes.coercePosition(annOut, gdMock, coerce, aaxRef, arrowPosAttr, aDflt);\n        }\n\n        // xanchor, yanchor\n        coerce(axLetter + 'anchor');\n\n        // xshift, yshift\n        coerce(axLetter + 'shift');\n    }\n\n    // if you have one coordinate you should have both\n    Lib.noneOrAll(annIn, annOut, ['x', 'y']);\n\n    // if you have one part of arrow length you should have both\n    if(showArrow) {\n        Lib.noneOrAll(annIn, annOut, ['ax', 'ay']);\n    }\n\n    if(clickToShow) {\n        var xClick = coerce('xclick');\n        var yClick = coerce('yclick');\n\n        // put the actual click data to bind to into private attributes\n        // so we don't have to do this little bit of logic on every hover event\n        annOut._xclick = (xClick === undefined) ?\n            annOut.x :\n            Axes.cleanPosition(xClick, gdMock, annOut.xref);\n        annOut._yclick = (yClick === undefined) ?\n            annOut.y :\n            Axes.cleanPosition(yClick, gdMock, annOut.yref);\n    }\n\n    return annOut;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations/annotation_defaults.js\n// module id = 249\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\n\nvar draw = require('./draw').draw;\n\n\nmodule.exports = function calcAutorange(gd) {\n    var fullLayout = gd._fullLayout,\n        annotationList = Lib.filterVisible(fullLayout.annotations);\n\n    if(!annotationList.length || !gd._fullData.length) return;\n\n    var annotationAxes = {};\n    annotationList.forEach(function(ann) {\n        annotationAxes[ann.xref] = 1;\n        annotationAxes[ann.yref] = 1;\n    });\n\n    for(var axId in annotationAxes) {\n        var ax = Axes.getFromId(gd, axId);\n        if(ax && ax.autorange) {\n            return Lib.syncOrAsync([\n                draw,\n                annAutorange\n            ], gd);\n        }\n    }\n};\n\nfunction annAutorange(gd) {\n    var fullLayout = gd._fullLayout;\n\n    // find the bounding boxes for each of these annotations'\n    // relative to their anchor points\n    // use the arrow and the text bg rectangle,\n    // as the whole anno may include hidden text in its bbox\n    Lib.filterVisible(fullLayout.annotations).forEach(function(ann) {\n        var xa = Axes.getFromId(gd, ann.xref),\n            ya = Axes.getFromId(gd, ann.yref),\n            headSize = 3 * ann.arrowsize * ann.arrowwidth || 0,\n            startHeadSize = 3 * ann.startarrowsize * ann.arrowwidth || 0;\n\n        var headPlus, headMinus, startHeadPlus, startHeadMinus;\n\n        if(xa && xa.autorange) {\n            headPlus = headSize + ann.xshift;\n            headMinus = headSize - ann.xshift;\n            startHeadPlus = startHeadSize + ann.xshift;\n            startHeadMinus = startHeadSize - ann.xshift;\n\n            if(ann.axref === ann.xref) {\n                // expand for the arrowhead (padded by arrowhead)\n                Axes.expand(xa, [xa.r2c(ann.x)], {\n                    ppadplus: headPlus,\n                    ppadminus: headMinus\n                });\n                // again for the textbox (padded by textbox)\n                Axes.expand(xa, [xa.r2c(ann.ax)], {\n                    ppadplus: Math.max(ann._xpadplus, startHeadPlus),\n                    ppadminus: Math.max(ann._xpadminus, startHeadMinus)\n                });\n            }\n            else {\n                startHeadPlus = ann.ax ? startHeadPlus + ann.ax : startHeadPlus;\n                startHeadMinus = ann.ax ? startHeadMinus - ann.ax : startHeadMinus;\n                Axes.expand(xa, [xa.r2c(ann.x)], {\n                    ppadplus: Math.max(ann._xpadplus, headPlus, startHeadPlus),\n                    ppadminus: Math.max(ann._xpadminus, headMinus, startHeadMinus)\n                });\n            }\n        }\n\n        if(ya && ya.autorange) {\n            headPlus = headSize - ann.yshift;\n            headMinus = headSize + ann.yshift;\n            startHeadPlus = startHeadSize - ann.yshift;\n            startHeadMinus = startHeadSize + ann.yshift;\n\n            if(ann.ayref === ann.yref) {\n                Axes.expand(ya, [ya.r2c(ann.y)], {\n                    ppadplus: headPlus,\n                    ppadminus: headMinus\n                });\n                Axes.expand(ya, [ya.r2c(ann.ay)], {\n                    ppadplus: Math.max(ann._ypadplus, startHeadPlus),\n                    ppadminus: Math.max(ann._ypadminus, startHeadMinus)\n                });\n            }\n            else {\n                startHeadPlus = ann.ay ? startHeadPlus + ann.ay : startHeadPlus;\n                startHeadMinus = ann.ay ? startHeadMinus - ann.ay : startHeadMinus;\n                Axes.expand(ya, [ya.r2c(ann.y)], {\n                    ppadplus: Math.max(ann._ypadplus, headPlus, startHeadPlus),\n                    ppadminus: Math.max(ann._ypadminus, headMinus, startHeadMinus)\n                });\n            }\n        }\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations/calc_autorange.js\n// module id = 250\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar toLogRange = require('../../lib/to_log_range');\n\n/*\n * convertCoords: when converting an axis between log and linear\n * you need to alter any annotations on that axis to keep them\n * pointing at the same data point.\n * In v2.0 this will become obsolete\n *\n * gd: the plot div\n * ax: the axis being changed\n * newType: the type it's getting\n * doExtra: function(attr, val) from inside relayout that sets the attribute.\n *     Use this to make the changes as it's aware if any other changes in the\n *     same relayout call should override this conversion.\n */\nmodule.exports = function convertCoords(gd, ax, newType, doExtra) {\n    ax = ax || {};\n\n    var toLog = (newType === 'log') && (ax.type === 'linear'),\n        fromLog = (newType === 'linear') && (ax.type === 'log');\n\n    if(!(toLog || fromLog)) return;\n\n    var annotations = gd._fullLayout.annotations,\n        axLetter = ax._id.charAt(0),\n        ann,\n        attrPrefix;\n\n    function convert(attr) {\n        var currentVal = ann[attr],\n            newVal = null;\n\n        if(toLog) newVal = toLogRange(currentVal, ax.range);\n        else newVal = Math.pow(10, currentVal);\n\n        // if conversion failed, delete the value so it gets a default value\n        if(!isNumeric(newVal)) newVal = null;\n\n        doExtra(attrPrefix + attr, newVal);\n    }\n\n    for(var i = 0; i < annotations.length; i++) {\n        ann = annotations[i];\n        attrPrefix = 'annotations[' + i + '].';\n\n        if(ann[axLetter + 'ref'] === ax._id) convert(axLetter);\n        if(ann['a' + axLetter + 'ref'] === ax._id) convert('a' + axLetter);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations/convert_coords.js\n// module id = 251\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\n\nmodule.exports = {\n    moduleType: 'component',\n    name: 'annotations3d',\n\n    schema: {\n        subplots: {\n            scene: {annotations: require('./attributes')}\n        }\n    },\n\n    layoutAttributes: require('./attributes'),\n    handleDefaults: require('./defaults'),\n    includeBasePlot: includeGL3D,\n\n    convert: require('./convert'),\n    draw: require('./draw')\n};\n\nfunction includeGL3D(layoutIn, layoutOut) {\n    var GL3D = Registry.subplotsRegistry.gl3d;\n    if(!GL3D) return;\n\n    var attrRegex = GL3D.attrRegex;\n\n    var keys = Object.keys(layoutIn);\n    for(var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        if(attrRegex.test(k) && (layoutIn[k].annotations || []).length) {\n            Lib.pushUnique(layoutOut._basePlotModules, GL3D);\n            Lib.pushUnique(layoutOut._subplots.gl3d, k);\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations3d/index.js\n// module id = 252\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\nvar handleAnnotationCommonDefaults = require('../annotations/common_defaults');\nvar attributes = require('./attributes');\n\nmodule.exports = function handleDefaults(sceneLayoutIn, sceneLayoutOut, opts) {\n    handleArrayContainerDefaults(sceneLayoutIn, sceneLayoutOut, {\n        name: 'annotations',\n        handleItemDefaults: handleAnnotationDefaults,\n        fullLayout: opts.fullLayout\n    });\n};\n\nfunction handleAnnotationDefaults(annIn, annOut, sceneLayout, opts, itemOpts) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(annIn, annOut, attributes, attr, dflt);\n    }\n\n    function coercePosition(axLetter) {\n        var axName = axLetter + 'axis';\n\n        // mock in such way that getFromId grabs correct 3D axis\n        var gdMock = { _fullLayout: {} };\n        gdMock._fullLayout[axName] = sceneLayout[axName];\n\n        return Axes.coercePosition(annOut, gdMock, coerce, axLetter, axLetter, 0.5);\n    }\n\n\n    var visible = coerce('visible', !itemOpts.itemIsNotPlainObject);\n    if(!visible) return annOut;\n\n    handleAnnotationCommonDefaults(annIn, annOut, opts.fullLayout, coerce);\n\n    coercePosition('x');\n    coercePosition('y');\n    coercePosition('z');\n\n    // if you have one coordinate you should all three\n    Lib.noneOrAll(annIn, annOut, ['x', 'y', 'z']);\n\n    // hard-set here for completeness\n    annOut.xref = 'x';\n    annOut.yref = 'y';\n    annOut.zref = 'z';\n\n    coerce('xanchor');\n    coerce('yanchor');\n    coerce('xshift');\n    coerce('yshift');\n\n    if(annOut.showarrow) {\n        annOut.axref = 'pixel';\n        annOut.ayref = 'pixel';\n\n        // TODO maybe default values should be bigger than the 2D case?\n        coerce('ax', -10);\n        coerce('ay', -30);\n\n        // if you have one part of arrow length you should have both\n        Lib.noneOrAll(annIn, annOut, ['ax', 'ay']);\n    }\n\n    return annOut;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations3d/defaults.js\n// module id = 253\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\n\nmodule.exports = function convert(scene) {\n    var fullSceneLayout = scene.fullSceneLayout;\n    var anns = fullSceneLayout.annotations;\n\n    for(var i = 0; i < anns.length; i++) {\n        mockAnnAxes(anns[i], scene);\n    }\n\n    scene.fullLayout._infolayer\n        .selectAll('.annotation-' + scene.id)\n        .remove();\n};\n\nfunction mockAnnAxes(ann, scene) {\n    var fullSceneLayout = scene.fullSceneLayout;\n    var domain = fullSceneLayout.domain;\n    var size = scene.fullLayout._size;\n\n    var base = {\n        // this gets fill in on render\n        pdata: null,\n\n        // to get setConvert to not execute cleanly\n        type: 'linear',\n\n        // don't try to update them on `editable: true`\n        autorange: false,\n\n        // set infinite range so that annotation draw routine\n        // does not try to remove 'outside-range' annotations,\n        // this case is handled in the render loop\n        range: [-Infinity, Infinity]\n    };\n\n    ann._xa = {};\n    Lib.extendFlat(ann._xa, base);\n    Axes.setConvert(ann._xa);\n    ann._xa._offset = size.l + domain.x[0] * size.w;\n    ann._xa.l2p = function() {\n        return 0.5 * (1 + ann.pdata[0] / ann.pdata[3]) * size.w * (domain.x[1] - domain.x[0]);\n    };\n\n    ann._ya = {};\n    Lib.extendFlat(ann._ya, base);\n    Axes.setConvert(ann._ya);\n    ann._ya._offset = size.t + (1 - domain.y[1]) * size.h;\n    ann._ya.l2p = function() {\n        return 0.5 * (1 - ann.pdata[1] / ann.pdata[3]) * size.h * (domain.y[1] - domain.y[0]);\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations3d/convert.js\n// module id = 254\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar drawRaw = require('../annotations/draw').drawRaw;\nvar project = require('../../plots/gl3d/project');\nvar axLetters = ['x', 'y', 'z'];\n\nmodule.exports = function draw(scene) {\n    var fullSceneLayout = scene.fullSceneLayout;\n    var dataScale = scene.dataScale;\n    var anns = fullSceneLayout.annotations;\n\n    for(var i = 0; i < anns.length; i++) {\n        var ann = anns[i];\n        var annotationIsOffscreen = false;\n\n        for(var j = 0; j < 3; j++) {\n            var axLetter = axLetters[j];\n            var pos = ann[axLetter];\n            var ax = fullSceneLayout[axLetter + 'axis'];\n            var posFraction = ax.r2fraction(pos);\n\n            if(posFraction < 0 || posFraction > 1) {\n                annotationIsOffscreen = true;\n                break;\n            }\n        }\n\n        if(annotationIsOffscreen) {\n            scene.fullLayout._infolayer\n                .select('.annotation-' + scene.id + '[data-index=\"' + i + '\"]')\n                .remove();\n        } else {\n            ann.pdata = project(scene.glplot.cameraParams, [\n                fullSceneLayout.xaxis.r2l(ann.x) * dataScale[0],\n                fullSceneLayout.yaxis.r2l(ann.y) * dataScale[1],\n                fullSceneLayout.zaxis.r2l(ann.z) * dataScale[2]\n            ]);\n\n            drawRaw(scene.graphDiv, ann, i, scene.id, ann._xa, ann._ya);\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/annotations3d/draw.js\n// module id = 255\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nfunction xformMatrix(m, v) {\n    var out = [0, 0, 0, 0];\n    var i, j;\n\n    for(i = 0; i < 4; ++i) {\n        for(j = 0; j < 4; ++j) {\n            out[j] += m[4 * i + j] * v[i];\n        }\n    }\n\n    return out;\n}\n\nfunction project(camera, v) {\n    var p = xformMatrix(camera.projection,\n        xformMatrix(camera.view,\n        xformMatrix(camera.model, [v[0], v[1], v[2], 1])));\n    return p;\n}\n\nmodule.exports = project;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/plots/gl3d/project.js\n// module id = 256\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar drawModule = require('./draw');\n\nmodule.exports = {\n    moduleType: 'component',\n    name: 'shapes',\n\n    layoutAttributes: require('./attributes'),\n    supplyLayoutDefaults: require('./defaults'),\n    includeBasePlot: require('../../plots/cartesian/include_components')('shapes'),\n\n    calcAutorange: require('./calc_autorange'),\n    draw: drawModule.draw,\n    drawOne: drawModule.drawOne\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/shapes/index.js\n// module id = 257\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Plotly = require('../../plotly');\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar Color = require('../color');\nvar Drawing = require('../drawing');\n\nvar dragElement = require('../dragelement');\nvar setCursor = require('../../lib/setcursor');\n\nvar constants = require('./constants');\nvar helpers = require('./helpers');\n\n\n// Shapes are stored in gd.layout.shapes, an array of objects\n// index can point to one item in this array,\n//  or non-numeric to simply add a new one\n//  or -1 to modify all existing\n// opt can be the full options object, or one key (to be set to value)\n//  or undefined to simply redraw\n// if opt is blank, val can be 'add' or a full options object to add a new\n//  annotation at that point in the array, or 'remove' to delete this one\n\nmodule.exports = {\n    draw: draw,\n    drawOne: drawOne\n};\n\nfunction draw(gd) {\n    var fullLayout = gd._fullLayout;\n\n    // Remove previous shapes before drawing new in shapes in fullLayout.shapes\n    fullLayout._shapeUpperLayer.selectAll('path').remove();\n    fullLayout._shapeLowerLayer.selectAll('path').remove();\n    fullLayout._shapeSubplotLayers.selectAll('path').remove();\n\n    for(var i = 0; i < fullLayout.shapes.length; i++) {\n        if(fullLayout.shapes[i].visible) {\n            drawOne(gd, i);\n        }\n    }\n\n    // may need to resurrect this if we put text (LaTeX) in shapes\n    // return Plots.previousPromises(gd);\n}\n\nfunction drawOne(gd, index) {\n    // remove the existing shape if there is one.\n    // because indices can change, we need to look in all shape layers\n    gd._fullLayout._paperdiv\n        .selectAll('.shapelayer [data-index=\"' + index + '\"]')\n        .remove();\n\n    var optionsIn = (gd.layout.shapes || [])[index],\n        options = gd._fullLayout.shapes[index];\n\n    // this shape is gone - quit now after deleting it\n    // TODO: use d3 idioms instead of deleting and redrawing every time\n    if(!optionsIn || options.visible === false) return;\n\n    if(options.layer !== 'below') {\n        drawShape(gd._fullLayout._shapeUpperLayer);\n    }\n    else if(options.xref === 'paper' || options.yref === 'paper') {\n        drawShape(gd._fullLayout._shapeLowerLayer);\n    }\n    else {\n        var plotinfo = gd._fullLayout._plots[options.xref + options.yref];\n        if(plotinfo) {\n            var mainPlot = plotinfo.mainplotinfo || plotinfo;\n            drawShape(mainPlot.shapelayer);\n        }\n        else {\n            // Fall back to _shapeLowerLayer in case the requested subplot doesn't exist.\n            // This can happen if you reference the shape to an x / y axis combination\n            // that doesn't have any data on it (and layer is below)\n            drawShape(gd._fullLayout._shapeLowerLayer);\n        }\n    }\n\n    function drawShape(shapeLayer) {\n        var attrs = {\n                'data-index': index,\n                'fill-rule': 'evenodd',\n                d: getPathString(gd, options)\n            },\n            lineColor = options.line.width ?\n                options.line.color : 'rgba(0,0,0,0)';\n\n        var path = shapeLayer.append('path')\n            .attr(attrs)\n            .style('opacity', options.opacity)\n            .call(Color.stroke, lineColor)\n            .call(Color.fill, options.fillcolor)\n            .call(Drawing.dashLine, options.line.dash, options.line.width);\n\n        // note that for layer=\"below\" the clipAxes can be different from the\n        // subplot we're drawing this in. This could cause problems if the shape\n        // spans two subplots. See https://github.com/plotly/plotly.js/issues/1452\n        var clipAxes = (options.xref + options.yref).replace(/paper/g, '');\n\n        path.call(Drawing.setClipUrl, clipAxes ?\n            ('clip' + gd._fullLayout._uid + clipAxes) :\n            null\n        );\n\n        if(gd._context.edits.shapePosition) setupDragElement(gd, path, options, index);\n    }\n}\n\nfunction setupDragElement(gd, shapePath, shapeOptions, index) {\n    var MINWIDTH = 10,\n        MINHEIGHT = 10;\n\n    var update;\n    var x0, y0, x1, y1, astrX0, astrY0, astrX1, astrY1;\n    var n0, s0, w0, e0, astrN, astrS, astrW, astrE, optN, optS, optW, optE;\n    var pathIn, astrPath;\n\n    var xa, ya, x2p, y2p, p2x, p2y;\n\n    var dragOptions = {\n            element: shapePath.node(),\n            gd: gd,\n            prepFn: startDrag,\n            doneFn: endDrag\n        },\n        dragBBox = dragOptions.element.getBoundingClientRect(),\n        dragMode;\n\n    dragElement.init(dragOptions);\n\n    shapePath.node().onmousemove = updateDragMode;\n\n    function updateDragMode(evt) {\n        // choose 'move' or 'resize'\n        // based on initial position of cursor within the drag element\n        var w = dragBBox.right - dragBBox.left,\n            h = dragBBox.bottom - dragBBox.top,\n            x = evt.clientX - dragBBox.left,\n            y = evt.clientY - dragBBox.top,\n            cursor = (w > MINWIDTH && h > MINHEIGHT && !evt.shiftKey) ?\n                dragElement.getCursor(x / w, 1 - y / h) :\n                'move';\n\n        setCursor(shapePath, cursor);\n\n        // possible values 'move', 'sw', 'w', 'se', 'e', 'ne', 'n', 'nw' and 'w'\n        dragMode = cursor.split('-')[0];\n    }\n\n    function startDrag(evt) {\n        // setup conversion functions\n        xa = Axes.getFromId(gd, shapeOptions.xref);\n        ya = Axes.getFromId(gd, shapeOptions.yref);\n\n        x2p = helpers.getDataToPixel(gd, xa);\n        y2p = helpers.getDataToPixel(gd, ya, true);\n        p2x = helpers.getPixelToData(gd, xa);\n        p2y = helpers.getPixelToData(gd, ya, true);\n\n        // setup update strings and initial values\n        var astr = 'shapes[' + index + ']';\n        if(shapeOptions.type === 'path') {\n            pathIn = shapeOptions.path;\n            astrPath = astr + '.path';\n        }\n        else {\n            x0 = x2p(shapeOptions.x0);\n            y0 = y2p(shapeOptions.y0);\n            x1 = x2p(shapeOptions.x1);\n            y1 = y2p(shapeOptions.y1);\n\n            astrX0 = astr + '.x0';\n            astrY0 = astr + '.y0';\n            astrX1 = astr + '.x1';\n            astrY1 = astr + '.y1';\n        }\n\n        if(x0 < x1) {\n            w0 = x0; astrW = astr + '.x0'; optW = 'x0';\n            e0 = x1; astrE = astr + '.x1'; optE = 'x1';\n        }\n        else {\n            w0 = x1; astrW = astr + '.x1'; optW = 'x1';\n            e0 = x0; astrE = astr + '.x0'; optE = 'x0';\n        }\n        if(y0 < y1) {\n            n0 = y0; astrN = astr + '.y0'; optN = 'y0';\n            s0 = y1; astrS = astr + '.y1'; optS = 'y1';\n        }\n        else {\n            n0 = y1; astrN = astr + '.y1'; optN = 'y1';\n            s0 = y0; astrS = astr + '.y0'; optS = 'y0';\n        }\n\n        update = {};\n\n        // setup dragMode and the corresponding handler\n        updateDragMode(evt);\n        dragOptions.moveFn = (dragMode === 'move') ? moveShape : resizeShape;\n    }\n\n    function endDrag() {\n        setCursor(shapePath);\n        Plotly.relayout(gd, update);\n    }\n\n    function moveShape(dx, dy) {\n        if(shapeOptions.type === 'path') {\n            var moveX = function moveX(x) { return p2x(x2p(x) + dx); };\n            if(xa && xa.type === 'date') moveX = helpers.encodeDate(moveX);\n\n            var moveY = function moveY(y) { return p2y(y2p(y) + dy); };\n            if(ya && ya.type === 'date') moveY = helpers.encodeDate(moveY);\n\n            shapeOptions.path = movePath(pathIn, moveX, moveY);\n            update[astrPath] = shapeOptions.path;\n        }\n        else {\n            update[astrX0] = shapeOptions.x0 = p2x(x0 + dx);\n            update[astrY0] = shapeOptions.y0 = p2y(y0 + dy);\n            update[astrX1] = shapeOptions.x1 = p2x(x1 + dx);\n            update[astrY1] = shapeOptions.y1 = p2y(y1 + dy);\n        }\n\n        shapePath.attr('d', getPathString(gd, shapeOptions));\n    }\n\n    function resizeShape(dx, dy) {\n        if(shapeOptions.type === 'path') {\n            // TODO: implement path resize\n            var moveX = function moveX(x) { return p2x(x2p(x) + dx); };\n            if(xa && xa.type === 'date') moveX = helpers.encodeDate(moveX);\n\n            var moveY = function moveY(y) { return p2y(y2p(y) + dy); };\n            if(ya && ya.type === 'date') moveY = helpers.encodeDate(moveY);\n\n            shapeOptions.path = movePath(pathIn, moveX, moveY);\n            update[astrPath] = shapeOptions.path;\n        }\n        else {\n            var newN = (~dragMode.indexOf('n')) ? n0 + dy : n0,\n                newS = (~dragMode.indexOf('s')) ? s0 + dy : s0,\n                newW = (~dragMode.indexOf('w')) ? w0 + dx : w0,\n                newE = (~dragMode.indexOf('e')) ? e0 + dx : e0;\n\n            if(newS - newN > MINHEIGHT) {\n                update[astrN] = shapeOptions[optN] = p2y(newN);\n                update[astrS] = shapeOptions[optS] = p2y(newS);\n            }\n\n            if(newE - newW > MINWIDTH) {\n                update[astrW] = shapeOptions[optW] = p2x(newW);\n                update[astrE] = shapeOptions[optE] = p2x(newE);\n            }\n        }\n\n        shapePath.attr('d', getPathString(gd, shapeOptions));\n    }\n}\n\nfunction getPathString(gd, options) {\n    var type = options.type,\n        xa = Axes.getFromId(gd, options.xref),\n        ya = Axes.getFromId(gd, options.yref),\n        gs = gd._fullLayout._size,\n        x2r,\n        x2p,\n        y2r,\n        y2p;\n\n    if(xa) {\n        x2r = helpers.shapePositionToRange(xa);\n        x2p = function(v) { return xa._offset + xa.r2p(x2r(v, true)); };\n    }\n    else {\n        x2p = function(v) { return gs.l + gs.w * v; };\n    }\n\n    if(ya) {\n        y2r = helpers.shapePositionToRange(ya);\n        y2p = function(v) { return ya._offset + ya.r2p(y2r(v, true)); };\n    }\n    else {\n        y2p = function(v) { return gs.t + gs.h * (1 - v); };\n    }\n\n    if(type === 'path') {\n        if(xa && xa.type === 'date') x2p = helpers.decodeDate(x2p);\n        if(ya && ya.type === 'date') y2p = helpers.decodeDate(y2p);\n        return convertPath(options.path, x2p, y2p);\n    }\n\n    var x0 = x2p(options.x0),\n        x1 = x2p(options.x1),\n        y0 = y2p(options.y0),\n        y1 = y2p(options.y1);\n\n    if(type === 'line') return 'M' + x0 + ',' + y0 + 'L' + x1 + ',' + y1;\n    if(type === 'rect') return 'M' + x0 + ',' + y0 + 'H' + x1 + 'V' + y1 + 'H' + x0 + 'Z';\n    // circle\n    var cx = (x0 + x1) / 2,\n        cy = (y0 + y1) / 2,\n        rx = Math.abs(cx - x0),\n        ry = Math.abs(cy - y0),\n        rArc = 'A' + rx + ',' + ry,\n        rightPt = (cx + rx) + ',' + cy,\n        topPt = cx + ',' + (cy - ry);\n    return 'M' + rightPt + rArc + ' 0 1,1 ' + topPt +\n        rArc + ' 0 0,1 ' + rightPt + 'Z';\n}\n\n\nfunction convertPath(pathIn, x2p, y2p) {\n    // convert an SVG path string from data units to pixels\n    return pathIn.replace(constants.segmentRE, function(segment) {\n        var paramNumber = 0,\n            segmentType = segment.charAt(0),\n            xParams = constants.paramIsX[segmentType],\n            yParams = constants.paramIsY[segmentType],\n            nParams = constants.numParams[segmentType];\n\n        var paramString = segment.substr(1).replace(constants.paramRE, function(param) {\n            if(xParams[paramNumber]) param = x2p(param);\n            else if(yParams[paramNumber]) param = y2p(param);\n            paramNumber++;\n\n            if(paramNumber > nParams) param = 'X';\n            return param;\n        });\n\n        if(paramNumber > nParams) {\n            paramString = paramString.replace(/[\\s,]*X.*/, '');\n            Lib.log('Ignoring extra params in segment ' + segment);\n        }\n\n        return segmentType + paramString;\n    });\n}\n\nfunction movePath(pathIn, moveX, moveY) {\n    return pathIn.replace(constants.segmentRE, function(segment) {\n        var paramNumber = 0,\n            segmentType = segment.charAt(0),\n            xParams = constants.paramIsX[segmentType],\n            yParams = constants.paramIsY[segmentType],\n            nParams = constants.numParams[segmentType];\n\n        var paramString = segment.substr(1).replace(constants.paramRE, function(param) {\n            if(paramNumber >= nParams) return param;\n\n            if(xParams[paramNumber]) param = moveX(param);\n            else if(yParams[paramNumber]) param = moveY(param);\n\n            paramNumber++;\n\n            return param;\n        });\n\n        return segmentType + paramString;\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/shapes/draw.js\n// module id = 258\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\nvar handleShapeDefaults = require('./shape_defaults');\n\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut) {\n    var opts = {\n        name: 'shapes',\n        handleItemDefaults: handleShapeDefaults\n    };\n\n    handleArrayContainerDefaults(layoutIn, layoutOut, opts);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/shapes/defaults.js\n// module id = 259\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\n\nvar attributes = require('./attributes');\nvar helpers = require('./helpers');\n\n\nmodule.exports = function handleShapeDefaults(shapeIn, shapeOut, fullLayout, opts, itemOpts) {\n    opts = opts || {};\n    itemOpts = itemOpts || {};\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(shapeIn, shapeOut, attributes, attr, dflt);\n    }\n\n    var visible = coerce('visible', !itemOpts.itemIsNotPlainObject);\n\n    if(!visible) return shapeOut;\n\n    coerce('layer');\n    coerce('opacity');\n    coerce('fillcolor');\n    coerce('line.color');\n    coerce('line.width');\n    coerce('line.dash');\n\n    var dfltType = shapeIn.path ? 'path' : 'rect',\n        shapeType = coerce('type', dfltType);\n\n    // positioning\n    var axLetters = ['x', 'y'];\n    for(var i = 0; i < 2; i++) {\n        var axLetter = axLetters[i],\n            gdMock = {_fullLayout: fullLayout};\n\n        // xref, yref\n        var axRef = Axes.coerceRef(shapeIn, shapeOut, gdMock, axLetter, '', 'paper');\n\n        if(shapeType !== 'path') {\n            var dflt0 = 0.25,\n                dflt1 = 0.75,\n                ax,\n                pos2r,\n                r2pos;\n\n            if(axRef !== 'paper') {\n                ax = Axes.getFromId(gdMock, axRef);\n                r2pos = helpers.rangeToShapePosition(ax);\n                pos2r = helpers.shapePositionToRange(ax);\n            }\n            else {\n                pos2r = r2pos = Lib.identity;\n            }\n\n            // hack until V2.0 when log has regular range behavior - make it look like other\n            // ranges to send to coerce, then put it back after\n            // this is all to give reasonable default position behavior on log axes, which is\n            // a pretty unimportant edge case so we could just ignore this.\n            var attr0 = axLetter + '0',\n                attr1 = axLetter + '1',\n                in0 = shapeIn[attr0],\n                in1 = shapeIn[attr1];\n            shapeIn[attr0] = pos2r(shapeIn[attr0], true);\n            shapeIn[attr1] = pos2r(shapeIn[attr1], true);\n\n            // x0, x1 (and y0, y1)\n            Axes.coercePosition(shapeOut, gdMock, coerce, axRef, attr0, dflt0);\n            Axes.coercePosition(shapeOut, gdMock, coerce, axRef, attr1, dflt1);\n\n            // hack part 2\n            shapeOut[attr0] = r2pos(shapeOut[attr0]);\n            shapeOut[attr1] = r2pos(shapeOut[attr1]);\n            shapeIn[attr0] = in0;\n            shapeIn[attr1] = in1;\n        }\n    }\n\n    if(shapeType === 'path') {\n        coerce('path');\n    }\n    else {\n        Lib.noneOrAll(shapeIn, shapeOut, ['x0', 'x1', 'y0', 'y1']);\n    }\n\n    return shapeOut;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/shapes/shape_defaults.js\n// module id = 260\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\n\nvar constants = require('./constants');\nvar helpers = require('./helpers');\n\n\nmodule.exports = function calcAutorange(gd) {\n    var fullLayout = gd._fullLayout,\n        shapeList = Lib.filterVisible(fullLayout.shapes);\n\n    if(!shapeList.length || !gd._fullData.length) return;\n\n    for(var i = 0; i < shapeList.length; i++) {\n        var shape = shapeList[i],\n            ppad = shape.line.width / 2;\n\n        var ax, bounds;\n\n        if(shape.xref !== 'paper') {\n            ax = Axes.getFromId(gd, shape.xref);\n            bounds = shapeBounds(ax, shape.x0, shape.x1, shape.path, constants.paramIsX);\n            if(bounds) Axes.expand(ax, bounds, {ppad: ppad});\n        }\n\n        if(shape.yref !== 'paper') {\n            ax = Axes.getFromId(gd, shape.yref);\n            bounds = shapeBounds(ax, shape.y0, shape.y1, shape.path, constants.paramIsY);\n            if(bounds) Axes.expand(ax, bounds, {ppad: ppad});\n        }\n    }\n};\n\nfunction shapeBounds(ax, v0, v1, path, paramsToUse) {\n    var convertVal = (ax.type === 'category') ? ax.r2c : ax.d2c;\n\n    if(v0 !== undefined) return [convertVal(v0), convertVal(v1)];\n    if(!path) return;\n\n    var min = Infinity,\n        max = -Infinity,\n        segments = path.match(constants.segmentRE),\n        i,\n        segment,\n        drawnParam,\n        params,\n        val;\n\n    if(ax.type === 'date') convertVal = helpers.decodeDate(convertVal);\n\n    for(i = 0; i < segments.length; i++) {\n        segment = segments[i];\n        drawnParam = paramsToUse[segment.charAt(0)].drawn;\n        if(drawnParam === undefined) continue;\n\n        params = segments[i].substr(1).match(constants.paramRE);\n        if(!params || params.length < drawnParam) continue;\n\n        val = convertVal(params[drawnParam]);\n        if(val < min) min = val;\n        if(val > max) max = val;\n    }\n    if(max >= min) return [min, max];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/shapes/calc_autorange.js\n// module id = 261\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n    moduleType: 'component',\n    name: 'images',\n\n    layoutAttributes: require('./attributes'),\n    supplyLayoutDefaults: require('./defaults'),\n    includeBasePlot: require('../../plots/cartesian/include_components')('images'),\n\n    draw: require('./draw'),\n\n    convertCoords: require('./convert_coords')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/images/index.js\n// module id = 262\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\nvar name = 'images';\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut) {\n    var opts = {\n        name: name,\n        handleItemDefaults: imageDefaults\n    };\n\n    handleArrayContainerDefaults(layoutIn, layoutOut, opts);\n};\n\n\nfunction imageDefaults(imageIn, imageOut, fullLayout) {\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(imageIn, imageOut, attributes, attr, dflt);\n    }\n\n    var source = coerce('source');\n    var visible = coerce('visible', !!source);\n\n    if(!visible) return imageOut;\n\n    coerce('layer');\n    coerce('xanchor');\n    coerce('yanchor');\n    coerce('sizex');\n    coerce('sizey');\n    coerce('sizing');\n    coerce('opacity');\n\n    var gdMock = { _fullLayout: fullLayout },\n        axLetters = ['x', 'y'];\n\n    for(var i = 0; i < 2; i++) {\n        // 'paper' is the fallback axref\n        var axLetter = axLetters[i],\n            axRef = Axes.coerceRef(imageIn, imageOut, gdMock, axLetter, 'paper');\n\n        Axes.coercePosition(imageOut, gdMock, coerce, axRef, axLetter, 0);\n    }\n\n    return imageOut;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/images/defaults.js\n// module id = 263\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Drawing = require('../drawing');\nvar Axes = require('../../plots/cartesian/axes');\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout,\n        imageDataAbove = [],\n        imageDataSubplot = {},\n        imageDataBelow = [],\n        subplot,\n        i;\n\n    // Sort into top, subplot, and bottom layers\n    for(i = 0; i < fullLayout.images.length; i++) {\n        var img = fullLayout.images[i];\n\n        if(img.visible) {\n            if(img.layer === 'below' && img.xref !== 'paper' && img.yref !== 'paper') {\n                subplot = img.xref + img.yref;\n\n                var plotinfo = fullLayout._plots[subplot];\n\n                if(!plotinfo) {\n                    // Fall back to _imageLowerLayer in case the requested subplot doesn't exist.\n                    // This can happen if you reference the image to an x / y axis combination\n                    // that doesn't have any data on it (and layer is below)\n                    imageDataBelow.push(img);\n                    continue;\n                }\n\n                if(plotinfo.mainplot) {\n                    subplot = plotinfo.mainplot.id;\n                }\n\n                if(!imageDataSubplot[subplot]) {\n                    imageDataSubplot[subplot] = [];\n                }\n                imageDataSubplot[subplot].push(img);\n            } else if(img.layer === 'above') {\n                imageDataAbove.push(img);\n            } else {\n                imageDataBelow.push(img);\n            }\n        }\n    }\n\n\n    var anchors = {\n        x: {\n            left: { sizing: 'xMin', offset: 0 },\n            center: { sizing: 'xMid', offset: -1 / 2 },\n            right: { sizing: 'xMax', offset: -1 }\n        },\n        y: {\n            top: { sizing: 'YMin', offset: 0 },\n            middle: { sizing: 'YMid', offset: -1 / 2 },\n            bottom: { sizing: 'YMax', offset: -1 }\n        }\n    };\n\n\n    // Images must be converted to dataURL's for exporting.\n    function setImage(d) {\n        var thisImage = d3.select(this);\n\n        if(this.img && this.img.src === d.source) {\n            return;\n        }\n\n        thisImage.attr('xmlns', xmlnsNamespaces.svg);\n\n        var imagePromise = new Promise(function(resolve) {\n\n            var img = new Image();\n            this.img = img;\n\n            // If not set, a `tainted canvas` error is thrown\n            img.setAttribute('crossOrigin', 'anonymous');\n            img.onerror = errorHandler;\n            img.onload = function() {\n                var canvas = document.createElement('canvas');\n                canvas.width = this.width;\n                canvas.height = this.height;\n\n                var ctx = canvas.getContext('2d');\n                ctx.drawImage(this, 0, 0);\n\n                var dataURL = canvas.toDataURL('image/png');\n\n                thisImage.attr('xlink:href', dataURL);\n\n                // resolve promise in onload handler instead of on 'load' to support IE11\n                // see https://github.com/plotly/plotly.js/issues/1685\n                // for more details\n                resolve();\n            };\n\n\n            thisImage.on('error', errorHandler);\n\n            img.src = d.source;\n\n            function errorHandler() {\n                thisImage.remove();\n                resolve();\n            }\n        }.bind(this));\n\n        gd._promises.push(imagePromise);\n    }\n\n    function applyAttributes(d) {\n        var thisImage = d3.select(this);\n\n        // Axes if specified\n        var xa = Axes.getFromId(gd, d.xref),\n            ya = Axes.getFromId(gd, d.yref);\n\n        var size = fullLayout._size,\n            width = xa ? Math.abs(xa.l2p(d.sizex) - xa.l2p(0)) : d.sizex * size.w,\n            height = ya ? Math.abs(ya.l2p(d.sizey) - ya.l2p(0)) : d.sizey * size.h;\n\n        // Offsets for anchor positioning\n        var xOffset = width * anchors.x[d.xanchor].offset,\n            yOffset = height * anchors.y[d.yanchor].offset;\n\n        var sizing = anchors.x[d.xanchor].sizing + anchors.y[d.yanchor].sizing;\n\n        // Final positions\n        var xPos = (xa ? xa.r2p(d.x) + xa._offset : d.x * size.w + size.l) + xOffset,\n            yPos = (ya ? ya.r2p(d.y) + ya._offset : size.h - d.y * size.h + size.t) + yOffset;\n\n\n        // Construct the proper aspectRatio attribute\n        switch(d.sizing) {\n            case 'fill':\n                sizing += ' slice';\n                break;\n\n            case 'stretch':\n                sizing = 'none';\n                break;\n        }\n\n        thisImage.attr({\n            x: xPos,\n            y: yPos,\n            width: width,\n            height: height,\n            preserveAspectRatio: sizing,\n            opacity: d.opacity\n        });\n\n\n        // Set proper clipping on images\n        var xId = xa ? xa._id : '',\n            yId = ya ? ya._id : '',\n            clipAxes = xId + yId;\n\n        thisImage.call(Drawing.setClipUrl, clipAxes ?\n            ('clip' + fullLayout._uid + clipAxes) :\n            null\n        );\n    }\n\n    var imagesBelow = fullLayout._imageLowerLayer.selectAll('image')\n            .data(imageDataBelow),\n        imagesAbove = fullLayout._imageUpperLayer.selectAll('image')\n            .data(imageDataAbove);\n\n    imagesBelow.enter().append('image');\n    imagesAbove.enter().append('image');\n\n    imagesBelow.exit().remove();\n    imagesAbove.exit().remove();\n\n    imagesBelow.each(function(d) {\n        setImage.bind(this)(d);\n        applyAttributes.bind(this)(d);\n    });\n    imagesAbove.each(function(d) {\n        setImage.bind(this)(d);\n        applyAttributes.bind(this)(d);\n    });\n\n    var allSubplots = Object.keys(fullLayout._plots);\n    for(i = 0; i < allSubplots.length; i++) {\n        subplot = allSubplots[i];\n        var subplotObj = fullLayout._plots[subplot];\n\n        // filter out overlaid plots (which havd their images on the main plot)\n        // and gl2d plots (which don't support below images, at least not yet)\n        if(!subplotObj.imagelayer) continue;\n\n        var imagesOnSubplot = subplotObj.imagelayer.selectAll('image')\n            // even if there are no images on this subplot, we need to run\n            // enter and exit in case there were previously\n            .data(imageDataSubplot[subplot] || []);\n\n        imagesOnSubplot.enter().append('image');\n        imagesOnSubplot.exit().remove();\n\n        imagesOnSubplot.each(function(d) {\n            setImage.bind(this)(d);\n            applyAttributes.bind(this)(d);\n        });\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/images/draw.js\n// module id = 264\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar toLogRange = require('../../lib/to_log_range');\n\n/*\n * convertCoords: when converting an axis between log and linear\n * you need to alter any images on that axis to keep them\n * pointing at the same data point.\n * In v2.0 this will become obsolete (or perhaps size will still need conversion?)\n * we convert size by declaring that the maximum extent *in data units* should be\n * the same, assuming the image is anchored by its center (could remove that restriction\n * if we think it's important) even though the actual left and right values will not be\n * quite the same since the scale becomes nonlinear (and central anchor means the pixel\n * center of the image, not the data units center)\n *\n * gd: the plot div\n * ax: the axis being changed\n * newType: the type it's getting\n * doExtra: function(attr, val) from inside relayout that sets the attribute.\n *     Use this to make the changes as it's aware if any other changes in the\n *     same relayout call should override this conversion.\n */\nmodule.exports = function convertCoords(gd, ax, newType, doExtra) {\n    ax = ax || {};\n\n    var toLog = (newType === 'log') && (ax.type === 'linear'),\n        fromLog = (newType === 'linear') && (ax.type === 'log');\n\n    if(!(toLog || fromLog)) return;\n\n    var images = gd._fullLayout.images,\n        axLetter = ax._id.charAt(0),\n        image,\n        attrPrefix;\n\n    for(var i = 0; i < images.length; i++) {\n        image = images[i];\n        attrPrefix = 'images[' + i + '].';\n\n        if(image[axLetter + 'ref'] === ax._id) {\n            var currentPos = image[axLetter],\n                currentSize = image['size' + axLetter],\n                newPos = null,\n                newSize = null;\n\n            if(toLog) {\n                newPos = toLogRange(currentPos, ax.range);\n\n                // this is the inverse of the conversion we do in fromLog below\n                // so that the conversion is reversible (notice the fromLog conversion\n                // is like sinh, and this one looks like arcsinh)\n                var dx = currentSize / Math.pow(10, newPos) / 2;\n                newSize = 2 * Math.log(dx + Math.sqrt(1 + dx * dx)) / Math.LN10;\n            }\n            else {\n                newPos = Math.pow(10, currentPos);\n                newSize = newPos * (Math.pow(10, currentSize / 2) - Math.pow(10, -currentSize / 2));\n            }\n\n            // if conversion failed, delete the value so it can get a default later on\n            if(!isNumeric(newPos)) {\n                newPos = null;\n                newSize = null;\n            }\n            else if(!isNumeric(newSize)) newSize = null;\n\n            doExtra(attrPrefix + axLetter, newPos);\n            doExtra(attrPrefix + 'size' + axLetter, newSize);\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/images/convert_coords.js\n// module id = 265\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar constants = require('./constants');\n\nmodule.exports = {\n    moduleType: 'component',\n    name: constants.name,\n\n    layoutAttributes: require('./attributes'),\n    supplyLayoutDefaults: require('./defaults'),\n\n    draw: require('./draw')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/updatemenus/index.js\n// module id = 266\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\nvar constants = require('./constants');\n\nvar name = constants.name;\nvar buttonAttrs = attributes.buttons;\n\n\nmodule.exports = function updateMenusDefaults(layoutIn, layoutOut) {\n    var opts = {\n        name: name,\n        handleItemDefaults: menuDefaults\n    };\n\n    handleArrayContainerDefaults(layoutIn, layoutOut, opts);\n};\n\nfunction menuDefaults(menuIn, menuOut, layoutOut) {\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(menuIn, menuOut, attributes, attr, dflt);\n    }\n\n    var buttons = buttonsDefaults(menuIn, menuOut);\n\n    var visible = coerce('visible', buttons.length > 0);\n    if(!visible) return;\n\n    coerce('active');\n    coerce('direction');\n    coerce('type');\n    coerce('showactive');\n\n    coerce('x');\n    coerce('y');\n    Lib.noneOrAll(menuIn, menuOut, ['x', 'y']);\n\n    coerce('xanchor');\n    coerce('yanchor');\n\n    coerce('pad.t');\n    coerce('pad.r');\n    coerce('pad.b');\n    coerce('pad.l');\n\n    Lib.coerceFont(coerce, 'font', layoutOut.font);\n\n    coerce('bgcolor', layoutOut.paper_bgcolor);\n    coerce('bordercolor');\n    coerce('borderwidth');\n}\n\nfunction buttonsDefaults(menuIn, menuOut) {\n    var buttonsIn = menuIn.buttons || [],\n        buttonsOut = menuOut.buttons = [];\n\n    var buttonIn, buttonOut;\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(buttonIn, buttonOut, buttonAttrs, attr, dflt);\n    }\n\n    for(var i = 0; i < buttonsIn.length; i++) {\n        buttonIn = buttonsIn[i];\n        buttonOut = {};\n\n        coerce('method');\n\n        if(!Lib.isPlainObject(buttonIn) || (buttonOut.method !== 'skip' && !Array.isArray(buttonIn.args))) {\n            continue;\n        }\n\n        coerce('args');\n        coerce('label');\n        coerce('execute');\n\n        buttonOut._index = i;\n        buttonsOut.push(buttonOut);\n    }\n\n    return buttonsOut;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/updatemenus/defaults.js\n// module id = 267\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Plots = require('../../plots/plots');\nvar Color = require('../color');\nvar Drawing = require('../drawing');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar anchorUtils = require('../legend/anchor_utils');\n\nvar LINE_SPACING = require('../../constants/alignment').LINE_SPACING;\n\nvar constants = require('./constants');\nvar ScrollBox = require('./scrollbox');\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout,\n        menuData = makeMenuData(fullLayout);\n\n    /* Update menu data is bound to the header-group.\n     * The items in the header group are always present.\n     *\n     * Upon clicking on a header its corresponding button\n     * data is bound to the button-group.\n     *\n     * We draw all headers in one group before all buttons\n     * so that the buttons *always* appear above the headers.\n     *\n     * Note that only one set of buttons are visible at once.\n     *\n     * <g container />\n     *\n     *     <g header-group />\n     *         <g item header />\n     *         <text item header-arrow />\n     *     <g header-group />\n     *         <g item header />\n     *         <text item header-arrow />\n     *     ...\n     *\n     *     <g button-group />\n     *         <g item button />\n     *         <g item button />\n     *         ...\n     */\n\n    // draw update menu container\n    var menus = fullLayout._menulayer\n        .selectAll('g.' + constants.containerClassName)\n        .data(menuData.length > 0 ? [0] : []);\n\n    menus.enter().append('g')\n        .classed(constants.containerClassName, true)\n        .style('cursor', 'pointer');\n\n    menus.exit().remove();\n\n    // remove push margin object(s)\n    if(menus.exit().size()) clearPushMargins(gd);\n\n    // return early if no update menus are visible\n    if(menuData.length === 0) return;\n\n    // join header group\n    var headerGroups = menus.selectAll('g.' + constants.headerGroupClassName)\n        .data(menuData, keyFunction);\n\n    headerGroups.enter().append('g')\n        .classed(constants.headerGroupClassName, true);\n\n    // draw dropdown button container\n    var gButton = menus.selectAll('g.' + constants.dropdownButtonGroupClassName)\n        .data([0]);\n\n    gButton.enter().append('g')\n        .classed(constants.dropdownButtonGroupClassName, true)\n        .style('pointer-events', 'all');\n\n    // find dimensions before plotting anything (this mutates menuOpts)\n    for(var i = 0; i < menuData.length; i++) {\n        var menuOpts = menuData[i];\n        findDimensions(gd, menuOpts);\n    }\n\n    // setup scrollbox\n    var scrollBoxId = 'updatemenus' + fullLayout._uid,\n        scrollBox = new ScrollBox(gd, gButton, scrollBoxId);\n\n    // remove exiting header, remove dropped buttons and reset margins\n    if(headerGroups.enter().size()) {\n        // make sure gButton is on top of all headers\n        gButton.node().parentNode.appendChild(gButton.node());\n\n        gButton\n            .call(removeAllButtons)\n            .attr(constants.menuIndexAttrName, '-1');\n    }\n\n    headerGroups.exit().each(function(menuOpts) {\n        d3.select(this).remove();\n\n        gButton\n            .call(removeAllButtons)\n            .attr(constants.menuIndexAttrName, '-1');\n\n        Plots.autoMargin(gd, constants.autoMarginIdRoot + menuOpts._index);\n    });\n\n    // draw headers!\n    headerGroups.each(function(menuOpts) {\n        var gHeader = d3.select(this);\n\n        var _gButton = menuOpts.type === 'dropdown' ? gButton : null;\n        Plots.manageCommandObserver(gd, menuOpts, menuOpts.buttons, function(data) {\n            setActive(gd, menuOpts, menuOpts.buttons[data.index], gHeader, _gButton, scrollBox, data.index, true);\n        });\n\n        if(menuOpts.type === 'dropdown') {\n            drawHeader(gd, gHeader, gButton, scrollBox, menuOpts);\n\n            // if this menu is active, update the dropdown container\n            if(isActive(gButton, menuOpts)) {\n                drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n            }\n        } else {\n            drawButtons(gd, gHeader, null, null, menuOpts);\n        }\n\n    });\n};\n\n/**\n * get only visible menus for display\n */\nfunction makeMenuData(fullLayout) {\n    var contOpts = fullLayout[constants.name];\n    var menuData = [];\n\n    for(var i = 0; i < contOpts.length; i++) {\n        var item = contOpts[i];\n\n        if(item.visible) menuData.push(item);\n    }\n\n    return menuData;\n}\n\n// Note that '_index' is set at the default step,\n// it corresponds to the menu index in the user layout update menu container.\n// Because a menu can be set invisible,\n// this is a more 'consistent' field than the index in the menuData.\nfunction keyFunction(menuOpts) {\n    return menuOpts._index;\n}\n\nfunction isFolded(gButton) {\n    return +gButton.attr(constants.menuIndexAttrName) === -1;\n}\n\nfunction isActive(gButton, menuOpts) {\n    return +gButton.attr(constants.menuIndexAttrName) === menuOpts._index;\n}\n\nfunction setActive(gd, menuOpts, buttonOpts, gHeader, gButton, scrollBox, buttonIndex, isSilentUpdate) {\n    // update 'active' attribute in menuOpts\n    menuOpts._input.active = menuOpts.active = buttonIndex;\n\n    if(menuOpts.type === 'buttons') {\n        drawButtons(gd, gHeader, null, null, menuOpts);\n    }\n    else if(menuOpts.type === 'dropdown') {\n        // fold up buttons and redraw header\n        gButton.attr(constants.menuIndexAttrName, '-1');\n\n        drawHeader(gd, gHeader, gButton, scrollBox, menuOpts);\n\n        if(!isSilentUpdate) {\n            drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n        }\n    }\n}\n\nfunction drawHeader(gd, gHeader, gButton, scrollBox, menuOpts) {\n    var header = gHeader.selectAll('g.' + constants.headerClassName)\n        .data([0]);\n\n    header.enter().append('g')\n        .classed(constants.headerClassName, true)\n        .style('pointer-events', 'all');\n\n    var active = menuOpts.active,\n        headerOpts = menuOpts.buttons[active] || constants.blankHeaderOpts,\n        posOpts = { y: menuOpts.pad.t, yPad: 0, x: menuOpts.pad.l, xPad: 0, index: 0 },\n        positionOverrides = {\n            width: menuOpts.headerWidth,\n            height: menuOpts.headerHeight\n        };\n\n    header\n        .call(drawItem, menuOpts, headerOpts, gd)\n        .call(setItemPosition, menuOpts, posOpts, positionOverrides);\n\n    // draw drop arrow at the right edge\n    var arrow = gHeader.selectAll('text.' + constants.headerArrowClassName)\n        .data([0]);\n\n    arrow.enter().append('text')\n        .classed(constants.headerArrowClassName, true)\n        .classed('user-select-none', true)\n        .attr('text-anchor', 'end')\n        .call(Drawing.font, menuOpts.font)\n        .text(constants.arrowSymbol[menuOpts.direction]);\n\n    arrow.attr({\n        x: menuOpts.headerWidth - constants.arrowOffsetX + menuOpts.pad.l,\n        y: menuOpts.headerHeight / 2 + constants.textOffsetY + menuOpts.pad.t\n    });\n\n    header.on('click', function() {\n        gButton.call(removeAllButtons);\n\n\n        // if this menu is active, fold the dropdown container\n        // otherwise, make this menu active\n        gButton.attr(\n            constants.menuIndexAttrName,\n            isActive(gButton, menuOpts) ?\n                -1 :\n                String(menuOpts._index)\n        );\n\n        drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n    });\n\n    header.on('mouseover', function() {\n        header.call(styleOnMouseOver);\n    });\n\n    header.on('mouseout', function() {\n        header.call(styleOnMouseOut, menuOpts);\n    });\n\n    // translate header group\n    Drawing.setTranslate(gHeader, menuOpts.lx, menuOpts.ly);\n}\n\nfunction drawButtons(gd, gHeader, gButton, scrollBox, menuOpts) {\n    // If this is a set of buttons, set pointer events = all since we play\n    // some minor games with which container is which in order to simplify\n    // the drawing of *either* buttons or menus\n    if(!gButton) {\n        gButton = gHeader;\n        gButton.attr('pointer-events', 'all');\n    }\n\n    var buttonData = (!isFolded(gButton) || menuOpts.type === 'buttons') ?\n        menuOpts.buttons :\n        [];\n\n    var klass = menuOpts.type === 'dropdown' ? constants.dropdownButtonClassName : constants.buttonClassName;\n\n    var buttons = gButton.selectAll('g.' + klass)\n        .data(buttonData);\n\n    var enter = buttons.enter().append('g')\n        .classed(klass, true);\n\n    var exit = buttons.exit();\n\n    if(menuOpts.type === 'dropdown') {\n        enter.attr('opacity', '0')\n            .transition()\n            .attr('opacity', '1');\n\n        exit.transition()\n            .attr('opacity', '0')\n            .remove();\n    } else {\n        exit.remove();\n    }\n\n    var x0 = 0;\n    var y0 = 0;\n\n    var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n\n    if(menuOpts.type === 'dropdown') {\n        if(isVertical) {\n            y0 = menuOpts.headerHeight + constants.gapButtonHeader;\n        } else {\n            x0 = menuOpts.headerWidth + constants.gapButtonHeader;\n        }\n    }\n\n    if(menuOpts.type === 'dropdown' && menuOpts.direction === 'up') {\n        y0 = -constants.gapButtonHeader + constants.gapButton - menuOpts.openHeight;\n    }\n\n    if(menuOpts.type === 'dropdown' && menuOpts.direction === 'left') {\n        x0 = -constants.gapButtonHeader + constants.gapButton - menuOpts.openWidth;\n    }\n\n    var posOpts = {\n        x: menuOpts.lx + x0 + menuOpts.pad.l,\n        y: menuOpts.ly + y0 + menuOpts.pad.t,\n        yPad: constants.gapButton,\n        xPad: constants.gapButton,\n        index: 0,\n    };\n\n    var scrollBoxPosition = {\n        l: posOpts.x + menuOpts.borderwidth,\n        t: posOpts.y + menuOpts.borderwidth\n    };\n\n    buttons.each(function(buttonOpts, buttonIndex) {\n        var button = d3.select(this);\n\n        button\n            .call(drawItem, menuOpts, buttonOpts, gd)\n            .call(setItemPosition, menuOpts, posOpts);\n\n        button.on('click', function() {\n            // skip `dragend` events\n            if(d3.event.defaultPrevented) return;\n\n            setActive(gd, menuOpts, buttonOpts, gHeader, gButton, scrollBox, buttonIndex);\n\n            if(buttonOpts.execute) {\n                Plots.executeAPICommand(gd, buttonOpts.method, buttonOpts.args);\n            }\n\n            gd.emit('plotly_buttonclicked', {menu: menuOpts, button: buttonOpts, active: menuOpts.active});\n        });\n\n        button.on('mouseover', function() {\n            button.call(styleOnMouseOver);\n        });\n\n        button.on('mouseout', function() {\n            button.call(styleOnMouseOut, menuOpts);\n            buttons.call(styleButtons, menuOpts);\n        });\n    });\n\n    buttons.call(styleButtons, menuOpts);\n\n    if(isVertical) {\n        scrollBoxPosition.w = Math.max(menuOpts.openWidth, menuOpts.headerWidth);\n        scrollBoxPosition.h = posOpts.y - scrollBoxPosition.t;\n    }\n    else {\n        scrollBoxPosition.w = posOpts.x - scrollBoxPosition.l;\n        scrollBoxPosition.h = Math.max(menuOpts.openHeight, menuOpts.headerHeight);\n    }\n\n    scrollBoxPosition.direction = menuOpts.direction;\n\n    if(scrollBox) {\n        if(buttons.size()) {\n            drawScrollBox(gd, gHeader, gButton, scrollBox, menuOpts, scrollBoxPosition);\n        }\n        else {\n            hideScrollBox(scrollBox);\n        }\n    }\n}\n\nfunction drawScrollBox(gd, gHeader, gButton, scrollBox, menuOpts, position) {\n    // enable the scrollbox\n    var direction = menuOpts.direction,\n        isVertical = (direction === 'up' || direction === 'down');\n\n    var active = menuOpts.active,\n        translateX, translateY,\n        i;\n    if(isVertical) {\n        translateY = 0;\n        for(i = 0; i < active; i++) {\n            translateY += menuOpts.heights[i] + constants.gapButton;\n        }\n    }\n    else {\n        translateX = 0;\n        for(i = 0; i < active; i++) {\n            translateX += menuOpts.widths[i] + constants.gapButton;\n        }\n    }\n\n    scrollBox.enable(position, translateX, translateY);\n\n    if(scrollBox.hbar) {\n        scrollBox.hbar\n            .attr('opacity', '0')\n            .transition()\n            .attr('opacity', '1');\n    }\n\n    if(scrollBox.vbar) {\n        scrollBox.vbar\n            .attr('opacity', '0')\n            .transition()\n            .attr('opacity', '1');\n    }\n}\n\nfunction hideScrollBox(scrollBox) {\n    var hasHBar = !!scrollBox.hbar,\n        hasVBar = !!scrollBox.vbar;\n\n    if(hasHBar) {\n        scrollBox.hbar\n            .transition()\n            .attr('opacity', '0')\n            .each('end', function() {\n                hasHBar = false;\n                if(!hasVBar) scrollBox.disable();\n            });\n    }\n\n    if(hasVBar) {\n        scrollBox.vbar\n            .transition()\n            .attr('opacity', '0')\n            .each('end', function() {\n                hasVBar = false;\n                if(!hasHBar) scrollBox.disable();\n            });\n    }\n}\n\nfunction drawItem(item, menuOpts, itemOpts, gd) {\n    item.call(drawItemRect, menuOpts)\n        .call(drawItemText, menuOpts, itemOpts, gd);\n}\n\nfunction drawItemRect(item, menuOpts) {\n    var rect = item.selectAll('rect')\n        .data([0]);\n\n    rect.enter().append('rect')\n        .classed(constants.itemRectClassName, true)\n        .attr({\n            rx: constants.rx,\n            ry: constants.ry,\n            'shape-rendering': 'crispEdges'\n        });\n\n    rect.call(Color.stroke, menuOpts.bordercolor)\n        .call(Color.fill, menuOpts.bgcolor)\n        .style('stroke-width', menuOpts.borderwidth + 'px');\n}\n\nfunction drawItemText(item, menuOpts, itemOpts, gd) {\n    var text = item.selectAll('text')\n        .data([0]);\n\n    text.enter().append('text')\n        .classed(constants.itemTextClassName, true)\n        .classed('user-select-none', true)\n        .attr({\n            'text-anchor': 'start',\n            'data-notex': 1\n        });\n\n    text.call(Drawing.font, menuOpts.font)\n        .text(itemOpts.label)\n        .call(svgTextUtils.convertToTspans, gd);\n}\n\nfunction styleButtons(buttons, menuOpts) {\n    var active = menuOpts.active;\n\n    buttons.each(function(buttonOpts, i) {\n        var button = d3.select(this);\n\n        if(i === active && menuOpts.showactive) {\n            button.select('rect.' + constants.itemRectClassName)\n                .call(Color.fill, constants.activeColor);\n        }\n    });\n}\n\nfunction styleOnMouseOver(item) {\n    item.select('rect.' + constants.itemRectClassName)\n        .call(Color.fill, constants.hoverColor);\n}\n\nfunction styleOnMouseOut(item, menuOpts) {\n    item.select('rect.' + constants.itemRectClassName)\n        .call(Color.fill, menuOpts.bgcolor);\n}\n\n// find item dimensions (this mutates menuOpts)\nfunction findDimensions(gd, menuOpts) {\n    menuOpts.width1 = 0;\n    menuOpts.height1 = 0;\n    menuOpts.heights = [];\n    menuOpts.widths = [];\n    menuOpts.totalWidth = 0;\n    menuOpts.totalHeight = 0;\n    menuOpts.openWidth = 0;\n    menuOpts.openHeight = 0;\n    menuOpts.lx = 0;\n    menuOpts.ly = 0;\n\n    var fakeButtons = Drawing.tester.selectAll('g.' + constants.dropdownButtonClassName)\n        .data(menuOpts.buttons);\n\n    fakeButtons.enter().append('g')\n        .classed(constants.dropdownButtonClassName, true);\n\n    var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n\n    // loop over fake buttons to find width / height\n    fakeButtons.each(function(buttonOpts, i) {\n        var button = d3.select(this);\n\n        button.call(drawItem, menuOpts, buttonOpts, gd);\n\n        var text = button.select('.' + constants.itemTextClassName);\n\n        // width is given by max width of all buttons\n        var tWidth = text.node() && Drawing.bBox(text.node()).width;\n        var wEff = Math.max(tWidth + constants.textPadX, constants.minWidth);\n\n        // height is determined by item text\n        var tHeight = menuOpts.font.size * LINE_SPACING;\n        var tLines = svgTextUtils.lineCount(text);\n        var hEff = Math.max(tHeight * tLines, constants.minHeight) + constants.textOffsetY;\n\n        hEff = Math.ceil(hEff);\n        wEff = Math.ceil(wEff);\n\n        // Store per-item sizes since a row of horizontal buttons, for example,\n        // don't all need to be the same width:\n        menuOpts.widths[i] = wEff;\n        menuOpts.heights[i] = hEff;\n\n        // Height and width of individual element:\n        menuOpts.height1 = Math.max(menuOpts.height1, hEff);\n        menuOpts.width1 = Math.max(menuOpts.width1, wEff);\n\n        if(isVertical) {\n            menuOpts.totalWidth = Math.max(menuOpts.totalWidth, wEff);\n            menuOpts.openWidth = menuOpts.totalWidth;\n            menuOpts.totalHeight += hEff + constants.gapButton;\n            menuOpts.openHeight += hEff + constants.gapButton;\n        } else {\n            menuOpts.totalWidth += wEff + constants.gapButton;\n            menuOpts.openWidth += wEff + constants.gapButton;\n            menuOpts.totalHeight = Math.max(menuOpts.totalHeight, hEff);\n            menuOpts.openHeight = menuOpts.totalHeight;\n        }\n    });\n\n    if(isVertical) {\n        menuOpts.totalHeight -= constants.gapButton;\n    } else {\n        menuOpts.totalWidth -= constants.gapButton;\n    }\n\n\n    menuOpts.headerWidth = menuOpts.width1 + constants.arrowPadX;\n    menuOpts.headerHeight = menuOpts.height1;\n\n    if(menuOpts.type === 'dropdown') {\n        if(isVertical) {\n            menuOpts.width1 += constants.arrowPadX;\n            menuOpts.totalHeight = menuOpts.height1;\n        } else {\n            menuOpts.totalWidth = menuOpts.width1;\n        }\n        menuOpts.totalWidth += constants.arrowPadX;\n    }\n\n    fakeButtons.remove();\n\n    var paddedWidth = menuOpts.totalWidth + menuOpts.pad.l + menuOpts.pad.r;\n    var paddedHeight = menuOpts.totalHeight + menuOpts.pad.t + menuOpts.pad.b;\n\n    var graphSize = gd._fullLayout._size;\n    menuOpts.lx = graphSize.l + graphSize.w * menuOpts.x;\n    menuOpts.ly = graphSize.t + graphSize.h * (1 - menuOpts.y);\n\n    var xanchor = 'left';\n    if(anchorUtils.isRightAnchor(menuOpts)) {\n        menuOpts.lx -= paddedWidth;\n        xanchor = 'right';\n    }\n    if(anchorUtils.isCenterAnchor(menuOpts)) {\n        menuOpts.lx -= paddedWidth / 2;\n        xanchor = 'center';\n    }\n\n    var yanchor = 'top';\n    if(anchorUtils.isBottomAnchor(menuOpts)) {\n        menuOpts.ly -= paddedHeight;\n        yanchor = 'bottom';\n    }\n    if(anchorUtils.isMiddleAnchor(menuOpts)) {\n        menuOpts.ly -= paddedHeight / 2;\n        yanchor = 'middle';\n    }\n\n    menuOpts.totalWidth = Math.ceil(menuOpts.totalWidth);\n    menuOpts.totalHeight = Math.ceil(menuOpts.totalHeight);\n    menuOpts.lx = Math.round(menuOpts.lx);\n    menuOpts.ly = Math.round(menuOpts.ly);\n\n    Plots.autoMargin(gd, constants.autoMarginIdRoot + menuOpts._index, {\n        x: menuOpts.x,\n        y: menuOpts.y,\n        l: paddedWidth * ({right: 1, center: 0.5}[xanchor] || 0),\n        r: paddedWidth * ({left: 1, center: 0.5}[xanchor] || 0),\n        b: paddedHeight * ({top: 1, middle: 0.5}[yanchor] || 0),\n        t: paddedHeight * ({bottom: 1, middle: 0.5}[yanchor] || 0)\n    });\n}\n\n// set item positions (mutates posOpts)\nfunction setItemPosition(item, menuOpts, posOpts, overrideOpts) {\n    overrideOpts = overrideOpts || {};\n    var rect = item.select('.' + constants.itemRectClassName);\n    var text = item.select('.' + constants.itemTextClassName);\n    var borderWidth = menuOpts.borderwidth;\n    var index = posOpts.index;\n\n    Drawing.setTranslate(item, borderWidth + posOpts.x, borderWidth + posOpts.y);\n\n    var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n    var finalHeight = overrideOpts.height || (isVertical ? menuOpts.heights[index] : menuOpts.height1);\n\n    rect.attr({\n        x: 0,\n        y: 0,\n        width: overrideOpts.width || (isVertical ? menuOpts.width1 : menuOpts.widths[index]),\n        height: finalHeight\n    });\n\n    var tHeight = menuOpts.font.size * LINE_SPACING;\n    var tLines = svgTextUtils.lineCount(text);\n    var spanOffset = ((tLines - 1) * tHeight / 2);\n\n    svgTextUtils.positionText(text, constants.textOffsetX,\n        finalHeight / 2 - spanOffset + constants.textOffsetY);\n\n    if(isVertical) {\n        posOpts.y += menuOpts.heights[index] + posOpts.yPad;\n    } else {\n        posOpts.x += menuOpts.widths[index] + posOpts.xPad;\n    }\n\n    posOpts.index++;\n}\n\nfunction removeAllButtons(gButton) {\n    gButton.selectAll('g.' + constants.dropdownButtonClassName).remove();\n}\n\nfunction clearPushMargins(gd) {\n    var pushMargins = gd._fullLayout._pushmargin || {};\n    var keys = Object.keys(pushMargins);\n\n    for(var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n\n        if(k.indexOf(constants.autoMarginIdRoot) !== -1) {\n            Plots.autoMargin(gd, k);\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/updatemenus/draw.js\n// module id = 268\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = ScrollBox;\n\nvar d3 = require('d3');\n\nvar Color = require('../color');\nvar Drawing = require('../drawing');\n\nvar Lib = require('../../lib');\n\n/**\n * Helper class to setup a scroll box\n *\n * @class\n * @param           gd          Plotly's graph div\n * @param           container   Container to be scroll-boxed (as a D3 selection)\n * @param {string}  id          Id for the clip path to implement the scroll box\n */\nfunction ScrollBox(gd, container, id) {\n    this.gd = gd;\n    this.container = container;\n    this.id = id;\n\n    // See ScrollBox.prototype.enable for further definition\n    this.position = null;  // scrollbox position\n    this.translateX = null;  // scrollbox horizontal translation\n    this.translateY = null;  // scrollbox vertical translation\n    this.hbar = null;  // horizontal scrollbar D3 selection\n    this.vbar = null;  // vertical scrollbar D3 selection\n\n    // <rect> element to capture pointer events\n    this.bg = this.container.selectAll('rect.scrollbox-bg').data([0]);\n\n    this.bg.exit()\n        .on('.drag', null)\n        .on('wheel', null)\n        .remove();\n\n    this.bg.enter().append('rect')\n        .classed('scrollbox-bg', true)\n        .style('pointer-events', 'all')\n        .attr({\n            opacity: 0,\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        });\n}\n\n// scroll bar dimensions\nScrollBox.barWidth = 2;\nScrollBox.barLength = 20;\nScrollBox.barRadius = 2;\nScrollBox.barPad = 1;\nScrollBox.barColor = '#808BA4';\n\n/**\n * If needed, setup a clip path and scrollbars\n *\n * @method\n * @param {Object}  position\n * @param {number}  position.l  Left side position (in pixels)\n * @param {number}  position.t  Top side (in pixels)\n * @param {number}  position.w  Width (in pixels)\n * @param {number}  position.h  Height (in pixels)\n * @param {string}  [position.direction='down']\n *                  Either 'down', 'left', 'right' or 'up'\n * @param {number}  [translateX=0]  Horizontal offset (in pixels)\n * @param {number}  [translateY=0]  Vertical offset (in pixels)\n */\nScrollBox.prototype.enable = function enable(position, translateX, translateY) {\n    var fullLayout = this.gd._fullLayout,\n        fullWidth = fullLayout.width,\n        fullHeight = fullLayout.height;\n\n    // compute position of scrollbox\n    this.position = position;\n\n    var l = this.position.l,\n        w = this.position.w,\n        t = this.position.t,\n        h = this.position.h,\n        direction = this.position.direction,\n        isDown = (direction === 'down'),\n        isLeft = (direction === 'left'),\n        isRight = (direction === 'right'),\n        isUp = (direction === 'up'),\n        boxW = w,\n        boxH = h,\n        boxL, boxR,\n        boxT, boxB;\n\n    if(!isDown && !isLeft && !isRight && !isUp) {\n        this.position.direction = 'down';\n        isDown = true;\n    }\n\n    var isVertical = isDown || isUp;\n    if(isVertical) {\n        boxL = l;\n        boxR = boxL + boxW;\n\n        if(isDown) {\n            // anchor to top side\n            boxT = t;\n            boxB = Math.min(boxT + boxH, fullHeight);\n            boxH = boxB - boxT;\n        }\n        else {\n            // anchor to bottom side\n            boxB = t + boxH;\n            boxT = Math.max(boxB - boxH, 0);\n            boxH = boxB - boxT;\n        }\n    }\n    else {\n        boxT = t;\n        boxB = boxT + boxH;\n\n        if(isLeft) {\n            // anchor to right side\n            boxR = l + boxW;\n            boxL = Math.max(boxR - boxW, 0);\n            boxW = boxR - boxL;\n        }\n        else {\n            // anchor to left side\n            boxL = l;\n            boxR = Math.min(boxL + boxW, fullWidth);\n            boxW = boxR - boxL;\n        }\n    }\n\n    this._box = {\n        l: boxL,\n        t: boxT,\n        w: boxW,\n        h: boxH\n    };\n\n    // compute position of horizontal scroll bar\n    var needsHorizontalScrollBar = (w > boxW),\n        hbarW = ScrollBox.barLength + 2 * ScrollBox.barPad,\n        hbarH = ScrollBox.barWidth + 2 * ScrollBox.barPad,\n        // draw horizontal scrollbar on the bottom side\n        hbarL = l,\n        hbarT = t + h;\n\n    if(hbarT + hbarH > fullHeight) hbarT = fullHeight - hbarH;\n\n    var hbar = this.container.selectAll('rect.scrollbar-horizontal').data(\n            (needsHorizontalScrollBar) ? [0] : []);\n\n    hbar.exit()\n        .on('.drag', null)\n        .remove();\n\n    hbar.enter().append('rect')\n        .classed('scrollbar-horizontal', true)\n        .call(Color.fill, ScrollBox.barColor);\n\n    if(needsHorizontalScrollBar) {\n        this.hbar = hbar.attr({\n            'rx': ScrollBox.barRadius,\n            'ry': ScrollBox.barRadius,\n            'x': hbarL,\n            'y': hbarT,\n            'width': hbarW,\n            'height': hbarH\n        });\n\n        // hbar center moves between hbarXMin and hbarXMin + hbarTranslateMax\n        this._hbarXMin = hbarL + hbarW / 2;\n        this._hbarTranslateMax = boxW - hbarW;\n    }\n    else {\n        delete this.hbar;\n        delete this._hbarXMin;\n        delete this._hbarTranslateMax;\n    }\n\n    // compute position of vertical scroll bar\n    var needsVerticalScrollBar = (h > boxH),\n        vbarW = ScrollBox.barWidth + 2 * ScrollBox.barPad,\n        vbarH = ScrollBox.barLength + 2 * ScrollBox.barPad,\n        // draw vertical scrollbar on the right side\n        vbarL = l + w,\n        vbarT = t;\n\n    if(vbarL + vbarW > fullWidth) vbarL = fullWidth - vbarW;\n\n    var vbar = this.container.selectAll('rect.scrollbar-vertical').data(\n            (needsVerticalScrollBar) ? [0] : []);\n\n    vbar.exit()\n        .on('.drag', null)\n        .remove();\n\n    vbar.enter().append('rect')\n        .classed('scrollbar-vertical', true)\n        .call(Color.fill, ScrollBox.barColor);\n\n    if(needsVerticalScrollBar) {\n        this.vbar = vbar.attr({\n            'rx': ScrollBox.barRadius,\n            'ry': ScrollBox.barRadius,\n            'x': vbarL,\n            'y': vbarT,\n            'width': vbarW,\n            'height': vbarH\n        });\n\n        // vbar center moves between vbarYMin and vbarYMin + vbarTranslateMax\n        this._vbarYMin = vbarT + vbarH / 2;\n        this._vbarTranslateMax = boxH - vbarH;\n    }\n    else {\n        delete this.vbar;\n        delete this._vbarYMin;\n        delete this._vbarTranslateMax;\n    }\n\n    // setup a clip path (if scroll bars are needed)\n    var clipId = this.id,\n        clipL = boxL - 0.5,\n        clipR = (needsVerticalScrollBar) ? boxR + vbarW + 0.5 : boxR + 0.5,\n        clipT = boxT - 0.5,\n        clipB = (needsHorizontalScrollBar) ? boxB + hbarH + 0.5 : boxB + 0.5;\n\n    var clipPath = fullLayout._topdefs.selectAll('#' + clipId)\n        .data((needsHorizontalScrollBar || needsVerticalScrollBar) ? [0] : []);\n\n    clipPath.exit().remove();\n\n    clipPath.enter()\n        .append('clipPath').attr('id', clipId)\n        .append('rect');\n\n    if(needsHorizontalScrollBar || needsVerticalScrollBar) {\n        this._clipRect = clipPath.select('rect').attr({\n            x: Math.floor(clipL),\n            y: Math.floor(clipT),\n            width: Math.ceil(clipR) - Math.floor(clipL),\n            height: Math.ceil(clipB) - Math.floor(clipT)\n        });\n\n        this.container.call(Drawing.setClipUrl, clipId);\n\n        this.bg.attr({\n            x: l,\n            y: t,\n            width: w,\n            height: h\n        });\n    }\n    else {\n        this.bg.attr({\n            width: 0,\n            height: 0\n        });\n        this.container\n            .on('wheel', null)\n            .on('.drag', null)\n            .call(Drawing.setClipUrl, null);\n        delete this._clipRect;\n    }\n\n    // set up drag listeners (if scroll bars are needed)\n    if(needsHorizontalScrollBar || needsVerticalScrollBar) {\n        var onBoxDrag = d3.behavior.drag()\n            .on('dragstart', function() {\n                d3.event.sourceEvent.preventDefault();\n            })\n            .on('drag', this._onBoxDrag.bind(this));\n\n        this.container\n            .on('wheel', null)\n            .on('wheel', this._onBoxWheel.bind(this))\n            .on('.drag', null)\n            .call(onBoxDrag);\n\n        var onBarDrag = d3.behavior.drag()\n            .on('dragstart', function() {\n                d3.event.sourceEvent.preventDefault();\n                d3.event.sourceEvent.stopPropagation();\n            })\n            .on('drag', this._onBarDrag.bind(this));\n\n        if(needsHorizontalScrollBar) {\n            this.hbar\n                .on('.drag', null)\n                .call(onBarDrag);\n        }\n\n        if(needsVerticalScrollBar) {\n            this.vbar\n                .on('.drag', null)\n                .call(onBarDrag);\n        }\n    }\n\n    // set scrollbox translation\n    this.setTranslate(translateX, translateY);\n};\n\n/**\n * If present, remove clip-path and scrollbars\n *\n * @method\n */\nScrollBox.prototype.disable = function disable() {\n    if(this.hbar || this.vbar) {\n        this.bg.attr({\n            width: 0,\n            height: 0\n        });\n        this.container\n            .on('wheel', null)\n            .on('.drag', null)\n            .call(Drawing.setClipUrl, null);\n        delete this._clipRect;\n    }\n\n    if(this.hbar) {\n        this.hbar.on('.drag', null);\n        this.hbar.remove();\n        delete this.hbar;\n        delete this._hbarXMin;\n        delete this._hbarTranslateMax;\n    }\n\n    if(this.vbar) {\n        this.vbar.on('.drag', null);\n        this.vbar.remove();\n        delete this.vbar;\n        delete this._vbarYMin;\n        delete this._vbarTranslateMax;\n    }\n};\n\n/**\n * Handles scroll box drag events\n *\n * @method\n */\nScrollBox.prototype._onBoxDrag = function onBarDrag() {\n    var translateX = this.translateX,\n        translateY = this.translateY;\n\n    if(this.hbar) {\n        translateX -= d3.event.dx;\n    }\n\n    if(this.vbar) {\n        translateY -= d3.event.dy;\n    }\n\n    this.setTranslate(translateX, translateY);\n};\n\n/**\n * Handles scroll box wheel events\n *\n * @method\n */\nScrollBox.prototype._onBoxWheel = function onBarWheel() {\n    var translateX = this.translateX,\n        translateY = this.translateY;\n\n    if(this.hbar) {\n        translateX += d3.event.deltaY;\n    }\n\n    if(this.vbar) {\n        translateY += d3.event.deltaY;\n    }\n\n    this.setTranslate(translateX, translateY);\n};\n\n/**\n * Handles scroll bar drag events\n *\n * @method\n */\nScrollBox.prototype._onBarDrag = function onBarDrag() {\n    var translateX = this.translateX,\n        translateY = this.translateY;\n\n    if(this.hbar) {\n        var xMin = translateX + this._hbarXMin,\n            xMax = xMin + this._hbarTranslateMax,\n            x = Lib.constrain(d3.event.x, xMin, xMax),\n            xf = (x - xMin) / (xMax - xMin);\n\n        var translateXMax = this.position.w - this._box.w;\n\n        translateX = xf * translateXMax;\n    }\n\n    if(this.vbar) {\n        var yMin = translateY + this._vbarYMin,\n            yMax = yMin + this._vbarTranslateMax,\n            y = Lib.constrain(d3.event.y, yMin, yMax),\n            yf = (y - yMin) / (yMax - yMin);\n\n        var translateYMax = this.position.h - this._box.h;\n\n        translateY = yf * translateYMax;\n    }\n\n    this.setTranslate(translateX, translateY);\n};\n\n/**\n * Set clip path and scroll bar translate transform\n *\n * @method\n * @param {number}  [translateX=0]  Horizontal offset (in pixels)\n * @param {number}  [translateY=0]  Vertical offset (in pixels)\n */\nScrollBox.prototype.setTranslate = function setTranslate(translateX, translateY) {\n    // store translateX and translateY (needed by mouse event handlers)\n    var translateXMax = this.position.w - this._box.w,\n        translateYMax = this.position.h - this._box.h;\n\n    translateX = Lib.constrain(translateX || 0, 0, translateXMax);\n    translateY = Lib.constrain(translateY || 0, 0, translateYMax);\n\n    this.translateX = translateX;\n    this.translateY = translateY;\n\n    this.container.call(Drawing.setTranslate,\n        this._box.l - this.position.l - translateX,\n        this._box.t - this.position.t - translateY);\n\n    if(this._clipRect) {\n        this._clipRect.attr({\n            x: Math.floor(this.position.l + translateX - 0.5),\n            y: Math.floor(this.position.t + translateY - 0.5)\n        });\n    }\n\n    if(this.hbar) {\n        var xf = translateX / translateXMax;\n\n        this.hbar.call(Drawing.setTranslate,\n            translateX + xf * this._hbarTranslateMax,\n            translateY);\n    }\n\n    if(this.vbar) {\n        var yf = translateY / translateYMax;\n\n        this.vbar.call(Drawing.setTranslate,\n            translateX,\n            translateY + yf * this._vbarTranslateMax);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/updatemenus/scrollbox.js\n// module id = 269\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar constants = require('./constants');\n\nmodule.exports = {\n    moduleType: 'component',\n    name: constants.name,\n\n    layoutAttributes: require('./attributes'),\n    supplyLayoutDefaults: require('./defaults'),\n\n    draw: require('./draw')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/sliders/index.js\n// module id = 270\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\nvar constants = require('./constants');\n\nvar name = constants.name;\nvar stepAttrs = attributes.steps;\n\n\nmodule.exports = function slidersDefaults(layoutIn, layoutOut) {\n    var opts = {\n        name: name,\n        handleItemDefaults: sliderDefaults\n    };\n\n    handleArrayContainerDefaults(layoutIn, layoutOut, opts);\n};\n\nfunction sliderDefaults(sliderIn, sliderOut, layoutOut) {\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(sliderIn, sliderOut, attributes, attr, dflt);\n    }\n\n    var steps = stepsDefaults(sliderIn, sliderOut);\n\n    var visible = coerce('visible', steps.length > 0);\n    if(!visible) return;\n\n    coerce('active');\n\n    coerce('x');\n    coerce('y');\n    Lib.noneOrAll(sliderIn, sliderOut, ['x', 'y']);\n\n    coerce('xanchor');\n    coerce('yanchor');\n\n    coerce('len');\n    coerce('lenmode');\n\n    coerce('pad.t');\n    coerce('pad.r');\n    coerce('pad.b');\n    coerce('pad.l');\n\n    Lib.coerceFont(coerce, 'font', layoutOut.font);\n\n    var currentValueIsVisible = coerce('currentvalue.visible');\n\n    if(currentValueIsVisible) {\n        coerce('currentvalue.xanchor');\n        coerce('currentvalue.prefix');\n        coerce('currentvalue.suffix');\n        coerce('currentvalue.offset');\n\n        Lib.coerceFont(coerce, 'currentvalue.font', sliderOut.font);\n    }\n\n    coerce('transition.duration');\n    coerce('transition.easing');\n\n    coerce('bgcolor');\n    coerce('activebgcolor');\n    coerce('bordercolor');\n    coerce('borderwidth');\n    coerce('ticklen');\n    coerce('tickwidth');\n    coerce('tickcolor');\n    coerce('minorticklen');\n}\n\nfunction stepsDefaults(sliderIn, sliderOut) {\n    var valuesIn = sliderIn.steps || [],\n        valuesOut = sliderOut.steps = [];\n\n    var valueIn, valueOut;\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(valueIn, valueOut, stepAttrs, attr, dflt);\n    }\n\n    for(var i = 0; i < valuesIn.length; i++) {\n        valueIn = valuesIn[i];\n        valueOut = {};\n\n        coerce('method');\n\n        if(!Lib.isPlainObject(valueIn) || (valueOut.method !== 'skip' && !Array.isArray(valueIn.args))) {\n            continue;\n        }\n\n        coerce('args');\n        coerce('label', 'step-' + i);\n        coerce('value', valueOut.label);\n        coerce('execute');\n\n        valuesOut.push(valueOut);\n    }\n\n    return valuesOut;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/sliders/defaults.js\n// module id = 271\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Plots = require('../../plots/plots');\nvar Color = require('../color');\nvar Drawing = require('../drawing');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar anchorUtils = require('../legend/anchor_utils');\n\nvar constants = require('./constants');\nvar LINE_SPACING = require('../../constants/alignment').LINE_SPACING;\n\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout,\n        sliderData = makeSliderData(fullLayout, gd);\n\n    // draw a container for *all* sliders:\n    var sliders = fullLayout._infolayer\n        .selectAll('g.' + constants.containerClassName)\n        .data(sliderData.length > 0 ? [0] : []);\n\n    sliders.enter().append('g')\n        .classed(constants.containerClassName, true)\n        .style('cursor', 'ew-resize');\n\n    sliders.exit().remove();\n\n    // If no more sliders, clear the margisn:\n    if(sliders.exit().size()) clearPushMargins(gd);\n\n    // Return early if no menus visible:\n    if(sliderData.length === 0) return;\n\n    var sliderGroups = sliders.selectAll('g.' + constants.groupClassName)\n        .data(sliderData, keyFunction);\n\n    sliderGroups.enter().append('g')\n        .classed(constants.groupClassName, true);\n\n    sliderGroups.exit().each(function(sliderOpts) {\n        d3.select(this).remove();\n\n        sliderOpts._commandObserver.remove();\n        delete sliderOpts._commandObserver;\n\n        Plots.autoMargin(gd, constants.autoMarginIdRoot + sliderOpts._index);\n    });\n\n    // Find the dimensions of the sliders:\n    for(var i = 0; i < sliderData.length; i++) {\n        var sliderOpts = sliderData[i];\n        findDimensions(gd, sliderOpts);\n    }\n\n    sliderGroups.each(function(sliderOpts) {\n        // If it has fewer than two options, it's not really a slider:\n        if(sliderOpts.steps.length < 2) return;\n\n        var gSlider = d3.select(this);\n\n        computeLabelSteps(sliderOpts);\n\n        Plots.manageCommandObserver(gd, sliderOpts, sliderOpts.steps, function(data) {\n            // NB: Same as below. This is *not* always the same as sliderOpts since\n            // if a new set of steps comes in, the reference in this callback would\n            // be invalid. We need to refetch it from the slider group, which is\n            // the join data that creates this slider. So if this slider still exists,\n            // the group should be valid, *to the best of my knowledge.* If not,\n            // we'd have to look it up by d3 data join index/key.\n            var opts = gSlider.data()[0];\n\n            if(opts.active === data.index) return;\n            if(opts._dragging) return;\n\n            setActive(gd, gSlider, opts, data.index, false, true);\n        });\n\n        drawSlider(gd, d3.select(this), sliderOpts);\n    });\n};\n\n// This really only just filters by visibility:\nfunction makeSliderData(fullLayout, gd) {\n    var contOpts = fullLayout[constants.name],\n        sliderData = [];\n\n    for(var i = 0; i < contOpts.length; i++) {\n        var item = contOpts[i];\n        if(!item.visible || !item.steps.length) continue;\n        item.gd = gd;\n        sliderData.push(item);\n    }\n\n    return sliderData;\n}\n\n// This is set in the defaults step:\nfunction keyFunction(opts) {\n    return opts._index;\n}\n\n// Compute the dimensions (mutates sliderOpts):\nfunction findDimensions(gd, sliderOpts) {\n    var sliderLabels = Drawing.tester.selectAll('g.' + constants.labelGroupClass)\n        .data(sliderOpts.steps);\n\n    sliderLabels.enter().append('g')\n        .classed(constants.labelGroupClass, true);\n\n    // loop over fake buttons to find width / height\n    var maxLabelWidth = 0;\n    var labelHeight = 0;\n    sliderLabels.each(function(stepOpts) {\n        var labelGroup = d3.select(this);\n\n        var text = drawLabel(labelGroup, {step: stepOpts}, sliderOpts);\n\n        var textNode = text.node();\n        if(textNode) {\n            var bBox = Drawing.bBox(textNode);\n            labelHeight = Math.max(labelHeight, bBox.height);\n            maxLabelWidth = Math.max(maxLabelWidth, bBox.width);\n        }\n    });\n\n    sliderLabels.remove();\n\n    sliderOpts.inputAreaWidth = Math.max(\n        constants.railWidth,\n        constants.gripHeight\n    );\n\n    // calculate some overall dimensions - some of these are needed for\n    // calculating the currentValue dimensions\n    var graphSize = gd._fullLayout._size;\n    sliderOpts.lx = graphSize.l + graphSize.w * sliderOpts.x;\n    sliderOpts.ly = graphSize.t + graphSize.h * (1 - sliderOpts.y);\n\n    if(sliderOpts.lenmode === 'fraction') {\n        // fraction:\n        sliderOpts.outerLength = Math.round(graphSize.w * sliderOpts.len);\n    } else {\n        // pixels:\n        sliderOpts.outerLength = sliderOpts.len;\n    }\n\n    // Set the length-wise padding so that the grip ends up *on* the end of\n    // the bar when at either extreme\n    sliderOpts.lenPad = Math.round(constants.gripWidth * 0.5);\n\n    // The length of the rail, *excluding* padding on either end:\n    sliderOpts.inputAreaStart = 0;\n    sliderOpts.inputAreaLength = Math.round(sliderOpts.outerLength - sliderOpts.pad.l - sliderOpts.pad.r);\n\n    var textableInputLength = sliderOpts.inputAreaLength - 2 * constants.stepInset;\n    var availableSpacePerLabel = textableInputLength / (sliderOpts.steps.length - 1);\n    var computedSpacePerLabel = maxLabelWidth + constants.labelPadding;\n    sliderOpts.labelStride = Math.max(1, Math.ceil(computedSpacePerLabel / availableSpacePerLabel));\n    sliderOpts.labelHeight = labelHeight;\n\n    // loop over all possible values for currentValue to find the\n    // area we need for it\n    sliderOpts.currentValueMaxWidth = 0;\n    sliderOpts.currentValueHeight = 0;\n    sliderOpts.currentValueTotalHeight = 0;\n    sliderOpts.currentValueMaxLines = 1;\n\n    if(sliderOpts.currentvalue.visible) {\n        // Get the dimensions of the current value label:\n        var dummyGroup = Drawing.tester.append('g');\n\n        sliderLabels.each(function(stepOpts) {\n            var curValPrefix = drawCurrentValue(dummyGroup, sliderOpts, stepOpts.label);\n            var curValSize = (curValPrefix.node() && Drawing.bBox(curValPrefix.node())) || {width: 0, height: 0};\n            var lines = svgTextUtils.lineCount(curValPrefix);\n            sliderOpts.currentValueMaxWidth = Math.max(sliderOpts.currentValueMaxWidth, Math.ceil(curValSize.width));\n            sliderOpts.currentValueHeight = Math.max(sliderOpts.currentValueHeight, Math.ceil(curValSize.height));\n            sliderOpts.currentValueMaxLines = Math.max(sliderOpts.currentValueMaxLines, lines);\n        });\n\n        sliderOpts.currentValueTotalHeight = sliderOpts.currentValueHeight + sliderOpts.currentvalue.offset;\n\n        dummyGroup.remove();\n    }\n\n    sliderOpts.height = sliderOpts.currentValueTotalHeight + constants.tickOffset + sliderOpts.ticklen + constants.labelOffset + sliderOpts.labelHeight + sliderOpts.pad.t + sliderOpts.pad.b;\n\n    var xanchor = 'left';\n    if(anchorUtils.isRightAnchor(sliderOpts)) {\n        sliderOpts.lx -= sliderOpts.outerLength;\n        xanchor = 'right';\n    }\n    if(anchorUtils.isCenterAnchor(sliderOpts)) {\n        sliderOpts.lx -= sliderOpts.outerLength / 2;\n        xanchor = 'center';\n    }\n\n    var yanchor = 'top';\n    if(anchorUtils.isBottomAnchor(sliderOpts)) {\n        sliderOpts.ly -= sliderOpts.height;\n        yanchor = 'bottom';\n    }\n    if(anchorUtils.isMiddleAnchor(sliderOpts)) {\n        sliderOpts.ly -= sliderOpts.height / 2;\n        yanchor = 'middle';\n    }\n\n    sliderOpts.outerLength = Math.ceil(sliderOpts.outerLength);\n    sliderOpts.height = Math.ceil(sliderOpts.height);\n    sliderOpts.lx = Math.round(sliderOpts.lx);\n    sliderOpts.ly = Math.round(sliderOpts.ly);\n\n    Plots.autoMargin(gd, constants.autoMarginIdRoot + sliderOpts._index, {\n        x: sliderOpts.x,\n        y: sliderOpts.y,\n        l: sliderOpts.outerLength * ({right: 1, center: 0.5}[xanchor] || 0),\n        r: sliderOpts.outerLength * ({left: 1, center: 0.5}[xanchor] || 0),\n        b: sliderOpts.height * ({top: 1, middle: 0.5}[yanchor] || 0),\n        t: sliderOpts.height * ({bottom: 1, middle: 0.5}[yanchor] || 0)\n    });\n}\n\nfunction drawSlider(gd, sliderGroup, sliderOpts) {\n    // This is related to the other long notes in this file regarding what happens\n    // when slider steps disappear. This particular fix handles what happens when\n    // the *current* slider step is removed. The drawing functions will error out\n    // when they fail to find it, so the fix for now is that it will just draw the\n    // slider in the first position but will not execute the command.\n    if(sliderOpts.active >= sliderOpts.steps.length) {\n        sliderOpts.active = 0;\n    }\n\n    // These are carefully ordered for proper z-ordering:\n    sliderGroup\n        .call(drawCurrentValue, sliderOpts)\n        .call(drawRail, sliderOpts)\n        .call(drawLabelGroup, sliderOpts)\n        .call(drawTicks, sliderOpts)\n        .call(drawTouchRect, gd, sliderOpts)\n        .call(drawGrip, gd, sliderOpts);\n\n    // Position the rectangle:\n    Drawing.setTranslate(sliderGroup, sliderOpts.lx + sliderOpts.pad.l, sliderOpts.ly + sliderOpts.pad.t);\n\n    sliderGroup.call(setGripPosition, sliderOpts, sliderOpts.active / (sliderOpts.steps.length - 1), false);\n    sliderGroup.call(drawCurrentValue, sliderOpts);\n\n}\n\nfunction drawCurrentValue(sliderGroup, sliderOpts, valueOverride) {\n    if(!sliderOpts.currentvalue.visible) return;\n\n    var x0, textAnchor;\n    var text = sliderGroup.selectAll('text')\n        .data([0]);\n\n    switch(sliderOpts.currentvalue.xanchor) {\n        case 'right':\n            // This is anchored left and adjusted by the width of the longest label\n            // so that the prefix doesn't move. The goal of this is to emphasize\n            // what's actually changing and make the update less distracting.\n            x0 = sliderOpts.inputAreaLength - constants.currentValueInset - sliderOpts.currentValueMaxWidth;\n            textAnchor = 'left';\n            break;\n        case 'center':\n            x0 = sliderOpts.inputAreaLength * 0.5;\n            textAnchor = 'middle';\n            break;\n        default:\n            x0 = constants.currentValueInset;\n            textAnchor = 'left';\n    }\n\n    text.enter().append('text')\n        .classed(constants.labelClass, true)\n        .classed('user-select-none', true)\n        .attr({\n            'text-anchor': textAnchor,\n            'data-notex': 1\n        });\n\n    var str = sliderOpts.currentvalue.prefix ? sliderOpts.currentvalue.prefix : '';\n\n    if(typeof valueOverride === 'string') {\n        str += valueOverride;\n    } else {\n        var curVal = sliderOpts.steps[sliderOpts.active].label;\n        str += curVal;\n    }\n\n    if(sliderOpts.currentvalue.suffix) {\n        str += sliderOpts.currentvalue.suffix;\n    }\n\n    text.call(Drawing.font, sliderOpts.currentvalue.font)\n        .text(str)\n        .call(svgTextUtils.convertToTspans, sliderOpts.gd);\n\n    var lines = svgTextUtils.lineCount(text);\n\n    var y0 = (sliderOpts.currentValueMaxLines + 1 - lines) *\n        sliderOpts.currentvalue.font.size * LINE_SPACING;\n\n    svgTextUtils.positionText(text, x0, y0);\n\n    return text;\n}\n\nfunction drawGrip(sliderGroup, gd, sliderOpts) {\n    var grip = sliderGroup.selectAll('rect.' + constants.gripRectClass)\n        .data([0]);\n\n    grip.enter().append('rect')\n        .classed(constants.gripRectClass, true)\n        .call(attachGripEvents, gd, sliderGroup, sliderOpts)\n        .style('pointer-events', 'all');\n\n    grip.attr({\n        width: constants.gripWidth,\n        height: constants.gripHeight,\n        rx: constants.gripRadius,\n        ry: constants.gripRadius,\n    })\n        .call(Color.stroke, sliderOpts.bordercolor)\n        .call(Color.fill, sliderOpts.bgcolor)\n        .style('stroke-width', sliderOpts.borderwidth + 'px');\n}\n\nfunction drawLabel(item, data, sliderOpts) {\n    var text = item.selectAll('text')\n        .data([0]);\n\n    text.enter().append('text')\n        .classed(constants.labelClass, true)\n        .classed('user-select-none', true)\n        .attr({\n            'text-anchor': 'middle',\n            'data-notex': 1\n        });\n\n    text.call(Drawing.font, sliderOpts.font)\n        .text(data.step.label)\n        .call(svgTextUtils.convertToTspans, sliderOpts.gd);\n\n    return text;\n}\n\nfunction drawLabelGroup(sliderGroup, sliderOpts) {\n    var labels = sliderGroup.selectAll('g.' + constants.labelsClass)\n        .data([0]);\n\n    labels.enter().append('g')\n        .classed(constants.labelsClass, true);\n\n    var labelItems = labels.selectAll('g.' + constants.labelGroupClass)\n        .data(sliderOpts.labelSteps);\n\n    labelItems.enter().append('g')\n        .classed(constants.labelGroupClass, true);\n\n    labelItems.exit().remove();\n\n    labelItems.each(function(d) {\n        var item = d3.select(this);\n\n        item.call(drawLabel, d, sliderOpts);\n\n        Drawing.setTranslate(item,\n            normalizedValueToPosition(sliderOpts, d.fraction),\n            constants.tickOffset +\n                sliderOpts.ticklen +\n                // position is the baseline of the top line of text only, even\n                // if the label spans multiple lines\n                sliderOpts.font.size * LINE_SPACING +\n                constants.labelOffset +\n                sliderOpts.currentValueTotalHeight\n        );\n    });\n\n}\n\nfunction handleInput(gd, sliderGroup, sliderOpts, normalizedPosition, doTransition) {\n    var quantizedPosition = Math.round(normalizedPosition * (sliderOpts.steps.length - 1));\n\n    if(quantizedPosition !== sliderOpts.active) {\n        setActive(gd, sliderGroup, sliderOpts, quantizedPosition, true, doTransition);\n    }\n}\n\nfunction setActive(gd, sliderGroup, sliderOpts, index, doCallback, doTransition) {\n    var previousActive = sliderOpts.active;\n    sliderOpts._input.active = sliderOpts.active = index;\n\n    var step = sliderOpts.steps[sliderOpts.active];\n\n    sliderGroup.call(setGripPosition, sliderOpts, sliderOpts.active / (sliderOpts.steps.length - 1), doTransition);\n    sliderGroup.call(drawCurrentValue, sliderOpts);\n\n    gd.emit('plotly_sliderchange', {\n        slider: sliderOpts,\n        step: sliderOpts.steps[sliderOpts.active],\n        interaction: doCallback,\n        previousActive: previousActive\n    });\n\n    if(step && step.method && doCallback) {\n        if(sliderGroup._nextMethod) {\n            // If we've already queued up an update, just overwrite it with the most recent:\n            sliderGroup._nextMethod.step = step;\n            sliderGroup._nextMethod.doCallback = doCallback;\n            sliderGroup._nextMethod.doTransition = doTransition;\n        } else {\n            sliderGroup._nextMethod = {step: step, doCallback: doCallback, doTransition: doTransition};\n            sliderGroup._nextMethodRaf = window.requestAnimationFrame(function() {\n                var _step = sliderGroup._nextMethod.step;\n                if(!_step.method) return;\n\n                if(_step.execute) {\n                    Plots.executeAPICommand(gd, _step.method, _step.args);\n                }\n\n                sliderGroup._nextMethod = null;\n                sliderGroup._nextMethodRaf = null;\n            });\n        }\n    }\n}\n\nfunction attachGripEvents(item, gd, sliderGroup) {\n    var node = sliderGroup.node();\n    var $gd = d3.select(gd);\n\n    // NB: This is *not* the same as sliderOpts itself! These callbacks\n    // are in a closure so this array won't actually be correct if the\n    // steps have changed since this was initialized. The sliderGroup,\n    // however, has not changed since that *is* the slider, so it must\n    // be present to receive mouse events.\n    function getSliderOpts() {\n        return sliderGroup.data()[0];\n    }\n\n    item.on('mousedown', function() {\n        var sliderOpts = getSliderOpts();\n        gd.emit('plotly_sliderstart', {slider: sliderOpts});\n\n        var grip = sliderGroup.select('.' + constants.gripRectClass);\n\n        d3.event.stopPropagation();\n        d3.event.preventDefault();\n        grip.call(Color.fill, sliderOpts.activebgcolor);\n\n        var normalizedPosition = positionToNormalizedValue(sliderOpts, d3.mouse(node)[0]);\n        handleInput(gd, sliderGroup, sliderOpts, normalizedPosition, true);\n        sliderOpts._dragging = true;\n\n        $gd.on('mousemove', function() {\n            var sliderOpts = getSliderOpts();\n            var normalizedPosition = positionToNormalizedValue(sliderOpts, d3.mouse(node)[0]);\n            handleInput(gd, sliderGroup, sliderOpts, normalizedPosition, false);\n        });\n\n        $gd.on('mouseup', function() {\n            var sliderOpts = getSliderOpts();\n            sliderOpts._dragging = false;\n            grip.call(Color.fill, sliderOpts.bgcolor);\n            $gd.on('mouseup', null);\n            $gd.on('mousemove', null);\n\n            gd.emit('plotly_sliderend', {\n                slider: sliderOpts,\n                step: sliderOpts.steps[sliderOpts.active]\n            });\n        });\n    });\n}\n\nfunction drawTicks(sliderGroup, sliderOpts) {\n    var tick = sliderGroup.selectAll('rect.' + constants.tickRectClass)\n        .data(sliderOpts.steps);\n\n    tick.enter().append('rect')\n        .classed(constants.tickRectClass, true);\n\n    tick.exit().remove();\n\n    tick.attr({\n        width: sliderOpts.tickwidth + 'px',\n        'shape-rendering': 'crispEdges'\n    });\n\n    tick.each(function(d, i) {\n        var isMajor = i % sliderOpts.labelStride === 0;\n        var item = d3.select(this);\n\n        item\n            .attr({height: isMajor ? sliderOpts.ticklen : sliderOpts.minorticklen})\n            .call(Color.fill, isMajor ? sliderOpts.tickcolor : sliderOpts.tickcolor);\n\n        Drawing.setTranslate(item,\n            normalizedValueToPosition(sliderOpts, i / (sliderOpts.steps.length - 1)) - 0.5 * sliderOpts.tickwidth,\n            (isMajor ? constants.tickOffset : constants.minorTickOffset) + sliderOpts.currentValueTotalHeight\n        );\n    });\n\n}\n\nfunction computeLabelSteps(sliderOpts) {\n    sliderOpts.labelSteps = [];\n    var i0 = 0;\n    var nsteps = sliderOpts.steps.length;\n\n    for(var i = i0; i < nsteps; i += sliderOpts.labelStride) {\n        sliderOpts.labelSteps.push({\n            fraction: i / (nsteps - 1),\n            step: sliderOpts.steps[i]\n        });\n    }\n}\n\nfunction setGripPosition(sliderGroup, sliderOpts, position, doTransition) {\n    var grip = sliderGroup.select('rect.' + constants.gripRectClass);\n\n    var x = normalizedValueToPosition(sliderOpts, position);\n\n    // If this is true, then *this component* is already invoking its own command\n    // and has triggered its own animation.\n    if(sliderOpts._invokingCommand) return;\n\n    var el = grip;\n    if(doTransition && sliderOpts.transition.duration > 0) {\n        el = el.transition()\n            .duration(sliderOpts.transition.duration)\n            .ease(sliderOpts.transition.easing);\n    }\n\n    // Drawing.setTranslate doesn't work here becasue of the transition duck-typing.\n    // It's also not necessary because there are no other transitions to preserve.\n    el.attr('transform', 'translate(' + (x - constants.gripWidth * 0.5) + ',' + (sliderOpts.currentValueTotalHeight) + ')');\n}\n\n// Convert a number from [0-1] to a pixel position relative to the slider group container:\nfunction normalizedValueToPosition(sliderOpts, normalizedPosition) {\n    return sliderOpts.inputAreaStart + constants.stepInset +\n        (sliderOpts.inputAreaLength - 2 * constants.stepInset) * Math.min(1, Math.max(0, normalizedPosition));\n}\n\n// Convert a position relative to the slider group to a nubmer in [0, 1]\nfunction positionToNormalizedValue(sliderOpts, position) {\n    return Math.min(1, Math.max(0, (position - constants.stepInset - sliderOpts.inputAreaStart) / (sliderOpts.inputAreaLength - 2 * constants.stepInset - 2 * sliderOpts.inputAreaStart)));\n}\n\nfunction drawTouchRect(sliderGroup, gd, sliderOpts) {\n    var rect = sliderGroup.selectAll('rect.' + constants.railTouchRectClass)\n        .data([0]);\n\n    rect.enter().append('rect')\n        .classed(constants.railTouchRectClass, true)\n        .call(attachGripEvents, gd, sliderGroup, sliderOpts)\n        .style('pointer-events', 'all');\n\n    rect.attr({\n        width: sliderOpts.inputAreaLength,\n        height: Math.max(sliderOpts.inputAreaWidth, constants.tickOffset + sliderOpts.ticklen + sliderOpts.labelHeight)\n    })\n        .call(Color.fill, sliderOpts.bgcolor)\n        .attr('opacity', 0);\n\n    Drawing.setTranslate(rect, 0, sliderOpts.currentValueTotalHeight);\n}\n\nfunction drawRail(sliderGroup, sliderOpts) {\n    var rect = sliderGroup.selectAll('rect.' + constants.railRectClass)\n        .data([0]);\n\n    rect.enter().append('rect')\n        .classed(constants.railRectClass, true);\n\n    var computedLength = sliderOpts.inputAreaLength - constants.railInset * 2;\n\n    rect.attr({\n        width: computedLength,\n        height: constants.railWidth,\n        rx: constants.railRadius,\n        ry: constants.railRadius,\n        'shape-rendering': 'crispEdges'\n    })\n        .call(Color.stroke, sliderOpts.bordercolor)\n        .call(Color.fill, sliderOpts.bgcolor)\n        .style('stroke-width', sliderOpts.borderwidth + 'px');\n\n    Drawing.setTranslate(rect,\n        constants.railInset,\n        (sliderOpts.inputAreaWidth - constants.railWidth) * 0.5 + sliderOpts.currentValueTotalHeight\n    );\n}\n\nfunction clearPushMargins(gd) {\n    var pushMargins = gd._fullLayout._pushmargin || {},\n        keys = Object.keys(pushMargins);\n\n    for(var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n\n        if(k.indexOf(constants.autoMarginIdRoot) !== -1) {\n            Plots.autoMargin(gd, k);\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/sliders/draw.js\n// module id = 272\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n    moduleType: 'component',\n    name: 'rangeslider',\n\n    schema: {\n        subplots: {\n            xaxis: {rangeslider: require('./attributes')}\n        }\n    },\n\n    layoutAttributes: require('./attributes'),\n    handleDefaults: require('./defaults'),\n    calcAutorange: require('./calc_autorange'),\n    draw: require('./draw')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/rangeslider/index.js\n// module id = 273\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar attributes = require('./attributes');\n\nmodule.exports = function handleDefaults(layoutIn, layoutOut, axName) {\n    if(!layoutIn[axName].rangeslider) return;\n\n    // not super proud of this (maybe store _ in axis object instead\n    if(!Lib.isPlainObject(layoutIn[axName].rangeslider)) {\n        layoutIn[axName].rangeslider = {};\n    }\n\n    var containerIn = layoutIn[axName].rangeslider,\n        axOut = layoutOut[axName],\n        containerOut = axOut.rangeslider = {};\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(containerIn, containerOut, attributes, attr, dflt);\n    }\n\n    var visible = coerce('visible');\n    if(!visible) return;\n\n    coerce('bgcolor', layoutOut.plot_bgcolor);\n    coerce('bordercolor');\n    coerce('borderwidth');\n    coerce('thickness');\n\n    coerce('autorange', !axOut.isValidRange(containerIn.range));\n    coerce('range');\n\n    // Expand slider range to the axis range\n    // TODO: what if the ranges are reversed?\n    if(containerOut.range) {\n        var outRange = containerOut.range,\n            axRange = axOut.range;\n\n        outRange[0] = axOut.l2r(Math.min(axOut.r2l(outRange[0]), axOut.r2l(axRange[0])));\n        outRange[1] = axOut.l2r(Math.max(axOut.r2l(outRange[1]), axOut.r2l(axRange[1])));\n    }\n\n    axOut.cleanRange('rangeslider.range');\n\n    // to map back range slider (auto) range\n    containerOut._input = containerIn;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/rangeslider/defaults.js\n// module id = 274\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Axes = require('../../plots/cartesian/axes');\nvar constants = require('./constants');\n\nmodule.exports = function calcAutorange(gd) {\n    var axes = Axes.list(gd, 'x', true);\n\n    // Compute new slider range using axis autorange if necessary.\n    //\n    // Copy back range to input range slider container to skip\n    // this step in subsequent draw calls.\n\n    for(var i = 0; i < axes.length; i++) {\n        var ax = axes[i],\n            opts = ax[constants.name];\n\n        // Don't try calling getAutoRange if _min and _max are filled in.\n        // This happens on updates where the calc step is skipped.\n\n        if(opts && opts.visible && opts.autorange && ax._min.length && ax._max.length) {\n            opts._input.autorange = true;\n            opts._input.range = opts.range = Axes.getAutoRange(ax);\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/rangeslider/calc_autorange.js\n// module id = 275\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Plotly = require('../../plotly');\nvar Plots = require('../../plots/plots');\n\nvar Lib = require('../../lib');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\n\nvar Cartesian = require('../../plots/cartesian');\nvar Axes = require('../../plots/cartesian/axes');\n\nvar dragElement = require('../dragelement');\nvar setCursor = require('../../lib/setcursor');\n\nvar constants = require('./constants');\n\n\nmodule.exports = function(gd) {\n    var fullLayout = gd._fullLayout,\n        rangeSliderData = makeRangeSliderData(fullLayout);\n\n    /*\n     * <g container />\n     *  <rect bg />\n     *  < .... range plot />\n     *  <rect mask-min />\n     *  <rect mask-max />\n     *  <rect slidebox />\n     *  <g grabber-min />\n     *      <rect handle-min />\n     *      <rect grabare-min />\n     *  <g grabber-max />\n     *      <rect handle-max />\n     *      <rect grabare-max />\n     *\n     *  ...\n     */\n\n    function keyFunction(axisOpts) {\n        return axisOpts._name;\n    }\n\n    var rangeSliders = fullLayout._infolayer\n        .selectAll('g.' + constants.containerClassName)\n        .data(rangeSliderData, keyFunction);\n\n    rangeSliders.enter().append('g')\n        .classed(constants.containerClassName, true)\n        .attr('pointer-events', 'all');\n\n    // remove exiting sliders and their corresponding clip paths\n    rangeSliders.exit().each(function(axisOpts) {\n        var rangeSlider = d3.select(this),\n            opts = axisOpts[constants.name];\n\n        rangeSlider.remove();\n        fullLayout._topdefs.select('#' + opts._clipId).remove();\n    });\n\n    // remove push margin object(s)\n    if(rangeSliders.exit().size()) clearPushMargins(gd);\n\n    // return early if no range slider is visible\n    if(rangeSliderData.length === 0) return;\n\n    // for all present range sliders\n    rangeSliders.each(function(axisOpts) {\n        var rangeSlider = d3.select(this),\n            opts = axisOpts[constants.name],\n            oppAxisOpts = fullLayout[Axes.id2name(axisOpts.anchor)];\n\n        // update range slider dimensions\n\n        var margin = fullLayout.margin,\n            graphSize = fullLayout._size,\n            domain = axisOpts.domain,\n            oppDomain = oppAxisOpts.domain,\n            tickHeight = (axisOpts._boundingBox || {}).height || 0;\n\n        opts._id = constants.name + axisOpts._id;\n        opts._clipId = opts._id + '-' + fullLayout._uid;\n\n        opts._width = graphSize.w * (domain[1] - domain[0]);\n        opts._height = (fullLayout.height - margin.b - margin.t) * opts.thickness;\n        opts._offsetShift = Math.floor(opts.borderwidth / 2);\n\n        var x = Math.round(margin.l + (graphSize.w * domain[0]));\n\n        var y = Math.round(\n            margin.t + graphSize.h * (1 - oppDomain[0]) +\n            tickHeight +\n            opts._offsetShift + constants.extraPad\n        );\n\n        rangeSlider.attr('transform', 'translate(' + x + ',' + y + ')');\n\n        // update data <--> pixel coordinate conversion methods\n\n        var range0 = axisOpts.r2l(opts.range[0]),\n            range1 = axisOpts.r2l(opts.range[1]),\n            dist = range1 - range0;\n\n        opts.p2d = function(v) {\n            return (v / opts._width) * dist + range0;\n        };\n\n        opts.d2p = function(v) {\n            return (v - range0) / dist * opts._width;\n        };\n\n        opts._rl = [range0, range1];\n\n        // update inner nodes\n\n        rangeSlider\n            .call(drawBg, gd, axisOpts, opts)\n            .call(addClipPath, gd, axisOpts, opts)\n            .call(drawRangePlot, gd, axisOpts, opts)\n            .call(drawMasks, gd, axisOpts, opts)\n            .call(drawSlideBox, gd, axisOpts, opts)\n            .call(drawGrabbers, gd, axisOpts, opts);\n\n        // setup drag element\n        setupDragElement(rangeSlider, gd, axisOpts, opts);\n\n        // update current range\n        setPixelRange(rangeSlider, gd, axisOpts, opts);\n\n        // update margins\n\n        Plots.autoMargin(gd, opts._id, {\n            x: domain[0],\n            y: oppDomain[0],\n            l: 0,\n            r: 0,\n            t: 0,\n            b: opts._height + margin.b + tickHeight,\n            pad: constants.extraPad + opts._offsetShift * 2\n        });\n\n    });\n};\n\nfunction makeRangeSliderData(fullLayout) {\n    var axes = Axes.list({ _fullLayout: fullLayout }, 'x', true),\n        name = constants.name,\n        out = [];\n\n    if(fullLayout._has('gl2d')) return out;\n\n    for(var i = 0; i < axes.length; i++) {\n        var ax = axes[i];\n\n        if(ax[name] && ax[name].visible) out.push(ax);\n    }\n\n    return out;\n}\n\nfunction setupDragElement(rangeSlider, gd, axisOpts, opts) {\n    var slideBox = rangeSlider.select('rect.' + constants.slideBoxClassName).node(),\n        grabAreaMin = rangeSlider.select('rect.' + constants.grabAreaMinClassName).node(),\n        grabAreaMax = rangeSlider.select('rect.' + constants.grabAreaMaxClassName).node();\n\n    rangeSlider.on('mousedown', function() {\n        var event = d3.event,\n            target = event.target,\n            startX = event.clientX,\n            offsetX = startX - rangeSlider.node().getBoundingClientRect().left,\n            minVal = opts.d2p(axisOpts._rl[0]),\n            maxVal = opts.d2p(axisOpts._rl[1]);\n\n        var dragCover = dragElement.coverSlip();\n\n        dragCover.addEventListener('mousemove', mouseMove);\n        dragCover.addEventListener('mouseup', mouseUp);\n\n        function mouseMove(e) {\n            var delta = +e.clientX - startX;\n            var pixelMin, pixelMax, cursor;\n\n            switch(target) {\n                case slideBox:\n                    cursor = 'ew-resize';\n                    pixelMin = minVal + delta;\n                    pixelMax = maxVal + delta;\n                    break;\n\n                case grabAreaMin:\n                    cursor = 'col-resize';\n                    pixelMin = minVal + delta;\n                    pixelMax = maxVal;\n                    break;\n\n                case grabAreaMax:\n                    cursor = 'col-resize';\n                    pixelMin = minVal;\n                    pixelMax = maxVal + delta;\n                    break;\n\n                default:\n                    cursor = 'ew-resize';\n                    pixelMin = offsetX;\n                    pixelMax = offsetX + delta;\n                    break;\n            }\n\n            if(pixelMax < pixelMin) {\n                var tmp = pixelMax;\n                pixelMax = pixelMin;\n                pixelMin = tmp;\n            }\n\n            opts._pixelMin = pixelMin;\n            opts._pixelMax = pixelMax;\n\n            setCursor(d3.select(dragCover), cursor);\n            setDataRange(rangeSlider, gd, axisOpts, opts);\n        }\n\n        function mouseUp() {\n            dragCover.removeEventListener('mousemove', mouseMove);\n            dragCover.removeEventListener('mouseup', mouseUp);\n            Lib.removeElement(dragCover);\n        }\n    });\n}\n\nfunction setDataRange(rangeSlider, gd, axisOpts, opts) {\n\n    function clamp(v) {\n        return axisOpts.l2r(Lib.constrain(v, opts._rl[0], opts._rl[1]));\n    }\n\n    var dataMin = clamp(opts.p2d(opts._pixelMin)),\n        dataMax = clamp(opts.p2d(opts._pixelMax));\n\n    window.requestAnimationFrame(function() {\n        Plotly.relayout(gd, axisOpts._name + '.range', [dataMin, dataMax]);\n    });\n}\n\nfunction setPixelRange(rangeSlider, gd, axisOpts, opts) {\n    var hw2 = constants.handleWidth / 2;\n\n    function clamp(v) {\n        return Lib.constrain(v, 0, opts._width);\n    }\n\n    function clampHandle(v) {\n        return Lib.constrain(v, -hw2, opts._width + hw2);\n    }\n\n    var pixelMin = clamp(opts.d2p(axisOpts._rl[0])),\n        pixelMax = clamp(opts.d2p(axisOpts._rl[1]));\n\n    rangeSlider.select('rect.' + constants.slideBoxClassName)\n        .attr('x', pixelMin)\n        .attr('width', pixelMax - pixelMin);\n\n    rangeSlider.select('rect.' + constants.maskMinClassName)\n        .attr('width', pixelMin);\n\n    rangeSlider.select('rect.' + constants.maskMaxClassName)\n        .attr('x', pixelMax)\n        .attr('width', opts._width - pixelMax);\n\n    // add offset for crispier corners\n    // https://github.com/plotly/plotly.js/pull/1409\n    var offset = 0.5;\n\n    var xMin = Math.round(clampHandle(pixelMin - hw2)) - offset,\n        xMax = Math.round(clampHandle(pixelMax - hw2)) + offset;\n\n    rangeSlider.select('g.' + constants.grabberMinClassName)\n        .attr('transform', 'translate(' + xMin + ',' + offset + ')');\n\n    rangeSlider.select('g.' + constants.grabberMaxClassName)\n        .attr('transform', 'translate(' + xMax + ',' + offset + ')');\n}\n\nfunction drawBg(rangeSlider, gd, axisOpts, opts) {\n    var bg = rangeSlider.selectAll('rect.' + constants.bgClassName)\n        .data([0]);\n\n    bg.enter().append('rect')\n        .classed(constants.bgClassName, true)\n        .attr({\n            x: 0,\n            y: 0,\n            'shape-rendering': 'crispEdges'\n        });\n\n    var borderCorrect = (opts.borderwidth % 2) === 0 ?\n            opts.borderwidth :\n            opts.borderwidth - 1;\n\n    var offsetShift = -opts._offsetShift;\n    var lw = Drawing.crispRound(gd, opts.borderwidth);\n\n    bg.attr({\n        width: opts._width + borderCorrect,\n        height: opts._height + borderCorrect,\n        transform: 'translate(' + offsetShift + ',' + offsetShift + ')',\n        fill: opts.bgcolor,\n        stroke: opts.bordercolor,\n        'stroke-width': lw\n    });\n}\n\nfunction addClipPath(rangeSlider, gd, axisOpts, opts) {\n    var fullLayout = gd._fullLayout;\n\n    var clipPath = fullLayout._topdefs.selectAll('#' + opts._clipId)\n        .data([0]);\n\n    clipPath.enter().append('clipPath')\n        .attr('id', opts._clipId)\n        .append('rect')\n        .attr({ x: 0, y: 0 });\n\n    clipPath.select('rect').attr({\n        width: opts._width,\n        height: opts._height\n    });\n}\n\nfunction drawRangePlot(rangeSlider, gd, axisOpts, opts) {\n    var subplotData = Axes.getSubplots(gd, axisOpts),\n        calcData = gd.calcdata;\n\n    var rangePlots = rangeSlider.selectAll('g.' + constants.rangePlotClassName)\n        .data(subplotData, Lib.identity);\n\n    rangePlots.enter().append('g')\n        .attr('class', function(id) { return constants.rangePlotClassName + ' ' + id; })\n        .call(Drawing.setClipUrl, opts._clipId);\n\n    rangePlots.order();\n\n    rangePlots.exit().remove();\n\n    var mainplotinfo;\n\n    rangePlots.each(function(id, i) {\n        var plotgroup = d3.select(this),\n            isMainPlot = (i === 0);\n\n        var oppAxisOpts = Axes.getFromId(gd, id, 'y'),\n            oppAxisName = oppAxisOpts._name;\n\n        var mockFigure = {\n            data: [],\n            layout: {\n                xaxis: {\n                    type: axisOpts.type,\n                    domain: [0, 1],\n                    range: opts.range.slice(),\n                    calendar: axisOpts.calendar\n                },\n                width: opts._width,\n                height: opts._height,\n                margin: { t: 0, b: 0, l: 0, r: 0 }\n            },\n            _context: gd._context\n        };\n\n        mockFigure.layout[oppAxisName] = {\n            type: oppAxisOpts.type,\n            domain: [0, 1],\n            range: oppAxisOpts.range.slice(),\n            calendar: oppAxisOpts.calendar\n        };\n\n        Plots.supplyDefaults(mockFigure);\n\n        var xa = mockFigure._fullLayout.xaxis,\n            ya = mockFigure._fullLayout[oppAxisName];\n\n        var plotinfo = {\n            id: id,\n            plotgroup: plotgroup,\n            xaxis: xa,\n            yaxis: ya\n        };\n\n        if(isMainPlot) mainplotinfo = plotinfo;\n        else {\n            plotinfo.mainplot = 'xy';\n            plotinfo.mainplotinfo = mainplotinfo;\n        }\n\n        Cartesian.rangePlot(gd, plotinfo, filterRangePlotCalcData(calcData, id));\n    });\n}\n\nfunction filterRangePlotCalcData(calcData, subplotId) {\n    var out = [];\n\n    for(var i = 0; i < calcData.length; i++) {\n        var calcTrace = calcData[i],\n            trace = calcTrace[0].trace;\n\n        if(trace.xaxis + trace.yaxis === subplotId) {\n            out.push(calcTrace);\n        }\n    }\n\n    return out;\n}\n\nfunction drawMasks(rangeSlider, gd, axisOpts, opts) {\n    var maskMin = rangeSlider.selectAll('rect.' + constants.maskMinClassName)\n        .data([0]);\n\n    maskMin.enter().append('rect')\n        .classed(constants.maskMinClassName, true)\n        .attr({ x: 0, y: 0 })\n        .attr('shape-rendering', 'crispEdges');\n\n    maskMin\n        .attr('height', opts._height)\n        .call(Color.fill, constants.maskColor);\n\n    var maskMax = rangeSlider.selectAll('rect.' + constants.maskMaxClassName)\n        .data([0]);\n\n    maskMax.enter().append('rect')\n        .classed(constants.maskMaxClassName, true)\n        .attr('y', 0)\n        .attr('shape-rendering', 'crispEdges');\n\n    maskMax\n        .attr('height', opts._height)\n        .call(Color.fill, constants.maskColor);\n}\n\nfunction drawSlideBox(rangeSlider, gd, axisOpts, opts) {\n    if(gd._context.staticPlot) return;\n\n    var slideBox = rangeSlider.selectAll('rect.' + constants.slideBoxClassName)\n        .data([0]);\n\n    slideBox.enter().append('rect')\n        .classed(constants.slideBoxClassName, true)\n        .attr('y', 0)\n        .attr('cursor', constants.slideBoxCursor)\n        .attr('shape-rendering', 'crispEdges');\n\n    slideBox.attr({\n        height: opts._height,\n        fill: constants.slideBoxFill\n    });\n}\n\nfunction drawGrabbers(rangeSlider, gd, axisOpts, opts) {\n\n    // <g grabber />\n\n    var grabberMin = rangeSlider.selectAll('g.' + constants.grabberMinClassName)\n        .data([0]);\n    grabberMin.enter().append('g')\n        .classed(constants.grabberMinClassName, true);\n\n    var grabberMax = rangeSlider.selectAll('g.' + constants.grabberMaxClassName)\n        .data([0]);\n    grabberMax.enter().append('g')\n        .classed(constants.grabberMaxClassName, true);\n\n    // <g handle />\n\n    var handleFixAttrs = {\n        x: 0,\n        width: constants.handleWidth,\n        rx: constants.handleRadius,\n        fill: Color.background,\n        stroke: Color.defaultLine,\n        'stroke-width': constants.handleStrokeWidth,\n        'shape-rendering': 'crispEdges'\n    };\n\n    var handleDynamicAttrs = {\n        y: Math.round(opts._height / 4),\n        height: Math.round(opts._height / 2),\n    };\n\n    var handleMin = grabberMin.selectAll('rect.' + constants.handleMinClassName)\n        .data([0]);\n    handleMin.enter().append('rect')\n        .classed(constants.handleMinClassName, true)\n        .attr(handleFixAttrs);\n    handleMin.attr(handleDynamicAttrs);\n\n    var handleMax = grabberMax.selectAll('rect.' + constants.handleMaxClassName)\n        .data([0]);\n    handleMax.enter().append('rect')\n        .classed(constants.handleMaxClassName, true)\n        .attr(handleFixAttrs);\n    handleMax.attr(handleDynamicAttrs);\n\n    // <g grabarea />\n\n    if(gd._context.staticPlot) return;\n\n    var grabAreaFixAttrs = {\n        width: constants.grabAreaWidth,\n        x: 0,\n        y: 0,\n        fill: constants.grabAreaFill,\n        cursor: constants.grabAreaCursor\n    };\n\n    var grabAreaMin = grabberMin.selectAll('rect.' + constants.grabAreaMinClassName)\n        .data([0]);\n    grabAreaMin.enter().append('rect')\n        .classed(constants.grabAreaMinClassName, true)\n        .attr(grabAreaFixAttrs);\n    grabAreaMin.attr('height', opts._height);\n\n    var grabAreaMax = grabberMax.selectAll('rect.' + constants.grabAreaMaxClassName)\n        .data([0]);\n    grabAreaMax.enter().append('rect')\n        .classed(constants.grabAreaMaxClassName, true)\n        .attr(grabAreaFixAttrs);\n    grabAreaMax.attr('height', opts._height);\n}\n\nfunction clearPushMargins(gd) {\n    var pushMargins = gd._fullLayout._pushmargin || {},\n        keys = Object.keys(pushMargins);\n\n    for(var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n\n        if(k.indexOf(constants.name) !== -1) {\n            Plots.autoMargin(gd, k);\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/rangeslider/draw.js\n// module id = 276\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n    moduleType: 'component',\n    name: 'rangeselector',\n\n    schema: {\n        subplots: {\n            xaxis: {rangeselector: require('./attributes')}\n        }\n    },\n\n    layoutAttributes: require('./attributes'),\n    handleDefaults: require('./defaults'),\n\n    draw: require('./draw')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/rangeselector/index.js\n// module id = 277\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../color');\n\nvar attributes = require('./attributes');\nvar buttonAttrs = require('./button_attributes');\nvar constants = require('./constants');\n\n\nmodule.exports = function handleDefaults(containerIn, containerOut, layout, counterAxes, calendar) {\n    var selectorIn = containerIn.rangeselector || {},\n        selectorOut = containerOut.rangeselector = {};\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(selectorIn, selectorOut, attributes, attr, dflt);\n    }\n\n    var buttons = buttonsDefaults(selectorIn, selectorOut, calendar);\n\n    var visible = coerce('visible', buttons.length > 0);\n    if(!visible) return;\n\n    var posDflt = getPosDflt(containerOut, layout, counterAxes);\n    coerce('x', posDflt[0]);\n    coerce('y', posDflt[1]);\n    Lib.noneOrAll(containerIn, containerOut, ['x', 'y']);\n\n    coerce('xanchor');\n    coerce('yanchor');\n\n    Lib.coerceFont(coerce, 'font', layout.font);\n\n    var bgColor = coerce('bgcolor');\n    coerce('activecolor', Color.contrast(bgColor, constants.lightAmount, constants.darkAmount));\n    coerce('bordercolor');\n    coerce('borderwidth');\n};\n\nfunction buttonsDefaults(containerIn, containerOut, calendar) {\n    var buttonsIn = containerIn.buttons || [],\n        buttonsOut = containerOut.buttons = [];\n\n    var buttonIn, buttonOut;\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(buttonIn, buttonOut, buttonAttrs, attr, dflt);\n    }\n\n    for(var i = 0; i < buttonsIn.length; i++) {\n        buttonIn = buttonsIn[i];\n        buttonOut = {};\n\n        if(!Lib.isPlainObject(buttonIn)) continue;\n\n        var step = coerce('step');\n        if(step !== 'all') {\n            if(calendar && calendar !== 'gregorian' && (step === 'month' || step === 'year')) {\n                buttonOut.stepmode = 'backward';\n            }\n            else {\n                coerce('stepmode');\n            }\n\n            coerce('count');\n        }\n\n        coerce('label');\n\n        buttonOut._index = i;\n        buttonsOut.push(buttonOut);\n    }\n\n    return buttonsOut;\n}\n\nfunction getPosDflt(containerOut, layout, counterAxes) {\n    var anchoredList = counterAxes.filter(function(ax) {\n        return layout[ax].anchor === containerOut._id;\n    });\n\n    var posY = 0;\n    for(var i = 0; i < anchoredList.length; i++) {\n        var domain = layout[anchoredList[i]].domain;\n        if(domain) posY = Math.max(domain[1], posY);\n    }\n\n    return [containerOut.domain[0], posY + constants.yPad];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/rangeselector/defaults.js\n// module id = 278\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Plotly = require('../../plotly');\nvar Plots = require('../../plots/plots');\nvar Color = require('../color');\nvar Drawing = require('../drawing');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar axisIds = require('../../plots/cartesian/axis_ids');\nvar anchorUtils = require('../legend/anchor_utils');\n\nvar LINE_SPACING = require('../../constants/alignment').LINE_SPACING;\n\nvar constants = require('./constants');\nvar getUpdateObject = require('./get_update_object');\n\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout;\n\n    var selectors = fullLayout._infolayer.selectAll('.rangeselector')\n        .data(makeSelectorData(gd), selectorKeyFunc);\n\n    selectors.enter().append('g')\n        .classed('rangeselector', true);\n\n    selectors.exit().remove();\n\n    selectors.style({\n        cursor: 'pointer',\n        'pointer-events': 'all'\n    });\n\n    selectors.each(function(d) {\n        var selector = d3.select(this),\n            axisLayout = d,\n            selectorLayout = axisLayout.rangeselector;\n\n        var buttons = selector.selectAll('g.button')\n            .data(selectorLayout.buttons);\n\n        buttons.enter().append('g')\n            .classed('button', true);\n\n        buttons.exit().remove();\n\n        buttons.each(function(d) {\n            var button = d3.select(this);\n            var update = getUpdateObject(axisLayout, d);\n\n            d.isActive = isActive(axisLayout, d, update);\n\n            button.call(drawButtonRect, selectorLayout, d);\n            button.call(drawButtonText, selectorLayout, d, gd);\n\n            button.on('click', function() {\n                if(gd._dragged) return;\n\n                Plotly.relayout(gd, update);\n            });\n\n            button.on('mouseover', function() {\n                d.isHovered = true;\n                button.call(drawButtonRect, selectorLayout, d);\n            });\n\n            button.on('mouseout', function() {\n                d.isHovered = false;\n                button.call(drawButtonRect, selectorLayout, d);\n            });\n        });\n\n        // N.B. this mutates selectorLayout\n        reposition(gd, buttons, selectorLayout, axisLayout._name);\n\n        selector.attr('transform', 'translate(' +\n            selectorLayout.lx + ',' + selectorLayout.ly +\n        ')');\n    });\n\n};\n\nfunction makeSelectorData(gd) {\n    var axes = axisIds.list(gd, 'x', true);\n    var data = [];\n\n    for(var i = 0; i < axes.length; i++) {\n        var axis = axes[i];\n\n        if(axis.rangeselector && axis.rangeselector.visible) {\n            data.push(axis);\n        }\n    }\n\n    return data;\n}\n\nfunction selectorKeyFunc(d) {\n    return d._id;\n}\n\nfunction isActive(axisLayout, opts, update) {\n    if(opts.step === 'all') {\n        return axisLayout.autorange === true;\n    }\n    else {\n        var keys = Object.keys(update);\n\n        return (\n            axisLayout.range[0] === update[keys[0]] &&\n            axisLayout.range[1] === update[keys[1]]\n        );\n    }\n}\n\nfunction drawButtonRect(button, selectorLayout, d) {\n    var rect = button.selectAll('rect')\n        .data([0]);\n\n    rect.enter().append('rect')\n        .classed('selector-rect', true);\n\n    rect.attr('shape-rendering', 'crispEdges');\n\n    rect.attr({\n        'rx': constants.rx,\n        'ry': constants.ry\n    });\n\n    rect.call(Color.stroke, selectorLayout.bordercolor)\n        .call(Color.fill, getFillColor(selectorLayout, d))\n        .style('stroke-width', selectorLayout.borderwidth + 'px');\n}\n\nfunction getFillColor(selectorLayout, d) {\n    return (d.isActive || d.isHovered) ?\n        selectorLayout.activecolor :\n        selectorLayout.bgcolor;\n}\n\nfunction drawButtonText(button, selectorLayout, d, gd) {\n    function textLayout(s) {\n        svgTextUtils.convertToTspans(s, gd);\n    }\n\n    var text = button.selectAll('text')\n        .data([0]);\n\n    text.enter().append('text')\n        .classed('selector-text', true)\n        .classed('user-select-none', true);\n\n    text.attr('text-anchor', 'middle');\n\n    text.call(Drawing.font, selectorLayout.font)\n        .text(getLabel(d))\n        .call(textLayout);\n}\n\nfunction getLabel(opts) {\n    if(opts.label) return opts.label;\n\n    if(opts.step === 'all') return 'all';\n\n    return opts.count + opts.step.charAt(0);\n}\n\nfunction reposition(gd, buttons, opts, axName) {\n    opts.width = 0;\n    opts.height = 0;\n\n    var borderWidth = opts.borderwidth;\n\n    buttons.each(function() {\n        var button = d3.select(this);\n        var text = button.select('.selector-text');\n\n        var tHeight = opts.font.size * LINE_SPACING;\n        var hEff = Math.max(tHeight * svgTextUtils.lineCount(text), 16) + 3;\n\n        opts.height = Math.max(opts.height, hEff);\n    });\n\n    buttons.each(function() {\n        var button = d3.select(this);\n        var rect = button.select('.selector-rect');\n        var text = button.select('.selector-text');\n\n        var tWidth = text.node() && Drawing.bBox(text.node()).width;\n        var tHeight = opts.font.size * LINE_SPACING;\n        var tLines = svgTextUtils.lineCount(text);\n\n        var wEff = Math.max(tWidth + 10, constants.minButtonWidth);\n\n        // TODO add MathJax support\n\n        // TODO add buttongap attribute\n\n        button.attr('transform', 'translate(' +\n            (borderWidth + opts.width) + ',' + borderWidth +\n        ')');\n\n        rect.attr({\n            x: 0,\n            y: 0,\n            width: wEff,\n            height: opts.height\n        });\n\n        svgTextUtils.positionText(text, wEff / 2,\n            opts.height / 2 - ((tLines - 1) * tHeight / 2) + 3);\n\n        opts.width += wEff + 5;\n    });\n\n    buttons.selectAll('rect').attr('height', opts.height);\n\n    var graphSize = gd._fullLayout._size;\n    opts.lx = graphSize.l + graphSize.w * opts.x;\n    opts.ly = graphSize.t + graphSize.h * (1 - opts.y);\n\n    var xanchor = 'left';\n    if(anchorUtils.isRightAnchor(opts)) {\n        opts.lx -= opts.width;\n        xanchor = 'right';\n    }\n    if(anchorUtils.isCenterAnchor(opts)) {\n        opts.lx -= opts.width / 2;\n        xanchor = 'center';\n    }\n\n    var yanchor = 'top';\n    if(anchorUtils.isBottomAnchor(opts)) {\n        opts.ly -= opts.height;\n        yanchor = 'bottom';\n    }\n    if(anchorUtils.isMiddleAnchor(opts)) {\n        opts.ly -= opts.height / 2;\n        yanchor = 'middle';\n    }\n\n    opts.width = Math.ceil(opts.width);\n    opts.height = Math.ceil(opts.height);\n    opts.lx = Math.round(opts.lx);\n    opts.ly = Math.round(opts.ly);\n\n    Plots.autoMargin(gd, axName + '-range-selector', {\n        x: opts.x,\n        y: opts.y,\n        l: opts.width * ({right: 1, center: 0.5}[xanchor] || 0),\n        r: opts.width * ({left: 1, center: 0.5}[xanchor] || 0),\n        b: opts.height * ({top: 1, middle: 0.5}[yanchor] || 0),\n        t: opts.height * ({bottom: 1, middle: 0.5}[yanchor] || 0)\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/rangeselector/draw.js\n// module id = 279\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nmodule.exports = function getUpdateObject(axisLayout, buttonLayout) {\n    var axName = axisLayout._name;\n    var update = {};\n\n    if(buttonLayout.step === 'all') {\n        update[axName + '.autorange'] = true;\n    }\n    else {\n        var xrange = getXRange(axisLayout, buttonLayout);\n\n        update[axName + '.range[0]'] = xrange[0];\n        update[axName + '.range[1]'] = xrange[1];\n    }\n\n    return update;\n};\n\nfunction getXRange(axisLayout, buttonLayout) {\n    var currentRange = axisLayout.range;\n    var base = new Date(axisLayout.r2l(currentRange[1]));\n\n    var step = buttonLayout.step,\n        count = buttonLayout.count;\n\n    var range0;\n\n    switch(buttonLayout.stepmode) {\n        case 'backward':\n            range0 = axisLayout.l2r(+d3.time[step].utc.offset(base, -count));\n            break;\n\n        case 'todate':\n            var base2 = d3.time[step].utc.offset(base, -count);\n\n            range0 = axisLayout.l2r(+d3.time[step].utc.ceil(base2));\n            break;\n    }\n\n    var range1 = currentRange[1];\n\n    return [range0, range1];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/components/rangeselector/get_update_object.js\n// module id = 280\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n    moduleType: 'locale',\n    name: 'en',\n    dictionary: {\n        'Click to enter Colorscale title': 'Click to enter Colourscale title'\n    },\n    format: {\n        days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n        shortDays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        months: [\n            'January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'\n        ],\n        shortMonths: [\n            'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n            'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n        ],\n        periods: ['AM', 'PM'],\n        dateTime: '%a %b %e %X %Y',\n        date: '%d/%m/%Y',\n        time: '%H:%M:%S',\n        decimal: '.',\n        thousands: ',',\n        grouping: [3],\n        currency: ['$', '']\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/locale-en.js\n// module id = 281\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n    moduleType: 'locale',\n    name: 'en-US',\n    dictionary: {\n        'Click to enter Colorscale title': 'Click to enter Colorscale title'\n    },\n    format: {\n        date: '%m/%d/%Y'\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/locale-en-us.js\n// module id = 282\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar helpers = require('./helpers');\n\nvar Snapshot = {\n    getDelay: helpers.getDelay,\n    getRedrawFunc: helpers.getRedrawFunc,\n    clone: require('./cloneplot'),\n    toSVG: require('./tosvg'),\n    svgToImg: require('./svgtoimg'),\n    toImage: require('./toimage'),\n    downloadImage: require('./download')\n};\n\nmodule.exports = Snapshot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/snapshot/index.js\n// module id = 283\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Plotly = require('../plotly');\nvar Lib = require('../lib');\n\nvar helpers = require('./helpers');\nvar clonePlot = require('./cloneplot');\nvar toSVG = require('./tosvg');\nvar svgToImg = require('./svgtoimg');\n\n\n/**\n * @param {object} gd figure Object\n * @param {object} opts option object\n * @param opts.format 'jpeg' | 'png' | 'webp' | 'svg'\n */\nfunction toImage(gd, opts) {\n\n    // first clone the GD so we can operate in a clean environment\n    var ev = new EventEmitter();\n\n    var clone = clonePlot(gd, {format: 'png'});\n    var clonedGd = clone.gd;\n\n    // put the cloned div somewhere off screen before attaching to DOM\n    clonedGd.style.position = 'absolute';\n    clonedGd.style.left = '-5000px';\n    document.body.appendChild(clonedGd);\n\n    function wait() {\n        var delay = helpers.getDelay(clonedGd._fullLayout);\n\n        setTimeout(function() {\n            var svg = toSVG(clonedGd);\n\n            var canvas = document.createElement('canvas');\n            canvas.id = Lib.randstr();\n\n            ev = svgToImg({\n                format: opts.format,\n                width: clonedGd._fullLayout.width,\n                height: clonedGd._fullLayout.height,\n                canvas: canvas,\n                emitter: ev,\n                svg: svg\n            });\n\n            ev.clean = function() {\n                if(clonedGd) document.body.removeChild(clonedGd);\n            };\n\n        }, delay);\n    }\n\n    var redrawFunc = helpers.getRedrawFunc(clonedGd);\n\n    Plotly.plot(clonedGd, clone.data, clone.layout, clone.config)\n        .then(redrawFunc)\n        .then(wait)\n        .catch(function(err) {\n            ev.emit('error', err);\n        });\n\n\n    return ev;\n}\n\nmodule.exports = toImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/snapshot/toimage.js\n// module id = 284\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = require('../src/traces/bar');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/lib/bar.js\n// module id = 285\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Bar = {};\n\nBar.attributes = require('./attributes');\nBar.layoutAttributes = require('./layout_attributes');\nBar.supplyDefaults = require('./defaults');\nBar.supplyLayoutDefaults = require('./layout_defaults');\nBar.calc = require('./calc');\nBar.setPositions = require('./set_positions');\nBar.colorbar = require('../scatter/colorbar');\nBar.arraysToCalcdata = require('./arrays_to_calcdata');\nBar.plot = require('./plot');\nBar.style = require('./style');\nBar.hoverPoints = require('./hover');\nBar.selectPoints = require('./select');\n\nBar.moduleType = 'trace';\nBar.name = 'bar';\nBar.basePlotModule = require('../../plots/cartesian');\nBar.categories = ['cartesian', 'bar', 'oriented', 'markerColorscale', 'errorBarsOK', 'showLegend'];\nBar.meta = {\n    description: [\n        'The data visualized by the span of the bars is set in `y`',\n        'if `orientation` is set th *v* (the default)',\n        'and the labels are set in `x`.',\n        'By setting `orientation` to *h*, the roles are interchanged.'\n    ].join(' ')\n};\n\nmodule.exports = Bar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/index.js\n// module id = 286\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\n\nvar handleXYDefaults = require('../scatter/xy_defaults');\nvar handleStyleDefaults = require('../bar/style_defaults');\nvar errorBarsSupplyDefaults = require('../../components/errorbars/defaults');\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var coerceFont = Lib.coerceFont;\n\n    var len = handleXYDefaults(traceIn, traceOut, layout, coerce);\n    if(!len) {\n        traceOut.visible = false;\n        return;\n    }\n\n    coerce('orientation', (traceOut.x && !traceOut.y) ? 'h' : 'v');\n    coerce('base');\n    coerce('offset');\n    coerce('width');\n\n    coerce('text');\n    coerce('hovertext');\n\n    var textPosition = coerce('textposition');\n\n    var hasBoth = Array.isArray(textPosition) || textPosition === 'auto',\n        hasInside = hasBoth || textPosition === 'inside',\n        hasOutside = hasBoth || textPosition === 'outside';\n\n    if(hasInside || hasOutside) {\n        var textFont = coerceFont(coerce, 'textfont', layout.font);\n        if(hasInside) coerceFont(coerce, 'insidetextfont', textFont);\n        if(hasOutside) coerceFont(coerce, 'outsidetextfont', textFont);\n        coerce('constraintext');\n        coerce('selected.textfont.color');\n        coerce('unselected.textfont.color');\n    }\n\n    handleStyleDefaults(traceIn, traceOut, coerce, defaultColor, layout);\n\n    // override defaultColor for error bars with defaultLine\n    errorBarsSupplyDefaults(traceIn, traceOut, Color.defaultLine, {axis: 'y'});\n    errorBarsSupplyDefaults(traceIn, traceOut, Color.defaultLine, {axis: 'x', inherit: 'y'});\n\n    Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/defaults.js\n// module id = 287\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Color = require('../../components/color');\nvar hasColorscale = require('../../components/colorscale/has_colorscale');\nvar colorscaleDefaults = require('../../components/colorscale/defaults');\n\nmodule.exports = function handleStyleDefaults(traceIn, traceOut, coerce, defaultColor, layout) {\n    coerce('marker.color', defaultColor);\n\n    if(hasColorscale(traceIn, 'marker')) {\n        colorscaleDefaults(\n            traceIn, traceOut, layout, coerce, {prefix: 'marker.', cLetter: 'c'}\n        );\n    }\n\n    coerce('marker.line.color', Color.defaultLine);\n\n    if(hasColorscale(traceIn, 'marker.line')) {\n        colorscaleDefaults(\n            traceIn, traceOut, layout, coerce, {prefix: 'marker.line.', cLetter: 'c'}\n        );\n    }\n\n    coerce('marker.line.width');\n    coerce('marker.opacity');\n    coerce('selected.marker.color');\n    coerce('unselected.marker.color');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/style_defaults.js\n// module id = 288\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Axes = require('../../plots/cartesian/axes');\nvar Lib = require('../../lib');\n\nvar layoutAttributes = require('./layout_attributes');\n\n\nmodule.exports = function(layoutIn, layoutOut, fullData) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(layoutIn, layoutOut, layoutAttributes, attr, dflt);\n    }\n\n    var hasBars = false,\n        shouldBeGapless = false,\n        gappedAnyway = false,\n        usedSubplots = {};\n\n    for(var i = 0; i < fullData.length; i++) {\n        var trace = fullData[i];\n        if(Registry.traceIs(trace, 'bar')) hasBars = true;\n        else continue;\n\n        // if we have at least 2 grouped bar traces on the same subplot,\n        // we should default to a gap anyway, even if the data is histograms\n        if(layoutIn.barmode !== 'overlay' && layoutIn.barmode !== 'stack') {\n            var subploti = trace.xaxis + trace.yaxis;\n            if(usedSubplots[subploti]) gappedAnyway = true;\n            usedSubplots[subploti] = true;\n        }\n\n        if(trace.visible && trace.type === 'histogram') {\n            var pa = Axes.getFromId({_fullLayout: layoutOut},\n                        trace[trace.orientation === 'v' ? 'xaxis' : 'yaxis']);\n            if(pa.type !== 'category') shouldBeGapless = true;\n        }\n    }\n\n    if(!hasBars) return;\n\n    var mode = coerce('barmode');\n    if(mode !== 'overlay') coerce('barnorm');\n\n    coerce('bargap', (shouldBeGapless && !gappedAnyway) ? 0 : 0.2);\n    coerce('bargroupgap');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/layout_defaults.js\n// module id = 289\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Axes = require('../../plots/cartesian/axes');\nvar hasColorscale = require('../../components/colorscale/has_colorscale');\nvar colorscaleCalc = require('../../components/colorscale/calc');\nvar arraysToCalcdata = require('./arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\n\nmodule.exports = function calc(gd, trace) {\n    // depending on bar direction, set position and size axes\n    // and data ranges\n    // note: this logic for choosing orientation is\n    // duplicated in graph_obj->setstyles\n\n    var xa = Axes.getFromId(gd, trace.xaxis || 'x'),\n        ya = Axes.getFromId(gd, trace.yaxis || 'y'),\n        orientation = trace.orientation || ((trace.x && !trace.y) ? 'h' : 'v'),\n        sa, pos, size, i, scalendar;\n\n    if(orientation === 'h') {\n        sa = xa;\n        size = xa.makeCalcdata(trace, 'x');\n        pos = ya.makeCalcdata(trace, 'y');\n\n        // not sure if it really makes sense to have dates for bar size data...\n        // ideally if we want to make gantt charts or something we'd treat\n        // the actual size (trace.x or y) as time delta but base as absolute\n        // time. But included here for completeness.\n        scalendar = trace.xcalendar;\n    }\n    else {\n        sa = ya;\n        size = ya.makeCalcdata(trace, 'y');\n        pos = xa.makeCalcdata(trace, 'x');\n        scalendar = trace.ycalendar;\n    }\n\n    // create the \"calculated data\" to plot\n    var serieslen = Math.min(pos.length, size.length);\n    var cd = new Array(serieslen);\n\n    // set position and size\n    for(i = 0; i < serieslen; i++) {\n        cd[i] = { p: pos[i], s: size[i] };\n\n        if(trace.ids) {\n            cd[i].id = String(trace.ids[i]);\n        }\n    }\n\n    // set base\n    var base = trace.base,\n        b;\n\n    if(Array.isArray(base)) {\n        for(i = 0; i < Math.min(base.length, cd.length); i++) {\n            b = sa.d2c(base[i], 0, scalendar);\n            if(isNumeric(b)) {\n                cd[i].b = +b;\n                cd[i].hasB = 1;\n            }\n            else cd[i].b = 0;\n        }\n        for(; i < cd.length; i++) {\n            cd[i].b = 0;\n        }\n    }\n    else {\n        b = sa.d2c(base, 0, scalendar);\n        var hasBase = isNumeric(b);\n        b = hasBase ? b : 0;\n        for(i = 0; i < cd.length; i++) {\n            cd[i].b = b;\n            if(hasBase) cd[i].hasB = 1;\n        }\n    }\n\n    // auto-z and autocolorscale if applicable\n    if(hasColorscale(trace, 'marker')) {\n        colorscaleCalc(trace, trace.marker.color, 'marker', 'c');\n    }\n    if(hasColorscale(trace, 'marker.line')) {\n        colorscaleCalc(trace, trace.marker.line.color, 'marker.line', 'c');\n    }\n\n    arraysToCalcdata(cd, trace);\n    calcSelection(cd, trace);\n\n    return cd;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/calc.js\n// module id = 290\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar Registry = require('../../registry');\nvar Axes = require('../../plots/cartesian/axes');\nvar Sieve = require('./sieve.js');\n\n/*\n * Bar chart stacking/grouping positioning and autoscaling calculations\n * for each direction separately calculate the ranges and positions\n * note that this handles histograms too\n * now doing this one subplot at a time\n */\n\nmodule.exports = function setPositions(gd, plotinfo) {\n    var xa = plotinfo.xaxis,\n        ya = plotinfo.yaxis;\n\n    var fullTraces = gd._fullData,\n        calcTraces = gd.calcdata,\n        calcTracesHorizontal = [],\n        calcTracesVertical = [],\n        i;\n    for(i = 0; i < fullTraces.length; i++) {\n        var fullTrace = fullTraces[i];\n        if(\n            fullTrace.visible === true &&\n            Registry.traceIs(fullTrace, 'bar') &&\n            fullTrace.xaxis === xa._id &&\n            fullTrace.yaxis === ya._id\n        ) {\n            if(fullTrace.orientation === 'h') {\n                calcTracesHorizontal.push(calcTraces[i]);\n            }\n            else {\n                calcTracesVertical.push(calcTraces[i]);\n            }\n        }\n    }\n\n    setGroupPositions(gd, xa, ya, calcTracesVertical);\n    setGroupPositions(gd, ya, xa, calcTracesHorizontal);\n};\n\n\nfunction setGroupPositions(gd, pa, sa, calcTraces) {\n    if(!calcTraces.length) return;\n\n    var barmode = gd._fullLayout.barmode,\n        overlay = (barmode === 'overlay'),\n        group = (barmode === 'group'),\n        excluded,\n        included,\n        i, calcTrace, fullTrace;\n\n    if(overlay) {\n        setGroupPositionsInOverlayMode(gd, pa, sa, calcTraces);\n    }\n    else if(group) {\n        // exclude from the group those traces for which the user set an offset\n        excluded = [];\n        included = [];\n        for(i = 0; i < calcTraces.length; i++) {\n            calcTrace = calcTraces[i];\n            fullTrace = calcTrace[0].trace;\n\n            if(fullTrace.offset === undefined) included.push(calcTrace);\n            else excluded.push(calcTrace);\n        }\n\n        if(included.length) {\n            setGroupPositionsInGroupMode(gd, pa, sa, included);\n        }\n        if(excluded.length) {\n            setGroupPositionsInOverlayMode(gd, pa, sa, excluded);\n        }\n    }\n    else {\n        // exclude from the stack those traces for which the user set a base\n        excluded = [];\n        included = [];\n        for(i = 0; i < calcTraces.length; i++) {\n            calcTrace = calcTraces[i];\n            fullTrace = calcTrace[0].trace;\n\n            if(fullTrace.base === undefined) included.push(calcTrace);\n            else excluded.push(calcTrace);\n        }\n\n        if(included.length) {\n            setGroupPositionsInStackOrRelativeMode(gd, pa, sa, included);\n        }\n        if(excluded.length) {\n            setGroupPositionsInOverlayMode(gd, pa, sa, excluded);\n        }\n    }\n}\n\n\nfunction setGroupPositionsInOverlayMode(gd, pa, sa, calcTraces) {\n    var barnorm = gd._fullLayout.barnorm,\n        separateNegativeValues = false,\n        dontMergeOverlappingData = !barnorm;\n\n    // update position axis and set bar offsets and widths\n    for(var i = 0; i < calcTraces.length; i++) {\n        var calcTrace = calcTraces[i];\n\n        var sieve = new Sieve(\n            [calcTrace], separateNegativeValues, dontMergeOverlappingData\n        );\n\n        // set bar offsets and widths, and update position axis\n        setOffsetAndWidth(gd, pa, sieve);\n\n        // set bar bases and sizes, and update size axis\n        //\n        // (note that `setGroupPositionsInOverlayMode` handles the case barnorm\n        // is defined, because this function is also invoked for traces that\n        // can't be grouped or stacked)\n        if(barnorm) {\n            sieveBars(gd, sa, sieve);\n            normalizeBars(gd, sa, sieve);\n        }\n        else {\n            setBaseAndTop(gd, sa, sieve);\n        }\n    }\n}\n\n\nfunction setGroupPositionsInGroupMode(gd, pa, sa, calcTraces) {\n    var fullLayout = gd._fullLayout,\n        barnorm = fullLayout.barnorm,\n        separateNegativeValues = false,\n        dontMergeOverlappingData = !barnorm,\n        sieve = new Sieve(\n                calcTraces, separateNegativeValues, dontMergeOverlappingData\n            );\n\n    // set bar offsets and widths, and update position axis\n    setOffsetAndWidthInGroupMode(gd, pa, sieve);\n\n    // set bar bases and sizes, and update size axis\n    if(barnorm) {\n        sieveBars(gd, sa, sieve);\n        normalizeBars(gd, sa, sieve);\n    }\n    else {\n        setBaseAndTop(gd, sa, sieve);\n    }\n}\n\n\nfunction setGroupPositionsInStackOrRelativeMode(gd, pa, sa, calcTraces) {\n    var fullLayout = gd._fullLayout,\n        barmode = fullLayout.barmode,\n        stack = (barmode === 'stack'),\n        relative = (barmode === 'relative'),\n        barnorm = gd._fullLayout.barnorm,\n        separateNegativeValues = relative,\n        dontMergeOverlappingData = !(barnorm || stack || relative),\n        sieve = new Sieve(\n                calcTraces, separateNegativeValues, dontMergeOverlappingData\n            );\n\n    // set bar offsets and widths, and update position axis\n    setOffsetAndWidth(gd, pa, sieve);\n\n    // set bar bases and sizes, and update size axis\n    stackBars(gd, sa, sieve);\n\n    // flag the outmost bar (for text display purposes)\n    for(var i = 0; i < calcTraces.length; i++) {\n        var calcTrace = calcTraces[i];\n\n        for(var j = 0; j < calcTrace.length; j++) {\n            var bar = calcTrace[j];\n\n            if(bar.s === BADNUM) continue;\n\n            var isOutmostBar = ((bar.b + bar.s) === sieve.get(bar.p, bar.s));\n            if(isOutmostBar) bar._outmost = true;\n        }\n    }\n\n    // Note that marking the outmost bars has to be done\n    // before `normalizeBars` changes `bar.b` and `bar.s`.\n    if(barnorm) normalizeBars(gd, sa, sieve);\n}\n\n\nfunction setOffsetAndWidth(gd, pa, sieve) {\n    var fullLayout = gd._fullLayout,\n        bargap = fullLayout.bargap,\n        bargroupgap = fullLayout.bargroupgap,\n        minDiff = sieve.minDiff,\n        calcTraces = sieve.traces,\n        i, calcTrace, calcTrace0,\n        t;\n\n    // set bar offsets and widths\n    var barGroupWidth = minDiff * (1 - bargap),\n        barWidthPlusGap = barGroupWidth,\n        barWidth = barWidthPlusGap * (1 - bargroupgap);\n\n    // computer bar group center and bar offset\n    var offsetFromCenter = -barWidth / 2;\n\n    for(i = 0; i < calcTraces.length; i++) {\n        calcTrace = calcTraces[i];\n        calcTrace0 = calcTrace[0];\n\n        // store bar width and offset for this trace\n        t = calcTrace0.t;\n        t.barwidth = barWidth;\n        t.poffset = offsetFromCenter;\n        t.bargroupwidth = barGroupWidth;\n        t.bardelta = minDiff;\n    }\n\n    // stack bars that only differ by rounding\n    sieve.binWidth = calcTraces[0][0].t.barwidth / 100;\n\n    // if defined, apply trace offset and width\n    applyAttributes(sieve);\n\n    // store the bar center in each calcdata item\n    setBarCenterAndWidth(gd, pa, sieve);\n\n    // update position axes\n    updatePositionAxis(gd, pa, sieve);\n}\n\n\nfunction setOffsetAndWidthInGroupMode(gd, pa, sieve) {\n    var fullLayout = gd._fullLayout,\n        bargap = fullLayout.bargap,\n        bargroupgap = fullLayout.bargroupgap,\n        positions = sieve.positions,\n        distinctPositions = sieve.distinctPositions,\n        minDiff = sieve.minDiff,\n        calcTraces = sieve.traces,\n        i, calcTrace, calcTrace0,\n        t;\n\n    // if there aren't any overlapping positions,\n    // let them have full width even if mode is group\n    var overlap = (positions.length !== distinctPositions.length);\n\n    var nTraces = calcTraces.length,\n        barGroupWidth = minDiff * (1 - bargap),\n        barWidthPlusGap = (overlap) ? barGroupWidth / nTraces : barGroupWidth,\n        barWidth = barWidthPlusGap * (1 - bargroupgap);\n\n    for(i = 0; i < nTraces; i++) {\n        calcTrace = calcTraces[i];\n        calcTrace0 = calcTrace[0];\n\n        // computer bar group center and bar offset\n        var offsetFromCenter = (overlap) ?\n                ((2 * i + 1 - nTraces) * barWidthPlusGap - barWidth) / 2 :\n                -barWidth / 2;\n\n        // store bar width and offset for this trace\n        t = calcTrace0.t;\n        t.barwidth = barWidth;\n        t.poffset = offsetFromCenter;\n        t.bargroupwidth = barGroupWidth;\n        t.bardelta = minDiff;\n    }\n\n    // stack bars that only differ by rounding\n    sieve.binWidth = calcTraces[0][0].t.barwidth / 100;\n\n    // if defined, apply trace width\n    applyAttributes(sieve);\n\n    // store the bar center in each calcdata item\n    setBarCenterAndWidth(gd, pa, sieve);\n\n    // update position axes\n    updatePositionAxis(gd, pa, sieve, overlap);\n}\n\n\nfunction applyAttributes(sieve) {\n    var calcTraces = sieve.traces,\n        i, calcTrace, calcTrace0, fullTrace,\n        j,\n        t;\n\n    for(i = 0; i < calcTraces.length; i++) {\n        calcTrace = calcTraces[i];\n        calcTrace0 = calcTrace[0];\n        fullTrace = calcTrace0.trace;\n        t = calcTrace0.t;\n\n        var offset = fullTrace.offset,\n            initialPoffset = t.poffset,\n            newPoffset;\n\n        if(Array.isArray(offset)) {\n            // if offset is an array, then clone it into t.poffset.\n            newPoffset = offset.slice(0, calcTrace.length);\n\n            // guard against non-numeric items\n            for(j = 0; j < newPoffset.length; j++) {\n                if(!isNumeric(newPoffset[j])) {\n                    newPoffset[j] = initialPoffset;\n                }\n            }\n\n            // if the length of the array is too short,\n            // then extend it with the initial value of t.poffset\n            for(j = newPoffset.length; j < calcTrace.length; j++) {\n                newPoffset.push(initialPoffset);\n            }\n\n            t.poffset = newPoffset;\n        }\n        else if(offset !== undefined) {\n            t.poffset = offset;\n        }\n\n        var width = fullTrace.width,\n            initialBarwidth = t.barwidth;\n\n        if(Array.isArray(width)) {\n            // if width is an array, then clone it into t.barwidth.\n            var newBarwidth = width.slice(0, calcTrace.length);\n\n            // guard against non-numeric items\n            for(j = 0; j < newBarwidth.length; j++) {\n                if(!isNumeric(newBarwidth[j])) newBarwidth[j] = initialBarwidth;\n            }\n\n            // if the length of the array is too short,\n            // then extend it with the initial value of t.barwidth\n            for(j = newBarwidth.length; j < calcTrace.length; j++) {\n                newBarwidth.push(initialBarwidth);\n            }\n\n            t.barwidth = newBarwidth;\n\n            // if user didn't set offset,\n            // then correct t.poffset to ensure bars remain centered\n            if(offset === undefined) {\n                newPoffset = [];\n                for(j = 0; j < calcTrace.length; j++) {\n                    newPoffset.push(\n                        initialPoffset + (initialBarwidth - newBarwidth[j]) / 2\n                    );\n                }\n                t.poffset = newPoffset;\n            }\n        }\n        else if(width !== undefined) {\n            t.barwidth = width;\n\n            // if user didn't set offset,\n            // then correct t.poffset to ensure bars remain centered\n            if(offset === undefined) {\n                t.poffset = initialPoffset + (initialBarwidth - width) / 2;\n            }\n        }\n    }\n}\n\n\nfunction setBarCenterAndWidth(gd, pa, sieve) {\n    var calcTraces = sieve.traces,\n        pLetter = getAxisLetter(pa);\n\n    for(var i = 0; i < calcTraces.length; i++) {\n        var calcTrace = calcTraces[i],\n            t = calcTrace[0].t,\n            poffset = t.poffset,\n            poffsetIsArray = Array.isArray(poffset),\n            barwidth = t.barwidth,\n            barwidthIsArray = Array.isArray(barwidth);\n\n        for(var j = 0; j < calcTrace.length; j++) {\n            var calcBar = calcTrace[j];\n\n            // store the actual bar width and position, for use by hover\n            var width = calcBar.w = (barwidthIsArray) ? barwidth[j] : barwidth;\n            calcBar[pLetter] = calcBar.p +\n                ((poffsetIsArray) ? poffset[j] : poffset) +\n                width / 2;\n\n\n        }\n    }\n}\n\n\nfunction updatePositionAxis(gd, pa, sieve, allowMinDtick) {\n    var calcTraces = sieve.traces,\n        distinctPositions = sieve.distinctPositions,\n        distinctPositions0 = distinctPositions[0],\n        minDiff = sieve.minDiff,\n        vpad = minDiff / 2;\n\n    Axes.minDtick(pa, minDiff, distinctPositions0, allowMinDtick);\n\n    // If the user set the bar width or the offset,\n    // then bars can be shifted away from their positions\n    // and widths can be larger than minDiff.\n    //\n    // Here, we compute pMin and pMax to expand the position axis,\n    // so that all bars are fully within the axis range.\n    var pMin = Math.min.apply(Math, distinctPositions) - vpad,\n        pMax = Math.max.apply(Math, distinctPositions) + vpad;\n\n    for(var i = 0; i < calcTraces.length; i++) {\n        var calcTrace = calcTraces[i],\n            calcTrace0 = calcTrace[0],\n            fullTrace = calcTrace0.trace;\n\n        if(fullTrace.width === undefined && fullTrace.offset === undefined) {\n            continue;\n        }\n\n        var t = calcTrace0.t,\n            poffset = t.poffset,\n            barwidth = t.barwidth,\n            poffsetIsArray = Array.isArray(poffset),\n            barwidthIsArray = Array.isArray(barwidth);\n\n        for(var j = 0; j < calcTrace.length; j++) {\n            var calcBar = calcTrace[j],\n                calcBarOffset = (poffsetIsArray) ? poffset[j] : poffset,\n                calcBarWidth = (barwidthIsArray) ? barwidth[j] : barwidth,\n                p = calcBar.p,\n                l = p + calcBarOffset,\n                r = l + calcBarWidth;\n\n            pMin = Math.min(pMin, l);\n            pMax = Math.max(pMax, r);\n        }\n    }\n\n    Axes.expand(pa, [pMin, pMax], {padded: false});\n}\n\nfunction expandRange(range, newValue) {\n    if(isNumeric(range[0])) range[0] = Math.min(range[0], newValue);\n    else range[0] = newValue;\n\n    if(isNumeric(range[1])) range[1] = Math.max(range[1], newValue);\n    else range[1] = newValue;\n}\n\nfunction setBaseAndTop(gd, sa, sieve) {\n    // store these bar bases and tops in calcdata\n    // and make sure the size axis includes zero,\n    // along with the bases and tops of each bar.\n    var traces = sieve.traces,\n        sLetter = getAxisLetter(sa),\n        sRange = [null, null];\n\n    for(var i = 0; i < traces.length; i++) {\n        var trace = traces[i];\n\n        for(var j = 0; j < trace.length; j++) {\n            var bar = trace[j],\n                barBase = bar.b,\n                barTop = barBase + bar.s;\n\n            bar[sLetter] = barTop;\n\n            if(isNumeric(sa.c2l(barTop))) expandRange(sRange, barTop);\n            if(bar.hasB && isNumeric(sa.c2l(barBase))) expandRange(sRange, barBase);\n        }\n    }\n\n    Axes.expand(sa, sRange, {tozero: true, padded: true});\n}\n\n\nfunction stackBars(gd, sa, sieve) {\n    var fullLayout = gd._fullLayout,\n        barnorm = fullLayout.barnorm,\n        sLetter = getAxisLetter(sa),\n        traces = sieve.traces,\n        i, trace,\n        j, bar;\n\n    var sRange = [null, null];\n\n    for(i = 0; i < traces.length; i++) {\n        trace = traces[i];\n\n        for(j = 0; j < trace.length; j++) {\n            bar = trace[j];\n\n            if(bar.s === BADNUM) continue;\n\n            // stack current bar and get previous sum\n            var barBase = sieve.put(bar.p, bar.b + bar.s),\n                barTop = barBase + bar.b + bar.s;\n\n            // store the bar base and top in each calcdata item\n            bar.b = barBase;\n            bar[sLetter] = barTop;\n\n            if(!barnorm) {\n                if(isNumeric(sa.c2l(barTop))) expandRange(sRange, barTop);\n                if(bar.hasB && isNumeric(sa.c2l(barBase))) expandRange(sRange, barBase);\n            }\n        }\n    }\n\n    // if barnorm is set, let normalizeBars update the axis range\n    if(!barnorm) Axes.expand(sa, sRange, {tozero: true, padded: true});\n}\n\n\nfunction sieveBars(gd, sa, sieve) {\n    var traces = sieve.traces;\n\n    for(var i = 0; i < traces.length; i++) {\n        var trace = traces[i];\n\n        for(var j = 0; j < trace.length; j++) {\n            var bar = trace[j];\n\n            if(bar.s !== BADNUM) sieve.put(bar.p, bar.b + bar.s);\n        }\n    }\n}\n\n\nfunction normalizeBars(gd, sa, sieve) {\n    // Note:\n    //\n    // normalizeBars requires that either sieveBars or stackBars has been\n    // previously invoked.\n\n    var traces = sieve.traces,\n        sLetter = getAxisLetter(sa),\n        sTop = (gd._fullLayout.barnorm === 'fraction') ? 1 : 100,\n        sTiny = sTop / 1e9, // in case of rounding error in sum\n        sMin = sa.l2c(sa.c2l(0)),\n        sMax = (gd._fullLayout.barmode === 'stack') ? sTop : sMin,\n        sRange = [sMin, sMax],\n        padded = false;\n\n    function maybeExpand(newValue) {\n        if(isNumeric(sa.c2l(newValue)) &&\n            ((newValue < sMin - sTiny) || (newValue > sMax + sTiny) || !isNumeric(sMin))\n        ) {\n            padded = true;\n            expandRange(sRange, newValue);\n        }\n    }\n\n    for(var i = 0; i < traces.length; i++) {\n        var trace = traces[i];\n\n        for(var j = 0; j < trace.length; j++) {\n            var bar = trace[j];\n\n            if(bar.s === BADNUM) continue;\n\n            var scale = Math.abs(sTop / sieve.get(bar.p, bar.s));\n            bar.b *= scale;\n            bar.s *= scale;\n\n            var barBase = bar.b,\n                barTop = barBase + bar.s;\n            bar[sLetter] = barTop;\n\n            maybeExpand(barTop);\n            if(bar.hasB) maybeExpand(barBase);\n        }\n    }\n\n    // update range of size axis\n    Axes.expand(sa, sRange, {tozero: true, padded: padded});\n}\n\n\nfunction getAxisLetter(ax) {\n    return ax._id.charAt(0);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/set_positions.js\n// module id = 291\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = Sieve;\n\nvar Lib = require('../../lib');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\n/**\n * Helper class to sieve data from traces into bins\n *\n * @class\n * @param {Array}   traces\n *                  Array of calculated traces\n * @param {boolean} [separateNegativeValues]\n *                  If true, then split data at the same position into a bar\n *                  for positive values and another for negative values\n * @param {boolean} [dontMergeOverlappingData]\n *                  If true, then don't merge overlapping bars into a single bar\n */\nfunction Sieve(traces, separateNegativeValues, dontMergeOverlappingData) {\n    this.traces = traces;\n    this.separateNegativeValues = separateNegativeValues;\n    this.dontMergeOverlappingData = dontMergeOverlappingData;\n\n    // for single-bin histograms - see histogram/calc\n    var width1 = Infinity;\n\n    var positions = [];\n    for(var i = 0; i < traces.length; i++) {\n        var trace = traces[i];\n        for(var j = 0; j < trace.length; j++) {\n            var bar = trace[j];\n            if(bar.p !== BADNUM) positions.push(bar.p);\n        }\n        if(trace[0] && trace[0].width1) {\n            width1 = Math.min(trace[0].width1, width1);\n        }\n    }\n    this.positions = positions;\n\n    var dv = Lib.distinctVals(positions);\n    this.distinctPositions = dv.vals;\n    if(dv.vals.length === 1 && width1 !== Infinity) this.minDiff = width1;\n    else this.minDiff = Math.min(dv.minDiff, width1);\n\n    this.binWidth = this.minDiff;\n\n    this.bins = {};\n}\n\n/**\n * Sieve datum\n *\n * @method\n * @param {number} position\n * @param {number} value\n * @returns {number} Previous bin value\n */\nSieve.prototype.put = function put(position, value) {\n    var label = this.getLabel(position, value),\n        oldValue = this.bins[label] || 0;\n\n    this.bins[label] = oldValue + value;\n\n    return oldValue;\n};\n\n/**\n * Get current bin value for a given datum\n *\n * @method\n * @param {number} position  Position of datum\n * @param {number} [value]   Value of datum\n *                           (required if this.separateNegativeValues is true)\n * @returns {number} Current bin value\n */\nSieve.prototype.get = function put(position, value) {\n    var label = this.getLabel(position, value);\n    return this.bins[label] || 0;\n};\n\n/**\n * Get bin label for a given datum\n *\n * @method\n * @param {number} position  Position of datum\n * @param {number} [value]   Value of datum\n *                           (required if this.separateNegativeValues is true)\n * @returns {string} Bin label\n * (prefixed with a 'v' if value is negative and this.separateNegativeValues is\n * true; otherwise prefixed with '^')\n */\nSieve.prototype.getLabel = function getLabel(position, value) {\n    var prefix = (value < 0 && this.separateNegativeValues) ? 'v' : '^',\n        label = (this.dontMergeOverlappingData) ?\n            position :\n            Math.round(position / this.binWidth);\n    return prefix + label;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/sieve.js\n// module id = 292\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\nvar tinycolor = require('tinycolor2');\n\nvar Lib = require('../../lib');\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\nvar ErrorBars = require('../../components/errorbars');\n\nvar attributes = require('./attributes'),\n    attributeText = attributes.text,\n    attributeTextPosition = attributes.textposition,\n    attributeTextFont = attributes.textfont,\n    attributeInsideTextFont = attributes.insidetextfont,\n    attributeOutsideTextFont = attributes.outsidetextfont;\n\n// padding in pixels around text\nvar TEXTPAD = 3;\n\nmodule.exports = function plot(gd, plotinfo, cdbar) {\n    var xa = plotinfo.xaxis,\n        ya = plotinfo.yaxis,\n        fullLayout = gd._fullLayout;\n\n    var bartraces = plotinfo.plot.select('.barlayer')\n        .selectAll('g.trace.bars')\n        .data(cdbar);\n\n    bartraces.enter().append('g')\n        .attr('class', 'trace bars');\n\n    bartraces.each(function(d) {\n        d[0].node3 = d3.select(this);\n    });\n\n    bartraces.append('g')\n        .attr('class', 'points')\n        .each(function(d) {\n            var sel = d3.select(this);\n            var t = d[0].t;\n            var trace = d[0].trace;\n            var poffset = t.poffset;\n            var poffsetIsArray = Array.isArray(poffset);\n\n            sel.selectAll('g.point')\n                .data(Lib.identity)\n              .enter().append('g').classed('point', true)\n                .each(function(di, i) {\n                    // now display the bar\n                    // clipped xf/yf (2nd arg true): non-positive\n                    // log values go off-screen by plotwidth\n                    // so you see them continue if you drag the plot\n                    var p0 = di.p + ((poffsetIsArray) ? poffset[i] : poffset),\n                        p1 = p0 + di.w,\n                        s0 = di.b,\n                        s1 = s0 + di.s;\n\n                    var x0, x1, y0, y1;\n                    if(trace.orientation === 'h') {\n                        y0 = ya.c2p(p0, true);\n                        y1 = ya.c2p(p1, true);\n                        x0 = xa.c2p(s0, true);\n                        x1 = xa.c2p(s1, true);\n\n                        // for selections\n                        di.ct = [x1, (y0 + y1) / 2];\n                    }\n                    else {\n                        x0 = xa.c2p(p0, true);\n                        x1 = xa.c2p(p1, true);\n                        y0 = ya.c2p(s0, true);\n                        y1 = ya.c2p(s1, true);\n\n                        // for selections\n                        di.ct = [(x0 + x1) / 2, y1];\n                    }\n\n                    if(!isNumeric(x0) || !isNumeric(x1) ||\n                            !isNumeric(y0) || !isNumeric(y1) ||\n                            x0 === x1 || y0 === y1) {\n                        d3.select(this).remove();\n                        return;\n                    }\n\n                    var lw = (di.mlw + 1 || trace.marker.line.width + 1 ||\n                            (di.trace ? di.trace.marker.line.width : 0) + 1) - 1,\n                        offset = d3.round((lw / 2) % 1, 2);\n\n                    function roundWithLine(v) {\n                        // if there are explicit gaps, don't round,\n                        // it can make the gaps look crappy\n                        return (fullLayout.bargap === 0 && fullLayout.bargroupgap === 0) ?\n                            d3.round(Math.round(v) - offset, 2) : v;\n                    }\n\n                    function expandToVisible(v, vc) {\n                        // if it's not in danger of disappearing entirely,\n                        // round more precisely\n                        return Math.abs(v - vc) >= 2 ? roundWithLine(v) :\n                        // but if it's very thin, expand it so it's\n                        // necessarily visible, even if it might overlap\n                        // its neighbor\n                        (v > vc ? Math.ceil(v) : Math.floor(v));\n                    }\n\n                    if(!gd._context.staticPlot) {\n                        // if bars are not fully opaque or they have a line\n                        // around them, round to integer pixels, mainly for\n                        // safari so we prevent overlaps from its expansive\n                        // pixelation. if the bars ARE fully opaque and have\n                        // no line, expand to a full pixel to make sure we\n                        // can see them\n                        var op = Color.opacity(di.mc || trace.marker.color),\n                            fixpx = (op < 1 || lw > 0.01) ?\n                                roundWithLine : expandToVisible;\n                        x0 = fixpx(x0, x1);\n                        x1 = fixpx(x1, x0);\n                        y0 = fixpx(y0, y1);\n                        y1 = fixpx(y1, y0);\n                    }\n\n                    // append bar path and text\n                    var bar = d3.select(this);\n\n                    bar.append('path')\n                        .style('vector-effect', 'non-scaling-stroke')\n                        .attr('d',\n                            'M' + x0 + ',' + y0 + 'V' + y1 + 'H' + x1 + 'V' + y0 + 'Z');\n\n                    appendBarText(gd, bar, d, i, x0, x1, y0, y1);\n                });\n        });\n\n    // error bars are on the top\n    bartraces.call(ErrorBars.plot, plotinfo);\n\n};\n\nfunction appendBarText(gd, bar, calcTrace, i, x0, x1, y0, y1) {\n    var textPosition;\n\n    function appendTextNode(bar, text, textFont) {\n        var textSelection = bar.append('text')\n            .text(text)\n            .attr({\n                'class': 'bartext bartext-' + textPosition,\n                transform: '',\n                'text-anchor': 'middle',\n                // prohibit tex interpretation until we can handle\n                // tex and regular text together\n                'data-notex': 1\n            })\n            .call(Drawing.font, textFont)\n            .call(svgTextUtils.convertToTspans, gd);\n\n        return textSelection;\n    }\n\n    // get trace attributes\n    var trace = calcTrace[0].trace,\n        orientation = trace.orientation;\n\n    var text = getText(trace, i);\n    if(!text) return;\n\n    textPosition = getTextPosition(trace, i);\n    if(textPosition === 'none') return;\n\n    var textFont = getTextFont(trace, i, gd._fullLayout.font),\n        insideTextFont = getInsideTextFont(trace, i, textFont),\n        outsideTextFont = getOutsideTextFont(trace, i, textFont);\n\n    // compute text position\n    var barmode = gd._fullLayout.barmode,\n        inStackMode = (barmode === 'stack'),\n        inRelativeMode = (barmode === 'relative'),\n        inStackOrRelativeMode = inStackMode || inRelativeMode,\n\n        calcBar = calcTrace[i],\n        isOutmostBar = !inStackOrRelativeMode || calcBar._outmost,\n\n        barWidth = Math.abs(x1 - x0) - 2 * TEXTPAD,  // padding excluded\n        barHeight = Math.abs(y1 - y0) - 2 * TEXTPAD,  // padding excluded\n\n        textSelection,\n        textBB,\n        textWidth,\n        textHeight;\n\n    if(textPosition === 'outside') {\n        if(!isOutmostBar) textPosition = 'inside';\n    }\n\n    if(textPosition === 'auto') {\n        if(isOutmostBar) {\n            // draw text using insideTextFont and check if it fits inside bar\n            textPosition = 'inside';\n            textSelection = appendTextNode(bar, text, insideTextFont);\n\n            textBB = Drawing.bBox(textSelection.node()),\n            textWidth = textBB.width,\n            textHeight = textBB.height;\n\n            var textHasSize = (textWidth > 0 && textHeight > 0),\n                fitsInside =\n                    (textWidth <= barWidth && textHeight <= barHeight),\n                fitsInsideIfRotated =\n                    (textWidth <= barHeight && textHeight <= barWidth),\n                fitsInsideIfShrunk = (orientation === 'h') ?\n                    (barWidth >= textWidth * (barHeight / textHeight)) :\n                    (barHeight >= textHeight * (barWidth / textWidth));\n            if(textHasSize &&\n                    (fitsInside || fitsInsideIfRotated || fitsInsideIfShrunk)) {\n                textPosition = 'inside';\n            }\n            else {\n                textPosition = 'outside';\n                textSelection.remove();\n                textSelection = null;\n            }\n        }\n        else textPosition = 'inside';\n    }\n\n    if(!textSelection) {\n        textSelection = appendTextNode(bar, text,\n                (textPosition === 'outside') ?\n                outsideTextFont : insideTextFont);\n\n        textBB = Drawing.bBox(textSelection.node()),\n        textWidth = textBB.width,\n        textHeight = textBB.height;\n\n        if(textWidth <= 0 || textHeight <= 0) {\n            textSelection.remove();\n            return;\n        }\n    }\n\n    // compute text transform\n    var transform, constrained;\n    if(textPosition === 'outside') {\n        constrained = trace.constraintext === 'both' || trace.constraintext === 'outside';\n        transform = getTransformToMoveOutsideBar(x0, x1, y0, y1, textBB,\n            orientation, constrained);\n    }\n    else {\n        constrained = trace.constraintext === 'both' || trace.constraintext === 'inside';\n        transform = getTransformToMoveInsideBar(x0, x1, y0, y1, textBB,\n            orientation, constrained);\n    }\n\n    textSelection.attr('transform', transform);\n}\n\nfunction getTransformToMoveInsideBar(x0, x1, y0, y1, textBB, orientation, constrained) {\n    // compute text and target positions\n    var textWidth = textBB.width,\n        textHeight = textBB.height,\n        textX = (textBB.left + textBB.right) / 2,\n        textY = (textBB.top + textBB.bottom) / 2,\n        barWidth = Math.abs(x1 - x0),\n        barHeight = Math.abs(y1 - y0),\n        targetWidth,\n        targetHeight,\n        targetX,\n        targetY;\n\n    // apply text padding\n    var textpad;\n    if(barWidth > (2 * TEXTPAD) && barHeight > (2 * TEXTPAD)) {\n        textpad = TEXTPAD;\n        barWidth -= 2 * textpad;\n        barHeight -= 2 * textpad;\n    }\n    else textpad = 0;\n\n    // compute rotation and scale\n    var rotate,\n        scale;\n\n    if(textWidth <= barWidth && textHeight <= barHeight) {\n        // no scale or rotation is required\n        rotate = false;\n        scale = 1;\n    }\n    else if(textWidth <= barHeight && textHeight <= barWidth) {\n        // only rotation is required\n        rotate = true;\n        scale = 1;\n    }\n    else if((textWidth < textHeight) === (barWidth < barHeight)) {\n        // only scale is required\n        rotate = false;\n        scale = constrained ? Math.min(barWidth / textWidth, barHeight / textHeight) : 1;\n    }\n    else {\n        // both scale and rotation are required\n        rotate = true;\n        scale = constrained ? Math.min(barHeight / textWidth, barWidth / textHeight) : 1;\n    }\n\n    if(rotate) rotate = 90;  // rotate clockwise\n\n    // compute text and target positions\n    if(rotate) {\n        targetWidth = scale * textHeight;\n        targetHeight = scale * textWidth;\n    }\n    else {\n        targetWidth = scale * textWidth;\n        targetHeight = scale * textHeight;\n    }\n\n    if(orientation === 'h') {\n        if(x1 < x0) {\n            // bar end is on the left hand side\n            targetX = x1 + textpad + targetWidth / 2;\n            targetY = (y0 + y1) / 2;\n        }\n        else {\n            targetX = x1 - textpad - targetWidth / 2;\n            targetY = (y0 + y1) / 2;\n        }\n    }\n    else {\n        if(y1 > y0) {\n            // bar end is on the bottom\n            targetX = (x0 + x1) / 2;\n            targetY = y1 - textpad - targetHeight / 2;\n        }\n        else {\n            targetX = (x0 + x1) / 2;\n            targetY = y1 + textpad + targetHeight / 2;\n        }\n    }\n\n    return getTransform(textX, textY, targetX, targetY, scale, rotate);\n}\n\nfunction getTransformToMoveOutsideBar(x0, x1, y0, y1, textBB, orientation, constrained) {\n    var barWidth = (orientation === 'h') ?\n            Math.abs(y1 - y0) :\n            Math.abs(x1 - x0),\n        textpad;\n\n    // Keep the padding so the text doesn't sit right against\n    // the bars, but don't factor it into barWidth\n    if(barWidth > 2 * TEXTPAD) {\n        textpad = TEXTPAD;\n    }\n\n    // compute rotation and scale\n    var scale = 1;\n    if(constrained) {\n        scale = (orientation === 'h') ?\n            Math.min(1, barWidth / textBB.height) :\n            Math.min(1, barWidth / textBB.width);\n    }\n\n    // compute text and target positions\n    var textX = (textBB.left + textBB.right) / 2,\n        textY = (textBB.top + textBB.bottom) / 2,\n        targetWidth,\n        targetHeight,\n        targetX,\n        targetY;\n\n    targetWidth = scale * textBB.width;\n    targetHeight = scale * textBB.height;\n\n    if(orientation === 'h') {\n        if(x1 < x0) {\n            // bar end is on the left hand side\n            targetX = x1 - textpad - targetWidth / 2;\n            targetY = (y0 + y1) / 2;\n        }\n        else {\n            targetX = x1 + textpad + targetWidth / 2;\n            targetY = (y0 + y1) / 2;\n        }\n    }\n    else {\n        if(y1 > y0) {\n            // bar end is on the bottom\n            targetX = (x0 + x1) / 2;\n            targetY = y1 + textpad + targetHeight / 2;\n        }\n        else {\n            targetX = (x0 + x1) / 2;\n            targetY = y1 - textpad - targetHeight / 2;\n        }\n    }\n\n    return getTransform(textX, textY, targetX, targetY, scale, false);\n}\n\nfunction getTransform(textX, textY, targetX, targetY, scale, rotate) {\n    var transformScale,\n        transformRotate,\n        transformTranslate;\n\n    if(scale < 1) transformScale = 'scale(' + scale + ') ';\n    else {\n        scale = 1;\n        transformScale = '';\n    }\n\n    transformRotate = (rotate) ?\n        'rotate(' + rotate + ' ' + textX + ' ' + textY + ') ' : '';\n\n    // Note that scaling also affects the center of the text box\n    var translateX = (targetX - scale * textX),\n        translateY = (targetY - scale * textY);\n    transformTranslate = 'translate(' + translateX + ' ' + translateY + ')';\n\n    return transformTranslate + transformScale + transformRotate;\n}\n\nfunction getText(trace, index) {\n    var value = getValue(trace.text, index);\n    return coerceString(attributeText, value);\n}\n\nfunction getTextPosition(trace, index) {\n    var value = getValue(trace.textposition, index);\n    return coerceEnumerated(attributeTextPosition, value);\n}\n\nfunction getTextFont(trace, index, defaultValue) {\n    return getFontValue(\n        attributeTextFont, trace.textfont, index, defaultValue);\n}\n\nfunction getInsideTextFont(trace, index, defaultValue) {\n    return getFontValue(\n        attributeInsideTextFont, trace.insidetextfont, index, defaultValue);\n}\n\nfunction getOutsideTextFont(trace, index, defaultValue) {\n    return getFontValue(\n        attributeOutsideTextFont, trace.outsidetextfont, index, defaultValue);\n}\n\nfunction getFontValue(attributeDefinition, attributeValue, index, defaultValue) {\n    attributeValue = attributeValue || {};\n\n    var familyValue = getValue(attributeValue.family, index),\n        sizeValue = getValue(attributeValue.size, index),\n        colorValue = getValue(attributeValue.color, index);\n\n    return {\n        family: coerceString(\n            attributeDefinition.family, familyValue, defaultValue.family),\n        size: coerceNumber(\n            attributeDefinition.size, sizeValue, defaultValue.size),\n        color: coerceColor(\n            attributeDefinition.color, colorValue, defaultValue.color)\n    };\n}\n\nfunction getValue(arrayOrScalar, index) {\n    var value;\n    if(!Array.isArray(arrayOrScalar)) value = arrayOrScalar;\n    else if(index < arrayOrScalar.length) value = arrayOrScalar[index];\n    return value;\n}\n\nfunction coerceString(attributeDefinition, value, defaultValue) {\n    if(typeof value === 'string') {\n        if(value || !attributeDefinition.noBlank) return value;\n    }\n    else if(typeof value === 'number') {\n        if(!attributeDefinition.strict) return String(value);\n    }\n\n    return (defaultValue !== undefined) ?\n        defaultValue :\n        attributeDefinition.dflt;\n}\n\nfunction coerceEnumerated(attributeDefinition, value, defaultValue) {\n    if(attributeDefinition.coerceNumber) value = +value;\n\n    if(attributeDefinition.values.indexOf(value) !== -1) return value;\n\n    return (defaultValue !== undefined) ?\n        defaultValue :\n        attributeDefinition.dflt;\n}\n\nfunction coerceNumber(attributeDefinition, value, defaultValue) {\n    if(isNumeric(value)) {\n        value = +value;\n\n        var min = attributeDefinition.min,\n            max = attributeDefinition.max,\n            isOutOfBounds = (min !== undefined && value < min) ||\n                (max !== undefined && value > max);\n\n        if(!isOutOfBounds) return value;\n    }\n\n    return (defaultValue !== undefined) ?\n        defaultValue :\n        attributeDefinition.dflt;\n}\n\nfunction coerceColor(attributeDefinition, value, defaultValue) {\n    if(tinycolor(value).isValid()) return value;\n\n    return (defaultValue !== undefined) ?\n        defaultValue :\n        attributeDefinition.dflt;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/plot.js\n// module id = 293\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar Drawing = require('../../components/drawing');\nvar ErrorBars = require('../../components/errorbars');\n\nmodule.exports = function style(gd, cd) {\n    var s = cd ? cd[0].node3 : d3.select(gd).selectAll('g.trace.bars');\n    var barcount = s.size();\n    var fullLayout = gd._fullLayout;\n\n    // trace styling\n    s.style('opacity', function(d) { return d[0].trace.opacity; })\n\n    // for gapless (either stacked or neighboring grouped) bars use\n    // crispEdges to turn off antialiasing so an artificial gap\n    // isn't introduced.\n    .each(function(d) {\n        if((fullLayout.barmode === 'stack' && barcount > 1) ||\n                (fullLayout.bargap === 0 &&\n                 fullLayout.bargroupgap === 0 &&\n                 !d[0].trace.marker.line.width)) {\n            d3.select(this).attr('shape-rendering', 'crispEdges');\n        }\n    });\n\n    s.selectAll('g.points').each(function(d) {\n        var sel = d3.select(this);\n        var pts = sel.selectAll('path');\n        var txs = sel.selectAll('text');\n        var trace = d[0].trace;\n\n        Drawing.pointStyle(pts, trace, gd);\n        Drawing.selectedPointStyle(pts, trace);\n\n        txs.each(function(d) {\n            var tx = d3.select(this);\n            var textFont;\n\n            if(tx.classed('bartext-inside')) {\n                textFont = trace.insidetextfont;\n            } else if(tx.classed('bartext-outside')) {\n                textFont = trace.outsidetextfont;\n            }\n            if(!textFont) textFont = trace.textfont;\n\n            function cast(k) {\n                var cont = textFont[k];\n                return Array.isArray(cont) ? cont[d.i] : cont;\n            }\n\n            Drawing.font(tx, cast('family'), cast('size'), cast('color'));\n        });\n\n        Drawing.selectedTextStyle(txs, trace);\n    });\n\n    ErrorBars.style(s);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/style.js\n// module id = 294\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Fx = require('../../components/fx');\nvar ErrorBars = require('../../components/errorbars');\nvar Color = require('../../components/color');\nvar fillHoverText = require('../scatter/fill_hover_text');\n\nmodule.exports = function hoverPoints(pointData, xval, yval, hovermode) {\n    var cd = pointData.cd;\n    var trace = cd[0].trace;\n    var t = cd[0].t;\n    var isClosest = (hovermode === 'closest');\n\n    var posVal, sizeVal, posLetter, sizeLetter, dx, dy;\n\n    function thisBarMinPos(di) { return di[posLetter] - di.w / 2; }\n    function thisBarMaxPos(di) { return di[posLetter] + di.w / 2; }\n\n    var minPos = isClosest ?\n        thisBarMinPos :\n        function(di) {\n            /*\n             * In compare mode, accept a bar if you're on it *or* its group.\n             * Nearly always it's the group that matters, but in case the bar\n             * was explicitly set wider than its group we'd better accept the\n             * whole bar.\n             *\n             * use `bardelta` instead of `bargroupwidth` so we accept hover\n             * in the gap. That way hover doesn't flash on and off as you\n             * mouse over the plot in compare modes.\n             * In 'closest' mode though the flashing seems inevitable,\n             * without far more complex logic\n             */\n            return Math.min(thisBarMinPos(di), di.p - t.bardelta / 2);\n        };\n\n    var maxPos = isClosest ?\n        thisBarMaxPos :\n        function(di) {\n            return Math.max(thisBarMaxPos(di), di.p + t.bardelta / 2);\n        };\n\n    function positionFn(di) {\n        return Fx.inbox(minPos(di) - posVal, maxPos(di) - posVal);\n    }\n\n    function sizeFn(di) {\n        // add a gradient so hovering near the end of a\n        // bar makes it a little closer match\n        return Fx.inbox(di.b - sizeVal, di[sizeLetter] - sizeVal) +\n            (di[sizeLetter] - sizeVal) / (di[sizeLetter] - di.b);\n    }\n\n    if(trace.orientation === 'h') {\n        posVal = yval;\n        sizeVal = xval;\n        posLetter = 'y';\n        sizeLetter = 'x';\n        dx = sizeFn;\n        dy = positionFn;\n    }\n    else {\n        posVal = xval;\n        sizeVal = yval;\n        posLetter = 'x';\n        sizeLetter = 'y';\n        dy = sizeFn;\n        dx = positionFn;\n    }\n\n    var pa = pointData[posLetter + 'a'];\n    var sa = pointData[sizeLetter + 'a'];\n\n    var distfn = Fx.getDistanceFunction(hovermode, dx, dy);\n    Fx.getClosest(cd, distfn, pointData);\n\n    // skip the rest (for this trace) if we didn't find a close point\n    if(pointData.index === false) return;\n\n    // if we get here and we're not in 'closest' mode, push min/max pos back\n    // onto the group - even though that means occasionally the mouse will be\n    // over the hover label.\n    if(!isClosest) {\n        minPos = function(di) {\n            return Math.min(thisBarMinPos(di), di.p - t.bargroupwidth / 2);\n        };\n        maxPos = function(di) {\n            return Math.max(thisBarMaxPos(di), di.p + t.bargroupwidth / 2);\n        };\n    }\n\n    // the closest data point\n    var index = pointData.index;\n    var di = cd[index];\n    var mc = di.mcc || trace.marker.color;\n    var mlc = di.mlcc || trace.marker.line.color;\n    var mlw = di.mlw || trace.marker.line.width;\n\n    if(Color.opacity(mc)) pointData.color = mc;\n    else if(Color.opacity(mlc) && mlw) pointData.color = mlc;\n\n    var size = (trace.base) ? di.b + di.s : di.s;\n    pointData[sizeLetter + '0'] = pointData[sizeLetter + '1'] = sa.c2p(di[sizeLetter], true);\n    pointData[sizeLetter + 'LabelVal'] = size;\n\n    pointData[posLetter + '0'] = pa.c2p(minPos(di), true);\n    pointData[posLetter + '1'] = pa.c2p(maxPos(di), true);\n    pointData[posLetter + 'LabelVal'] = di.p;\n\n    fillHoverText(di, trace, pointData);\n    ErrorBars.hoverInfo(di, trace, pointData);\n\n    return [pointData];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/hover.js\n// module id = 295\n// module chunks = 0","/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = function selectPoints(searchInfo, polygon) {\n    var cd = searchInfo.cd;\n    var xa = searchInfo.xaxis;\n    var ya = searchInfo.yaxis;\n    var selection = [];\n    var i;\n\n    if(polygon === false) {\n        // clear selection\n        for(i = 0; i < cd.length; i++) {\n            cd[i].selected = 0;\n        }\n    } else {\n        for(i = 0; i < cd.length; i++) {\n            var di = cd[i];\n\n            if(polygon.contains(di.ct)) {\n                selection.push({\n                    pointNumber: i,\n                    x: xa.c2d(di.x),\n                    y: ya.c2d(di.y)\n                });\n                di.selected = 1;\n            } else {\n                di.selected = 0;\n            }\n        }\n    }\n\n    return selection;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/plotly.js/src/traces/bar/select.js\n// module id = 296\n// module chunks = 0","import Plotly from 'npm/plotly.js/lib/core';\n//import d3 from './charts/d3-commons';\nimport ResponsiveChart from 'app/charts/responsive-chart'\nimport TraceData from 'app/charts/trace-data';\nimport './scss/horizontal.scss';\nconst d3 = Plotly.d3;\nexport default class HorizontalBar extends ResponsiveChart{\n\tconstructor(data,containerEl=document.body){\n\t\tsuper();\n\t\tthis.data = data;\n\t\tthis.containerEl=containerEl;\n\t\t//this.el = this.el || document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\t\tthis.el = this.el || document.createElement('figure');\n\t\tthis.el.classList.add('horizontal-bar');\n\t\t\n\t}\n\n\tdrawChart(){\n\t\tthis.el.innerHTML='';\n\t\tconst data = this.data;\n\t\tconst gd = this.gd;\n    \tlet plotlyData = [];\n    \tconsole.log(\"Data:\",data);\n    \tconst chartProps = {\n    \t\torientation: 'h',\n    \t\ttype: 'bar'\n    \t}\n    \tdata.forEach( (groupData)=>{\n    \t\tlet traceData = new TraceData(groupData,chartProps);\n    \t\tplotlyData.push(traceData)\n    \t})\n\n\t    let dummyEl = document.createElement('span');\n\t    dummyEl.style.display=\"inline-block\";\n\t    let maxLabel = plotlyData[0].y.sort( (a,b)=>{\n\t    \treturn b.length - a.length;\n\t    })\n\t    dummyEl.innerHTML = maxLabel[0];\n\t    this.containerEl.appendChild(dummyEl);\n\t    let width = dummyEl.clientWidth;\n\t    this.containerEl.removeChild(dummyEl);\n\n\t    const layout = {\n\t    \tmargin:{\n\t    \t\tl: width\n\t    \t}\n\t    }\n\t    console.log(\"plotlyData:\",plotlyData);\n\t    const plotlyConfig = {displayModeBar: false};\n\t\tPlotly.plot(gd, plotlyData, layout, plotlyConfig);\n\t}\n\n\trender(){\n\t\tthis.containerEl.appendChild(this.el);\n\t\tthis.drawChart(this.el);\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/charts/bar/horizontal.js\n// module id = 297\n// module chunks = 0","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--1-2!../../../../../node_modules/sass-loader/lib/loader.js!./horizontal.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--1-2!../../../../../node_modules/sass-loader/lib/loader.js!./horizontal.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--1-2!../../../../../node_modules/sass-loader/lib/loader.js!./horizontal.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/charts/bar/scss/horizontal.scss\n// module id = 298\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".horizontal-bar {\\n  display: inline-block;\\n  width: 100%;\\n  height: 80vh;\\n  margin-left: 0;\\n  margin-top: 10vh; }\\n  .horizontal-bar svg > g.cartesianlayer > g.subplot > g.yaxislayer-above > g.ytick text {\\n    padding-right: 10px;\\n    position: relative;\\n    right: 10px; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/postcss-loader/lib?{\"config\":{\"path\":\"/Users/ralee/projects/medscape-interactive-report/postcss.config.js\"}}!./node_modules/sass-loader/lib/loader.js!./src/js/charts/bar/scss/horizontal.scss\n// module id = 299\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 300\n// module chunks = 0","import Plotly from 'npm/plotly.js/lib/core';\n//import d3 from './charts/d3-commons';\nimport ResponsiveChart from 'app/charts/responsive-chart';\nimport TraceData from 'app/charts/trace-data';\nimport './scss/vertical.scss';\nconst d3 = Plotly.d3;\nexport default class VerticalBar extends ResponsiveChart{\n\tconstructor(data,containerEl=document.body){\n\t\tsuper();\n\t\tthis.data = data;\n\t\tthis.containerEl=containerEl;\n\t\t//this.el = this.el || document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\t\tthis.el = this.el || document.createElement('figure');\n\t\tthis.el.classList.add('vertical-bar');\n\t}\n\n\tdrawChart(){\n\t\tthis.el.innerHTML='';\n\t\tconst data = this.data;\n\t\tconst gd = this.gd;\n    \tlet plotlyData = [];\n    \tconsole.log(\"Data:\",data);\n    \tconst chartProps = {\n    \t\torientation: 'v',\n    \t\ttype: 'bar'\n    \t}\n    \tdata.forEach( (groupData)=>{\n    \t\tlet traceData = new TraceData(groupData,chartProps);\n    \t\tplotlyData.push(traceData)\n    \t})\n\n\n\t    const layout = {}\n\t    console.log(\"plotlyData:\",plotlyData);\n\t    const plotlyConfig = {displayModeBar: false};\n\t\tPlotly.plot(gd, plotlyData, layout,plotlyConfig);\n\t}\n\n\trender(){\n\t\tthis.containerEl.appendChild(this.el);\n\t\tthis.drawChart(this.el);\n\t\t\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/charts/bar/vertical.js\n// module id = 301\n// module chunks = 0","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--1-2!../../../../../node_modules/sass-loader/lib/loader.js!./vertical.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--1-2!../../../../../node_modules/sass-loader/lib/loader.js!./vertical.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--1-2!../../../../../node_modules/sass-loader/lib/loader.js!./vertical.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/charts/bar/scss/vertical.scss\n// module id = 302\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"svg.vertical-bar {\\n  display: inline-block;\\n  width: 100%;\\n  height: 100%; }\\n  svg.vertical-bar > g > rect.bar {\\n    fill: #00c; }\\n    svg.vertical-bar > g > rect.bar.data-critical-care {\\n      fill: #c00; }\\n  svg.vertical-bar > g > g.axis path, svg.vertical-bar > g > g.axis line {\\n    fill: none;\\n    stroke: #D4D8DA;\\n    stroke-width: 1px;\\n    shape-rendering: crispEdges; }\\n  svg.vertical-bar > g > g.axis.x path {\\n    display: none; }\\n  svg.vertical-bar > g > g.axis.y .tick text {\\n    fill: #00c; }\\n  svg.vertical-bar > g > g.axis.y .tick.data-critical-care text {\\n    fill: #c00; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/postcss-loader/lib?{\"config\":{\"path\":\"/Users/ralee/projects/medscape-interactive-report/postcss.config.js\"}}!./node_modules/sass-loader/lib/loader.js!./src/js/charts/bar/scss/vertical.scss\n// module id = 303\n// module chunks = 0"],"sourceRoot":""}